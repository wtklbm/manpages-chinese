.\" -*- coding: UTF-8 -*-
.\" Copyright (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\" and Copyright (C) 2014 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" Modified Sat Jul 24 17:28:34 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified Sun Jun 01 17:16:34 1997 by Jochen Hein
.\"   <jochen.hein@delphi.central.de>
.\" Modified Thu Apr 25 00:43:19 2002 by Bruno Haible <bruno@clisp.org>
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH locale 7 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
locale \- 多语言支持的描述
.SH SYNOPSIS
.nf
\fB#include <locale.h>\fP
.fi
.SH DESCRIPTION
语言环境是一组语言和文化规则。 这些包括消息语言、不同的字符集、词典约定等方面。 程序需要能够确定其语言环境并相应地采取行动以适应不同的文化。
.PP
标头 \fI<locale.h>\fP 声明数据类型、函数和在此任务中有用的宏。
.PP
它声明的函数是 \fBsetlocale\fP(3) 以设置当前语言环境，\fBlocaleconv\fP(3) 以获取有关数字格式的信息。
.PP
程序可能需要的语言环境信息有不同的类别; 它们被声明为宏。 使用它们作为 \fBsetlocale\fP(3)
函数的第一个参数，可以将其中一个设置为所需的语言环境:
.TP 
\fBLC_ADDRESS\fP (GNU extension, since glibc 2.2)
.\" See ISO/IEC Technical Report 14652
更改描述用于描述位置和地理相关项的格式 (例如，邮政地址) 的设置。 需要此信息的应用程序可以使用 \fBnl_langinfo\fP(3)
检索非标准元素，例如 \fB_NL_ADDRESS_COUNTRY_NAME\fP (国家 / 地区名称，本地语言) 和
\fB_NL_ADDRESS_LANG_NAME\fP (语言名称，本地语言)，它们返回字符串，例如 "Deutschland" 和 "Deutsch"
(德语语言环境)。 (其他元素名称在 \fI<langinfo.h>\fP.) 中列出
.TP 
\fBLC_COLLATE\fP
此类别管理用于排序和正则表达式的归类规则，包括字符等价类和多字符归类元素。 此语言环境类别更改函数 \fBstrcoll\fP(3) 和
\fBstrxfrm\fP(3) 的行为，它们用于比较本地字母表中的字符串。 例如，德语升号 s 被排序为 "ss"。
.TP 
\fBLC_CTYPE\fP
此类别确定字节序列作为字符的解释 (例如，单字节字符与多字节字符)、字符分类 (例如，字母或数字) 以及字符类的行为。 在 glibc
系统上，这个类别还决定了 \fBiconv\fP(1) 和 \fBiconv\fP(3) 的字符音译规则。 它改变了字符处理和分类函数的行为，如
\fBisupper\fP(3) 和 \fBtoupper\fP(3)，以及多字节字符函数，如 \fBmblen\fP(3) 或 \fBwctomb\fP(3)。
.TP 
\fBLC_IDENTIFICATION\fP (GNU extension, since glibc 2.2)
.\" See ISO/IEC Technical Report 14652
更改与区域设置的元数据相关的设置。 需要此信息的应用程序可以使用 \fBnl_langinfo\fP(3) 来检索非标准元素，例如
\fB_NL_IDENTIFICATION_TITLE\fP (此语言环境文档的标题) 和 \fB_NL_IDENTIFICATION_TERRITORY\fP
(此语言环境文档适用的地理区域)，它们可能会返回 "English locale for the USA" 和 "USA" 等字符串。 (其他元素名称在
\fI<langinfo.h>\fP.) 中列出
.TP 
\fBLC_MONETARY\fP
此类别确定用于与货币相关的数值的格式。 这会更改 \fBlocaleconv\fP(3)
返回的信息，该信息描述数字通常的打印方式，包括小数点与小数点逗号等详细信息。 此信息供函数 \fBstrfmon\fP(3) 内部使用。
.TP 
\fBLC_MESSAGES\fP
此类别会影响显示消息的语言以及肯定或 negative 答案的外观。 GNU C 库包含 \fBgettext\fP(3)、\fBngettext\fP(3) 和
\fBrpmatch\fP(3) 函数，以简化此信息的使用。 如果类别设置为 \fB"C"\fP 以外的有效区域设置，则函数的 GNU gettext
系列也遵循环境变量 \fBLANGUAGE\fP (包含以冒号分隔的区域设置列表)。 此类别还会影响 \fBcatopen\fP(3) 的行为。
.TP 
\fBLC_MEASUREMENT\fP (GNU extension, since glibc 2.2)
更改与区域设置中的测量系统相关的设置 (即公制与美国惯用单位)。 应用程序可以使用 \fBnl_langinfo\fP(3) 来检索非标准
\fB_NL_MEASUREMENT_MEASUREMENT\fP 元素，该元素返回指向具有值 1 (metric) 或 2 (美国习惯单位) 的字符的指针。
.TP 
\fBLC_NAME\fP (GNU extension, since glibc 2.2)
.\" See ISO/IEC Technical Report 14652
更改描述用于称呼人的格式的设置。 需要此信息的应用程序可以使用 \fBnl_langinfo\fP(3) 来检索非标准元素，例如
\fB_NL_NAME_NAME_MR\fP (男性通用称呼) 和 \fB_NL_NAME_NAME_MS\fP (女性通用称呼) 元素，它们返回 "Herr" 和
"Frau" (用于德语语言环境) 等字符串。 (其他元素名称在 \fI<langinfo.h>\fP.) 中列出
.TP 
\fBLC_NUMERIC\fP
此类别确定用于非货币数值的格式设置规则 \[em]，例如，千位分隔符和基数字符 (在大多数英语国家 / 地区为句点，但在许多其他地区为逗号)。 影响
\fBprintf\fP(3)、\fBscanf\fP(3)、\fBstrtod\fP(3) 等函数。 这些信息也可以用 \fBlocaleconv\fP(3) 函数读取。
.TP 
\fBLC_PAPER\fP (GNU extension, since glibc 2.2)
.\" See ISO/IEC Technical Report 14652
更改与标准纸张尺寸相关的设置 (例如，US letter 与 A4)。 需要尺寸的应用程序可以通过使用 \fBnl_langinfo\fP(3) 检索非标准
\fB_NL_PAPER_WIDTH\fP 和 \fB_NL_PAPER_HEIGHT\fP 元素来获取它们，这些元素返回以毫米为单位指定尺寸的 \fIint\fP 值。
.TP 
\fBLC_TELEPHONE\fP (GNU extension, since glibc 2.2)
.\" See ISO/IEC Technical Report 14652
更改描述用于电话服务的格式的设置。 需要此信息的应用程序可以使用 \fBnl_langinfo\fP(3) 来检索非标准元素，例如
\fB_NL_TELEPHONE_INT_PREFIX\fP (在该区域设置中用于调用数字的国际前缀)，它返回一个字符串，例如 "49" (对于德国)。
(其他元素名称在 \fI<langinfo.h>\fP.) 中列出
.TP 
\fBLC_TIME\fP
此类别管理用于日期和时间值的格式。 例如，欧洲大部分地区使用 24 小时制，而美国使用 12 小时制。 该类别的设置会影响
\fBstrftime\fP(3)、\fBstrptime\fP(3) 等函数的行为。
.TP 
\fBLC_ALL\fP
上述所有的。
.PP
如果 \fBsetlocale\fP(3) 的第二个参数是空字符串 \fI\[dq]\[dq]\fP，对于默认语言环境，则使用以下步骤确定:
.IP (1) 5
如果存在非空环境变量 \fBLC_ALL\fP，则使用 \fBLC_ALL\fP 的值。
.IP (2)
如果存在与上述类别之一同名的环境变量并且该变量非空，则其值将用于该类别。
.IP (3)
如果存在非空环境变量 \fBLANG\fP，则使用 \fBLANG\fP 的值。
.PP
\fBlocaleconv\fP(3) 函数返回的 \fIstruct lconv\fP 中提供了有关本地数字格式的值，它具有以下声明:
.PP
.in +4n
.EX
struct lconv {

    /* Numeric (nonmonetary) information */

    char *decimal_point;      /* Radix character */
    char *thousands_sep;      /* Separator for digit groups to left
                                of radix character */
    char *grouping;      /* Each element is the number of digits in
                           a group;  elements with higher indices
                           are further left.   An element with value
                           CHAR_MAX means that no further grouping
                           is done.   An element with value 0 means
                           that the previous element is used for
                           all groups further left.  */

    /* Remaining fields are for monetary information */

    char *int_curr_symbol;    /* First three chars are a currency
                                symbol from ISO 4217.   Fourth char
                                is the separator.   Fifth char
                                is \[aq]\e0\[aq].  */ 
    char *currency_symbol;    /* Local currency symbol */
    char *mon_decimal_point;  /* Radix character */
    char *mon_thousands_sep;  /* Like \fIthousands_sep\fP above */
    char *mon_grouping;       /* Like \fIgrouping\fP above */
    char *positive_sign;      /* Sign for positive values */
    char *negative_sign;      /* Sign for negative values */
    char  int_frac_digits;    /* International fractional digits */
    char  frac_digits;       /* Local fractional digits */
    char  p_cs_precedes;      /* 1 if currency_symbol precedes a 
                                positive value, 0 if succeeds */
    char  p_sep_by_space;     /* 1 if a space separates 
                                currency_symbol from a positive
                                value */ 
    char  n_cs_precedes;     /* 1 if currency_symbol precedes a
                                negative value, 0 if succeeds */
    char  n_sep_by_space;    /* 1 if a space separates
                                currency_symbol from a negative
                                value */
    /* Positive and negative sign positions:
       0 括号将数量和 currency_symbol 括起来。
       1 符号字符串在数量和 currency_symbol 之前。
       2 符号字符串在数量和 currency_symbol 之后。
       3 符号字符串紧接在 currency_symbol 之前。
       4 符号字符串紧接在 currency_symbol 之后。*/
    char  p_sign_posn;
    char  n_sign_posn;
};
.EE
.in
.SS "POSIX.1\-2008 extensions to the locale API"
POSIX.1\-2008 基于首次出现在 glibc 2.3 中的实现，对语言环境 API 的许多扩展进行了标准化。 这些扩展旨在解决传统语言环境
API 无法与多线程应用程序以及必须处理多个语言环境的应用程序很好地结合的问题。
.PP
扩展采用用于创建和操作语言环境对象 (\fBnewlocale\fP(3)、\fBfreelocale\fP(3)、\fBduplocale\fP(3) 和
\fBuselocale\fP(3)) 的新函数以及后缀为 "_l" 的各种新函数 (例如，\fBtoupper_l\fP(3))，它扩展了传统的与语言环境相关的
API (例如，\fBtoupper\fP(3)) 以允许执行函数时应应用的语言环境对象的规范。
.SH ENVIRONMENT
\fBnewlocale\fP(3) 和 \fBsetlocale\fP(3) 使用以下环境变量，因此会影响所有非特权本地化程序:
.TP 
\fBLOCPATH\fP
应该用于查找语言环境数据的路径名列表，以冒号 (\[aq]:\[aq]) 分隔。 如果设置了此变量，则仅使用来自 \fBLOCPATH\fP
的各个已编译区域设置数据文件和系统默认区域设置数据路径; 不使用任何可用的语言环境档案 (请参见 \fBlocaledef\fP(1)).
在取决于当前使用的语言环境的子目录下搜索各个编译的语言环境数据文件。 例如，当 \fIen_GB.UTF\-8\fP 用于类别时，将按以下顺序搜索以下子目录:
\fIen_GB.UTF\-8\fP、\fIen_GB.utf8\fP、\fIen_GB\fP、\fIen.UTF\-8\fP、\fIen.utf8\fP 和 \fIen\fP。
.SH FILES
.TP 
\fI/usr/lib/locale/locale\-archive\fP
通常的默认语言环境存档位置。
.TP 
\fI/usr/lib/locale\fP
已编译的单个语言环境文件的通常默认路径。
.SH STANDARDS
.\"
.\" The GNU gettext functions are specified in LI18NUX2000.
POSIX.1\-2001.
.SH "SEE ALSO"
\fBiconv\fP(1), \fBlocale\fP(1), \fBlocaledef\fP(1), \fBcatopen\fP(3), \fBgettext\fP(3),
\fBiconv\fP(3), \fBlocaleconv\fP(3), \fBmbstowcs\fP(3), \fBnewlocale\fP(3),
\fBngettext\fP(3), \fBnl_langinfo\fP(3), \fBrpmatch\fP(3), \fBsetlocale\fP(3),
\fBstrcoll\fP(3), \fBstrfmon\fP(3), \fBstrftime\fP(3), \fBstrxfrm\fP(3),
\fBuselocale\fP(3), \fBwcstombs\fP(3), \fBlocale\fP(5), \fBcharsets\fP(7),
\fBunicode\fP(7), \fButf\-8\fP(7)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
