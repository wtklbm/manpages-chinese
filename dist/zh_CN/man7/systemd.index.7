.\" -*- coding: UTF-8 -*-
'\" t
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH SYSTEMD\&.INDEX 7 "" "systemd 253" systemd.index
.ie  \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH NAME
systemd.index \- 列出 systemd 项目的所有联机帮助页
.SH 3
.PP
\fB30\-systemd\-environment\-d\-generator\fP(8)\(em Load 变量由 environment\&.d 指定
.br

.SH B
.PP
\fBbinfmt.d\fP(5)\(em 在启动时为可执行文件配置额外的二进制格式
.br
\fBbootctl\fP(1)\(em 控制 EFI 固件引导设置和管理引导加载程序
.br
\fBbootup\fP(7)\(em 系统启动进程
.br
\fBbusctl\fP(1)\(em 内省总线
.br

.SH C
.PP
\fBcoredump.conf\fP(5)\(em 核心转储存储配置文件
.br
\fBcoredump.conf.d\fP(5)\(em 核心转储存储配置文件
.br
\fBcoredumpctl\fP(1)\(em 检索并处理保存的核心转储和元数据
.br
\fBcrypttab\fP(5)\(em 加密块设备的配置
.br

.SH D
.PP
\fBdaemon\fP(7)\(em 编写和打包系统守护进程
.br
\fBdnssec\-trust\-anchors.d\fP(5)\(em DNSSEC 信任锚配置文件
.br

.SH E
.PP
\fBenvironment.d\fP(5)\(em 用户服务环境定义
.br
\fBextension\-release\fP(5)\(em 操作系统标识
.br

.SH F
.PP
\fBfile\-hierarchy\fP(7)\(em 文件系统层次结构概述
.br

.SH H
.PP
\fBhalt\fP(8)\(em 关闭电源、重新启动或停止机器
.br
\fBhomectl\fP(1)\(em 创建、删除、更改或检查主目录
.br
\fBhomed.conf\fP(5)\(em Home area/user 客户经理配置文件
.br
\fBhomed.conf.d\fP(5)\(em Home area/user 客户经理配置文件
.br
\fBhostname\fP(5)\(em 本地主机名配置文件
.br
\fBhostnamectl\fP(1)\(em 控制系统主机名
.br
\fBhwdb\fP(7)\(em 硬件数据库
.br

.SH I
.PP
\fBinit\fP(1)\(em systemd 系统和服务管理器
.br
\fBinitrd\-release\fP(5)\(em 操作系统标识
.br
\fBintegritytab\fP(5)\(em 完整性块设备的配置
.br

.SH J
.PP
\fBjournal\-remote.conf\fP(5)\(em 接受远程日志上传的服务的配置文件
.br
\fBjournal\-remote.conf.d\fP(5)\(em 接受远程日志上传的服务的配置文件
.br
\fBjournal\-upload.conf\fP(5)\(em 日志上传服务的配置文件
.br
\fBjournal\-upload.conf.d\fP(5)\(em 日志上传服务的配置文件
.br
\fBjournalctl\fP(1)\(em 从 systemd 日志打印日志条目
.br
\fBjournald.conf\fP(5)\(em 日志服务配置文件
.br
\fBjournald.conf.d\fP(5)\(em 日志服务配置文件
.br
\fBjournald@.conf\fP(5)\(em 日志服务配置文件
.br

.SH K
.PP
\fBkernel\-command\-line\fP(7)\(em 内核命令行参数
.br
\fBkernel\-install\fP(8)\(em 在 /boot 中添加和删除内核和 initrd 映像
.br

.SH L
.PP
\fBlibnss_myhostname.so.2\fP(8)\(em 本地配置的系统主机名的主机名解析
.br
\fBlibnss_mymachines.so.2\fP(8)\(em 本地容器实例的主机名解析
.br
\fBlibnss_resolve.so.2\fP(8)\(em 主机名解析通过 systemd\-resolved\&.service
.br
\fBlibnss_systemd.so.2\fP(8)\(em UNIX 用户和组名称解析，用于通过 Varlink 进行 user/group 查找
.br
\fBlibudev\fP(3)\(em API 用于枚举和内省本地设备
.br
\fBlinuxaa64.efi.stub\fP(7)\(em 一个简单的 UEFI 内核引导存根
.br
\fBlinuxia32.efi.stub\fP(7)\(em 一个简单的 UEFI 内核引导存根
.br
\fBlinuxx64.efi.stub\fP(7)\(em 一个简单的 UEFI 内核引导存根
.br
\fBloader.conf\fP(5)\(em systemd\-boot 的配置文件
.br
\fBlocale.conf\fP(5)\(em 区域设置的配置文件
.br
\fBlocalectl\fP(1)\(em 控制系统区域设置和键盘布局设置
.br
\fBlocaltime\fP(5)\(em 本地时区配置文件
.br
\fBloginctl\fP(1)\(em 控制 systemd 登录管理器
.br
\fBlogind.conf\fP(5)\(em 登录管理器配置文件
.br
\fBlogind.conf.d\fP(5)\(em 登录管理器配置文件
.br

.SH M
.PP
\fBmachine\-id\fP(5)\(em 本地机器 ID 配置文件
.br
\fBmachine\-info\fP(5)\(em 本地机器信息文件
.br
\fBmachinectl\fP(1)\(em 控制 systemd 机器管理器
.br
\fBmodules\-load.d\fP(5)\(em 配置内核模块以在引导时加载
.br

.SH N
.PP
\fBnetworkctl\fP(1)\(em 查询网络链接状态
.br
\fBnetworkd.conf\fP(5)\(em 全局网络配置文件
.br
\fBnetworkd.conf.d\fP(5)\(em 全局网络配置文件
.br
\fBnss\-myhostname\fP(8)\(em 本地配置的系统主机名的主机名解析
.br
\fBnss\-mymachines\fP(8)\(em 本地容器实例的主机名解析
.br
\fBnss\-resolve\fP(8)\(em 主机名解析通过 systemd\-resolved\&.service
.br
\fBnss\-systemd\fP(8)\(em UNIX 用户和组名称解析，用于通过 Varlink 进行 user/group 查找
.br

.SH O
.PP
\fBoomctl\fP(1)\(em 分析 systemd\-oomd 中存储的状态
.br
\fBoomd.conf\fP(5)\(em 全局 systemd\-oomd 配置文件
.br
\fBoomd.conf.d\fP(5)\(em 全局 systemd\-oomd 配置文件
.br
\fBorg.freedesktop.home1\fP(5)\(em systemd\-homed 的 D\-Bus 接口
.br
\fBorg.freedesktop.hostname1\fP(5)\(em systemd\-hostnamed 的 D\-Bus 接口
.br
\fBorg.freedesktop.import1\fP(5)\(em systemd\-importd 的 D\-Bus 接口
.br
\fBorg.freedesktop.locale1\fP(5)\(em systemd\-localed 的 D\-Bus 接口
.br
\fBorg.freedesktop.LogControl1\fP(5)\(em D\-Bus 接口查询和设置日志记录配置
.br
\fBorg.freedesktop.login1\fP(5)\(em systemd\-logind 的 D\-Bus 接口
.br
\fBorg.freedesktop.machine1\fP(5)\(em systemd\-machined 的 D\-Bus 接口
.br
\fBorg.freedesktop.network1\fP(5)\(em systemd\-networkd 的 D\-Bus 接口
.br
\fBorg.freedesktop.oom1\fP(5)\(em systemd\-oomd 的 D\-Bus 接口
.br
\fBorg.freedesktop.portable1\fP(5)\(em systemd\-portabled 的 D\-Bus 接口
.br
\fBorg.freedesktop.resolve1\fP(5)\(em systemd\-resolved 的 D\-Bus 接口
.br
\fBorg.freedesktop.systemd1\fP(5)\(em systemd 的 D\-Bus 接口
.br
\fBorg.freedesktop.timedate1\fP(5)\(em systemd\-timedated 的 D\-Bus 接口
.br
\fBos\-release\fP(5)\(em 操作系统标识
.br

.SH P
.PP
\fBpam_systemd\fP(8)\(em 在 systemd 登录管理器中注册用户会话
.br
\fBpam_systemd_home\fP(8)\(em 验证用户并通过 systemd\-homed\&.service 挂载主目录
.br
\fBportablectl\fP(1)\(em 附加、分离或检查便携式服务图像
.br
\fBpoweroff\fP(8)\(em 关闭电源、重新启动或停止机器
.br
\fBpstore.conf\fP(5)\(em PStore 配置文件
.br
\fBpstore.conf.d\fP(5)\(em PStore 配置文件
.br

.SH R
.PP
\fBreboot\fP(8)\(em 关闭电源、重新启动或停止机器
.br
\fBrepart.d\fP(5)\(em 用于自动引导时重新分区的分区定义文件
.br
\fBresolvconf\fP(1)\(em 解析域名，IPV4 和 IPv6 地址，DNS 资源记录，服务; 反省并重新配置 DNS 解析器
.br
\fBresolvectl\fP(1)\(em 解析域名，IPV4 和 IPv6 地址，DNS 资源记录，服务; 反省并重新配置 DNS 解析器
.br
\fBresolved.conf\fP(5)\(em 网络名称解析配置文件
.br
\fBresolved.conf.d\fP(5)\(em 网络名称解析配置文件
.br

.SH S
.PP
\fBsd\-boot\fP(7)\(em 一个简单的 UEFI 启动管理器
.br
\fBsd\-bus\fP(3)\(em 一个轻量级的 D\-Bus IPC 客户端库
.br
\fBsd\-bus\-errors\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBsd\-daemon\fP(3)\(em 用于新型守护进程的 API
.br
\fBsd\-device\fP(3)\(em API 用于枚举和内省本地设备
.br
\fBsd\-event\fP(3)\(em A 泛型事件循环实现
.br
\fBsd\-hwdb\fP(3)\(em 对硬件描述数据库的只读访问
.br
\fBsd\-id128\fP(3)\(em 用于处理 128 位 ID 的 API
.br
\fBsd\-journal\fP(3)\(em 用于向日志提交和查询日志条目的 API
.br
\fBsd\-login\fP(3)\(em 用于跟踪登录的 API
.br
\fBsd\-stub\fP(7)\(em 一个简单的 UEFI 内核引导存根
.br
\fBSD_ALERT\fP(3)\(em 用于新型守护进程的 API
.br
\fBsd_booted\fP(3)\(em 测试系统是否运行 systemd init 系统
.br
\fBsd_bus_add_fallback\fP(3)\(em 声明 D\-Bus 路径的属性和方法
.br
\fBsd_bus_add_fallback_vtable\fP(3)\(em 声明 D\-Bus 路径的属性和方法
.br
\fBsd_bus_add_filter\fP(3)\(em 声明 D\-Bus 路径的属性和方法
.br
\fBsd_bus_add_match\fP(3)\(em 为传入消息调度添加匹配规则
.br
\fBsd_bus_add_match_async\fP(3)\(em 为传入消息调度添加匹配规则
.br
\fBsd_bus_add_node_enumerator\fP(3)\(em 为 D\-Bus 对象路径前缀添加一个节点枚举器
.br
\fBsd_bus_add_object\fP(3)\(em 声明 D\-Bus 路径的属性和方法
.br
\fBsd_bus_add_object_manager\fP(3)\(em 为 D\-Bus 对象子树添加一个 D\-Bus 对象管理器
.br
\fBsd_bus_add_object_vtable\fP(3)\(em 声明 D\-Bus 路径的属性和方法
.br
\fBsd_bus_attach_event\fP(3)\(em 将总线连接对象附加到事件循环
.br
\fBsd_bus_call\fP(3)\(em 调用一个 D\-Bus 方法调用
.br
\fBsd_bus_call_async\fP(3)\(em 调用一个 D\-Bus 方法调用
.br
\fBsd_bus_call_method\fP(3)\(em 初始化一个总线消息对象并调用对应的 D\-Bus 方法调用
.br
\fBsd_bus_call_method_async\fP(3)\(em 初始化一个总线消息对象并调用对应的 D\-Bus 方法调用
.br
\fBsd_bus_call_method_asyncv\fP(3)\(em 初始化一个总线消息对象并调用对应的 D\-Bus 方法调用
.br
\fBsd_bus_call_methodv\fP(3)\(em 初始化一个总线消息对象并调用对应的 D\-Bus 方法调用
.br
\fBsd_bus_can_send\fP(3)\(em 检查哪些类型可以通过总线对象发送
.br
\fBsd_bus_close\fP(3)\(em 关闭并刷新总线连接
.br
\fBsd_bus_close_unref\fP(3)\(em 创建一个新的总线对象并创建或销毁它
.br
\fBsd_bus_close_unrefp\fP(3)\(em 创建一个新的总线对象并创建或销毁它
.br
\fBsd_bus_creds_get_audit_login_uid\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_audit_session_id\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_augmented_mask\fP(3)\(em 检索指定 PID 的凭据对象
.br
\fBsd_bus_creds_get_cgroup\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_cmdline\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_comm\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_description\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_egid\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_euid\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_exe\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_fsgid\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_fsuid\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_gid\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_mask\fP(3)\(em 检索指定 PID 的凭据对象
.br
\fBsd_bus_creds_get_owner_uid\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_pid\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_ppid\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_selinux_context\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_session\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_sgid\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_slice\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_suid\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_supplementary_gids\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_tid\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_tid_comm\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_tty\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_uid\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_unique_name\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_unit\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_user_slice\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_user_unit\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_get_well_known_names\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_has_bounding_cap\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_has_effective_cap\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_has_inheritable_cap\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_has_permitted_cap\fP(3)\(em 从凭据对象中检索字段
.br
\fBsd_bus_creds_new_from_pid\fP(3)\(em 检索指定 PID 的凭据对象
.br
\fBsd_bus_creds_ref\fP(3)\(em 检索指定 PID 的凭据对象
.br
\fBsd_bus_creds_unref\fP(3)\(em 检索指定 PID 的凭据对象
.br
\fBsd_bus_creds_unrefp\fP(3)\(em 检索指定 PID 的凭据对象
.br
\fBsd_bus_default\fP(3)\(em 获取到系统或用户总线的连接
.br
\fBsd_bus_default_flush_close\fP(3)\(em 关闭并刷新总线连接
.br
\fBsd_bus_default_system\fP(3)\(em 获取到系统或用户总线的连接
.br
\fBsd_bus_default_user\fP(3)\(em 获取到系统或用户总线的连接
.br
\fBsd_bus_destroy_t\fP(3)\(em 定义资源清理回调函数
.br
\fBsd_bus_detach_event\fP(3)\(em 将总线连接对象附加到事件循环
.br
\fBsd_bus_emit_interfaces_added\fP(3)\(em Convenience 函数发射 (standard) D\-Bus 信号
.br
\fBsd_bus_emit_interfaces_added_strv\fP(3)\(em Convenience 函数发射 (standard)
D\-Bus 信号
.br
\fBsd_bus_emit_interfaces_removed\fP(3)\(em Convenience 函数发射 (standard) D\-Bus
信号
.br
\fBsd_bus_emit_interfaces_removed_strv\fP(3)\(em Convenience 函数发射 (standard)
D\-Bus 信号
.br
\fBsd_bus_emit_object_added\fP(3)\(em Convenience 函数发射 (standard) D\-Bus 信号
.br
\fBsd_bus_emit_object_removed\fP(3)\(em Convenience 函数发射 (standard) D\-Bus 信号
.br
\fBsd_bus_emit_properties_changed\fP(3)\(em Convenience 函数发射 (standard) D\-Bus
信号
.br
\fBsd_bus_emit_properties_changed_strv\fP(3)\(em Convenience 函数发射 (standard)
D\-Bus 信号
.br
\fBsd_bus_emit_signal\fP(3)\(em Convenience 函数发射 (standard) D\-Bus 信号
.br
\fBsd_bus_emit_signal_to\fP(3)\(em Convenience 函数发射 (standard) D\-Bus 信号
.br
\fBsd_bus_emit_signal_tov\fP(3)\(em Convenience 函数发射 (standard) D\-Bus 信号
.br
\fBsd_bus_emit_signalv\fP(3)\(em Convenience 函数发射 (standard) D\-Bus 信号
.br
\fBsd_bus_enqueue_for_read\fP(3)\(em 在总线连接上重新排队总线消息，以供读取
.br
\fBsd_bus_error\fP(3)\(em sd\-bus 错误处理
.br
\fBSD_BUS_ERROR_ACCESS_DENIED\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBsd_bus_error_add_map\fP(3)\(em 额外的 sd\-dbus 错误映射
.br
\fBSD_BUS_ERROR_ADDRESS_IN_USE\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_AUTH_FAILED\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_BAD_ADDRESS\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBsd_bus_error_copy\fP(3)\(em sd\-bus 错误处理
.br
\fBSD_BUS_ERROR_DISCONNECTED\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_END\fP(3)\(em 额外的 sd\-dbus 错误映射
.br
\fBSD_BUS_ERROR_FAILED\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_FILE_EXISTS\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_FILE_NOT_FOUND\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBsd_bus_error_free\fP(3)\(em sd\-bus 错误处理
.br
\fBsd_bus_error_get_errno\fP(3)\(em sd\-bus 错误处理
.br
\fBsd_bus_error_has_name\fP(3)\(em sd\-bus 错误处理
.br
\fBsd_bus_error_has_names\fP(3)\(em sd\-bus 错误处理
.br
\fBsd_bus_error_has_names_sentinel\fP(3)\(em sd\-bus 错误处理
.br
\fBSD_BUS_ERROR_INCONSISTENT_MESSAGE\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_INTERACTIVE_AUTHORIZATION_REQUIRED\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_INVALID_ARGS\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_INVALID_SIGNATURE\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_IO_ERROR\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBsd_bus_error_is_set\fP(3)\(em sd\-bus 错误处理
.br
\fBSD_BUS_ERROR_LIMITS_EXCEEDED\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_MAKE_CONST\fP(3)\(em sd\-bus 错误处理
.br
\fBsd_bus_error_map\fP(3)\(em 额外的 sd\-dbus 错误映射
.br
\fBSD_BUS_ERROR_MAP\fP(3)\(em 额外的 sd\-dbus 错误映射
.br
\fBSD_BUS_ERROR_MATCH_RULE_INVALID\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_MATCH_RULE_NOT_FOUND\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBsd_bus_error_move\fP(3)\(em sd\-bus 错误处理
.br
\fBSD_BUS_ERROR_NAME_HAS_NO_OWNER\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_NO_MEMORY\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_NO_NETWORK\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_NO_REPLY\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_NO_SERVER\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_NOT_SUPPORTED\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_NULL\fP(3)\(em sd\-bus 错误处理
.br
\fBSD_BUS_ERROR_PROPERTY_READ_ONLY\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_SERVICE_UNKNOWN\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBsd_bus_error_set\fP(3)\(em sd\-bus 错误处理
.br
\fBsd_bus_error_set_const\fP(3)\(em sd\-bus 错误处理
.br
\fBsd_bus_error_set_errno\fP(3)\(em sd\-bus 错误处理
.br
\fBsd_bus_error_set_errnof\fP(3)\(em sd\-bus 错误处理
.br
\fBsd_bus_error_set_errnofv\fP(3)\(em sd\-bus 错误处理
.br
\fBsd_bus_error_setf\fP(3)\(em sd\-bus 错误处理
.br
\fBsd_bus_error_setfv\fP(3)\(em sd\-bus 错误处理
.br
\fBSD_BUS_ERROR_TIMEOUT\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_UNIX_PROCESS_ID_UNKNOWN\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_UNKNOWN_INTERFACE\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_UNKNOWN_METHOD\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_UNKNOWN_OBJECT\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBSD_BUS_ERROR_UNKNOWN_PROPERTY\fP(3)\(em 标准 D\-Bus 错误名称
.br
\fBsd_bus_flush\fP(3)\(em 关闭并刷新总线连接
.br
\fBsd_bus_flush_close_unref\fP(3)\(em 创建一个新的总线对象并创建或销毁它
.br
\fBsd_bus_flush_close_unrefp\fP(3)\(em 创建一个新的总线对象并创建或销毁它
.br
\fBsd_bus_get_address\fP(3)\(em 设置或查询总线连接地址
.br
\fBsd_bus_get_allow_interactive_authorization\fP(3)\(em 设置或查询总线对象的属性
.br
\fBsd_bus_get_bus_id\fP(3)\(em 配置总线对象的连接模式
.br
\fBsd_bus_get_close_on_exit\fP(3)\(em 控制在事件循环退出阶段是否关闭总线连接
.br
\fBsd_bus_get_connected_signal\fP(3)\(em 总线连接上本地连接建立信号的控制发射
.br
\fBsd_bus_get_creds_mask\fP(3)\(em 总线连接上的控制特性协商
.br
\fBsd_bus_get_current_handler\fP(3)\(em 查询总线对象当前运行的回调信息
.br
\fBsd_bus_get_current_message\fP(3)\(em 查询总线对象当前运行的回调信息
.br
\fBsd_bus_get_current_slot\fP(3)\(em 查询总线对象当前运行的回调信息
.br
\fBsd_bus_get_current_userdata\fP(3)\(em 查询总线对象当前运行的回调信息
.br
\fBsd_bus_get_description\fP(3)\(em 设置或查询总线对象的属性
.br
\fBsd_bus_get_event\fP(3)\(em 将总线连接对象附加到事件循环
.br
\fBsd_bus_get_events\fP(3)\(em 从消息总线对象中获取文件描述符、I/O 事件和等待超时
.br
\fBsd_bus_get_exit_on_disconnect\fP(3)\(em 控制总线对象断开连接时的退出行为
.br
\fBsd_bus_get_fd\fP(3)\(em 从消息总线对象中获取文件描述符、I/O 事件和等待超时
.br
\fBsd_bus_get_method_call_timeout\fP(3)\(em 设置或查询一个总线对象的默认 D\-Bus 方法调用超时
.br
\fBsd_bus_get_n_queued_read\fP(3)\(em 获取一个总线连接对象的读写队列中待处理的总线消息数
.br
\fBsd_bus_get_n_queued_write\fP(3)\(em 获取一个总线连接对象的读写队列中待处理的总线消息数
.br
\fBsd_bus_get_name_creds\fP(3)\(em 查询总线客户端凭证
.br
\fBsd_bus_get_name_machine_id\fP(3)\(em 检索总线客户端 \*(Aqs 机器标识
.br
\fBsd_bus_get_owner_creds\fP(3)\(em 查询总线客户端凭证
.br
\fBsd_bus_get_property\fP(3)\(em 设置或查询 D\-Bus 服务属性
.br
\fBsd_bus_get_property_string\fP(3)\(em 设置或查询 D\-Bus 服务属性
.br
\fBsd_bus_get_property_strv\fP(3)\(em 设置或查询 D\-Bus 服务属性
.br
\fBsd_bus_get_property_trivial\fP(3)\(em 设置或查询 D\-Bus 服务属性
.br
\fBsd_bus_get_scope\fP(3)\(em 设置或查询总线对象的属性
.br
\fBsd_bus_get_sender\fP(3)\(em 配置传出消息的默认发送者
.br
\fBsd_bus_get_tid\fP(3)\(em 设置或查询总线对象的属性
.br
\fBsd_bus_get_timeout\fP(3)\(em 从消息总线对象中获取文件描述符、I/O 事件和等待超时
.br
\fBsd_bus_get_unique_name\fP(3)\(em 设置或查询总线对象的属性
.br
\fBsd_bus_get_watch_bind\fP(3)\(em 控制套接字绑定监视总线连接
.br
\fBsd_bus_interface_name_is_valid\fP(3)\(em 检查字符串是否为有效的总，字符串，名称或对象路径
.br
\fBsd_bus_is_anonymous\fP(3)\(em 设置或查询总线对象的属性
.br
\fBsd_bus_is_bus_client\fP(3)\(em 配置总线对象的连接模式
.br
\fBsd_bus_is_monitor\fP(3)\(em 配置总线对象的连接模式
.br
\fBsd_bus_is_open\fP(3)\(em 检查总线连接是否打开或就绪
.br
\fBsd_bus_is_ready\fP(3)\(em 检查总线连接是否打开或就绪
.br
\fBsd_bus_is_server\fP(3)\(em 配置总线对象的连接模式
.br
\fBsd_bus_is_trusted\fP(3)\(em 设置或查询总线对象的属性
.br
\fBsd_bus_list_names\fP(3)\(em 检索有关总线上注册名称的信息
.br
\fBsd_bus_match_signal\fP(3)\(em 为传入消息调度添加匹配规则
.br
\fBsd_bus_match_signal_async\fP(3)\(em 为传入消息调度添加匹配规则
.br
\fBsd_bus_member_name_is_valid\fP(3)\(em 检查字符串是否为有效的总，字符串，名称或对象路径
.br
\fBsd_bus_message_append\fP(3)\(em 根据类型字符串将字段追加到 D\-Bus 消息
.br
\fBsd_bus_message_append_array\fP(3)\(em 将字段数组追加到 D\-Bus 消息
.br
\fBsd_bus_message_append_array_iovec\fP(3)\(em 将字段数组追加到 D\-Bus 消息
.br
\fBsd_bus_message_append_array_memfd\fP(3)\(em 将字段数组追加到 D\-Bus 消息
.br
\fBsd_bus_message_append_array_space\fP(3)\(em 将字段数组追加到 D\-Bus 消息
.br
\fBsd_bus_message_append_basic\fP(3)\(em 将单个字段追加到消息
.br
\fBsd_bus_message_append_string_iovec\fP(3)\(em 将字符串追加到消息
.br
\fBsd_bus_message_append_string_memfd\fP(3)\(em 将字符串追加到消息
.br
\fBsd_bus_message_append_string_space\fP(3)\(em 将字符串追加到消息
.br
\fBsd_bus_message_append_strv\fP(3)\(em 将字符串数组追加到消息中
.br
\fBsd_bus_message_appendv\fP(3)\(em 根据类型字符串将字段追加到 D\-Bus 消息
.br
\fBsd_bus_message_at_end\fP(3)\(em 检查消息是否已被完全阅读
.br
\fBsd_bus_message_close_container\fP(3)\(em 在 D\-Bus 消息中的容器之间创建和移动
.br
\fBsd_bus_message_copy\fP(3)\(em 将一条消息的内容复制到另一条消息
.br
\fBsd_bus_message_dump\fP(3)\(em 为调试目的生成消息的字符串表示
.br
\fBsd_bus_message_enter_container\fP(3)\(em 在 D\-Bus 消息中的容器之间创建和移动
.br
\fBsd_bus_message_exit_container\fP(3)\(em 在 D\-Bus 消息中的容器之间创建和移动
.br
\fBsd_bus_message_get_allow_interactive_authorization\fP(3)\(em 设置和查询总线消息元数据
.br
\fBsd_bus_message_get_auto_start\fP(3)\(em 设置和查询总线消息元数据
.br
\fBsd_bus_message_get_bus\fP(3)\(em 创建一个新的总线消息对象并创建或销毁它
.br
\fBsd_bus_message_get_cookie\fP(3)\(em 返回消息的事务 cookie
.br
\fBsd_bus_message_get_creds\fP(3)\(em 查询总线消息 addressing/credentials 元数据
.br
\fBsd_bus_message_get_destination\fP(3)\(em 设置和查询总线报文寻址信息
.br
\fBsd_bus_message_get_errno\fP(3)\(em 查询总线消息 addressing/credentials 元数据
.br
\fBsd_bus_message_get_error\fP(3)\(em 查询总线消息 addressing/credentials 元数据
.br
\fBsd_bus_message_get_expect_reply\fP(3)\(em 设置和查询总线消息元数据
.br
\fBsd_bus_message_get_interface\fP(3)\(em 设置和查询总线报文寻址信息
.br
\fBsd_bus_message_get_member\fP(3)\(em 设置和查询总线报文寻址信息
.br
\fBsd_bus_message_get_monotonic_usec\fP(3)\(em 检索消息的发送者时间戳和序列号
.br
\fBsd_bus_message_get_path\fP(3)\(em 设置和查询总线报文寻址信息
.br
\fBsd_bus_message_get_realtime_usec\fP(3)\(em 检索消息的发送者时间戳和序列号
.br
\fBsd_bus_message_get_reply_cookie\fP(3)\(em 返回消息的事务 cookie
.br
\fBsd_bus_message_get_sender\fP(3)\(em 设置和查询总线报文寻址信息
.br
\fBsd_bus_message_get_seqnum\fP(3)\(em 检索消息的发送者时间戳和序列号
.br
\fBsd_bus_message_get_signature\fP(3)\(em 查询总线消息签名
.br
\fBsd_bus_message_get_type\fP(3)\(em 查询总线消息 addressing/credentials 元数据
.br
\fBsd_bus_message_has_signature\fP(3)\(em 查询总线消息签名
.br
\fBsd_bus_message_is_empty\fP(3)\(em 查询总线消息签名
.br
\fBsd_bus_message_is_method_call\fP(3)\(em 查询总线消息 addressing/credentials 元数据
.br
\fBsd_bus_message_is_method_error\fP(3)\(em 查询总线消息 addressing/credentials 元数据
.br
\fBsd_bus_message_is_signal\fP(3)\(em 查询总线消息 addressing/credentials 元数据
.br
\fBSD_BUS_MESSAGE_METHOD_CALL\fP(3)\(em 创建一个新的总线消息对象并创建或销毁它
.br
\fBSD_BUS_MESSAGE_METHOD_ERROR\fP(3)\(em 创建一个新的总线消息对象并创建或销毁它
.br
\fBSD_BUS_MESSAGE_METHOD_RETURN\fP(3)\(em 创建一个新的总线消息对象并创建或销毁它
.br
\fBsd_bus_message_new\fP(3)\(em 创建一个新的总线消息对象并创建或销毁它
.br
\fBsd_bus_message_new_method_call\fP(3)\(em 创建方法调用消息
.br
\fBsd_bus_message_new_method_errno\fP(3)\(em Create an error reply for a method
调用
.br
\fBsd_bus_message_new_method_errnof\fP(3)\(em Create an error reply for a
method 调用
.br
\fBsd_bus_message_new_method_error\fP(3)\(em Create an error reply for a method
调用
.br
\fBsd_bus_message_new_method_errorf\fP(3)\(em Create an error reply for a
method 调用
.br
\fBsd_bus_message_new_method_return\fP(3)\(em 创建方法调用消息
.br
\fBsd_bus_message_new_signal\fP(3)\(em 创建信号消息
.br
\fBsd_bus_message_new_signal_to\fP(3)\(em 创建信号消息
.br
\fBsd_bus_message_open_container\fP(3)\(em 在 D\-Bus 消息中的容器之间创建和移动
.br
\fBsd_bus_message_peek_type\fP(3)\(em 从消息中读取一系列值
.br
\fBsd_bus_message_read\fP(3)\(em 从消息中读取一系列值
.br
\fBsd_bus_message_read_array\fP(3)\(em 访问消息中的元素数组
.br
\fBsd_bus_message_read_basic\fP(3)\(em 从消息中读取一个基本类型
.br
\fBsd_bus_message_read_strv\fP(3)\(em 访问消息中的字符串数组
.br
\fBsd_bus_message_read_strv_extend\fP(3)\(em 访问消息中的字符串数组
.br
\fBsd_bus_message_readv\fP(3)\(em 从消息中读取一系列值
.br
\fBsd_bus_message_ref\fP(3)\(em 创建一个新的总线消息对象并创建或销毁它
.br
\fBsd_bus_message_rewind\fP(3)\(em 返回消息开头或当前容器
.br
\fBsd_bus_message_seal\fP(3)\(em 准备要传输的 D\-Bus 消息
.br
\fBsd_bus_message_send\fP(3)\(em 排队等待传输的 D\-Bus 消息
.br
\fBsd_bus_message_sensitive\fP(3)\(em 将消息对象标记为包含敏感数据
.br
\fBsd_bus_message_set_allow_interactive_authorization\fP(3)\(em 设置和查询总线消息元数据
.br
\fBsd_bus_message_set_auto_start\fP(3)\(em 设置和查询总线消息元数据
.br
\fBsd_bus_message_set_destination\fP(3)\(em 设置和查询总线报文寻址信息
.br
\fBsd_bus_message_set_expect_reply\fP(3)\(em 设置和查询总线消息元数据
.br
\fBsd_bus_message_set_sender\fP(3)\(em 设置和查询总线报文寻址信息
.br
\fBSD_BUS_MESSAGE_SIGNAL\fP(3)\(em 创建一个新的总线消息对象并创建或销毁它
.br
\fBsd_bus_message_skip\fP(3)\(em 跳过总线消息中的元素
.br
\fBsd_bus_message_unref\fP(3)\(em 创建一个新的总线消息对象并创建或销毁它
.br
\fBsd_bus_message_unrefp\fP(3)\(em 创建一个新的总线消息对象并创建或销毁它
.br
\fBsd_bus_message_verify_type\fP(3)\(em 检查消息在当前位置是否有指定类型
.br
\fBSD_BUS_METHOD\fP(3)\(em 声明 D\-Bus 路径的属性和方法
.br
\fBSD_BUS_METHOD_WITH_NAMES\fP(3)\(em 声明 D\-Bus 路径的属性和方法
.br
\fBSD_BUS_METHOD_WITH_NAMES_OFFSET\fP(3)\(em 声明 D\-Bus 路径的属性和方法
.br
\fBSD_BUS_METHOD_WITH_OFFSET\fP(3)\(em 声明 D\-Bus 路径的属性和方法
.br
\fBsd_bus_negotiate_creds\fP(3)\(em 总线连接上的控制特性协商
.br
\fBsd_bus_negotiate_fds\fP(3)\(em 总线连接上的控制特性协商
.br
\fBsd_bus_negotiate_timestamp\fP(3)\(em 总线连接上的控制特性协商
.br
\fBsd_bus_new\fP(3)\(em 创建一个新的总线对象并创建或销毁它
.br
\fBsd_bus_object_path_is_valid\fP(3)\(em 检查字符串是否为有效的总，字符串，名称或对象路径
.br
\fBsd_bus_open\fP(3)\(em 获取到系统或用户总线的连接
.br
\fBsd_bus_open_system\fP(3)\(em 获取到系统或用户总线的连接
.br
\fBsd_bus_open_system_machine\fP(3)\(em 获取到系统或用户总线的连接
.br
\fBsd_bus_open_system_remote\fP(3)\(em 获取到系统或用户总线的连接
.br
\fBsd_bus_open_system_with_description\fP(3)\(em 获取到系统或用户总线的连接
.br
\fBsd_bus_open_user\fP(3)\(em 获取到系统或用户总线的连接
.br
\fBsd_bus_open_user_machine\fP(3)\(em 获取到系统或用户总线的连接
.br
\fBsd_bus_open_user_with_description\fP(3)\(em 获取到系统或用户总线的连接
.br
\fBsd_bus_open_with_description\fP(3)\(em 获取到系统或用户总线的连接
.br
\fBSD_BUS_PARAM\fP(3)\(em 声明 D\-Bus 路径的属性和方法
.br
\fBsd_bus_path_decode\fP(3)\(em 将外部标识符转换为对象路径并返回
.br
\fBsd_bus_path_decode_many\fP(3)\(em 将外部标识符转换为对象路径并返回
.br
\fBsd_bus_path_encode\fP(3)\(em 将外部标识符转换为对象路径并返回
.br
\fBsd_bus_path_encode_many\fP(3)\(em 将外部标识符转换为对象路径并返回
.br
\fBsd_bus_process\fP(3)\(em 驱动连接
.br
\fBSD_BUS_PROPERTY\fP(3)\(em 声明 D\-Bus 路径的属性和方法
.br
\fBsd_bus_query_sender_creds\fP(3)\(em 查询总线消息发送者 credentials/privileges
.br
\fBsd_bus_query_sender_privilege\fP(3)\(em 查询总线消息发送者 credentials/privileges
.br
\fBsd_bus_ref\fP(3)\(em 创建一个新的总线对象并创建或销毁它
.br
\fBsd_bus_release_name\fP(3)\(em 在总线上请求或释放众所周知的服务名称
.br
\fBsd_bus_release_name_async\fP(3)\(em 在总线上请求或释放众所周知的服务名称
.br
\fBsd_bus_reply_method_errno\fP(3)\(em Reply with an error to a D\-Bus method 调用
.br
\fBsd_bus_reply_method_errnof\fP(3)\(em Reply with an error to a D\-Bus method
调用
.br
\fBsd_bus_reply_method_errnofv\fP(3)\(em Reply with an error to a D\-Bus method
调用
.br
\fBsd_bus_reply_method_error\fP(3)\(em Reply with an error to a D\-Bus method 调用
.br
\fBsd_bus_reply_method_errorf\fP(3)\(em Reply with an error to a D\-Bus method
调用
.br
\fBsd_bus_reply_method_errorfv\fP(3)\(em Reply with an error to a D\-Bus method
调用
.br
\fBsd_bus_reply_method_return\fP(3)\(em Reply to a D\-Bus method 调用
.br
\fBsd_bus_reply_method_returnv\fP(3)\(em Reply to a D\-Bus method 调用
.br
\fBsd_bus_request_name\fP(3)\(em 在总线上请求或释放众所周知的服务名称
.br
\fBsd_bus_request_name_async\fP(3)\(em 在总线上请求或释放众所周知的服务名称
.br
\fBsd_bus_send\fP(3)\(em 排队等待传输的 D\-Bus 消息
.br
\fBsd_bus_send_to\fP(3)\(em 排队等待传输的 D\-Bus 消息
.br
\fBsd_bus_service_name_is_valid\fP(3)\(em 检查字符串是否为有效的总，字符串，名称或对象路径
.br
\fBsd_bus_set_address\fP(3)\(em 设置或查询总线连接地址
.br
\fBsd_bus_set_allow_interactive_authorization\fP(3)\(em 设置或查询总线对象的属性
.br
\fBsd_bus_set_anonymous\fP(3)\(em 设置或查询总线对象的属性
.br
\fBsd_bus_set_bus_client\fP(3)\(em 配置总线对象的连接模式
.br
\fBsd_bus_set_close_on_exit\fP(3)\(em 控制在事件循环退出阶段是否关闭总线连接
.br
\fBsd_bus_set_connected_signal\fP(3)\(em 总线连接上本地连接建立信号的控制发射
.br
\fBsd_bus_set_description\fP(3)\(em 设置或查询总线对象的属性
.br
\fBsd_bus_set_exec\fP(3)\(em 设置或查询总线连接地址
.br
\fBsd_bus_set_exit_on_disconnect\fP(3)\(em 控制总线对象断开连接时的退出行为
.br
\fBsd_bus_set_fd\fP(3)\(em 设置用于总线通信的文件描述符
.br
\fBsd_bus_set_method_call_timeout\fP(3)\(em 设置或查询一个总线对象的默认 D\-Bus 方法调用超时
.br
\fBsd_bus_set_monitor\fP(3)\(em 配置总线对象的连接模式
.br
\fBsd_bus_set_property\fP(3)\(em 设置或查询 D\-Bus 服务属性
.br
\fBsd_bus_set_propertyv\fP(3)\(em 设置或查询 D\-Bus 服务属性
.br
\fBsd_bus_set_sender\fP(3)\(em 配置传出消息的默认发送者
.br
\fBsd_bus_set_server\fP(3)\(em 配置总线对象的连接模式
.br
\fBsd_bus_set_trusted\fP(3)\(em 设置或查询总线对象的属性
.br
\fBsd_bus_set_watch_bind\fP(3)\(em 控制套接字绑定监视总线连接
.br
\fBSD_BUS_SIGNAL\fP(3)\(em 声明 D\-Bus 路径的属性和方法
.br
\fBSD_BUS_SIGNAL_WITH_NAMES\fP(3)\(em 声明 D\-Bus 路径的属性和方法
.br
\fBsd_bus_slot_get_bus\fP(3)\(em 查询附加到总线槽对象的信息
.br
\fBsd_bus_slot_get_current_handler\fP(3)\(em 查询附加到总线槽对象的信息
.br
\fBsd_bus_slot_get_current_message\fP(3)\(em 查询附加到总线槽对象的信息
.br
\fBsd_bus_slot_get_current_userdata\fP(3)\(em 查询附加到总线槽对象的信息
.br
\fBsd_bus_slot_get_description\fP(3)\(em 设置或查询总线槽对象的描述
.br
\fBsd_bus_slot_get_destroy_callback\fP(3)\(em 定义资源清理回调函数
.br
\fBsd_bus_slot_get_floating\fP(3)\(em 控制一个总线槽对象是否为 "floating"
.br
\fBsd_bus_slot_get_userdata\fP(3)\(em 设置和查询 "userdata" 字段中的值
.br
\fBsd_bus_slot_ref\fP(3)\(em 创建并销毁引用到一个总线槽对象
.br
\fBsd_bus_slot_set_description\fP(3)\(em 设置或查询总线槽对象的描述
.br
\fBsd_bus_slot_set_destroy_callback\fP(3)\(em 定义资源清理回调函数
.br
\fBsd_bus_slot_set_floating\fP(3)\(em 控制一个总线槽对象是否为 "floating"
.br
\fBsd_bus_slot_set_userdata\fP(3)\(em 设置和查询 "userdata" 字段中的值
.br
\fBsd_bus_slot_unref\fP(3)\(em 创建并销毁引用到一个总线槽对象
.br
\fBsd_bus_slot_unrefp\fP(3)\(em 创建并销毁引用到一个总线槽对象
.br
\fBsd_bus_start\fP(3)\(em 启动到 D\-bus broker daemon 的总线连接
.br
\fBsd_bus_track_add_name\fP(3)\(em 添加、删除和检索在总线对等跟踪对象中跟踪的总线对等
.br
\fBsd_bus_track_add_sender\fP(3)\(em 添加、删除和检索在总线对等跟踪对象中跟踪的总线对等
.br
\fBsd_bus_track_contains\fP(3)\(em 添加、删除和检索在总线对等跟踪对象中跟踪的总线对等
.br
\fBsd_bus_track_count\fP(3)\(em 添加、删除和检索在总线对等跟踪对象中跟踪的总线对等
.br
\fBsd_bus_track_count_name\fP(3)\(em 添加、删除和检索在总线对等跟踪对象中跟踪的总线对等
.br
\fBsd_bus_track_count_sender\fP(3)\(em 添加、删除和检索在总线对等跟踪对象中跟踪的总线对等
.br
\fBsd_bus_track_first\fP(3)\(em 添加、删除和检索在总线对等跟踪对象中跟踪的总线对等
.br
\fBsd_bus_track_get_bus\fP(3)  \(em Track bus peers
.br
\fBsd_bus_track_get_destroy_callback\fP(3)\(em 定义资源清理回调函数
.br
\fBsd_bus_track_get_recursive\fP(3)  \(em Track bus peers
.br
\fBsd_bus_track_get_userdata\fP(3)  \(em Track bus peers
.br
\fBsd_bus_track_new\fP(3)  \(em Track bus peers
.br
\fBsd_bus_track_next\fP(3)\(em 添加、删除和检索在总线对等跟踪对象中跟踪的总线对等
.br
\fBsd_bus_track_ref\fP(3)  \(em Track bus peers
.br
\fBsd_bus_track_remove_name\fP(3)\(em 添加、删除和检索在总线对等跟踪对象中跟踪的总线对等
.br
\fBsd_bus_track_remove_sender\fP(3)\(em 添加、删除和检索在总线对等跟踪对象中跟踪的总线对等
.br
\fBsd_bus_track_set_destroy_callback\fP(3)\(em 定义资源清理回调函数
.br
\fBsd_bus_track_set_recursive\fP(3)  \(em Track bus peers
.br
\fBsd_bus_track_set_userdata\fP(3)  \(em Track bus peers
.br
\fBsd_bus_track_unref\fP(3)  \(em Track bus peers
.br
\fBsd_bus_track_unrefp\fP(3)  \(em Track bus peers
.br
\fBsd_bus_unref\fP(3)\(em 创建一个新的总线对象并创建或销毁它
.br
\fBsd_bus_unrefp\fP(3)\(em 创建一个新的总线对象并创建或销毁它
.br
\fBSD_BUS_VTABLE_CAPABILITY\fP(3)\(em 声明 D\-Bus 路径的属性和方法
.br
\fBSD_BUS_VTABLE_END\fP(3)\(em 声明 D\-Bus 路径的属性和方法
.br
\fBSD_BUS_VTABLE_START\fP(3)\(em 声明 D\-Bus 路径的属性和方法
.br
\fBsd_bus_wait\fP(3)\(em 在总线连接上等待 I/O
.br
\fBSD_BUS_WRITABLE_PROPERTY\fP(3)\(em 声明 D\-Bus 路径的属性和方法
.br
\fBSD_CRIT\fP(3)\(em 用于新型守护进程的 API
.br
\fBSD_DEBUG\fP(3)\(em 用于新型守护进程的 API
.br
\fBsd_device_get_devname\fP(3)\(em 返回设备对象的各个字段
.br
\fBsd_device_get_devnum\fP(3)\(em 返回设备对象的各个字段
.br
\fBsd_device_get_devpath\fP(3)\(em 返回设备对象的各个字段
.br
\fBsd_device_get_devtype\fP(3)\(em 返回设备对象的各个字段
.br
\fBsd_device_get_diskseq\fP(3)\(em 返回设备对象的各个字段
.br
\fBsd_device_get_driver\fP(3)\(em 返回设备对象的各个字段
.br
\fBsd_device_get_ifindex\fP(3)\(em 返回设备对象的各个字段
.br
\fBsd_device_get_subsystem\fP(3)\(em 返回设备对象的各个字段
.br
\fBsd_device_get_sysname\fP(3)\(em 返回设备对象的各个字段
.br
\fBsd_device_get_sysnum\fP(3)\(em 返回设备对象的各个字段
.br
\fBsd_device_get_syspath\fP(3)\(em 返回设备对象的各个字段
.br
\fBsd_device_ref\fP(3)\(em 创建或销毁引用到设备对象
.br
\fBsd_device_unref\fP(3)\(em 创建或销毁引用到设备对象
.br
\fBsd_device_unrefp\fP(3)\(em 创建或销毁引用到设备对象
.br
\fBSD_EMERG\fP(3)\(em 用于新型守护进程的 API
.br
\fBSD_ERR\fP(3)\(em 用于新型守护进程的 API
.br
\fBsd_event\fP(3)\(em 获取和释放一个事件循环对象
.br
\fBsd_event_add_child\fP(3)\(em 将子进程状态更改事件源添加到事件循环
.br
\fBsd_event_add_child_pidfd\fP(3)\(em 将子进程状态更改事件源添加到事件循环
.br
\fBsd_event_add_defer\fP(3)\(em 将静态事件源添加到事件循环
.br
\fBsd_event_add_exit\fP(3)\(em 将静态事件源添加到事件循环
.br
\fBsd_event_add_inotify\fP(3)\(em 将 "inotify" 文件系统 inode 事件源添加到事件循环
.br
\fBsd_event_add_inotify_fd\fP(3)\(em 将 "inotify" 文件系统 inode 事件源添加到事件循环
.br
\fBsd_event_add_io\fP(3)\(em 将 I/O 事件源添加到事件循环
.br
\fBsd_event_add_post\fP(3)\(em 将静态事件源添加到事件循环
.br
\fBsd_event_add_signal\fP(3)\(em 添加一个 UNIX 过程信号事件源到事件循环
.br
\fBsd_event_add_time\fP(3)\(em 将定时器事件源添加到事件循环
.br
\fBsd_event_add_time_relative\fP(3)\(em 将定时器事件源添加到事件循环
.br
\fBSD_EVENT_ARMED\fP(3)\(em 底层事件循环操作
.br
\fBsd_event_child_handler_t\fP(3)\(em 将子进程状态更改事件源添加到事件循环
.br
\fBsd_event_default\fP(3)\(em 获取和释放一个事件循环对象
.br
\fBsd_event_destroy_t\fP(3)\(em 定义资源清理回调函数
.br
\fBsd_event_dispatch\fP(3)\(em 底层事件循环操作
.br
\fBsd_event_exit\fP(3)\(em 要求事件循环退出
.br
\fBSD_EVENT_EXITING\fP(3)\(em 底层事件循环操作
.br
\fBSD_EVENT_FINISHED\fP(3)\(em 底层事件循环操作
.br
\fBsd_event_get_exit_code\fP(3)\(em 要求事件循环退出
.br
\fBsd_event_get_fd\fP(3)\(em 获取文件描述符以轮询事件循环事件
.br
\fBsd_event_get_iteration\fP(3)\(em 底层事件循环操作
.br
\fBsd_event_get_state\fP(3)\(em 底层事件循环操作
.br
\fBsd_event_get_tid\fP(3)\(em 获取和释放一个事件循环对象
.br
\fBsd_event_get_watchdog\fP(3)\(em 启用事件循环看门狗支持
.br
\fBsd_event_handler_t\fP(3)\(em 将静态事件源添加到事件循环
.br
\fBSD_EVENT_INITIAL\fP(3)\(em 底层事件循环操作
.br
\fBsd_event_inotify_handler_t\fP(3)\(em 将 "inotify" 文件系统 inode 事件源添加到事件循环
.br
\fBsd_event_io_handler_t\fP(3)\(em 将 I/O 事件源添加到事件循环
.br
\fBsd_event_loop\fP(3)\(em 运行一个事件循环
.br
\fBsd_event_new\fP(3)\(em 获取和释放一个事件循环对象
.br
\fBsd_event_now\fP(3)\(em 检索当前事件循环迭代时间戳
.br
\fBSD_EVENT_OFF\fP(3)\(em 启用或禁用事件源
.br
\fBSD_EVENT_ON\fP(3)\(em 启用或禁用事件源
.br
\fBSD_EVENT_ONESHOT\fP(3)\(em 启用或禁用事件源
.br
\fBSD_EVENT_PENDING\fP(3)\(em 底层事件循环操作
.br
\fBsd_event_prepare\fP(3)\(em 底层事件循环操作
.br
\fBSD_EVENT_PREPARING\fP(3)\(em 底层事件循环操作
.br
\fBSD_EVENT_PRIORITY_IDLE\fP(3)\(em 设置或检索事件源的优先级
.br
\fBSD_EVENT_PRIORITY_IMPORTANT\fP(3)\(em 设置或检索事件源的优先级
.br
\fBSD_EVENT_PRIORITY_NORMAL\fP(3)\(em 设置或检索事件源的优先级
.br
\fBsd_event_ref\fP(3)\(em 获取和释放一个事件循环对象
.br
\fBsd_event_run\fP(3)\(em 运行一个事件循环
.br
\fBSD_EVENT_RUNNING\fP(3)\(em 底层事件循环操作
.br
\fBsd_event_set_signal_exit\fP(3)\(em 自动离开 SIGINT 和 SIGTERM 上的事件循环
.br
\fBsd_event_set_watchdog\fP(3)\(em 启用事件循环看门狗支持
.br
\fBsd_event_signal_handler_t\fP(3)\(em 添加一个 UNIX 过程信号事件源到事件循环
.br
\fBSD_EVENT_SIGNAL_PROCMASK\fP(3)\(em 添加一个 UNIX 过程信号事件源到事件循环
.br
\fBsd_event_source\fP(3)\(em 将 I/O 事件源添加到事件循环
.br
\fBsd_event_source_disable_unref\fP(3)\(em 增加或减少事件源引用计数器
.br
\fBsd_event_source_disable_unrefp\fP(3)\(em 增加或减少事件源引用计数器
.br
\fBsd_event_source_get_child_pid\fP(3)\(em 将子进程状态更改事件源添加到事件循环
.br
\fBsd_event_source_get_child_pidfd\fP(3)\(em 将子进程状态更改事件源添加到事件循环
.br
\fBsd_event_source_get_child_pidfd_own\fP(3)\(em 将子进程状态更改事件源添加到事件循环
.br
\fBsd_event_source_get_child_process_own\fP(3)\(em 将子进程状态更改事件源添加到事件循环
.br
\fBsd_event_source_get_description\fP(3)\(em 设置或检索事件源的描述性名称
.br
\fBsd_event_source_get_destroy_callback\fP(3)\(em 定义资源清理回调函数
.br
\fBsd_event_source_get_enabled\fP(3)\(em 启用或禁用事件源
.br
\fBsd_event_source_get_event\fP(3)\(em 检索事件源的事件循环
.br
\fBsd_event_source_get_exit_on_failure\fP(3)\(em 设置或检索事件源的失败时退出，特性
.br
\fBsd_event_source_get_floating\fP(3)\(em 设置或检索 \*(Aqfloating\*(Aq 事件源状态
.br
\fBsd_event_source_get_inotify_mask\fP(3)\(em 将 "inotify" 文件系统 inode 事件源添加到事件循环
.br
\fBsd_event_source_get_io_events\fP(3)\(em 将 I/O 事件源添加到事件循环
.br
\fBsd_event_source_get_io_fd\fP(3)\(em 将 I/O 事件源添加到事件循环
.br
\fBsd_event_source_get_io_fd_own\fP(3)\(em 将 I/O 事件源添加到事件循环
.br
\fBsd_event_source_get_io_revents\fP(3)\(em 将 I/O 事件源添加到事件循环
.br
\fBsd_event_source_get_pending\fP(3)\(em 确定事件源的挂起状态
.br
\fBsd_event_source_get_priority\fP(3)\(em 设置或检索事件源的优先级
.br
\fBsd_event_source_get_ratelimit\fP(3)\(em 配置事件源的速率限制
.br
\fBsd_event_source_get_signal\fP(3)\(em 添加一个 UNIX 过程信号事件源到事件循环
.br
\fBsd_event_source_get_time\fP(3)\(em 将定时器事件源添加到事件循环
.br
\fBsd_event_source_get_time_accuracy\fP(3)\(em 将定时器事件源添加到事件循环
.br
\fBsd_event_source_get_time_clock\fP(3)\(em 将定时器事件源添加到事件循环
.br
\fBsd_event_source_get_userdata\fP(3)\(em 设置或检索事件源的用户数据指针
.br
\fBsd_event_source_is_ratelimited\fP(3)\(em 配置事件源的速率限制
.br
\fBsd_event_source_ref\fP(3)\(em 增加或减少事件源引用计数器
.br
\fBsd_event_source_send_child_signal\fP(3)\(em 将子进程状态更改事件源添加到事件循环
.br
\fBsd_event_source_set_child_pidfd_own\fP(3)\(em 将子进程状态更改事件源添加到事件循环
.br
\fBsd_event_source_set_child_process_own\fP(3)\(em 将子进程状态更改事件源添加到事件循环
.br
\fBsd_event_source_set_description\fP(3)\(em 设置或检索事件源的描述性名称
.br
\fBsd_event_source_set_destroy_callback\fP(3)\(em 定义资源清理回调函数
.br
\fBsd_event_source_set_enabled\fP(3)\(em 启用或禁用事件源
.br
\fBsd_event_source_set_exit_on_failure\fP(3)\(em 设置或检索事件源的失败时退出，特性
.br
\fBsd_event_source_set_floating\fP(3)\(em 设置或检索 \*(Aqfloating\*(Aq 事件源状态
.br
\fBsd_event_source_set_io_events\fP(3)\(em 将 I/O 事件源添加到事件循环
.br
\fBsd_event_source_set_io_fd\fP(3)\(em 将 I/O 事件源添加到事件循环
.br
\fBsd_event_source_set_io_fd_own\fP(3)\(em 将 I/O 事件源添加到事件循环
.br
\fBsd_event_source_set_prepare\fP(3)\(em 为事件源设置一个准备回调
.br
\fBsd_event_source_set_priority\fP(3)\(em 设置或检索事件源的优先级
.br
\fBsd_event_source_set_ratelimit\fP(3)\(em 配置事件源的速率限制
.br
\fBsd_event_source_set_ratelimit_expire_callback\fP(3)\(em 配置事件源的速率限制
.br
\fBsd_event_source_set_time\fP(3)\(em 将定时器事件源添加到事件循环
.br
\fBsd_event_source_set_time_accuracy\fP(3)\(em 将定时器事件源添加到事件循环
.br
\fBsd_event_source_set_time_relative\fP(3)\(em 将定时器事件源添加到事件循环
.br
\fBsd_event_source_set_userdata\fP(3)\(em 设置或检索事件源的用户数据指针
.br
\fBsd_event_source_unref\fP(3)\(em 增加或减少事件源引用计数器
.br
\fBsd_event_source_unrefp\fP(3)\(em 增加或减少事件源引用计数器
.br
\fBsd_event_time_handler_t\fP(3)\(em 将定时器事件源添加到事件循环
.br
\fBsd_event_unref\fP(3)\(em 获取和释放一个事件循环对象
.br
\fBsd_event_unrefp\fP(3)\(em 获取和释放一个事件循环对象
.br
\fBsd_event_wait\fP(3)\(em 底层事件循环操作
.br
\fBsd_get_machine_names\fP(3)\(em 确定可用席位、会话、登录用户和虚拟 machines/containers
.br
\fBsd_get_seats\fP(3)\(em 确定可用席位、会话、登录用户和虚拟 machines/containers
.br
\fBsd_get_sessions\fP(3)\(em 确定可用席位、会话、登录用户和虚拟 machines/containers
.br
\fBsd_get_uids\fP(3)\(em 确定可用席位、会话、登录用户和虚拟 machines/containers
.br
\fBsd_hwdb_enumerate\fP(3)\(em Seek 到 hwdb 中的某个位置或访问条目
.br
\fBSD_HWDB_FOREACH_PROPERTY\fP(3)\(em Seek 到 hwdb 中的某个位置或访问条目
.br
\fBsd_hwdb_get\fP(3)\(em Seek 到 hwdb 中的某个位置或访问条目
.br
\fBsd_hwdb_new\fP(3)\(em 创建一个新的 hwdb 对象并创建或销毁它
.br
\fBsd_hwdb_new_from_path\fP(3)\(em 创建一个新的 hwdb 对象并创建或销毁它
.br
\fBsd_hwdb_ref\fP(3)\(em 创建一个新的 hwdb 对象并创建或销毁它
.br
\fBsd_hwdb_seek\fP(3)\(em Seek 到 hwdb 中的某个位置或访问条目
.br
\fBsd_hwdb_unref\fP(3)\(em 创建一个新的 hwdb 对象并创建或销毁它
.br
\fBSD_ID128_ALLF\fP(3)\(em 用于处理 128 位 ID 的 API
.br
\fBSD_ID128_CONST_STR\fP(3)\(em 用于处理 128 位 ID 的 API
.br
\fBsd_id128_equal\fP(3)\(em 用于处理 128 位 ID 的 API
.br
\fBSD_ID128_FORMAT_STR\fP(3)\(em 用于处理 128 位 ID 的 API
.br
\fBSD_ID128_FORMAT_VAL\fP(3)\(em 用于处理 128 位 ID 的 API
.br
\fBsd_id128_from_string\fP(3)\(em 将 128 位 ID 格式化或解析为字符串
.br
\fBsd_id128_get_boot\fP(3)\(em 检索 128 位 ID
.br
\fBsd_id128_get_boot_app_specific\fP(3)\(em 检索 128 位 ID
.br
\fBsd_id128_get_invocation\fP(3)\(em 检索 128 位 ID
.br
\fBsd_id128_get_machine\fP(3)\(em 检索 128 位 ID
.br
\fBsd_id128_get_machine_app_specific\fP(3)\(em 检索 128 位 ID
.br
\fBsd_id128_in_set\fP(3)\(em 用于处理 128 位 ID 的 API
.br
\fBsd_id128_in_set_sentinel\fP(3)\(em 用于处理 128 位 ID 的 API
.br
\fBsd_id128_in_setv\fP(3)\(em 用于处理 128 位 ID 的 API
.br
\fBsd_id128_is_allf\fP(3)\(em 用于处理 128 位 ID 的 API
.br
\fBsd_id128_is_null\fP(3)\(em 用于处理 128 位 ID 的 API
.br
\fBSD_ID128_MAKE\fP(3)\(em 用于处理 128 位 ID 的 API
.br
\fBSD_ID128_MAKE_STR\fP(3)\(em 用于处理 128 位 ID 的 API
.br
\fBSD_ID128_MAKE_UUID_STR\fP(3)\(em 用于处理 128 位 ID 的 API
.br
\fBSD_ID128_NULL\fP(3)\(em 用于处理 128 位 ID 的 API
.br
\fBsd_id128_randomize\fP(3)\(em 生成 128 位 ID
.br
\fBsd_id128_string_equal\fP(3)\(em 用于处理 128 位 ID 的 API
.br
\fBSD_ID128_STRING_MAX\fP(3)\(em 将 128 位 ID 格式化或解析为字符串
.br
\fBsd_id128_t\fP(3)\(em 用于处理 128 位 ID 的 API
.br
\fBsd_id128_to_string\fP(3)\(em 将 128 位 ID 格式化或解析为字符串
.br
\fBSD_ID128_TO_STRING\fP(3)\(em 将 128 位 ID 格式化或解析为字符串
.br
\fBsd_id128_to_uuid_string\fP(3)\(em 将 128 位 ID 格式化或解析为字符串
.br
\fBSD_ID128_TO_UUID_STRING\fP(3)\(em 将 128 位 ID 格式化或解析为字符串
.br
\fBSD_ID128_UUID_FORMAT_STR\fP(3)\(em 用于处理 128 位 ID 的 API
.br
\fBSD_ID128_UUID_STRING_MAX\fP(3)\(em 将 128 位 ID 格式化或解析为字符串
.br
\fBSD_INFO\fP(3)\(em 用于新型守护进程的 API
.br
\fBsd_is_fifo\fP(3)\(em 检查文件描述符的类型
.br
\fBsd_is_mq\fP(3)\(em 检查文件描述符的类型
.br
\fBsd_is_socket\fP(3)\(em 检查文件描述符的类型
.br
\fBsd_is_socket_inet\fP(3)\(em 检查文件描述符的类型
.br
\fBsd_is_socket_sockaddr\fP(3)\(em 检查文件描述符的类型
.br
\fBsd_is_socket_unix\fP(3)\(em 检查文件描述符的类型
.br
\fBsd_is_special\fP(3)\(em 检查文件描述符的类型
.br
\fBsd_journal\fP(3)\(em 打开系统日志读取
.br
\fBsd_journal_add_conjunction\fP(3)\(em 添加或删除条目匹配项
.br
\fBsd_journal_add_disjunction\fP(3)\(em 添加或删除条目匹配项
.br
\fBsd_journal_add_match\fP(3)\(em 添加或删除条目匹配项
.br
\fBSD_JOURNAL_ALL_NAMESPACES\fP(3)\(em 打开系统日志读取
.br
\fBSD_JOURNAL_APPEND\fP(3)\(em 日记帐更改通知界面
.br
\fBsd_journal_close\fP(3)\(em 打开系统日志读取
.br
\fBSD_JOURNAL_CURRENT_USER\fP(3)\(em 打开系统日志读取
.br
\fBsd_journal_enumerate_available_data\fP(3)\(em 从当前日记账分录中读取数据字段
.br
\fBsd_journal_enumerate_available_unique\fP(3)\(em 从日志中读取唯一数据字段
.br
\fBsd_journal_enumerate_data\fP(3)\(em 从当前日记账分录中读取数据字段
.br
\fBsd_journal_enumerate_fields\fP(3)\(em 从日志中读取使用过的字段名称
.br
\fBsd_journal_enumerate_unique\fP(3)\(em 从日志中读取唯一数据字段
.br
\fBsd_journal_flush_matches\fP(3)\(em 添加或删除条目匹配项
.br
\fBSD_JOURNAL_FOREACH\fP(3)\(em 前进或后退日志中的读指针
.br
\fBSD_JOURNAL_FOREACH_BACKWARDS\fP(3)\(em 前进或后退日志中的读指针
.br
\fBSD_JOURNAL_FOREACH_DATA\fP(3)\(em 从当前日记账分录中读取数据字段
.br
\fBSD_JOURNAL_FOREACH_FIELD\fP(3)\(em 从日志中读取使用过的字段名称
.br
\fBSD_JOURNAL_FOREACH_UNIQUE\fP(3)\(em 从日志中读取唯一数据字段
.br
\fBsd_journal_get_catalog\fP(3)\(em 检索消息目录条目
.br
\fBsd_journal_get_catalog_for_message_id\fP(3)\(em 检索消息目录条目
.br
\fBsd_journal_get_cursor\fP(3)\(em 获取游标字符串或针对当前日记条目测试游标字符串
.br
\fBsd_journal_get_cutoff_monotonic_usec\fP(3)\(em 从当前日记条目中读取截止时间戳
.br
\fBsd_journal_get_cutoff_realtime_usec\fP(3)\(em 从当前日记条目中读取截止时间戳
.br
\fBsd_journal_get_data\fP(3)\(em 从当前日记账分录中读取数据字段
.br
\fBsd_journal_get_data_threshold\fP(3)\(em 从当前日记账分录中读取数据字段
.br
\fBsd_journal_get_events\fP(3)\(em 日记帐更改通知界面
.br
\fBsd_journal_get_fd\fP(3)\(em 日记帐更改通知界面
.br
\fBsd_journal_get_monotonic_usec\fP(3)\(em 从当前日记条目中读取时间戳
.br
\fBsd_journal_get_realtime_usec\fP(3)\(em 从当前日记条目中读取时间戳
.br
\fBsd_journal_get_timeout\fP(3)\(em 日记帐更改通知界面
.br
\fBsd_journal_get_usage\fP(3)\(em 日志磁盘使用情况
.br
\fBsd_journal_has_persistent_files\fP(3)\(em 查询运行时或持久日志文件的可用性
.br
\fBsd_journal_has_runtime_files\fP(3)\(em 查询运行时或持久日志文件的可用性
.br
\fBSD_JOURNAL_INCLUDE_DEFAULT_NAMESPACE\fP(3)\(em 打开系统日志读取
.br
\fBSD_JOURNAL_INVALIDATE\fP(3)\(em 日记帐更改通知界面
.br
\fBSD_JOURNAL_LOCAL_ONLY\fP(3)\(em 打开系统日志读取
.br
\fBsd_journal_next\fP(3)\(em 前进或后退日志中的读指针
.br
\fBsd_journal_next_skip\fP(3)\(em 前进或后退日志中的读指针
.br
\fBSD_JOURNAL_NOP\fP(3)\(em 日记帐更改通知界面
.br
\fBsd_journal_open\fP(3)\(em 打开系统日志读取
.br
\fBsd_journal_open_directory\fP(3)\(em 打开系统日志读取
.br
\fBsd_journal_open_directory_fd\fP(3)\(em 打开系统日志读取
.br
\fBsd_journal_open_files\fP(3)\(em 打开系统日志读取
.br
\fBsd_journal_open_files_fd\fP(3)\(em 打开系统日志读取
.br
\fBsd_journal_open_namespace\fP(3)\(em 打开系统日志读取
.br
\fBSD_JOURNAL_OS_ROOT\fP(3)\(em 打开系统日志读取
.br
\fBsd_journal_perror\fP(3)\(em 将日志条目提交到日志
.br
\fBsd_journal_perror_with_location\fP(3)\(em 将日志条目提交到日志
.br
\fBsd_journal_previous\fP(3)\(em 前进或后退日志中的读指针
.br
\fBsd_journal_previous_skip\fP(3)\(em 前进或后退日志中的读指针
.br
\fBsd_journal_print\fP(3)\(em 将日志条目提交到日志
.br
\fBsd_journal_print_with_location\fP(3)\(em 将日志条目提交到日志
.br
\fBsd_journal_printv\fP(3)\(em 将日志条目提交到日志
.br
\fBsd_journal_printv_with_location\fP(3)\(em 将日志条目提交到日志
.br
\fBsd_journal_process\fP(3)\(em 日记帐更改通知界面
.br
\fBsd_journal_query_unique\fP(3)\(em 从日志中读取唯一数据字段
.br
\fBsd_journal_reliable_fd\fP(3)\(em 日记帐更改通知界面
.br
\fBsd_journal_restart_data\fP(3)\(em 从当前日记账分录中读取数据字段
.br
\fBsd_journal_restart_fields\fP(3)\(em 从日志中读取使用过的字段名
.br
\fBsd_journal_restart_unique\fP(3)\(em 从日志中读取唯一数据字段
.br
\fBSD_JOURNAL_RUNTIME_ONLY\fP(3)\(em 打开系统日志读取
.br
\fBsd_journal_seek_cursor\fP(3)\(em Seek 到日志中的一个位置
.br
\fBsd_journal_seek_head\fP(3)\(em Seek 到日志中的一个位置
.br
\fBsd_journal_seek_monotonic_usec\fP(3)\(em Seek 到日志中的一个位置
.br
\fBsd_journal_seek_realtime_usec\fP(3)\(em Seek 到日志中的一个位置
.br
\fBsd_journal_seek_tail\fP(3)\(em Seek 到日志中的一个位置
.br
\fBsd_journal_send\fP(3)\(em 将日志条目提交到日志
.br
\fBsd_journal_send_with_location\fP(3)\(em 将日志条目提交到日志
.br
\fBsd_journal_sendv\fP(3)\(em 将日志条目提交到日志
.br
\fBsd_journal_sendv_with_location\fP(3)\(em 将日志条目提交到日志
.br
\fBsd_journal_set_data_threshold\fP(3)\(em 从当前日记账分录中读取数据字段
.br
\fBsd_journal_stream_fd\fP(3)\(em 创建日志流文件描述符到日志
.br
\fBSD_JOURNAL_SUPPRESS_LOCATION\fP(3)\(em 将日志条目提交到日志
.br
\fBSD_JOURNAL_SYSTEM\fP(3)\(em 打开系统日志读取
.br
\fBsd_journal_test_cursor\fP(3)\(em 获取游标字符串或针对当前日记条目测试游标字符串
.br
\fBsd_journal_wait\fP(3)\(em 日记帐更改通知界面
.br
\fBsd_listen_fds\fP(3)\(em 检查系统管理器传递的文件描述符
.br
\fBSD_LISTEN_FDS_START\fP(3)\(em 检查系统管理器传递的文件描述符
.br
\fBsd_listen_fds_with_names\fP(3)\(em 检查系统管理器传递的文件描述符
.br
\fBsd_login_monitor\fP(3)\(em 监控登录会话、席位、用户和虚拟 machines/containers
.br
\fBsd_login_monitor_flush\fP(3)\(em 监控登录会话、席位、用户和虚拟 machines/containers
.br
\fBsd_login_monitor_get_events\fP(3)\(em 监控登录会话、席位、用户和虚拟 machines/containers
.br
\fBsd_login_monitor_get_fd\fP(3)\(em 监控登录会话、席位、用户和虚拟 machines/containers
.br
\fBsd_login_monitor_get_timeout\fP(3)\(em 监控登录会话、席位、用户和虚拟 machines/containers
.br
\fBsd_login_monitor_new\fP(3)\(em 监控登录会话、席位、用户和虚拟 machines/containers
.br
\fBsd_login_monitor_unref\fP(3)\(em 监控登录会话、席位、用户和虚拟 machines/containers
.br
\fBsd_login_monitor_unrefp\fP(3)\(em 监控登录会话、席位、用户和虚拟 machines/containers
.br
\fBsd_machine_get_class\fP(3)\(em 确定本地运行的虚拟机或容器的类和网络接口索引
.br
\fBsd_machine_get_ifindices\fP(3)\(em 确定本地运行的虚拟机或容器的类和网络接口索引
.br
\fBSD_NOTICE\fP(3)\(em 用于新型守护进程的 API
.br
\fBsd_notify\fP(3)\(em 通知服务经理启动完成和其他服务状态变化
.br
\fBsd_notify_barrier\fP(3)\(em 通知服务经理启动完成和其他服务状态变化
.br
\fBsd_notifyf\fP(3)\(em 通知服务经理启动完成和其他服务状态变化
.br
\fBsd_path_lookup\fP(3)\(em 查询知名文件系统路径
.br
\fBsd_path_lookup_strv\fP(3)\(em 查询知名文件系统路径
.br
\fBsd_peer_get_cgroup\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_peer_get_machine_name\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_peer_get_owner_uid\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_peer_get_session\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_peer_get_slice\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_peer_get_unit\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_peer_get_user_slice\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_peer_get_user_unit\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_pid_get_cgroup\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_pid_get_machine_name\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_pid_get_owner_uid\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_pid_get_session\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_pid_get_slice\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_pid_get_unit\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_pid_get_user_slice\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_pid_get_user_unit\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_pid_notify\fP(3)\(em 通知服务经理启动完成和其他服务状态变化
.br
\fBsd_pid_notify_with_fds\fP(3)\(em 通知服务经理启动完成和其他服务状态变化
.br
\fBsd_pid_notifyf\fP(3)\(em 通知服务经理启动完成和其他服务状态变化
.br
\fBsd_pidfd_get_cgroup\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_pidfd_get_machine_name\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_pidfd_get_owner_uid\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_pidfd_get_session\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_pidfd_get_slice\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_pidfd_get_unit\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_pidfd_get_user_slice\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_pidfd_get_user_unit\fP(3)\(em 确定用户元或 session 的 owner uid，或
session、用户元、系统元、container/VM 或特定 PID 或 socket peer 所属的分片
.br
\fBsd_seat_can_graphical\fP(3)\(em 确定特定座位的状态
.br
\fBsd_seat_can_tty\fP(3)\(em 确定特定座位的状态
.br
\fBsd_seat_get_active\fP(3)\(em 确定特定座位的状态
.br
\fBsd_seat_get_sessions\fP(3)\(em 确定特定座位的状态
.br
\fBsd_session_get_class\fP(3)\(em 确定特定会话的状态
.br
\fBsd_session_get_desktop\fP(3)\(em 确定特定会话的状态
.br
\fBsd_session_get_display\fP(3)\(em 确定特定会话的状态
.br
\fBsd_session_get_remote_host\fP(3)\(em 确定特定会话的状态
.br
\fBsd_session_get_remote_user\fP(3)\(em 确定特定会话的状态
.br
\fBsd_session_get_seat\fP(3)\(em 确定特定会话的状态
.br
\fBsd_session_get_service\fP(3)\(em 确定特定会话的状态
.br
\fBsd_session_get_state\fP(3)\(em 确定特定会话的状态
.br
\fBsd_session_get_tty\fP(3)\(em 确定特定会话的状态
.br
\fBsd_session_get_type\fP(3)\(em 确定特定会话的状态
.br
\fBsd_session_get_uid\fP(3)\(em 确定特定会话的状态
.br
\fBsd_session_get_vt\fP(3)\(em 确定特定会话的状态
.br
\fBsd_session_is_active\fP(3)\(em 确定特定会话的状态
.br
\fBsd_session_is_remote\fP(3)\(em 确定特定会话的状态
.br
\fBsd_uid_get_display\fP(3)\(em 确定特定 Unix 用户 ID 的登录状态
.br
\fBsd_uid_get_seats\fP(3)\(em 确定特定 Unix 用户 ID 的登录状态
.br
\fBsd_uid_get_sessions\fP(3)\(em 确定特定 Unix 用户 ID 的登录状态
.br
\fBsd_uid_get_state\fP(3)\(em 确定特定 Unix 用户 ID 的登录状态
.br
\fBsd_uid_is_on_seat\fP(3)\(em 确定特定 Unix 用户 ID 的登录状态
.br
\fBSD_WARNING\fP(3)\(em 用于新型守护进程的 API
.br
\fBsd_watchdog_enabled\fP(3)\(em 检查服务管理器是否期望来自服务的看门狗保持活动通知
.br
\fBshutdown\fP(8)  \(em Halt, power off or reboot the machine
.br
\fBsleep.conf.d\fP(5)\(em 挂起和休眠配置文件
.br
\fBsysctl.d\fP(5)\(em 在启动时配置内核参数
.br
\fBsystem.conf.d\fP(5)\(em 系统和会话服务管理器配置文件
.br
\fBsystemctl\fP(1)\(em 控制 systemd 系统和服务管理器
.br
\fBsystemd\fP(1)\(em systemd 系统和服务管理器
.br
\fBsystemd\-ac\-power\fP(1)\(em 报告我们是否连接到外部电源
.br
\fBsystemd\-analyze\fP(1)\(em 分析调试系统管理器
.br
\fBsystemd\-ask\-password\fP(1)\(em 向用户查询系统密码
.br
\fBsystemd\-ask\-password\-console.path\fP(8)\(em 在控制台和通过墙上向用户查询系统密码
.br
\fBsystemd\-ask\-password\-console.service\fP(8)\(em 在控制台和通过墙上向用户查询系统密码
.br
\fBsystemd\-ask\-password\-wall.path\fP(8)\(em 在控制台和通过墙上向用户查询系统密码
.br
\fBsystemd\-ask\-password\-wall.service\fP(8)\(em 在控制台和通过墙上向用户查询系统密码
.br
\fBsystemd\-backlight\fP(8)\(em 在开机和关机时加载和保存显示屏背光亮度
.br
\fBsystemd\-backlight@.service\fP(8)\(em 在开机和关机时加载和保存显示屏背光亮度
.br
\fBsystemd\-binfmt\fP(8)\(em 在启动时为可执行文件配置额外的二进制格式
.br
\fBsystemd\-binfmt.service\fP(8)\(em 在启动时为可执行文件配置额外的二进制格式
.br
\fBsystemd\-bless\-boot\fP(8)\(em 将当前引导过程标记为成功
.br
\fBsystemd\-bless\-boot\-generator\fP(8)\(em 在启动计数生效时将
systemd\-bless\-boot\&.service 拉入初始启动事务
.br
\fBsystemd\-bless\-boot.service\fP(8)\(em 将当前引导过程标记为成功
.br
\fBsystemd\-boot\fP(7)\(em 一个简单的 UEFI 启动管理器
.br
\fBsystemd\-boot\-check\-no\-failures\fP(8)\(em 确认系统启动干净
.br
\fBsystemd\-boot\-check\-no\-failures.service\fP(8)\(em 确认系统启动干净
.br
\fBsystemd\-boot\-random\-seed.service\fP(8)  \(em Refresh boot loader random seed
at boot
.br
\fBsystemd\-cat\fP(1)  \(em Connect a pipeline or program\*(Aqs output with the
journal
.br
\fBsystemd\-cgls\fP(1)\(em 递归显示控制组内容
.br
\fBsystemd\-cgtop\fP(1)\(em 按资源使用情况显示排名靠前的控制组
.br
\fBsystemd\-coredump\fP(8)\(em 获取、保存和处理核心转储
.br
\fBsystemd\-coredump.socket\fP(8)\(em 获取、保存和处理核心转储
.br
\fBsystemd\-coredump@.service\fP(8)\(em 获取、保存和处理核心转储
.br
\fBsystemd\-creds\fP(1)\(em 列出、显示、加密和解密服务凭证
.br
\fBsystemd\-cryptenroll\fP(1)\(em Enroll PKCS#11, FIDO2, TPM2 token/devices to
LUKS2 加密卷
.br
\fBsystemd\-cryptsetup\fP(8)\(em 全盘解密逻辑
.br
\fBsystemd\-cryptsetup\-generator\fP(8)\(em 元 generator for /etc/crypttab
.br
\fBsystemd\-cryptsetup@.service\fP(8)\(em 全盘解密逻辑
.br
\fBsystemd\-debug\-generator\fP(8)\(em 生成器，用于启用运行时调试 shell 并在启动时屏蔽特定单元
.br
\fBsystemd\-delta\fP(1)\(em 查找覆盖的配置文件
.br
\fBsystemd\-detect\-virt\fP(1)\(em 在虚拟化环境中检测执行
.br
\fBsystemd\-dissect\fP(1)\(em 剖析可发现的磁盘映像 (DDIs)
.br
\fBsystemd\-environment\-d\-generator\fP(8)\(em Load 变量由 environment\&.d 指定
.br
\fBsystemd\-escape\fP(1)\(em 在 systemd 元名称中使用的转义字符串
.br
\fBsystemd\-firstboot\fP(1)\(em 在系统首次启动时或之前初始化基本系统设置
.br
\fBsystemd\-firstboot.service\fP(1)\(em 在系统首次启动时或之前初始化基本系统设置
.br
\fBsystemd\-fsck\fP(8)\(em 文件系统检查器逻辑
.br
\fBsystemd\-fsck\-root.service\fP(8)\(em 文件系统检查器逻辑
.br
\fBsystemd\-fsck@.service\fP(8)\(em 文件系统检查器逻辑
.br
\fBsystemd\-fstab\-generator\fP(8)\(em 元 generator for /etc/fstab
.br
\fBsystemd\-getty\-generator\fP(8)\(em 用于在控制台上启用 getty 实例的生成器
.br
\fBsystemd\-gpt\-auto\-generator\fP(8)\(em 生成器，用于根据 GPT 分区类型 GUID
自动发现和挂载根、/home/、/srv/、/var/ 和 /var/tmp/ 分区，以及发现和启用交换分区
.br
\fBsystemd\-growfs\fP(8)\(em 按需创建和增长文件系统
.br
\fBsystemd\-growfs@.service\fP(8)\(em 按需创建和增长文件系统
.br
\fBsystemd\-halt.service\fP(8)\(em 系统关闭逻辑
.br
\fBsystemd\-hibernate\-resume\fP(8)\(em 从休眠中恢复
.br
\fBsystemd\-hibernate\-resume\-generator\fP(8)\(em 单元 generator for resume=kernel
parameter
.br
\fBsystemd\-hibernate\-resume@.service\fP(8)\(em 从休眠中恢复
.br
\fBsystemd\-hibernate.service\fP(8)\(em 系统睡眠状态逻辑
.br
\fBsystemd\-homed\fP(8)\(em Home Area/User 客户经理
.br
\fBsystemd\-homed.service\fP(8)\(em Home Area/User 客户经理
.br
\fBsystemd\-hostnamed\fP(8)\(em 守护进程从程序控制系统主机名
.br
\fBsystemd\-hostnamed.service\fP(8)\(em 守护进程从程序控制系统主机名
.br
\fBsystemd\-hwdb\fP(8)\(em 硬件数据库管理工具
.br
\fBsystemd\-hybrid\-sleep.service\fP(8)\(em 系统睡眠状态逻辑
.br
\fBsystemd\-id128\fP(1)\(em 生成并打印 sd\-128 标识符
.br
\fBsystemd\-importd\fP(8)\(em VM 和容器镜像导入导出服务
.br
\fBsystemd\-importd.service\fP(8)\(em VM 和容器镜像导入导出服务
.br
\fBsystemd\-inhibit\fP(1)\(em 执行一个带有禁止锁的程序
.br
\fBsystemd\-integritysetup\fP(8)\(em 磁盘完整性保护逻辑
.br
\fBsystemd\-integritysetup\-generator\fP(8)\(em 元生成器用于完整性保护块设备
.br
\fBsystemd\-integritysetup@.service\fP(8)\(em 磁盘完整性保护逻辑
.br
\fBsystemd\-journal\-gatewayd\fP(8)\(em 日志事件的 HTTP 服务器
.br
\fBsystemd\-journal\-gatewayd.service\fP(8)\(em 日志事件的 HTTP 服务器
.br
\fBsystemd\-journal\-gatewayd.socket\fP(8)\(em 日志事件的 HTTP 服务器
.br
\fBsystemd\-journal\-remote\fP(8)\(em 通过网络接收日志消息
.br
\fBsystemd\-journal\-remote.service\fP(8)\(em 通过网络接收日志消息
.br
\fBsystemd\-journal\-remote.socket\fP(8)\(em 通过网络接收日志消息
.br
\fBsystemd\-journal\-upload\fP(8)\(em 通过网络发送日志消息
.br
\fBsystemd\-journal\-upload.service\fP(8)\(em 通过网络发送日志消息
.br
\fBsystemd\-journald\fP(8)\(em 日志服务
.br
\fBsystemd\-journald\-audit.socket\fP(8)\(em 日志服务
.br
\fBsystemd\-journald\-dev\-log.socket\fP(8)\(em 日志服务
.br
\fBsystemd\-journald\-varlink@.socket\fP(8)\(em 日志服务
.br
\fBsystemd\-journald.service\fP(8)\(em 日志服务
.br
\fBsystemd\-journald.socket\fP(8)\(em 日志服务
.br
\fBsystemd\-journald@.service\fP(8)\(em 日志服务
.br
\fBsystemd\-journald@.socket\fP(8)\(em 日志服务
.br
\fBsystemd\-kexec.service\fP(8)\(em 系统关闭逻辑
.br
\fBsystemd\-localed\fP(8)\(em Locale 总线机制
.br
\fBsystemd\-localed.service\fP(8)\(em Locale 总线机制
.br
\fBsystemd\-logind\fP(8)\(em 登录管理器
.br
\fBsystemd\-logind.service\fP(8)\(em 登录管理器
.br
\fBsystemd\-machine\-id\-commit.service\fP(8)\(em 将临时机器 ID 提交到磁盘
.br
\fBsystemd\-machine\-id\-setup\fP(1)\(em 初始化 /etc/machine\-id 中的机器 ID
.br
\fBsystemd\-machined\fP(8)\(em 虚拟机和容器注册管理器
.br
\fBsystemd\-machined.service\fP(8)\(em 虚拟机和容器注册管理器
.br
\fBsystemd\-makefs\fP(8)\(em 按需创建和增长文件系统
.br
\fBsystemd\-makefs@.service\fP(8)\(em 按需创建和增长文件系统
.br
\fBsystemd\-measure\fP(1)\(em 为启动的统一内核映像预先计算并签署预期的 TPM2 PCR 值
.br
\fBsystemd\-mkswap@.service\fP(8)\(em 按需创建和增长文件系统
.br
\fBsystemd\-modules\-load\fP(8)\(em 在引导时加载内核模块
.br
\fBsystemd\-modules\-load.service\fP(8)\(em 在引导时加载内核模块
.br
\fBsystemd\-mount\fP(1)\(em 建立和销毁瞬时挂载或自动挂载点
.br
\fBsystemd\-network\-generator\fP(8)\(em 从内核命令行生成网络配置
.br
\fBsystemd\-network\-generator.service\fP(8)\(em 从内核命令行生成网络配置
.br
\fBsystemd\-networkd\fP(8)\(em 网络管理器
.br
\fBsystemd\-networkd\-wait\-online\fP(8)\(em 等待网络上线
.br
\fBsystemd\-networkd\-wait\-online.service\fP(8)\(em 等待网络上线
.br
\fBsystemd\-networkd\-wait\-online@.service\fP(8)\(em 等待网络上线
.br
\fBsystemd\-networkd.service\fP(8)\(em 网络管理器
.br
\fBsystemd\-notify\fP(1)\(em 通知服务管理器启动完成和其他守护进程状态变化
.br
\fBsystemd\-nspawn\fP(1)\(em Spawn 轻量级容器中的命令或操作系统
.br
\fBsystemd\-oomd\fP(8)\(em 一个用户空间内存不足的 (OOM) 杀手
.br
\fBsystemd\-oomd.service\fP(8)\(em 一个用户空间内存不足的 (OOM) 杀手
.br
\fBsystemd\-path\fP(1)\(em 列出并查询系统和用户路径
.br
\fBsystemd\-pcrfs\-root.service\fP(8)  \(em Measure boot phase into TPM2 PCR 11,
machine ID and file system identity into PCR 15
.br
\fBsystemd\-pcrfs@.service\fP(8)  \(em Measure boot phase into TPM2 PCR 11,
machine ID and file system identity into PCR 15
.br
\fBsystemd\-pcrmachine.service\fP(8)  \(em Measure boot phase into TPM2 PCR 11,
machine ID and file system identity into PCR 15
.br
\fBsystemd\-pcrphase\fP(8)  \(em Measure boot phase into TPM2 PCR 11, machine ID
and file system identity into PCR 15
.br
\fBsystemd\-pcrphase\-initrd.service\fP(8)  \(em Measure boot phase into TPM2 PCR
11, machine ID and file system identity into PCR 15
.br
\fBsystemd\-pcrphase\-sysinit.service\fP(8)  \(em Measure boot phase into TPM2
PCR 11, machine ID and file system identity into PCR 15
.br
\fBsystemd\-pcrphase.service\fP(8)  \(em Measure boot phase into TPM2 PCR 11,
machine ID and file system identity into PCR 15
.br
\fBsystemd\-portabled\fP(8)\(em 便携式服务管理器
.br
\fBsystemd\-portabled.service\fP(8)\(em 便携式服务管理器
.br
\fBsystemd\-poweroff.service\fP(8)\(em 系统关闭逻辑
.br
\fBsystemd\-pstore\fP(8)\(em 用于归档 pstore 内容的服务
.br
\fBsystemd\-pstore.service\fP(8)\(em 用于归档 pstore 内容的服务
.br
\fBsystemd\-quotacheck\fP(8)\(em 文件系统配额检查器逻辑
.br
\fBsystemd\-quotacheck.service\fP(8)\(em 文件系统配额检查器逻辑
.br
\fBsystemd\-random\-seed\fP(8)\(em 在启动和关闭时加载和保存 OS 系统随机 seed
.br
\fBsystemd\-random\-seed.service\fP(8)\(em 在启动和关闭时加载和保存 OS 系统随机 seed
.br
\fBsystemd\-reboot.service\fP(8)\(em 系统关闭逻辑
.br
\fBsystemd\-remount\-fs\fP(8)\(em 重新挂载根文件系统和内核文件系统
.br
\fBsystemd\-remount\-fs.service\fP(8)\(em 重新挂载根文件系统和内核文件系统
.br
\fBsystemd\-repart\fP(8)\(em 自动增长和添加分区
.br
\fBsystemd\-repart.service\fP(8)\(em 自动增长和添加分区
.br
\fBsystemd\-resolved\fP(8)\(em 网络名称解析管理器
.br
\fBsystemd\-resolved.service\fP(8)\(em 网络名称解析管理器
.br
\fBsystemd\-rfkill\fP(8)\(em 在启动时加载并保存 RF 终止开关状态并更改
.br
\fBsystemd\-rfkill.service\fP(8)\(em 在启动时加载并保存 RF 终止开关状态并更改
.br
\fBsystemd\-rfkill.socket\fP(8)\(em 在启动时加载并保存 RF 终止开关状态并更改
.br
\fBsystemd\-run\fP(1)\(em 在瞬态作用域单元、服务单元或路径、套接字或定时器触发的服务单元中运行程序
.br
\fBsystemd\-run\-generator\fP(8)\(em 调用内核命令行指定命令的生成器作为系统服务
.br
\fBsystemd\-shutdown\fP(8)\(em 系统关闭逻辑
.br
\fBsystemd\-sleep\fP(8)\(em 系统睡眠状态逻辑
.br
\fBsystemd\-sleep.conf\fP(5)\(em 挂起和休眠配置文件
.br
\fBsystemd\-socket\-activate\fP(1)\(em 守护进程的测试套接字激活
.br
\fBsystemd\-socket\-proxyd\fP(8)\(em 双向代理本地套接字到另一个 (可能是远程的) 套接字
.br
\fBsystemd\-stdio\-bridge\fP(1)\(em D\-Bus 代理
.br
\fBsystemd\-stub\fP(7)\(em 一个简单的 UEFI 内核引导存根
.br
\fBsystemd\-suspend\-then\-hibernate.service\fP(8)\(em 系统睡眠状态逻辑
.br
\fBsystemd\-suspend.service\fP(8)\(em 系统睡眠状态逻辑
.br
\fBsystemd\-sysctl\fP(8)\(em 在启动时配置内核参数
.br
\fBsystemd\-sysctl.service\fP(8)\(em 在启动时配置内核参数
.br
\fBsystemd\-sysext\fP(8)\(em 激活系统扩展映像
.br
\fBsystemd\-sysext.service\fP(8)\(em 激活系统扩展映像
.br
\fBsystemd\-system\-update\-generator\fP(8)\(em 用于将引导重定向到离线更新模式的生成器
.br
\fBsystemd\-system.conf\fP(5)\(em 系统和会话服务管理器配置文件
.br
\fBsystemd\-sysupdate\fP(8)\(em 自动更新操作系统或其他资源
.br
\fBsystemd\-sysupdate\-reboot.service\fP(8)\(em 自动更新操作系统或其他资源
.br
\fBsystemd\-sysupdate\-reboot.timer\fP(8)\(em 自动更新操作系统或其他资源
.br
\fBsystemd\-sysupdate.service\fP(8)\(em 自动更新操作系统或其他资源
.br
\fBsystemd\-sysupdate.timer\fP(8)\(em 自动更新操作系统或其他资源
.br
\fBsystemd\-sysusers\fP(8)\(em 分配系统用户和组
.br
\fBsystemd\-sysusers.service\fP(8)\(em 分配系统用户和组
.br
\fBsystemd\-time\-wait\-sync\fP(8)\(em 等到内核时间同步
.br
\fBsystemd\-time\-wait\-sync.service\fP(8)\(em 等到内核时间同步
.br
\fBsystemd\-timedated\fP(8)\(em 时间和日期总线机制
.br
\fBsystemd\-timedated.service\fP(8)\(em 时间和日期总线机制
.br
\fBsystemd\-timesyncd\fP(8)\(em 网络时间同步
.br
\fBsystemd\-timesyncd.service\fP(8)\(em 网络时间同步
.br
\fBsystemd\-tmpfiles\fP(8)\(em 创建、删除和清理易失性和临时文件和目录
.br
\fBsystemd\-tmpfiles\-clean.service\fP(8)\(em 创建、删除和清理易失性和临时文件和目录
.br
\fBsystemd\-tmpfiles\-clean.timer\fP(8)\(em 创建、删除和清理易失性和临时文件和目录
.br
\fBsystemd\-tmpfiles\-setup\-dev.service\fP(8)\(em 创建、删除和清理易失性和临时文件和目录
.br
\fBsystemd\-tmpfiles\-setup.service\fP(8)\(em 创建、删除和清理易失性和临时文件和目录
.br
\fBsystemd\-tty\-ask\-password\-agent\fP(1)\(em 列出或处理挂起的 systemd 密码请求
.br
\fBsystemd\-udev\-settle.service\fP(8)\(em 等待处理所有挂起的 udev 事件
.br
\fBsystemd\-udevd\fP(8)\(em 设备事件管理守护进程
.br
\fBsystemd\-udevd\-control.socket\fP(8)\(em 设备事件管理守护进程
.br
\fBsystemd\-udevd\-kernel.socket\fP(8)\(em 设备事件管理守护进程
.br
\fBsystemd\-udevd.service\fP(8)\(em 设备事件管理守护进程
.br
\fBsystemd\-umount\fP(1)\(em 建立和销毁瞬时挂载或自动挂载点
.br
\fBsystemd\-update\-done\fP(8)\(em 标记 /etc / 和 /var / 完全更新
.br
\fBsystemd\-update\-done.service\fP(8)\(em 标记 /etc / 和 /var / 完全更新
.br
\fBsystemd\-update\-utmp\fP(8)\(em Write audit and utmp updates at bootup,
runlevel changes 和 shutdown
.br
\fBsystemd\-update\-utmp\-runlevel.service\fP(8)\(em Write audit and utmp updates
at bootup, runlevel changes 和 shutdown
.br
\fBsystemd\-update\-utmp.service\fP(8)\(em Write audit and utmp updates at
bootup, runlevel changes 和 shutdown
.br
\fBsystemd\-user\-runtime\-dir\fP(5)\(em 启动用户管理器的系统单位
.br
\fBsystemd\-user\-sessions\fP(8)\(em 开机后允许用户登录，关机时禁止用户登录
.br
\fBsystemd\-user\-sessions.service\fP(8)\(em 开机后允许用户登录，关机时禁止用户登录
.br
\fBsystemd\-user.conf\fP(5)\(em 系统和会话服务管理器配置文件
.br
\fBsystemd\-userdbd\fP(8)\(em JSON User/Group 记录查询 Multiplexer/NSS 兼容性
.br
\fBsystemd\-userdbd.service\fP(8)\(em JSON User/Group 记录查询 Multiplexer/NSS 兼容性
.br
\fBsystemd\-vconsole\-setup\fP(8)\(em 配置虚拟控制台
.br
\fBsystemd\-vconsole\-setup.service\fP(8)\(em 配置虚拟控制台
.br
\fBsystemd\-veritysetup\fP(8)\(em 磁盘真实性保护逻辑
.br
\fBsystemd\-veritysetup\-generator\fP(8)\(em 元生成器，用于受真实性保护的块设备
.br
\fBsystemd\-veritysetup@.service\fP(8)\(em 磁盘真实性保护逻辑
.br
\fBsystemd\-volatile\-root\fP(8)\(em 使根文件系统不稳定
.br
\fBsystemd\-volatile\-root.service\fP(8)\(em 使根文件系统不稳定
.br
\fBsystemd\-xdg\-autostart\-generator\fP(8)\(em User 元生成器，用于 XDG 自动启动文件
.br
\fBsystemd.automount\fP(5)\(em Automount 元配置
.br
\fBsystemd.device\fP(5)\(em Device 元配置
.br
\fBsystemd.directives\fP(7)\(em 配置指令索引
.br
\fBsystemd.dnssd\fP(5)\(em DNS\-SD 配置
.br
\fBsystemd.environment\-generator\fP(7)\(em systemd 环境文件生成器
.br
\fBsystemd.exec\fP(5)\(em 执行环境配置
.br
\fBsystemd.generator\fP(7)\(em systemd 元生成器
.br
\fBsystemd.journal\-fields\fP(7)\(em 特殊期刊字段
.br
\fBsystemd.kill\fP(5)\(em 进程查杀程序配置
.br
\fBsystemd.link\fP(5)\(em 网络设备配置
.br
\fBsystemd.mount\fP(5)\(em 挂载元配置
.br
\fBsystemd.negative\fP(5)\(em DNSSEC 信任锚配置文件
.br
\fBsystemd.net\-naming\-scheme\fP(7)\(em 网络设备命名方案
.br
\fBsystemd.netdev\fP(5)\(em 虚拟网络设备配置
.br
\fBsystemd.network\fP(5)\(em 网络配置
.br
\fBsystemd.nspawn\fP(5)\(em 容器设置
.br
\fBsystemd.offline\-updates\fP(7)\(em 在 systemd 中实现离线更新
.br
\fBsystemd.path\fP(5)\(em 路径元配置
.br
\fBsystemd.positive\fP(5)\(em DNSSEC 信任锚配置文件
.br
\fBsystemd.preset\fP(5)\(em 服务启用预设
.br
\fBsystemd.resource\-control\fP(5)\(em 资源控制元设置
.br
\fBsystemd.scope\fP(5)\(em 作用域元配置
.br
\fBsystemd.service\fP(5)\(em 服务元配置
.br
\fBsystemd.slice\fP(5)\(em Slice 元配置
.br
\fBsystemd.socket\fP(5)\(em Socket 元配置
.br
\fBsystemd.special\fP(7)\(em 特殊系统单位
.br
\fBsystemd.swap\fP(5)\(em 交换元配置
.br
\fBsystemd.syntax\fP(7)\(em systemd 配置文件的一般语法
.br
\fBsystemd.system\-credentials\fP(7)\(em 系统凭据
.br
\fBsystemd.target\fP(5)\(em 目标元配置
.br
\fBsystemd.time\fP(7)\(em 时间和日期规范
.br
\fBsystemd.timer\fP(5)\(em 定时器元配置
.br
\fBsystemd.unit\fP(5)\(em 元配置
.br
\fBsysupdate.d\fP(5)\(em 传输定义文件以进行自动更新
.br
\fBsysusers.d\fP(5)\(em 系统用户和组的声明分配
.br

.SH T
.PP
\fBtimedatectl\fP(1)\(em 控制系统时间日期
.br
\fBtimesyncd.conf\fP(5)\(em 网络时间同步配置文件
.br
\fBtimesyncd.conf.d\fP(5)\(em 网络时间同步配置文件
.br
\fBtmpfiles.d\fP(5)\(em 用于创建、删除和清除易失性和临时文件的配置
.br

.SH U
.PP
\fBudev\fP(7)\(em 动态设备管理
.br
\fBudev.conf\fP(5)\(em 设备事件管理守护进程的配置
.br
\fBudev_device_get_action\fP(3)\(em 查询设备属性
.br
\fBudev_device_get_current_tags_list_entry\fP(3)\(em 检索或设置设备属性
.br
\fBudev_device_get_devlinks_list_entry\fP(3)\(em 检索或设置设备属性
.br
\fBudev_device_get_devnode\fP(3)\(em 查询设备属性
.br
\fBudev_device_get_devnum\fP(3)\(em 查询设备属性
.br
\fBudev_device_get_devpath\fP(3)\(em 查询设备属性
.br
\fBudev_device_get_devtype\fP(3)\(em 查询设备属性
.br
\fBudev_device_get_driver\fP(3)\(em 查询设备属性
.br
\fBudev_device_get_is_initialized\fP(3)\(em 查询设备属性
.br
\fBudev_device_get_parent\fP(3)\(em 查询设备属性
.br
\fBudev_device_get_parent_with_subsystem_devtype\fP(3)\(em 查询设备属性
.br
\fBudev_device_get_properties_list_entry\fP(3)\(em 检索或设置设备属性
.br
\fBudev_device_get_property_value\fP(3)\(em 检索或设置设备属性
.br
\fBudev_device_get_subsystem\fP(3)\(em 查询设备属性
.br
\fBudev_device_get_sysattr_list_entry\fP(3)\(em 检索或设置设备属性
.br
\fBudev_device_get_sysattr_value\fP(3)\(em 检索或设置设备属性
.br
\fBudev_device_get_sysname\fP(3)\(em 查询设备属性
.br
\fBudev_device_get_sysnum\fP(3)\(em 查询设备属性
.br
\fBudev_device_get_syspath\fP(3)\(em 查询设备属性
.br
\fBudev_device_get_tags_list_entry\fP(3)\(em 检索或设置设备属性
.br
\fBudev_device_get_udev\fP(3)\(em 查询设备属性
.br
\fBudev_device_has_current_tag\fP(3)\(em 检索或设置设备属性
.br
\fBudev_device_has_tag\fP(3)\(em 检索或设置设备属性
.br
\fBudev_device_new_from_device_id\fP(3)\(em 创建、获取和释放一个 udev 设备对象
.br
\fBudev_device_new_from_devnum\fP(3)\(em 创建、获取和释放一个 udev 设备对象
.br
\fBudev_device_new_from_environment\fP(3)\(em 创建、获取和释放一个 udev 设备对象
.br
\fBudev_device_new_from_subsystem_sysname\fP(3)\(em 创建、获取和释放一个 udev 设备对象
.br
\fBudev_device_new_from_syspath\fP(3)\(em 创建、获取和释放一个 udev 设备对象
.br
\fBudev_device_ref\fP(3)\(em 创建、获取和释放一个 udev 设备对象
.br
\fBudev_device_set_sysattr_value\fP(3)\(em 检索或设置设备属性
.br
\fBudev_device_unref\fP(3)\(em 创建、获取和释放一个 udev 设备对象
.br
\fBudev_enumerate_add_match_is_initialized\fP(3)\(em 修改过滤器
.br
\fBudev_enumerate_add_match_parent\fP(3)\(em 修改过滤器
.br
\fBudev_enumerate_add_match_property\fP(3)\(em 修改过滤器
.br
\fBudev_enumerate_add_match_subsystem\fP(3)\(em 修改过滤器
.br
\fBudev_enumerate_add_match_sysattr\fP(3)\(em 修改过滤器
.br
\fBudev_enumerate_add_match_sysname\fP(3)\(em 修改过滤器
.br
\fBudev_enumerate_add_match_tag\fP(3)\(em 修改过滤器
.br
\fBudev_enumerate_add_nomatch_subsystem\fP(3)\(em 修改过滤器
.br
\fBudev_enumerate_add_nomatch_sysattr\fP(3)\(em 修改过滤器
.br
\fBudev_enumerate_add_syspath\fP(3)\(em 查询或修改一个 udev 枚举对象
.br
\fBudev_enumerate_get_list_entry\fP(3)\(em 查询或修改一个 udev 枚举对象
.br
\fBudev_enumerate_get_udev\fP(3)\(em 查询或修改一个 udev 枚举对象
.br
\fBudev_enumerate_new\fP(3)\(em 创建、获取和释放一个 udev 枚举对象
.br
\fBudev_enumerate_ref\fP(3)\(em 创建、获取和释放一个 udev 枚举对象
.br
\fBudev_enumerate_scan_devices\fP(3)\(em 查询或修改一个 udev 枚举对象
.br
\fBudev_enumerate_scan_subsystems\fP(3)\(em 查询或修改一个 udev 枚举对象
.br
\fBudev_enumerate_unref\fP(3)\(em 创建、获取和释放一个 udev 枚举对象
.br
\fBudev_list_entry\fP(3)\(em 迭代并访问 udev 列表
.br
\fBudev_list_entry_get_by_name\fP(3)\(em 迭代并访问 udev 列表
.br
\fBudev_list_entry_get_name\fP(3)\(em 迭代并访问 udev 列表
.br
\fBudev_list_entry_get_next\fP(3)\(em 迭代并访问 udev 列表
.br
\fBudev_list_entry_get_value\fP(3)\(em 迭代并访问 udev 列表
.br
\fBudev_monitor_enable_receiving\fP(3)\(em 查询修改设备监听
.br
\fBudev_monitor_filter_add_match_subsystem_devtype\fP(3)\(em 修改过滤器
.br
\fBudev_monitor_filter_add_match_tag\fP(3)\(em 修改过滤器
.br
\fBudev_monitor_filter_remove\fP(3)\(em 修改过滤器
.br
\fBudev_monitor_filter_update\fP(3)\(em 修改过滤器
.br
\fBudev_monitor_get_fd\fP(3)\(em 查询修改设备监听
.br
\fBudev_monitor_get_udev\fP(3)\(em 查询修改设备监听
.br
\fBudev_monitor_new_from_netlink\fP(3)\(em 创建、获取和释放一个 udev 监控对象
.br
\fBudev_monitor_receive_device\fP(3)\(em 查询修改设备监听
.br
\fBudev_monitor_ref\fP(3)\(em 创建、获取和释放一个 udev 监控对象
.br
\fBudev_monitor_set_receive_buffer_size\fP(3)\(em 查询修改设备监听
.br
\fBudev_monitor_unref\fP(3)\(em 创建、获取和释放一个 udev 监控对象
.br
\fBudev_new\fP(3)\(em 创建、获取和释放一个 udev 上下文对象
.br
\fBudev_ref\fP(3)\(em 创建、获取和释放一个 udev 上下文对象
.br
\fBudev_unref\fP(3)\(em 创建、获取和释放一个 udev 上下文对象
.br
\fBudevadm\fP(8)\(em udev 管理工具
.br
\fBukify\fP(1)\(em 将内核和 initrd 合并到签名的统一内核映像中
.br
\fBuser\-runtime\-dir@.service\fP(5)\(em 启动用户管理器的系统单位
.br
\fBuser.conf.d\fP(5)\(em 系统和会话服务管理器配置文件
.br
\fBuser@.service\fP(5)\(em 启动用户管理器的系统单位
.br
\fBuserdbctl\fP(1)\(em 检查用户、组和组成员
.br

.SH V
.PP
\fBvconsole.conf\fP(5)\(em 虚拟控制台的配置文件
.br
\fBveritytab\fP(5)\(em verity 块设备的配置
.br

.SH "SEE ALSO"
.PP
\fBsystemd.directives\fP(7)
.PP
该索引包含 1097 个条目，涉及 376 个单独的手册页 \&。
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
