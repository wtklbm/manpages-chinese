.\" -*- coding: UTF-8 -*-
.\" This man page is Copyright (C) 1999 Claus Fischer.
.\"
.\" %%%LICENSE_START(VERBATIM_ONE_PARA)
.\" Permission is granted to distribute possibly modified copies
.\" of this page provided the header is included verbatim,
.\" and in case of nontrivial modification author and date
.\" of the modification is added to the header.
.\" %%%LICENSE_END
.\"
.\" 990620 - page created - aeb@cwi.nl
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH fifo 7 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
fifo \- 先进先出特殊文件，命名管道
.SH DESCRIPTION
FIFO 特殊文件 (命名管道) 类似于管道，只是它作为文件系统的一部分进行访问。 它可以被多个进程打开用于读或写。 当进程通过 FIFO
交换数据时，内核在内部传递所有数据而不将其写入文件系统。 因此，FIFO 特殊文件在文件系统上没有内容;
文件系统条目仅用作引用点，以便进程可以使用文件系统中的名称访问管道。
.PP
内核为至少由一个进程打开的每个 FIFO 特殊文件维护一个管道对象。 在传递数据之前，FIFO 的两端 (读和写) 必须打开。 通常，打开 FIFO
会阻塞直到另一端也打开。
.PP
一个进程可以在非阻塞模式下打开一个 FIFO。 在这种情况下，即使没有人在写端打开，只读打开也会成功，而只写打开会失败并返回 \fBENXIO\fP
(没有这样的设备或地址)，除非另一端已经打开。
.PP
在 Linux 下，打开一个 FIFO 进行读写，在阻塞和非阻塞模式下都会成功。 POSIX 未定义此行为。 这可用于在没有可用的 readers
时打开 FIFO 进行写入。 使用连接两端以便与自身通信的进程应该非常小心以避免死锁。
.SH NOTES
有关 FIFO 上 I/O 语义的详细信息，请参见 \fBpipe\fP(7)。
.PP
当一个进程试图写入另一端未打开供读取的 FIFO 时，会向该进程发送一个 \fBSIGPIPE\fP 信号。
.PP
FIFO 特殊文件可以由 \fBmkfifo\fP(3) 创建，由 \fIls\~\-l\fP 表示，文件类型为 \[aq] p\[aq]。
.SH "SEE ALSO"
\fBmkfifo\fP(1), \fBopen\fP(2), \fBpipe\fP(2), \fBsigaction\fP(2), \fBsignal\fP(2),
\fBsocketpair\fP(2), \fBmkfifo\fP(3), \fBpipe\fP(7)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
