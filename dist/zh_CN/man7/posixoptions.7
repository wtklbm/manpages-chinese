.\" -*- coding: UTF-8 -*-
.\" Copyright (c) 2003 Andries Brouwer (aeb@cwi.nl)
.\"
.\" SPDX-License-Identifier: GPL-2.0-or-later
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH posixoptions 7 2022\-10\-30 "Linux man\-pages 6.03" 
.SH NAME
posixoptions\-POSIX 标准的可选部分
.SH DESCRIPTION
POSIX 标准 (以下信息来自 POSIX.1\-2001) 描述了兼容系统的一组行为和接口。
但是，许多接口是可选的，并且有特性测试宏可以在编译时测试接口的可用性，而函数
\fBsysconf\fP(3)、\fBfpathconf\fP(3)、\fBpathconf\fP(3)、\fBconfstr\fP(3) 可以在运行时执行此操作。 从
shell 脚本中可以使用 \fBgetconf\fP(1)。 有关详细信息，请参见 \fBsysconf\fP(3)。
.PP
我们给出了 POSIX 缩写的名称、选项、用于查询选项的 \fBsysconf\fP(3) 参数的名称，以及可能非常简短的描述。 在 POSIX
标准本身中可以找到更精确的细节，现在可以在网络上免费访问其版本。
.SS "ADV \- _POSIX_ADVISORY_INFO \- _SC_ADVISORY_INFO"
存在以下咨询函数:
.PP
.nf
.in +4n
\fIposix_fadvise\fP()
\fIposix_fallocate\fP()
\fIposix_memalign\fP()
\fIposix_madvise\fP()
.in
.fi
.SS "AIO \- _POSIX_ASYNCHRONOUS_IO \- _SC_ASYNCHRONOUS_IO"
标头 \fI<aio.h>\fP 存在。 出现以下函数:
.PP
.nf
.in +4n
\fIaio_cancel\fP()
\fIaio_error\fP()
\fIaio_fsync\fP()
\fIaio_read\fP()
\fIaio_return\fP()
\fIaio_suspend\fP()
\fIaio_write\fP()
\fIlio_listio\fP()
.in
.fi
.SS "BAR \- _POSIX_BARRIERS \- _SC_BARRIERS"
此选项暗示 \fB_POSIX_THREADS\fP 和 \fB_POSIX_THREAD_SAFE_FUNCTIONS\fP 选项。 出现以下函数:
.PP
.nf
.in +4n
\fIpthread_barrier_destroy\fP()
\fIpthread_barrier_init\fP()
\fIpthread_barrier_wait\fP()
\fIpthread_barrierattr_destroy\fP()
\fIpthread_barrierattr_init\fP()
.in
.fi
.\" .SS BE
.\" Batch environment.
.\" .SS CD
.\" C development.
.SS "\-\-\- \- POSIX_CHOWN_RESTRICTED"
如果此选项有效 (在 POSIX.1\-2001 下它始终有效)，则只有 root 可以更改文件的所有者，而非 root
只能将文件的组设置为它所属的组之一。 这会影响以下函数
.PP
.nf
.in +4n
\fIchown\fP()
\fIfchown\fP()
.in
.fi
.\" What about lchown() ?
.SS "CS \- _POSIX_CLOCK_SELECTION \- _SC_CLOCK_SELECTION"
此选项暗示 \fB_POSIX_TIMERS\fP 选项。 出现以下函数:
.PP
.nf
.in +4n
\fIpthread_condattr_getclock\fP()
\fIpthread_condattr_setclock\fP()
\fIclock_nanosleep\fP()
.in
.fi
.PP
如果 \fBCLOCK_REALTIME\fP 被函数 \fIclock_settime\fP() 改变，那么这会影响所有设置为绝对时间的定时器。
.SS "CPT \- _POSIX_CPUTIME \- _SC_CPUTIME"
.\" .SS FD
.\" Fortran development
.\" .SS FR
.\" Fortran runtime
支持 \fBCLOCK_PROCESS_CPUTIME_ID\fP 时钟 ID。 对于每个进程，该时钟的初始值为 0。 此选项暗示
\fB_POSIX_TIMERS\fP 选项。 函数 \fIclock_getcpuclockid\fP() 出现了。
.SS "\-\-\- \- _POSIX_FILE_LOCKING \- _SC_FILE_LOCKING"
该选项已被删除。 不在最终 XPG6 中。
.SS "FSC \- _POSIX_FSYNC \- _SC_FSYNC"
函数 \fIfsync\fP() 出现了。
.SS "IP6 \- _POSIX_IPV6 \- _SC_IPV6"
支持 Internet 协议版本 6。
.SS "\-\-\- \- _POSIX_JOB_CONTROL \- _SC_JOB_CONTROL"
如果此选项有效 (因为它始终在 POSIX.1\-2001 下有效)，则系统会实现 POSIX 样式的作业控制，并且存在以下函数:
.PP
.nf
.in +4n
\fIsetpgid\fP()
\fItcdrain\fP()
\fItcflush\fP()
\fItcgetpgrp\fP()
\fItcsendbreak\fP()
\fItcsetattr\fP()
\fItcsetpgrp\fP()
.in
.fi
.SS "MF \- _POSIX_MAPPED_FILES \- _SC_MAPPED_FILES"
支持共享内存。 存在包含文件 \fI<sys/mman.h>\fP。 出现以下函数:
.PP
.nf
.in +4n
\fImmap\fP()
\fImsync\fP()
\fImunmap\fP()
.in
.fi
.SS "ML \- _POSIX_MEMLOCK \- _SC_MEMLOCK"
共享内存可以锁定到核心。 出现以下函数:
.PP
.nf
.in +4n
\fImlockall\fP()
\fImunlockall\fP()
.in
.fi
.SS "MR/MLR \- _POSIX_MEMLOCK_RANGE \- _SC_MEMLOCK_RANGE"
更准确地说，范围可以锁定在核心中。 出现以下函数:
.PP
.nf
.in +4n
\fImlock\fP()
\fImunlock\fP()
.in
.fi
.SS "MPR \- _POSIX_MEMORY_PROTECTION \- _SC_MEMORY_PROTECTION"
函数 \fImprotect\fP() 出现了。
.SS "MSG \- _POSIX_MESSAGE_PASSING \- _SC_MESSAGE_PASSING"
存在包含文件 \fI<mqueue.h>\fP。 出现以下函数:
.PP
.nf
.in +4n
\fImq_close\fP()
\fImq_getattr\fP()
\fImq_notify\fP()
\fImq_open\fP()
\fImq_receive\fP()
\fImq_send\fP()
\fImq_setattr\fP()
\fImq_unlink\fP()
.in
.fi
.SS "MON \- _POSIX_MONOTONIC_CLOCK \- _SC_MONOTONIC_CLOCK"
支持 \fBCLOCK_MONOTONIC\fP。 此选项暗示 \fB_POSIX_TIMERS\fP 选项。 以下函数受到影响:
.PP
.nf
.in +4n
\fIaio_suspend\fP()
\fIclock_getres\fP()
\fIclock_gettime\fP()
\fIclock_settime\fP()
\fItimer_create\fP()
.in
.fi
.SS "\-\-\- \- _POSIX_MULTI_PROCESS \- _SC_MULTI_PROCESS"
.\" .SS MX
.\" IEC 60559 Floating-Point Option.
该选项已被删除。 不在最终 XPG6 中。
.SS "\-\-\- \- _POSIX_NO_TRUNC"
如果此选项有效 (因为它始终在 POSIX.1\-2001 下)，那么长于 \fBNAME_MAX\fP 的路径名组件不会被截断，但会报错。
此属性可能取决于组件的路径前缀。
.SS "PIO \- _POSIX_PRIORITIZED_IO \- _SC_PRIORITIZED_IO"
该选项表示可以为异步 I/O 指定优先级。 这会影响函数
.PP
.nf
.in +4n
\fIaio_read\fP()
\fIaio_write\fP()
.in
.fi
.SS "PS \- _POSIX_PRIORITY_SCHEDULING \- _SC_PRIORITY_SCHEDULING"
存在包含文件 \fI<sched.h>\fP。 出现以下函数:
.PP
.nf
.in +4n
\fIsched_get_priority_max\fP()
\fIsched_get_priority_min\fP()
\fIsched_getparam\fP()
\fIsched_getscheduler\fP()
\fIsched_rr_get_interval\fP()
\fIsched_setparam\fP()
\fIsched_setscheduler\fP()
\fIsched_yield\fP()
.in
.fi
.PP
如果 \fB_POSIX_SPAWN\fP 也有效，则存在以下函数:
.PP
.nf
.in +4n
\fIposix_spawnattr_getschedparam\fP()
\fIposix_spawnattr_getschedpolicy\fP()
\fIposix_spawnattr_setschedparam\fP()
\fIposix_spawnattr_setschedpolicy\fP()
.in
.fi
.SS "RS \- _POSIX_RAW_SOCKETS"
支持原始套接字。 以下函数受到影响:
.PP
.nf
.in +4n
\fIgetsockopt\fP()
\fIsetsockopt\fP()
.in
.fi
.SS "\-\-\- \- _POSIX_READER_WRITER_LOCKS \- _SC_READER_WRITER_LOCKS"
此选项暗示 \fB_POSIX_THREADS\fP 选项。 相反，在 POSIX.1\-2001 下，\fB_POSIX_THREADS\fP 选项暗示了这个选项。
.PP
出现以下函数:
.PP
.in +4n
.nf
\fIpthread_rwlock_destroy\fP()
\fIpthread_rwlock_init\fP()
\fIpthread_rwlock_rdlock\fP()
\fIpthread_rwlock_tryrdlock\fP()
\fIpthread_rwlock_trywrlock\fP()
\fIpthread_rwlock_unlock\fP()
\fIpthread_rwlock_wrlock\fP()
\fIpthread_rwlockattr_destroy\fP()
\fIpthread_rwlockattr_init\fP()
.in
.fi
.SS "RTS \- _POSIX_REALTIME_SIGNALS \- _SC_REALTIME_SIGNALS"
支持实时信号。 出现以下函数:
.PP
.nf
.in +4n
\fIsigqueue\fP()
\fIsigtimedwait\fP()
\fIsigwaitinfo\fP()
.in
.fi
.SS "\-\-\- \- _POSIX_REGEXP \- _SC_REGEXP"
如果此选项有效 (因为它始终在 POSIX.1\-2001 下)，则支持 POSIX 正则表达式并且存在以下函数:
.PP
.nf
.in +4n
\fIregcomp\fP()
\fIregerror\fP()
\fIregexec\fP()
\fIregfree\fP()
.in
.fi
.SS "\-\-\- \- _POSIX_SAVED_IDS \- _SC_SAVED_IDS"
如果此选项有效 (因为它始终在 POSIX.1\-2001 下有效)，则进程具有保存的组用户 ID 和保存的组组 ID。 以下函数受到影响:
.PP
.nf
.in +4n
\fIexec\fP()
\fIkill\fP()
\fIseteuid\fP()
\fIsetegid\fP()
\fIsetgid\fP()
\fIsetuid\fP()
.in
.fi
.\" .SS SD
.\" Software development
.SS "SEM \- _POSIX_SEMAPHORES \- _SC_SEMAPHORES"
存在包含文件 \fI<semaphore.h>\fP。 出现以下函数:
.PP
.nf
.in +4n
\fIsem_close\fP()
\fIsem_destroy\fP()
\fIsem_getvalue\fP()
\fIsem_init\fP()
\fIsem_open\fP()
\fIsem_post\fP()
\fIsem_trywait\fP()
\fIsem_unlink\fP()
\fIsem_wait\fP()
.in
.fi
.SS "SHM \- _POSIX_SHARED_MEMORY_OBJECTS \- _SC_SHARED_MEMORY_OBJECTS"
出现以下函数:
.PP
.nf
.in +4n
\fImmap\fP()
\fImunmap\fP()
\fIshm_open\fP()
\fIshm_unlink\fP()
.in
.fi
.SS "\-\-\- \- _POSIX_SHELL \- _SC_SHELL"
如果此选项有效 (因为它始终在 POSIX.1\-2001 下)，则函数 \fIsystem\fP() 存在。
.SS "SPN \- _POSIX_SPAWN \- _SC_SPAWN"
此选项描述了在难以或不可能使用 \fIfork\fP() 的上下文中支持进程创建，例如，因为不存在 MMU。
.PP
如果 \fB_POSIX_SPAWN\fP 有效，则存在包含文件 \fI<spawn.h>\fP 和以下函数:
.PP
.nf
.in +4n
\fIposix_spawn\fP()
\fIposix_spawn_file_actions_addclose\fP()
\fIposix_spawn_file_actions_adddup2\fP()
\fIposix_spawn_file_actions_addopen\fP()
\fIposix_spawn_file_actions_destroy\fP()
\fIposix_spawn_file_actions_init\fP()
\fIposix_spawnattr_destroy\fP()
\fIposix_spawnattr_getsigdefault\fP()
\fIposix_spawnattr_getflags\fP()
\fIposix_spawnattr_getpgroup\fP()
\fIposix_spawnattr_getsigmask\fP()
\fIposix_spawnattr_init\fP()
\fIposix_spawnattr_setsigdefault\fP()
\fIposix_spawnattr_setflags\fP()
\fIposix_spawnattr_setpgroup\fP()
\fIposix_spawnattr_setsigmask\fP()
\fIposix_spawnp\fP()
.in
.fi
.PP
如果 \fB_POSIX_PRIORITY_SCHEDULING\fP 也有效，则存在以下函数:
.PP
.nf
.in +4n
\fIposix_spawnattr_getschedparam\fP()
\fIposix_spawnattr_getschedpolicy\fP()
\fIposix_spawnattr_setschedparam\fP()
\fIposix_spawnattr_setschedpolicy\fP()
.in
.fi
.SS "SPI \- _POSIX_SPIN_LOCKS \- _SC_SPIN_LOCKS"
此选项暗示 \fB_POSIX_THREADS\fP 和 \fB_POSIX_THREAD_SAFE_FUNCTIONS\fP 选项。 出现以下函数:
.PP
.nf
.in +4n
\fIpthread_spin_destroy\fP()
\fIpthread_spin_init\fP()
\fIpthread_spin_lock\fP()
\fIpthread_spin_trylock\fP()
\fIpthread_spin_unlock\fP()
.in -4n
.fi
.SS "SS \- _POSIX_SPORADIC_SERVER \- _SC_SPORADIC_SERVER"
支持调度策略 \fBSCHED_SPORADIC\fP。 此选项暗示 \fB_POSIX_PRIORITY_SCHEDULING\fP 选项。 以下函数受到影响:
.PP
.nf
.in +4n
\fIsched_setparam\fP()
\fIsched_setscheduler\fP()
.in
.fi
.SS "SIO \- _POSIX_SYNCHRONIZED_IO \- _SC_SYNCHRONIZED_IO"
以下函数受到影响:
.PP
.nf
.in +4n
\fIopen\fP()
\fImsync\fP()
\fIfsync\fP()
\fIfdatasync\fP()
.in
.fi
.SS "TSA \- _POSIX_THREAD_ATTR_STACKADDR \- _SC_THREAD_ATTR_STACKADDR"
以下函数受到影响:
.PP
.nf
.in +4n
\fIpthread_attr_getstack\fP()
\fIpthread_attr_getstackaddr\fP()
\fIpthread_attr_setstack\fP()
\fIpthread_attr_setstackaddr\fP()
.in
.fi
.SS "TSS \- _POSIX_THREAD_ATTR_STACKSIZE \- _SC_THREAD_ATTR_STACKSIZE"
以下函数受到影响:
.PP
.nf
.in +4n
\fIpthread_attr_getstack\fP()
\fIpthread_attr_getstacksize\fP()
\fIpthread_attr_setstack\fP()
\fIpthread_attr_setstacksize\fP()
.in
.fi
.SS "TCT \- _POSIX_THREAD_CPUTIME \- _SC_THREAD_CPUTIME"
支持时钟 ID CLOCK_THREAD_CPUTIME_ID。 此选项暗示 \fB_POSIX_TIMERS\fP 选项。 以下函数受到影响:
.PP
.nf
.in +4n
\fIpthread_getcpuclockid\fP()
\fIclock_getres\fP()
\fIclock_gettime\fP()
\fIclock_settime\fP()
\fItimer_create\fP()
.in
.fi
.SS "TPI \- _POSIX_THREAD_PRIO_INHERIT \- _SC_THREAD_PRIO_INHERIT"
以下函数受到影响:
.PP
.nf
.in +4n
\fIpthread_mutexattr_getprotocol\fP()
\fIpthread_mutexattr_setprotocol\fP()
.in
.fi
.SS "TPP \- _POSIX_THREAD_PRIO_PROTECT \- _SC_THREAD_PRIO_PROTECT"
以下函数受到影响:
.PP
.nf
.in +4n
\fIpthread_mutex_getprioceiling\fP()
\fIpthread_mutex_setprioceiling\fP()
\fIpthread_mutexattr_getprioceiling\fP()
\fIpthread_mutexattr_getprotocol\fP()
\fIpthread_mutexattr_setprioceiling\fP()
\fIpthread_mutexattr_setprotocol\fP()
.in
.fi
.SS "TPS \- _POSIX_THREAD_PRIORITY_SCHEDULING \- _SC_THREAD_PRIORITY_SCHEDULING"
如果此选项生效，则进程内的不同线程可以以不同的优先级或者不同的调度程序运行。 以下函数受到影响:
.PP
.nf
.in +4n
\fIpthread_attr_getinheritsched\fP()
\fIpthread_attr_getschedpolicy\fP()
\fIpthread_attr_getscope\fP()
\fIpthread_attr_setinheritsched\fP()
\fIpthread_attr_setschedpolicy\fP()
\fIpthread_attr_setscope\fP()
\fIpthread_getschedparam\fP()
\fIpthread_setschedparam\fP()
\fIpthread_setschedprio\fP()
.in
.fi
.SS "TSH \- _POSIX_THREAD_PROCESS_SHARED \- _SC_THREAD_PROCESS_SHARED"
以下函数受到影响:
.PP
.nf
.in +4n
\fIpthread_barrierattr_getpshared\fP()
\fIpthread_barrierattr_setpshared\fP()
\fIpthread_condattr_getpshared\fP()
\fIpthread_condattr_setpshared\fP()
\fIpthread_mutexattr_getpshared\fP()
\fIpthread_mutexattr_setpshared\fP()
\fIpthread_rwlockattr_getpshared\fP()
\fIpthread_rwlockattr_setpshared\fP()
.in
.fi
.SS "TSF \- _POSIX_THREAD_SAFE_FUNCTIONS \- _SC_THREAD_SAFE_FUNCTIONS"
以下函数受到影响:
.PP
.nf
.in +4n
\fIreaddir_r\fP()
\fIgetgrgid_r\fP()
\fIgetgrnam_r\fP()
\fIgetpwnam_r\fP()
\fIgetpwuid_r\fP()
\fIflockfile\fP()
\fIftrylockfile\fP()
\fIfunlockfile\fP()
\fIgetc_unlocked\fP()
\fIgetchar_unlocked\fP()
\fIputc_unlocked\fP()
\fIputchar_unlocked\fP()
\fIrand_r\fP()
\fIstrerror_r\fP()
\fIstrtok_r\fP()
\fIasctime_r\fP()
\fIctime_r\fP()
\fIgmtime_r\fP()
\fIlocaltime_r\fP()
.in
.fi
.SS "TSP \- _POSIX_THREAD_SPORADIC_SERVER \- _SC_THREAD_SPORADIC_SERVER"
此选项暗示 \fB_POSIX_THREAD_PRIORITY_SCHEDULING\fP 选项。 以下函数受到影响:
.PP
.nf
.in +4n
\fIsched_getparam\fP()
\fIsched_setparam\fP()
\fIsched_setscheduler\fP()
.in
.fi
.SS "THR \- _POSIX_THREADS \- _SC_THREADS"
提供对 POSIX 线程的基本支持。 出现以下函数:
.PP
.nf
.in +4n
\fIpthread_atfork\fP()
\fIpthread_attr_destroy\fP()
\fIpthread_attr_getdetachstate\fP()
\fIpthread_attr_getschedparam\fP()
\fIpthread_attr_init\fP()
\fIpthread_attr_setdetachstate\fP()
\fIpthread_attr_setschedparam\fP()
\fIpthread_cancel\fP()
\fIpthread_cleanup_push\fP()
\fIpthread_cleanup_pop\fP()
\fIpthread_cond_broadcast\fP()
\fIpthread_cond_destroy\fP()
\fIpthread_cond_init\fP()
\fIpthread_cond_signal\fP()
\fIpthread_cond_timedwait\fP()
\fIpthread_cond_wait\fP()
\fIpthread_condattr_destroy\fP()
\fIpthread_condattr_init\fP()
\fIpthread_create\fP()
\fIpthread_detach\fP()
\fIpthread_equal\fP()
\fIpthread_exit\fP()
\fIpthread_getspecific\fP()
\fIpthread_join\fP()
\fIpthread_key_create\fP()
\fIpthread_key_delete\fP()
\fIpthread_mutex_destroy\fP()
\fIpthread_mutex_init\fP()
\fIpthread_mutex_lock\fP()
\fIpthread_mutex_trylock\fP()
\fIpthread_mutex_unlock\fP()
\fIpthread_mutexattr_destroy\fP()
\fIpthread_mutexattr_init\fP()
\fIpthread_once\fP()
\fIpthread_rwlock_destroy\fP()
\fIpthread_rwlock_init\fP()
\fIpthread_rwlock_rdlock\fP()
\fIpthread_rwlock_tryrdlock\fP()
\fIpthread_rwlock_trywrlock\fP()
\fIpthread_rwlock_unlock\fP()
\fIpthread_rwlock_wrlock\fP()
\fIpthread_rwlockattr_destroy\fP()
\fIpthread_rwlockattr_init\fP()
\fIpthread_self\fP()
\fIpthread_setcancelstate\fP()
\fIpthread_setcanceltype\fP()
\fIpthread_setspecific\fP()
\fIpthread_testcancel\fP()
.in
.fi
.SS "TMO \- _POSIX_TIMEOUTS \- _SC_TIMEOUTS"
出现以下函数:
.PP
.nf
.in +4n
\fImq_timedreceive\fP()
\fImq_timedsend\fP()
\fIpthread_mutex_timedlock\fP()
\fIpthread_rwlock_timedrdlock\fP()
\fIpthread_rwlock_timedwrlock\fP()
\fIsem_timedwait\fP()
\fIposix_trace_timedgetnext_event\fP()
.in
.fi
.SS "TMR \- _POSIX_TIMERS \- _SC_TIMERS"
出现以下函数:
.PP
.nf
.in +4n
\fIclock_getres\fP()
\fIclock_gettime\fP()
\fIclock_settime\fP()
\fInanosleep\fP()
\fItimer_create\fP()
\fItimer_delete\fP()
\fItimer_gettime\fP()
\fItimer_getoverrun\fP()
\fItimer_settime\fP()
.in
.fi
.SS "TRC \- _POSIX_TRACE \- _SC_TRACE"
POSIX 跟踪可用。 出现以下函数:
.PP
.nf
.in +4n
\fIposix_trace_attr_destroy\fP()
\fIposix_trace_attr_getclockres\fP()
\fIposix_trace_attr_getcreatetime\fP()
\fIposix_trace_attr_getgenversion\fP()
\fIposix_trace_attr_getmaxdatasize\fP()
\fIposix_trace_attr_getmaxsystemeventsize\fP()
\fIposix_trace_attr_getmaxusereventsize\fP()
\fIposix_trace_attr_getname\fP()
\fIposix_trace_attr_getstreamfullpolicy\fP()
\fIposix_trace_attr_getstreamsize\fP()
\fIposix_trace_attr_init\fP()
\fIposix_trace_attr_setmaxdatasize\fP()
\fIposix_trace_attr_setname\fP()
\fIposix_trace_attr_setstreamsize\fP()
\fIposix_trace_attr_setstreamfullpolicy\fP()
\fIposix_trace_clear\fP()
\fIposix_trace_create\fP()
\fIposix_trace_event\fP()
\fIposix_trace_eventid_equal\fP()
\fIposix_trace_eventid_get_name\fP()
\fIposix_trace_eventid_open\fP()
\fIposix_trace_eventtypelist_getnext_id\fP()
\fIposix_trace_eventtypelist_rewind\fP()
\fIposix_trace_flush\fP()
\fIposix_trace_get_attr\fP()
\fIposix_trace_get_status\fP()
\fIposix_trace_getnext_event\fP()
\fIposix_trace_shutdown\fP()
\fIposix_trace_start\fP()
\fIposix_trace_stop\fP()
\fIposix_trace_trygetnext_event\fP()
.in
.fi
.SS "TEF \- _POSIX_TRACE_EVENT_FILTER \- _SC_TRACE_EVENT_FILTER"
此选项暗示 \fB_POSIX_TRACE\fP 选项。 出现以下函数:
.PP
.nf
.in +4n
\fIposix_trace_eventset_add\fP()
\fIposix_trace_eventset_del\fP()
\fIposix_trace_eventset_empty\fP()
\fIposix_trace_eventset_fill\fP()
\fIposix_trace_eventset_ismember\fP()
\fIposix_trace_get_filter\fP()
\fIposix_trace_set_filter\fP()
\fIposix_trace_trid_eventid_open\fP()
.in
.fi
.SS "TRI \- _POSIX_TRACE_INHERIT \- _SC_TRACE_INHERIT"
支持跟踪被跟踪进程的子进程。 此选项暗示 \fB_POSIX_TRACE\fP 选项。 出现以下函数:
.PP
.nf
.in +4n
\fIposix_trace_attr_getinherited\fP()
\fIposix_trace_attr_setinherited\fP()
.in
.fi
.SS "TRL \- _POSIX_TRACE_LOG \- _SC_TRACE_LOG"
此选项暗示 \fB_POSIX_TRACE\fP 选项。 出现以下函数:
.PP
.nf
.in +4n
\fIposix_trace_attr_getlogfullpolicy\fP()
\fIposix_trace_attr_getlogsize\fP()
\fIposix_trace_attr_setlogfullpolicy\fP()
\fIposix_trace_attr_setlogsize\fP()
\fIposix_trace_close\fP()
\fIposix_trace_create_withlog\fP()
\fIposix_trace_open\fP()
\fIposix_trace_rewind\fP()
.in
.fi
.SS "TYM \- _POSIX_TYPED_MEMORY_OBJECTS \- _SC_TYPED_MEMORY_OBJECT"
出现以下函数:
.PP
.nf
.in +4n
\fIposix_mem_offset\fP()
\fIposix_typed_mem_get_info\fP()
\fIposix_typed_mem_open\fP()
.in
.fi
.SS "\-\-\- \- _POSIX_VDISABLE"
始终存在 (可能为 0)。 用于设置可更改的特殊控制字符以指示它已禁用的值。
.SH "X/OPEN SYSTEM INTERFACE EXTENSIONS"
.SS "XSI \- _XOPEN_CRYPT \- _SC_XOPEN_CRYPT"
出现以下函数:
.PP
.nf
.in +4n
\fIcrypt\fP()
\fIencrypt\fP()
\fIsetkey\fP()
.fi
.SS "XSI \- _XOPEN_REALTIME \- _SC_XOPEN_REALTIME"
此选项意味着以下选项:
.PP
.PD 0
.TP 
\fB_POSIX_ASYNCHRONOUS_IO\fP==\fB200112L\fP
.TP 
\fB_POSIX_FSYNC\fP
.TP 
\fB_POSIX_MAPPED_FILES\fP
.TP 
\fB_POSIX_MEMLOCK\fP==\fB200112L\fP
.TP 
\fB_POSIX_MEMLOCK_RANGE\fP==\fB200112L\fP
.TP 
\fB_POSIX_MEMORY_PROTECTION\fP
.TP 
\fB_POSIX_MESSAGE_PASSING\fP==\fB200112L\fP
.TP 
\fB_POSIX_PRIORITIZED_IO\fP
.TP 
\fB_POSIX_PRIORITY_SCHEDULING\fP==\fB200112L\fP
.TP 
\fB_POSIX_REALTIME_SIGNALS\fP==\fB200112L\fP
.TP 
\fB_POSIX_SEMAPHORES\fP==\fB200112L\fP
.TP 
\fB_POSIX_SHARED_MEMORY_OBJECTS\fP==\fB200112L\fP
.TP 
\fB_POSIX_SYNCHRONIZED_IO\fP==\fB200112L\fP
.TP 
\fB_POSIX_TIMERS\fP==\fB200112L\fP
.PD
.\"
.SS "ADV \- \-\-\- \- \-\-\-"
Advanced Realtime 选项组意味着以下选项都定义为 200112L:
.PP
.PD 0
.TP 
\fB_POSIX_ADVISORY_INFO\fP
.TP 
\fB_POSIX_CLOCK_SELECTION\fP
(暗示 \fB_POSIX_TIMERS\fP)
.TP 
\fB_POSIX_CPUTIME\fP
(暗示 \fB_POSIX_TIMERS\fP)
.TP 
\fB_POSIX_MONOTONIC_CLOCK\fP
(暗示 \fB_POSIX_TIMERS\fP)
.TP 
\fB_POSIX_SPAWN\fP
.TP 
\fB_POSIX_SPORADIC_SERVER\fP
(暗示 \fB_POSIX_PRIORITY_SCHEDULING\fP)
.TP 
\fB_POSIX_TIMEOUTS\fP
.TP 
\fB_POSIX_TYPED_MEMORY_OBJECTS\fP
.PD
.\"
.SS "XSI \- _XOPEN_REALTIME_THREADS \- _SC_XOPEN_REALTIME_THREADS"
该选项意味着以下选项都定义到 200112L:
.PP
.PD 0
.TP 
\fB_POSIX_THREAD_PRIO_INHERIT\fP
.TP 
\fB_POSIX_THREAD_PRIO_PROTECT\fP
.TP 
\fB_POSIX_THREAD_PRIORITY_SCHEDULING\fP
.PD
.SS "ADVANCED REALTIME THREADS \- \-\-\- \- \-\-\-"
该选项意味着以下选项都定义到 200112L:
.PP
.PD 0
.TP 
\fB_POSIX_BARRIERS\fP
(暗示 \fB_POSIX_THREADS\fP，\fB_POSIX_THREAD_SAFE_FUNCTIONS\fP)
.TP 
\fB_POSIX_SPIN_LOCKS\fP
(暗示 \fB_POSIX_THREADS\fP，\fB_POSIX_THREAD_SAFE_FUNCTIONS\fP)
.TP 
\fB_POSIX_THREAD_CPUTIME\fP
(暗示 \fB_POSIX_TIMERS\fP)
.TP 
\fB_POSIX_THREAD_SPORADIC_SERVER\fP
(暗示 \fB_POSIX_THREAD_PRIORITY_SCHEDULING\fP)
.PD
.\"
.SS "TRACING \- \-\-\- \- \-\-\-"
该选项意味着以下选项都定义到 200112L:
.PP
.PD 0
.TP 
\fB_POSIX_TRACE\fP
.TP 
\fB_POSIX_TRACE_EVENT_FILTER\fP
.TP 
\fB_POSIX_TRACE_LOG\fP
.TP 
\fB_POSIX_TRACE_INHERIT\fP
.PD
.SS "STREAMS \- _XOPEN_STREAMS \- _SC_XOPEN_STREAMS"
出现以下函数:
.PP
.nf
.in +4n
\fIfattach\fP()
\fIfdetach\fP()
\fIgetmsg\fP()
\fIgetpmsg\fP()
\fIioctl\fP()
\fIisastream\fP()
\fIputmsg\fP()
\fIputpmsg\fP()
.in
.fi
.SS "XSI \- _XOPEN_LEGACY \- _SC_XOPEN_LEGACY"
遗留选项组中包含的函数以前是强制性的，但现在在此版本中是可选的。 出现以下函数:
.PP
.nf
.in +4n
\fIbcmp\fP()
\fIbcopy\fP()
\fIbzero\fP()
\fIecvt\fP()
\fIfcvt\fP()
\fIftime\fP()
\fIgcvt\fP()
\fIgetwd\fP()
\fIindex\fP()
\fImktemp\fP()
\fIrindex\fP()
\fIutimes\fP()
\fIwcswcs\fP()
.in
.fi
.SS "XSI \- _XOPEN_UNIX \- _SC_XOPEN_UNIX"
出现以下函数:
.PP
.nf
.in +4n
\fImmap\fP()
\fImunmap\fP()
\fImsync\fP()
.in
.fi
.PP
此选项意味着以下选项:
.PP
.PD 0
.TP 
\fB_POSIX_FSYNC\fP
.TP 
\fB_POSIX_MAPPED_FILES\fP
.TP 
\fB_POSIX_MEMORY_PROTECTION\fP
.TP 
\fB_POSIX_THREAD_ATTR_STACKADDR\fP
.TP 
\fB_POSIX_THREAD_ATTR_STACKSIZE\fP
.TP 
\fB_POSIX_THREAD_PROCESS_SHARED\fP
.TP 
\fB_POSIX_THREAD_SAFE_FUNCTIONS\fP
.TP 
\fB_POSIX_THREADS\fP
.PD
.PP
此选项可能暗示 XSI 选项组中的以下选项:
.PP
.PD 0
.TP 
Encryption (\fB_XOPEN_CRYPT\fP)
.TP 
Realtime (\fB_XOPEN_REALTIME\fP)
.TP 
Advanced Realtime (\fBADB\fP)
.TP 
Realtime Threads (\fB_XOPEN_REALTIME_THREADS\fP)
.TP 
Advanced Realtime Threads (\fBADVANCED REALTIME THREADS\fP)
.TP 
Tracing (\fBTRACING\fP)
.TP 
XSI Streams (\fBSTREAMS\fP)
.TP 
Legacy (\fB_XOPEN_LEGACY\fP)
.PD
.SH "SEE ALSO"
\fBsysconf\fP(3), \fBstandards\fP(7)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
