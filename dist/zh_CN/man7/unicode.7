.\" -*- coding: UTF-8 -*-
.\" Copyright (C) Markus Kuhn, 1995, 2001
.\"
.\" SPDX-License-Identifier: GPL-2.0-or-later
.\"
.\" 1995-11-26  Markus Kuhn <mskuhn@cip.informatik.uni-erlangen.de>
.\"      First version written
.\" 2001-05-11  Markus Kuhn <mgk25@cl.cam.ac.uk>
.\"      Update
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH unicode 7 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
unicode\-\- 通用字符集
.SH DESCRIPTION
国际标准 ISO 10646 定义了通用字符集 (UCS)。 UCS 包含所有其他字符集标准的所有字符。 它还保证 "round\-trip
compatibility"; 换句话说，可以构建转换表，以便在字符串从任何其他编码转换为 UCS 并返回时不会丢失任何信息。
.PP
UCS 包含代表几乎所有已知语言所需的字符。
这不仅包括拉丁文、希腊文、西里尔文、希伯来文、阿拉伯文、亚美尼亚文和格鲁吉亚文，还包括中文、日文和韩文汉表意文字以及平假名、片假名、韩文、天城文、孟加拉文、古尔穆希文、古吉拉特文、奥里亚语、泰米尔语、泰卢固语、卡纳达语、马拉雅拉姆语、泰语、老挝语、高棉语、Bopomofo、藏语、符文、埃塞俄比亚语、加拿大音节、切诺基语、蒙古语、欧甘语、缅甸语、僧伽罗语、塔纳语、彝语等。
对于尚未涵盖的脚本，关于如何最好地对它们进行编码以供计算机使用的研究仍在进行中，最终将添加它们。
这最终可能不仅包括象形文字和各种具有历史意义的印欧语系语言，甚至还包括一些选定的艺术文字，例如 Tengwar、Cirth 和 Klingon。 UCS
还涵盖了大量的图形、印刷、数学和科学符号，包括由 TeX、Postscript、APL、MS\-DOS、MS\-Windows、Macintosh、OCR
字体以及许多文字处理和出版系统提供的符号，并且正在添加更多。
.PP
UCS 标准 (ISO 10646) 描述了一个 31 位字符集架构，由 128 个 24 位 \fIgroups\fP 组成，每个 \fIgroups\fP 分为
256 个 16 位 \fIplanes\fP，由 256 个 8 位 \fIrows\fP 和 256 个 \fIcolumn\fP 位置组成，每个字符一个。 标准的第
1 部分 (ISO 10646\-1) 定义了前 65534 个代码位置 (0x0000 到 0xfffd)，它们形成 \fIBasic Multilingual Plane\fP (BMP)，即组 0 中的平面 0。 标准的第 2 部分 (ISO 10646\-2) 在 0x10000 到
0x10ffff 范围内的几个 \fIsupplementary planes\fP 中将字符添加到 BMP 之外的组 0。 没有计划将 0x10ffff
以外的字符添加到标准中，因此在整个代码空间中，只有一小部分组 0 将在可预见的 future 中实际使用。 BMP
包含在常用的其他字符集中找到的所有字符。 ISO 10646\-2
增加的补充平面仅涵盖特殊科学、词典印刷、出版行业、更高级别协议和爱好者需求的更多奇特字符。
.PP
每个 UCS 字符作为 2 字节字的表示称为 UCS\-2 形式 (仅适用于 BMP 字符)，而 UCS\-4 是每个字符的 4 字节字表示。
此外，还有两种编码形式 UTF\-8 用于向后兼容 ASCII 处理软件，UTF\-16 用于向后兼容 UCS\-2 软件对非 BMP 字符的处理，直至
0x10ffff。
.PP
UCS 字符 0x0000 到 0x007f 与经典 US\-ASCII 字符集的字符相同，0x0000 到 0x00ff 范围内的字符与 ISO
8859\-1 (Latin\-1) 中的字符相同。
.SS "Combining characters"
UCS 中的一些代码点已分配给 \fIcombining characters\fP。 这些类似于打字机上的非间距重音键。 组合字符只是为前一个字符添加重音。
最重要的重音字符在 UCS 中有自己的代码，但是，组合字符机制允许我们为任何字符添加重音和其他变音符号。 组合字符总是跟在它们修饰的字符后面。
例如，德语字符 Umlaut\-A (`带有分音符的拉丁文大写字母 A`) 可以由预组合的 UCS 代码 0x00c4 表示，或者作为一个普通的
"Latin capital letter A" 后跟一个 "combining diaeresis" 的组合: 0x0041 0x0308。
.PP
组合字符对于泰文字体编码或数学排版以及国际音标的用户来说是必不可少的。
.SS "Implementation levels"
由于并非所有系统都应支持组合字符等高级机制，因此 ISO 10646\-1 指定了 UCS 的以下三个 \fIimplementation levels\fP:
.TP  0.9i
Level 1
不支持组合字符和 Hangul Jamo (韩文字体的一种变体编码，其中 Hangul 音节字形被编码为三元组或一对 vowel/consonant
代码)。
.TP 
Level 2
除了级别 1 之外，现在还允许在某些必不可少的语言中使用组合字符 (例如，泰语、老挝语、希伯来语、阿拉伯语、天城文、马拉雅拉姆语)。
.TP 
Level 3
支持所有 UCS 字符。
.PP
如 ISO 10646\-1:2000 中所述，Unicode 联盟发布的 Unicode 3.0 标准完全包含实现级别 3 的 UCS 基本多语言平面。
Unicode 3.1 添加了 ISO 10646\-2 的补充平面。 Unicode 联盟发布的 Unicode
标准和技术报告提供了许多关于各种字符的语义和推荐用法的附加信息。 它们为编辑、排序、比较、规范化、转换和显示 Unicode 字符串提供指南和算法。
.SS "Unicode under Linux"
在 GNU/Linux 下，C 类型 \fIwchar_t\fP 是一个带符号的 32 位整数类型。 它的值始终由 C 库解释为 UCS 代码值
(在所有区域设置中)，这是 GNU C 库通过定义 ISO C99 标准中指定的常量 \fB__STDC_ISO_10646__\fP
向应用程序发出信号的约定。
.PP
UCS/Unicode 可以像 ASCII 一样用于 input/output 流、最终通信、明文文件、文件名和环境变量中的 ASCII 兼容
UTF\-8 多字节编码。 要向所有应用程序发出使用 UTF\-8 作为字符编码的信号，必须通过环境变量选择合适的 \fIlocale\fP
(例如，"LANG=en_GB.UTF\-8")。
.PP
\fBnl_langinfo(CODESET)\fP 函数返回所选编码的名称。 \fBwctomb\fP(3)、\fBmbsrtowcs\fP(3)
等库函数可以用来将内部的 \fIwchar_t\fP 字符和字符串转换为系统字符编码并返回，\fBwcwidth\fP(3) 表示输出一个字符 (0\[en]2)
游标前进了多少个位置。
.SS "Private Use Areas (PUA)"
.\" commit 9d85025b0418163fae079c9ba8f8445212de8568
在 Basic Multilingual Plane 中，0xe000 到 0xf8ff 范围永远不会被标准分配给任何字符，并保留供 private
使用。 对于 Linux 社区，此专用区域已进一步细分为 0xe000 至 0xefff 范围，可由任何最终用户单独使用，以及 0xf000 至
0xf8ff 范围内的 Linux 区域，其中所有 Linux 用户协调扩展。 分配给 Linux 区域的字符的注册表由 LANANA
维护，注册表本身在 Linux 内核源代码中是 \fIDocumentation/admin\-guide/unicode.rst\fP (或 Linux
4.10 之前的 \fIDocumentation/unicode.txt\fP)。
.PP
另外两个平面保留供 private 使用，平面 15 (补充 private 使用区域 \- A，范围 0xf0000 到 0xffffd) 和平面 16
(补充 private 使用区域 \- B，范围 0x100000 到 0x10fffd)。
.SS Literature
.IP \[bu] 3
信息技术 \[em] 通用多八位字节编码字符集 (UCS)\[em] 第 1 部分: 体系结构和基本多语言平面。 国际标准 ISO/IEC
10646\-1，国际标准化组织，日内瓦，2000 年。
.IP
这是 UCS 的官方规范。 可从
.UR http://www.iso.ch/
.UE .
.IP \[bu]
Unicode 标准，版本 3.0。 Unicode 联盟，Addison\-Wesley，雷丁，马萨诸塞州，2000 年，ISBN
0\-201\-61633\-5。
.IP \[bu]
S.\& 哈比森，G.\& 斯蒂尔。C: 引用手册。第四版，Prentice Hall，Englewood Cliffs，1995 年，ISBN
0\-13\-326224\-3。
.IP
一本关于 C 编程语言的好书。 第四版涵盖了 ISO C90 标准的 1994 修正案 1，其中增加了大量新的 C
库函数来处理宽字符和多字节字符编码，但还没有涵盖 ISO C99，进一步改进了宽字符和多字节字符的支持.
.IP \[bu]
Unicode 技术报告。
.RS
.UR http://www.unicode.org\:/reports/
.UE
.RE
.IP \[bu]
Markus Kuhn: UTF\-8 和 UNIX/Linux 的 Unicode 常见问题解答。
.RS
.UR http://www.cl.cam.ac.uk\:/\[ti]mgk25\:/unicode.html
.UE
.RE
.IP \[bu]
Bruno Haible: Unicode HOWTO.
.RS
.UR http://www.tldp.org\:/HOWTO\:/Unicode\-HOWTO.html
.UE
.RE
.\" .SH AUTHOR
.\" Markus Kuhn <mgk25@cl.cam.ac.uk>
.SH "SEE ALSO"
\fBlocale\fP(1), \fBsetlocale\fP(3), \fBcharsets\fP(7), \fButf\-8\fP(7)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
