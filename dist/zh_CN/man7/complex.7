.\" -*- coding: UTF-8 -*-
.\" Copyright 2002 Walter Harms (walter.harms@informatik.uni-oldenburg.de)
.\"
.\" SPDX-License-Identifier: GPL-1.0-or-later
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH complex 7 2022\-10\-30 "Linux man\-pages 6.03" 
.SH NAME
复杂 \- 复杂数学基础
.SH SYNOPSIS
.nf
\fB#include <complex.h>\fP
.fi
.SH DESCRIPTION
复数是 z=a+b*i 形式的数，其中 a 和 b 是实数并且 i= sqrt(\-1)，因此 i*i= \-1。
.PP
还有其他方法可以表示该数字。 实数对 (a,b) 可以看作是平面中的一个点，由 X 和 Y 坐标给出。 同样的点也可以通过给定一对实数 (r,phi)
来描述，其中 r 是到原点 O 的距离，phi 是 X 轴和线 Oz 之间的角度。 现在 z=r*exp (i*phi)=r*(cos
(phi)+i*sin (phi))。
.PP
基本操作在 z=a+b*i 和 w=c+d*i 上定义为:
.TP 
\fBaddition: z+w = (a+c) + (b+d)*i\fP
.TP 
\fBmultiplication: z*w = (a*c \- b*d) + (a*d + b*c)*i\fP
.TP 
\fBdivision: z/w = ((a*c + b*d)/(c*c + d*d)) + ((b*c \- a*d)/(c*c + d*d))*i\fP
.PP
几乎所有的数学函数都有复数对应，但也有一些只有复数的函数。
.SH EXAMPLES
如果您的 C 编译器支持 C99 标准，则它可以处理复数。 与 \fI\-lm\fP 链接。 虚数元用 I 表示。
.PP
.EX
/* check that exp(i * pi) == \-1 */
#include <math.h>        /* for atan */
#include <stdio.h>
#include <complex.h>

int
main(void)
{
    双圆周率 = 4 * atan(1.0);
    双复数 z= cexp(I * pi);
    printf("%f + %f * i\en", creal(z), cimag(z));
}
.EE
.SH "SEE ALSO"
\fBcabs\fP(3), \fBcacos\fP(3), \fBcacosh\fP(3), \fBcarg\fP(3), \fBcasin\fP(3),
\fBcasinh\fP(3), \fBcatan\fP(3), \fBcatanh\fP(3), \fBccos\fP(3), \fBccosh\fP(3),
\fBcerf\fP(3), \fBcexp\fP(3), \fBcexp2\fP(3), \fBcimag\fP(3), \fBclog\fP(3), \fBclog10\fP(3),
\fBclog2\fP(3), \fBconj\fP(3), \fBcpow\fP(3), \fBcproj\fP(3), \fBcreal\fP(3), \fBcsin\fP(3),
\fBcsinh\fP(3), \fBcsqrt\fP(3), \fBctan\fP(3), \fBctanh\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
