.\" -*- coding: UTF-8 -*-
.\" Copyright (C) 2018, Stefan Hajnoczi <stefanha@redhat.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH vsock 7 2022\-10\-30 "Linux man\-pages 6.03" 
.SH NAME
vsock\-Linux VSOCK 地址系列
.SH SYNOPSIS
.nf
\fB#include <sys/socket.h>\fP
\fB#include <linux/vm_sockets.h>\fP
.PP
\fIstream_socket\fP\fB = socket(AF_VSOCK, SOCK_STREAM, 0);\fP
\fIdatagram_socket\fP\fB = socket(AF_VSOCK, SOCK_DGRAM, 0);\fP
.fi
.SH DESCRIPTION
VSOCK 地址系列有助于虚拟机和它们运行的主机之间的通信。 此地址系列由需要独立于虚拟机网络配置的通信通道的来宾代理和管理程序服务使用。
.PP
有效的套接字类型是 \fBSOCK_STREAM\fP 和 \fBSOCK_DGRAM\fP。 \fBSOCK_STREAM\fP
提供面向连接的字节流，并保证按顺序交付。 \fBSOCK_DGRAM\fP 提供无连接数据报包服务，具有尽力传递和尽力排序。
这些套接字类型的可用性取决于底层管理程序。
.PP
创建一个新套接字
.PP
.in +4n
.EX
socket(AF_VSOCK, socket_type, 0);
.EE
.in
.PP
当一个进程想要建立一个连接时，它调用 \fBconnect\fP(2) 给定的目标套接字地址。 如果未绑定，套接字将自动绑定到空闲端口。
.PP
进程可以通过首先使用 \fBbind\fP(2) 绑定到套接字地址然后调用 \fBlisten\fP(2) 来侦听传入连接。
.PP
使用 \fBsend\fP(2) 或 \fBwrite\fP(2) 系列系统调用传输数据，使用 \fBrecv\fP(2) 或 \fBread\fP(2)
系列系统调用接收数据。
.SS "Address format"
套接字地址定义为 32 位上下文标识符 (CID) 和 32 位端口号的组合。 CID 标识源或目标，即虚拟机或主机。
端口号区分单台机器上运行的多个服务。
.PP
.in +4n
.EX
struct sockaddr_vm {
    sa_family_t    svm_family;    /* Address family: AF_VSOCK */
    unsigned short svm_reserved1;
    unsigned int   svm_port;      /* Port # in host byte order */
    unsigned int   svm_cid;       /* Address in host byte order */
    unsigned char  svm_zero[sizeof(struct sockaddr) \-
                            sizeof(sa_family_t) \-
                            sizeof(unsigned short) \-
                            sizeof(unsigned int) \-
                            大小 (无符号整数) ];
};
.EE
.in
.PP
\fIsvm_family\fP 始终设置为 \fBAF_VSOCK\fP。 \fIsvm_reserved1\fP 始终设置为 0。 \fIsvm_port\fP
包含主机字节顺序的端口号。 1024 以下的端口号称为 \fIprivileged ports\fP。 只有具有
\fBCAP_NET_BIND_SERVICE\fP 能力的进程才可以 \fBbind\fP(2) 到这些端口号。 \fIsvm_zero\fP 必须用零填充。
.PP
有几个特殊地址: \fBVMADDR_CID_ANY\fP (\-1U) 表示任意地址绑定; \fBVMADDR_CID_HYPERVISOR\fP (0)
保留给管理程序内置的服务; \fBVMADDR_CID_LOCAL\fP (1) 为本地通讯 (loopback) 的熟知地址;
\fBVMADDR_CID_HOST\fP (2) 是主机的知名地址。
.PP
特殊常量 \fBVMADDR_PORT_ANY\fP (\-1U) 表示绑定任意端口号。
.SS "Live migration"
套接字受虚拟机实时迁移的影响。 当虚拟机迁移到新主机时，已连接的 \fBSOCK_STREAM\fP 套接字会断开连接。
发生这种情况时，应用程序必须重新连接。
.PP
如果旧 CID 在新主机上不可用，则本地 CID 可能会在实时迁移中发生变化。 绑定的套接字会自动更新为新的 CID。
.SS Ioctls
以下 ioctl 在 \fI/dev/vsock\fP 设备上可用。
.TP 
\fBIOCTL_VM_SOCKETS_GET_LOCAL_CID\fP
获取本地机器的 CID。 参数是指向 \fIunsigned int\fP 的指针。
.IP
.in +4n
.EX
ioctl(fd, IOCTL_VM_SOCKETS_GET_LOCAL_CID, &cid);
.EE
.in
.IP
绑定时考虑使用 \fBVMADDR_CID_ANY\fP 而不是使用 \fBIOCTL_VM_SOCKETS_GET_LOCAL_CID\fP 获取本地 CID。
.SS "Local communication"
\fBVMADDR_CID_LOCAL\fP (1) 将数据包定向到生成它们的同一主机。 这对于单个主机上的测试应用程序和调试很有用。
.PP
用 \fBIOCTL_VM_SOCKETS_GET_LOCAL_CID\fP 获取的本地 CID 也可以达到同样的目的，但是最好使用
\fBVMADDR_CID_LOCAL .\fP
.SH ERRORS
.TP 
\fBEACCES\fP
无法绑定到没有 \fBCAP_NET_BIND_SERVICE\fP 功能的特权端口。
.TP 
\fBEADDRINUSE\fP
无法绑定到已在使用的端口。
.TP 
\fBEADDRNOTAVAIL\fP
无法找到用于绑定的空闲端口或无法绑定到非本地 CID。
.TP 
\fBEINVAL\fP
参数无效。 这包括: 尝试绑定一个已经绑定的套接字，提供无效的结构体 \fIsockaddr_vm\fP，以及其他输入验证错误。
.TP 
\fBENOPROTOOPT\fP
\fBsetsockopt\fP(2) 或 \fBgetsockopt\fP(2) 中的套接字选项无效。
.TP 
\fBENOTCONN\fP
无法对未连接的套接字执行操作。
.TP 
\fBEOPNOTSUPP\fP
不支持操作。 这包括: 未为 \fBsend\fP(2) 系统调用系列实现的 \fBMSG_OOB\fP 标志和 \fBrecv\fP(2) 系统调用系列的
\fBMSG_PEEK\fP。
.TP 
\fBEPROTONOSUPPORT\fP
套接字协议号无效。 该协议应始终 0.
.TP 
\fBESOCKTNOSUPPORT\fP
\fBsocket\fP(2) 中不支持的套接字类型。 只有 \fBSOCK_STREAM\fP 和 \fBSOCK_DGRAM\fP 有效。
.SH VERSIONS
从 Linux 3.9 开始支持 VMware (VMCI)。 从 Linux 4.8 开始支持 KVM (virtio)。 自 Linux 4.14
起支持 Hyper\-V。
.PP
.\" commit ef343b35d46667668a099655fca4a5b2e43a5dfe
自 Linux 5.6 起支持 \fBVMADDR_CID_LOCAL\fP。 从 Linux 5.6 开始，来宾和主机上的本地通信可用。
以前的版本仅支持来宾 (而不是主机) 内的本地通信，并且仅支持某些传输 (VMCI 和 virtio)。
.SH "SEE ALSO"
\fBbind\fP(2), \fBconnect\fP(2), \fBlisten\fP(2), \fBrecv\fP(2), \fBsend\fP(2),
\fBsocket\fP(2), \fBcapabilities\fP(7)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
