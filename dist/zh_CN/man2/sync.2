.\" -*- coding: UTF-8 -*-
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\" and Copyright (c) 2011 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" Modified by Michael Haardt <michael@moria.de>
.\" Modified Sat Jul 24 12:02:47 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified 15 Apr 1995 by Michael Chastain <mec@shell.portal.com>:
.\"   Added reference to `bdflush(2)'.
.\" Modified 960414 by Andries Brouwer <aeb@cwi.nl>:
.\"   Added the fact that since 1.3.20 sync actually waits.
.\" Modified Tue Oct 22 22:27:07 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified 2001-10-10 by aeb, following Michael Kerrisk.
.\" 2011-09-07, mtk, Added syncfs() documentation,
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH sync 2 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
sync, syncfs \- 将文件系统缓存提交到磁盘
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <unistd.h>\fP
.PP
\fBvoid sync(void);\fP
.PP
\fBint syncfs(int \fP\fIfd\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBsync\fP():
.nf
.\"    || _XOPEN_SOURCE && _XOPEN_SOURCE_EXTENDED
    _XOPEN_SOURCE >= 500
        || /* Since glibc 2.19: */ _DEFAULT_SOURCE
        || /* glibc <= 2.19: */ _BSD_SOURCE
.fi
.PP
\fBsyncfs\fP():
.nf
    _GNU_SOURCE
.fi
.SH DESCRIPTION
\fBsync\fP() 导致对文件系统元数据和缓存文件数据的所有未决修改被写入底层文件系统。
.PP
\fBsyncfs\fP() 类似于 \fBsync\fP()，但只同步包含打开文件描述符 \fIfd\fP 引用的文件的文件系统。
.SH "RETURN VALUE"
\fBsyncfs\fP() 成功返回 0; 出错时，它返回 \-1 并设置 \fIerrno\fP 以指示错误。
.SH ERRORS
\fBsync\fP() 总是成功的。
.PP
\fBsyncfs\fP() 可能至少由于以下原因而失败:
.TP 
\fBEBADF\fP
\fIfd\fP 不是有效的文件描述符。
.TP 
\fBEIO\fP
同步期间发生错误。 此错误可能与写入文件系统上任何文件的数据有关，或与文件系统本身相关的元数据有关。
.TP 
\fBENOSPC\fP
同步时磁盘空间已用尽。
.TP 
\fBENOSPC\fP, \fBEDQUOT\fP
\fBwrite\fP(2) 系统调用时，数据被写入 NFS 或其他未分配空间的文件系统上的文件，并且由于存储空间不足而导致先前的某些写入失败。
.SH VERSIONS
\fBsyncfs\fP() 最早出现在 Linux 2.6.39; glibc 2.14 中添加了库支持。
.SH STANDARDS
\fBsync\fP(): POSIX.1\-2001, POSIX.1\-2008, SVr4, 4.3BSD.
.PP
\fBsyncfs\fP() 是特定于 Linux 的。
.SH NOTES
从 glibc 2.2.2 开始，\fBsync\fP() 的 Linux 原型如上所列，遵循各种标准。 在 glibc 2.2.1 及更早版本中，它是
"int sync(void)"，而 \fBsync\fP() 总是返回 0.
.PP
根据标准规范 (例如 POSIX.1\-2001)，\fBsync\fP() 会安排写入，但可能会在实际写入完成之前返回。 但是 Linux 等待 I/O
完成，因此 \fBsync\fP() 或 \fBsyncfs\fP() 提供与分别调用系统或文件系统中的每个文件的 \fBfsync\fP() 相同的保证。
.PP
.\" commit 735e4ae5ba28c886d249ad04d3c8cc097dad6336
在 Linux 5.8 之前的主线内核版本中，只有在传递错误的文件描述符 (\fBEBADF\fP) 时，\fBsyncfs\fP() 才会失败。 从 Linux
5.8 开始，如果自上次 \fBsyncfs\fP() 调用后有一个或多个 inode 回写失败，\fBsyncfs\fP() 也会报错。
.SH BUGS
Linux 1.3.20 之前，Linux 没有等 I/O 完成就返回了。
.SH "SEE ALSO"
\fBsync\fP(1), \fBfdatasync\fP(2), \fBfsync\fP(2)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
