.\" -*- coding: UTF-8 -*-
.\" Copyright (C) 2001 Andries Brouwer <aeb@cwi.nl>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH getpagesize 2 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
getpagesize \- 获取内存页面大小
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <unistd.h>\fP
.PP
\fBint getpagesize(void);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBgetpagesize\fP():
.nf
.\"        || _XOPEN_SOURCE && _XOPEN_SOURCE_EXTENDED
    由于 glibc 2.20:
        _DEFAULT_SOURCE || ! (_POSIX_C_SOURCE >= 200112L)
    glibc 2.12 到 glibc 2.19:
        _BSD_SOURCE || ! (_POSIX_C_SOURCE >= 200112L)
    在 glibc 2.12 之前:
        _BSD_SOURCE || _XOPEN_SOURCE >= 500
.fi
.SH DESCRIPTION
.\" .SH HISTORY
.\" This call first appeared in 4.2BSD.
函数 \fBgetpagesize\fP() 返回一个内存页中的字节数，其中 "page" 为定长块，单位为 \fBmmap\fP(2) 执行的内存分配和文件映射。
.SH STANDARDS
SVr4, 4.4BSD, SUSv2.  在 SUSv2 中，\fBgetpagesize\fP() 调用被标记为 LEGACY，而在
POSIX.1\-2001 中，它被标记为丢弃; HP\-UX 没有这个调用。
.SH NOTES
便携式应用程序应使用 \fIsysconf(_SC_PAGESIZE)\fP 而不是 \fBgetpagesize\fP():
.PP
.in +4n
.EX
#include <unistd.h>
long sz = sysconf(_SC_PAGESIZE);
.EE
.in
.PP
(大多数系统允许 \fB_SC_PAGESIZE\fP.) 的同义词 \fB_SC_PAGE_SIZE\fP
.PP
\fBgetpagesize\fP() 是否作为 Linux 系统调用取决于架构。 如果是，则返回内核符号
\fBPAGE_SIZE\fP，其值取决于体系结构和机器型号。
通常，人们使用依赖于体系结构但不依赖于机器模型的二进制文件，以便为每个体系结构分配一个二进制文件。 这意味着用户程序不应该在编译时从头文件中找到
\fBPAGE_SIZE\fP，而是使用实际的系统调用，至少对于存在这种依赖关系的那些体系结构 (如 sun4)。 这里 glibc 2.0 失败，因为它的
\fBgetpagesize\fP() 返回一个静态派生的值，并且不使用系统调用。 glibc 2.1 一切正常。
.SH "SEE ALSO"
\fBmmap\fP(2), \fBsysconf\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
