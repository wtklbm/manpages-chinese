.\" -*- coding: UTF-8 -*-
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" Modified by Michael Haardt <michael@moria.de>
.\" Modified by Thomas Koenig <ig25@rz.uni-karlsruhe.de>
.\" Modified 1993-07-23 by Rik Faith <faith@cs.unc.edu>
.\" Modified 1993-07-25 by Rik Faith <faith@cs.unc.edu>
.\" Modified 1995-11-01 by Michael Haardt
.\"  <michael@cantor.informatik.rwth-aachen.de>
.\" Modified 1996-04-14 by Andries Brouwer <aeb@cwi.nl>
.\"  [added some polishing contributed by Mike Battersby <mib@deakin.edu.au>]
.\" Modified 1996-07-21 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 1997-01-17 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 2001-12-18 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 2002-07-24 by Michael Kerrisk <mtk.manpages@gmail.com>
.\"	Added note on historical rules enforced when an unprivileged process
.\"	sends a signal.
.\" Modified 2004-06-16 by Michael Kerrisk <mtk.manpages@gmail.com>
.\"     Added note on CAP_KILL
.\" Modified 2004-06-24 by aeb
.\" Modified, 2004-11-30, after idea from emmanuel.colbus@ensimag.imag.fr
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH kill 2 2022\-12\-04 "Linux man\-pages 6.03" 
.SH NAME
kill \- 向进程发送信号
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <signal.h>\fP
.PP
\fBint kill(pid_t \fP\fIpid\fP\fB, int \fP\fIsig\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBkill\fP():
.nf
    _POSIX_C_SOURCE
.fi
.SH DESCRIPTION
\fBkill\fP() 系统调用可用于向任何进程组或进程发送任何信号。
.PP
如果 \fIpid\fP 为正，则信号 \fIsig\fP 被发送到 ID 由 \fIpid\fP 指定的进程。
.PP
如果 \fIpid\fP 等于 0，则 \fIsig\fP 被发送到调用进程的进程组中的每个进程。
.PP
如果 \fIpid\fP 等于 \-1，则 \fIsig\fP 被发送到调用进程有权发送信号的每个进程，进程 1 (\fIinit\fP) 除外，但请参见下文。
.PP
如果 \fIpid\fP 小于 \-1，则 \fIsig\fP 发送给 ID 为 \fI\-pid\fP 的进程组中的每个进程。
.PP
如果 \fIsig\fP 为 0，则不发送信号，但仍然执行存在和权限检查; 这可用于检查是否存在允许调用者发出信号的进程 ID 或进程组 ID。
.PP
对于有权发送信号的进程，它必须具有特权 (在 Linux 下: 在目标进程的用户命名空间中具有 \fBCAP_KILL\fP
能力)，或者发送进程的真实或有效用户 ID 必须等于真实或已保存目标进程的 set\-user\-ID。 在 \fBSIGCONT\fP
的情况下，当发送和接收进程属于同一个会话时就足够了。 (从历史上看，规则是不同的; 见注释。)
.SH "RETURN VALUE"
成功时 (至少发送了一个信号)，返回零。 出错时返回 \-1，并设置 \fIerrno\fP 以指示错误。
.SH ERRORS
.TP 
\fBEINVAL\fP
指定了无效信号。
.TP 
\fBEPERM\fP
调用进程无权将信号发送到任何目标进程。
.TP 
\fBESRCH\fP
目标进程或进程组不存在。 请注意，现有进程可能是僵尸进程，即已终止执行但尚未被 \fBwait\fP(2)ed 处理的进程。
.SH STANDARDS
POSIX.1\-2001, POSIX.1\-2008, SVr4, 4.3BSD.
.SH NOTES
唯一可以发送到进程 ID 1 (\fIinit\fP 进程) 的信号是 \fIinit\fP 已为其明确安装信号处理程序的信号。 这样做是为了确保系统不会意外关闭。
.PP
POSIX.1 要求 \fIkill(\-1,sig)\fP 将 \fIsig\fP 发送到调用进程可能向其发送信号的所有进程，但可能对于某些实现定义的系统进程除外。
Linux 允许进程向自身发出信号，但在 Linux 上，调用 \fIkill(\-1,sig)\fP 不会向调用进程发出信号。
.PP
POSIX.1 要求，如果一个进程向自己发送一个信号，并且发送线程没有信号被阻塞，并且没有其他线程在 \fBsigwait\fP(3)
中解除阻塞或者正在等待，至少必须向发送线程传递一个未阻塞的信号在 \fBkill\fP() 返回之前。
.SS "Linux notes"
.\" In the 0.* kernels things chopped and changed quite
.\" a bit - MTK, 24 Jul 02
在不同的内核版本中，Linux 对非特权进程向另一个进程发送信号所需的权限实现了不同的规则。 在 Linux 1.0 到 1.2.2
中，如果发送者的有效用户 ID 与目标的有效用户 ID 匹配，或者发送者的真实用户 ID 与目标的真实用户 ID 匹配，则可以发送信号。 从 Linux
1.2.3 到 1.3.77，如果发送方的有效用户 ID 与目标的真实或有效用户 ID 匹配，则可以发送信号。 Linux 1.3.78
采用现行规则，符合 POSIX.1。
.SH BUGS
在 Linux 2.6 直至 Linux 2.6.7 中，存在一个错误，这意味着当向进程组发送信号时，如果调用者无权将信号发送到 \fIany\fP (而不是
\fIall\fP) 过程组的成员。 尽管返回了这个错误，信号仍然被传递给调用者有权发出信号的所有进程。
.SH "SEE ALSO"
\fBkill\fP(1), \fB_exit\fP(2), \fBpidfd_send_signal\fP(2), \fBsignal\fP(2), \fBtkill\fP(2),
\fBexit\fP(3), \fBkillpg\fP(3), \fBsigqueue\fP(3), \fBcapabilities\fP(7),
\fBcredentials\fP(7), \fBsignal\fP(7)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
