.\" -*- coding: UTF-8 -*-
.\" Copyright (c) 1995 Paul Gortmaker
.\" (gpg109@rsphy1.anu.edu.au)
.\" Wed Nov 29 10:58:54 EST 1995
.\"
.\" SPDX-License-Identifier: GPL-2.0-or-later
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH outb 2 2022\-11\-10 "Linux man\-pages 6.03" 
.SH NAME
outb, outw, outl, outsb, outsw, outsl, inb, inw, inl, insb, insw, insl,
outb_p, outw_p, outl_p, inb_p, inw_p, inl_p \- 端口 I/O
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <sys/io.h>\fP
.PP
\fBunsigned char inb(unsigned short \fP\fIport\fP\fB);\fP
\fBunsigned char inb_p(unsigned short \fP\fIport\fP\fB);\fP
\fBunsigned short inw(unsigned short \fP\fIport\fP\fB);\fP
\fBunsigned short inw_p(unsigned short \fP\fIport\fP\fB);\fP
\fBunsigned int inl(unsigned short \fP\fIport\fP\fB);\fP
\fBunsigned int inl_p(unsigned short \fP\fIport\fP\fB);\fP
.PP
\fBvoid outb(unsigned char \fP\fIvalue\fP\fB, unsigned short \fP\fIport\fP\fB);\fP
\fBvoid outb_p(unsigned char \fP\fIvalue\fP\fB, unsigned short \fP\fIport\fP\fB);\fP
\fBvoid outw(unsigned short \fP\fIvalue\fP\fB, unsigned short \fP\fIport\fP\fB);\fP
\fBvoid outw_p(unsigned short \fP\fIvalue\fP\fB, unsigned short \fP\fIport\fP\fB);\fP
\fBvoid outl(unsigned int \fP\fIvalue\fP\fB, unsigned short \fP\fIport\fP\fB);\fP
\fBvoid outl_p(unsigned int \fP\fIvalue\fP\fB, unsigned short \fP\fIport\fP\fB);\fP
.PP
\fBvoid insb(unsigned short \fP\fIport\fP\fB, void \fP\fIaddr\fP\fB[.\fP\fIcount\fP\fB],\fP
\fB           unsigned long \fP\fIcount\fP\fB);\fP
\fBvoid insw(unsigned short \fP\fIport\fP\fB, void \fP\fIaddr\fP\fB[.\fP\fIcount\fP\fB],\fP
\fB           unsigned long \fP\fIcount\fP\fB);\fP
\fBvoid insl(unsigned short \fP\fIport\fP\fB, void \fP\fIaddr\fP\fB[.\fP\fIcount\fP\fB],\fP
\fB           unsigned long \fP\fIcount\fP\fB);\fP
\fBvoid outsb(unsigned short \fP\fIport\fP\fB, const void \fP\fIaddr\fP\fB[.\fP\fIcount\fP\fB],\fP
\fB           unsigned long \fP\fIcount\fP\fB);\fP
\fBvoid outsw(unsigned short \fP\fIport\fP\fB, const void \fP\fIaddr\fP\fB[.\fP\fIcount\fP\fB],\fP
\fB           unsigned long \fP\fIcount\fP\fB);\fP
\fBvoid outsl(unsigned short \fP\fIport\fP\fB, const void \fP\fIaddr\fP\fB[.\fP\fIcount\fP\fB],\fP
\fB           unsigned long \fP\fIcount\fP\fB);\fP
.fi
.SH DESCRIPTION
这个数族是用来做底层端口输入输出的。 out*函数做端口输出，in*函数做端口输入; b \- 后缀函数是字节宽度，w \- 后缀函数是字宽; _p
后缀函数暂停，直到 I/O 完成。
.PP
.\" , given the following information
.\" in addition to that given in
.\" .BR outb (9).
它们主要是为内部内核使用而设计的，但也可以从用户空间使用。
.PP
您必须使用 \fB\-O\fP 或 \fB\-O2\fP 或类似的编译。 函数被定义为内联宏，在没有启用优化的情况下不会被替换，导致链接时未解析的引用。
.PP
您使用 \fBioperm\fP(2) 或 \fBiopl\fP(2) 告诉内核允许用户空间应用程序访问有问题的 I/O 端口。
如果不这样做，将导致应用程序收到一段错误。
.SH STANDARDS
\fBoutb\fP() 和朋友是特定于硬件的。 \fIvalue\fP 参数首先传递，\fIport\fP 参数第二，这与大多数 DOS 实现的顺序相反。
.SH "SEE ALSO"
\fBioperm\fP(2), \fBiopl\fP(2)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
