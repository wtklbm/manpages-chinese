.\" -*- coding: UTF-8 -*-
.\" Copyright (C) 2005 Robert Love
.\" and Copyright, 2006 Michael Kerrisk
.\"
.\" SPDX-License-Identifier: GPL-2.0-or-later
.\"
.\" 2005-07-19 Robert Love <rlove@rlove.org> - initial version
.\" 2006-02-07 mtk, various changes
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH inotify_add_watch 2 2022\-10\-30 "Linux man\-pages 6.03" 
.SH NAME
inotify_add_watch \- 添加一个 watch 到一个初始化的 inotify 实例
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <sys/inotify.h>\fP
.PP
\fBint inotify_add_watch(int \fP\fIfd\fP\fB, const char *\fP\fIpathname\fP\fB, uint32_t \fP\fImask\fP\fB);\fP
.fi
.SH DESCRIPTION
\fBinotify_add_watch\fP() 为 \fIpathname\fP 中指定位置的文件添加新的 watch，或修改现有的 watch;
调用者必须有这个文件的读权限。 \fIfd\fP 参数是一个文件描述符，引用要修改监视列表的 inotify 实例。 要为 \fIpathname\fP
监视的事件在 \fImask\fP 位掩码参数中指定。 有关可在 \fImask\fP 中设置的位的说明，请参见 \fBinotify\fP(7)。
.PP
对 \fBinotify_add_watch\fP() 的成功调用会返回此 inotify 实例的唯一监视描述符，用于对应于 \fIpathname\fP
的文件系统对象 (inode)。 如果文件系统对象之前没有被这个 inotify 实例监视，那么监视描述符是新分配的。 如果文件系统对象已经被监视
(可能通过指向同一对象的不同链接)，则返回现有监视的描述符。
.PP
watch 描述符由稍后的 \fBread\fP(2)s 从 inotify 文件描述符返回。 这些读取获取 \fIinotify_event\fP 结构 (参见
\fBinotify\fP(7)) 指示文件系统事件; 此结构体中的监视描述符标识事件发生的对象。
.SH "RETURN VALUE"
成功时，\fBinotify_add_watch\fP() 返回一个监视描述符 (一个非负整数)。 出错时，返回 \-1 并设置 \fIerrno\fP 以指示错误。
.SH ERRORS
.TP 
\fBEACCES\fP
不允许对给定文件进行读取访问。
.TP 
\fBEBADF\fP
给定的文件描述符无效。
.TP 
\fBEEXIST\fP
\fImask\fP 包含 \fBIN_MASK_CREATE\fP，\fIpathname\fP 指的是同一个 \fIfd\fP 已经在观看的文件。
.TP 
\fBEFAULT\fP
\fIpathname\fP 指向进程可访问地址空间之外。
.TP 
\fBEINVAL\fP
给定的事件掩码不包含有效事件; 或 \fImask\fP 包含 \fBIN_MASK_ADD\fP 和 \fBIN_MASK_CREATE\fP; 或者 \fIfd\fP 不是
inotify 文件描述符。
.TP 
\fBENAMETOOLONG\fP
\fIpathname\fP 太长。
.TP 
\fBENOENT\fP
\fIpathname\fP 中的目录组件不存在或者是悬垂符号链接。
.TP 
\fBENOMEM\fP
可用内核内存不足。
.TP 
\fBENOSPC\fP
已达到 inotify watches 总数的用户限制或内核无法分配所需的资源。
.TP 
\fBENOTDIR\fP
\fImask\fP 包含 \fBIN_ONLYDIR\fP 而 \fIpathname\fP 不是目录。
.SH VERSIONS
Inotify 被合并到 2.6.13 Linux 内核中。
.SH STANDARDS
这个系统调用是 Linux 特有的。
.SH EXAMPLES
请参见 \fBinotify\fP(7)。
.SH "SEE ALSO"
\fBinotify_init\fP(2), \fBinotify_rm_watch\fP(2), \fBinotify\fP(7)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
