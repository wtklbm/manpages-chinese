.\" -*- coding: UTF-8 -*-
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" Modified by Michael Haardt (michael@moria.de)
.\" Modified Sat Jul 24 14:29:17 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified 961203 and 001211 and 010326 by aeb@cwi.nl
.\" Modified 001213 by Michael Haardt (michael@moria.de)
.\" Modified 13 Jun 02, Michael Kerrisk <mtk.manpages@gmail.com>
.\"	Added note on nonstandard behavior when SIGCHLD is ignored.
.\" Modified 2004-11-16, mtk, Noted that the nonconformance when
.\"	SIGCHLD is being ignored is fixed in Linux 2.6.9; other minor changes
.\" Modified 2004-12-08, mtk, in Linux 2.6 times() return value changed
.\" 2005-04-13, mtk
.\"	Added notes on nonstandard behavior: Linux allows 'buf' to
.\"	be NULL, but POSIX.1 doesn't specify this and it's nonportable.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH times 2 2023\-02\-10 "Linux man\-pages 6.03" 
.SH NAME
times \- 获取处理时间
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <sys/times.h>\fP
.PP
\fBclock_t times(struct tms *\fP\fIbuf\fP\fB);\fP
.fi
.SH DESCRIPTION
\fBtimes\fP() 将当前进程时间存储在 \fIbuf\fP 指向的 \fIstruct tms\fP 中。 \fIstruct tms\fP 在
\fI<sys/times.h>\fP: 中定义
.PP
.in +4n
.EX
struct tms {
    clock_t tms_utime;  /* user time */
    clock_t tms_stime;  /* system time */
    clock_t tms_cutime; /* user time of children */
    clock_t tms_cstime; /* system time of children */
};
.EE
.in
.PP
\fItms_utime\fP 字段包含执行调用进程的指令所花费的 CPU 时间。 \fItms_stime\fP
字段包含代表调用进程执行任务时在内核内部执行所花费的 CPU 时间。
.PP
\fItms_cutime\fP 字段包含所有等待终止子项的 \fItms_utime\fP 和 \fItms_cutime\fP 值的总和。 \fItms_cstime\fP
字段包含所有等待终止子项的 \fItms_stime\fP 和 \fItms_cstime\fP 值的总和。
.PP
在 \fBwait\fP(2) 或 \fBwaitpid\fP(2) 返回它们的进程 ID 时添加已终止子进程 (及其后代)
的时间。特别是，子节点们没有等到的孙子时代是从未见过的。
.PP
报告的所有时间均以时钟滴答为单位。
.SH "RETURN VALUE"
\fBtimes\fP() 返回自过去任意点以来经过的时钟滴答数。 返回值可能会溢出 \fIclock_t\fP 类型的可能范围。 出错时返回
\fI(clock_t)\ \-1\fP，并设置 \fIerrno\fP 以指示错误。
.SH ERRORS
.TP 
\fBEFAULT\fP
\fItms\fP 指向进程地址空间之外。
.SH STANDARDS
POSIX.1\-2001, POSIX.1\-2008, SVr4, 4.3BSD.
.SH NOTES
每秒的时钟滴答数可以使用以下方法获得:
.PP
.in +4n
.EX
sysconf(_SC_CLK_TCK);
.EE
.in
.PP
在 POSIX.1\-1996 中，符号 \fBCLK_TCK\fP (在 \fI<time.h>\fP) 中定义) 被提及为过时的。
现在已经过时了。
.PP
.\" See the description of times() in XSH, which says:
.\"	The times of a terminated child process are included... when wait()
.\"	or waitpid() returns the process ID of this terminated child.
在 Linux 2.6.9 之前，如果 \fBSIGCHLD\fP 的处置设置为 \fBSIG_IGN\fP，则终止子进程的时间将自动包含在
\fItms_cstime\fP 和 \fItms_cutime\fP 字段中，尽管 POSIX.1\-2001 表示只有在其子进程上调用进程 \fBwait\fP(2)s
时才会发生这种情况.  此不符合项在 Linux 2.6.9 及更高版本中得到纠正。
.PP
在 Linux 上，\fIbuf\fP 参数可以指定为 NULL，结果 \fBtimes\fP() 只返回一个函数结果。 但是，POSIX
没有指定此行为，并且大多数其他 UNIX 实现都需要 \fIbuf\fP 的非 NULL 值。
.PP
请注意，\fBclock\fP(3) 也返回一个 \fIclock_t\fP 类型的值，但此值是以 \fBCLOCKS_PER_SEC\fP 为单位测量的，而不是
\fBtimes\fP() 使用的时钟滴答。
.PP
.\" .PP
.\" On older systems the number of clock ticks per second is given
.\" by the variable HZ.
在 Linux 上，测量 \fBtimes\fP() 的返回值的 \[lq] 过去的任意点 \[rq] 因内核版本而异。 在 Linux 2.4
及更早版本上，此点是系统启动的时刻。 从 Linux 2.6 开始，这个点是系统启动时间前的 \fI(2\[ha]32/HZ) \- 300\fP 秒。
这种跨内核版本 (以及跨 UNIX 实现) 的可变性，加上返回值可能溢出 \fIclock_t\fP 范围的事实，意味着可移植应用程序最好避免使用该值。
要测量经过时间的变化，请改用 \fBclock_gettime\fP(2)。
.SS Historical
SVr1\-3 返回 \fIlong\fP 并且结构体成员属于 \fItime_t\fP 类型，尽管它们存储时钟滴答，而不是自大纪元以来的秒数。 V7 使用
\fIlong\fP 作为结构体成员，因为它还没有类型 \fItime_t\fP。
.SH BUGS
.\" The problem is that a syscall return of -4095 to -1
.\" is interpreted by glibc as an error, and the wrapper converts
.\" the return value to -1.
.\" http://marc.info/?l=linux-kernel&m=119447727031225&w=2
.\" "compat_sys_times() bogus until jiffies >= 0"
.\" November 2007
某些架构 (特别是 i386) 上的 Linux 系统调用约定的限制意味着在 Linux 2.6 上有一个小时间窗口 (41 秒) 在启动后不久
\fBtimes\fP() 可以返回 \-1，错误地指示发生了错误。 当返回值超过可存储在 \fBclock_t\fP 中的最大值时，可能会出现同样的问题。
.SH "SEE ALSO"
\fBtime\fP(1), \fBgetrusage\fP(2), \fBwait\fP(2), \fBclock\fP(3), \fBsysconf\fP(3),
\fBtime\fP(7)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
