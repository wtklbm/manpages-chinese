.\" -*- coding: UTF-8 -*-
.\" Contributed by Niki A. Rahimi, LTC Security Development
.\" narahimi@us.ibm.com
.\"
.\" %%%LICENSE_START(FREELY_REDISTRIBUTABLE)
.\" May be freely distributed and modified.
.\" %%%LICENSE_END
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH pciconfig_read 2 2022\-10\-30 "Linux man\-pages 6.03" 
.SH NAME
pciconfig_read、pciconfig_write、pciconfig_iobase\-pci 设备信息处理
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <pci.h>\fP
.PP
\fBint pciconfig_read(unsigned long \fP\fIbus\fP\fB, unsigned long \fP\fIdfn\fP\fB,\fP
\fB                   unsigned long \fP\fIoff\fP\fB, unsigned long \fP\fIlen\fP\fB,\fP 
\fB                   unsigned char *\fP\fIbuf\fP\fB);\fP
\fBint pciconfig_write(unsigned long \fP\fIbus\fP\fB, unsigned long \fP\fIdfn\fP\fB,\fP
\fB                   unsigned long \fP\fIoff\fP\fB, unsigned long \fP\fIlen\fP\fB,\fP
\fB                   unsigned char *\fP\fIbuf\fP\fB);\fP
\fBint pciconfig_iobase(int \fP\fIwhich\fP\fB, unsigned long \fP\fIbus\fP\fB,\fP
\fB                   unsigned long \fP\fIdevfn\fP\fB);\fP
.fi
.SH DESCRIPTION
大多数与 PCI 设备的交互已经由内核 PCI 层处理，因此这些调用通常不需要从用户空间访问。
.TP 
\fBpciconfig_read\fP()
从偏移量 \fIoff\fP 值处的设备 \fIdev\fP 读取到 \fIbuf\fP。
.TP 
\fBpciconfig_write\fP()
从 \fIbuf\fP 写入偏移量 \fIoff\fP 值处的设备 \fIdev\fP。
.TP 
\fBpciconfig_iobase\fP()
您将 bus/devfn 对传递给它并获得内存偏移 (对于准备之类的东西，这是 0xc0000000)、PIO 周期的 IO 基数或 ISA 漏洞
(如果有的话) 的物理地址。
.SH "RETURN VALUE"
.TP 
\fBpciconfig_read\fP()
成功时，返回零。 出错时，返回 \-1 并设置 \fIerrno\fP 以指示错误。
.TP 
\fBpciconfig_write\fP()
成功时，返回零。 出错时，返回 \-1 并设置 \fIerrno\fP 以指示错误。
.TP 
\fBpciconfig_iobase\fP()
根据 \fIwhich\fP 值返回物理内存中各个 I/O 区域的位置信息。 \fIwhich\fP 的值为:
\fBIOBASE_BRIDGE_NUMBER\fP、\fBIOBASE_MEMORY\fP、\fBIOBASE_IO\fP、\fBIOBASE_ISA_IO\fP、\fBIOBASE_ISA_MEM\fP。
.SH ERRORS
.TP 
\fBEINVAL\fP
\fIlen\fP 值无效。 这不适用于 \fBpciconfig_iobase\fP()。
.TP 
\fBEIO\fP
I/O 错误。
.TP 
\fBENODEV\fP
对于 \fBpciconfig_iobase\fP()，"hose" 值为 NULL。 对于其他电话，找不到插槽。
.TP 
\fBENOSYS\fP
系统尚未实现这些调用 ((\fBCONFIG_PCI\fP 未定义)。
.TP 
\fBEOPNOTSUPP\fP
此返回值仅对 \fBpciconfig_iobase\fP() 有效。 如果 \fIwhich\fP 的值无效，则返回它。
.TP 
\fBEPERM\fP
用户没有 \fBCAP_SYS_ADMIN\fP 能力。 这不适用于 \fBpciconfig_iobase\fP()。
.SH STANDARDS
这些调用是特定于 Linux 的，从 Linux 2.0.26/2.1.11 开始可用。
.SH "SEE ALSO"
\fBcapabilities\fP(7)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
