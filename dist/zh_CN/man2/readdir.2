.\" -*- coding: UTF-8 -*-
.\" Copyright (C) 1995 Andries Brouwer (aeb@cwi.nl)
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" Written 11 June 1995 by Andries Brouwer <aeb@cwi.nl>
.\" Modified 22 July 1995 by Michael Chastain <mec@duracef.shout.net>:
.\"   In 1.3.X, returns only one entry each time; return value is different.
.\" Modified 2004-12-01, mtk, fixed headers listed in SYNOPSIS
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH readdir 2 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
readdir \- 读取目录条目
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <sys/syscall.h>\fP      /* Definition of \fBSYS_*\fP constants */
\fB#include <unistd.h>\fP
.PP
\fBint syscall(SYS_readdir, unsigned int \fP\fIfd\fP\fB,\fP
\fB            struct old_linux_dirent *\fP\fIdirp\fP\fB, unsigned int \fP\fIcount\fP\fB);\fP
.fi
.PP
\fINote\fP: 没有 \fBstruct old_linux_dirent\fP 的定义; 见注释。
.SH DESCRIPTION
这不是您感兴趣的函数。 查看 \fBreaddir\fP(3)，了解符合 POSIX 的 C 库接口。 此页面记录了裸内核系统调用接口，它已被
\fBgetdents\fP(2) 取代。
.PP
\fBreaddir\fP() 从文件描述符 \fIfd\fP 指向的目录中读取一个 \fIold_linux_dirent\fP 结构体到 \fIdirp\fP
指向的缓冲区中。 参数 \fIcount\fP 被忽略; 最多读取一个 \fIold_linux_dirent\fP 结构体。
.PP
\fIold_linux_dirent\fP 结构体声明 (在 Linux 内核文件 \fBfs/readdir.c\fP) 中私下声明如下:
.PP
.in +4n
.EX
struct old_linux_dirent {
    unsigned long d_ino;     /* inode number */
    unsigned long d_offset;  /* offset to this \fIold_linux_dirent\fP */
    unsigned short d_namlen; /* length of this \fId_name\fP */
    char  d_name[1];         /* filename (null\-terminated) */
}
.EE
.in
.PP
\fId_ino\fP 是 inode 编号。 \fId_offset\fP 是从目录开始到这个 \fIold_linux_dirent\fP 的距离。
\fId_reclen\fP 是 \fId_name\fP 的大小，不包括终止空字节 (\[aq]\e0\[aq])。 \fId_name\fP 是一个以 null
结尾的文件名。
.SH "RETURN VALUE"
成功时，返回 1。 在目录末尾，返回 0。 出错时返回 \-1，并设置 \fIerrno\fP 以指示错误。
.SH ERRORS
.TP 
\fBEBADF\fP
无效的文件描述符 \fIfd\fP。
.TP 
\fBEFAULT\fP
参数指向调用进程的地址空间之外。
.TP 
\fBEINVAL\fP
结果缓冲区太小。
.TP 
\fBENOENT\fP
没有这样的目录。
.TP 
\fBENOTDIR\fP
文件描述符不引用目录。
.SH STANDARDS
这个系统调用是 Linux 特有的。
.SH NOTES
您需要自己定义 \fIold_linux_dirent\fP 结构体。 但是，您可能应该改用 \fBreaddir\fP(3)。
.PP
该系统调用在 x86\-64 上不存在。
.SH "SEE ALSO"
\fBgetdents\fP(2), \fBreaddir\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
