.\" -*- coding: UTF-8 -*-
.\" Copyright (C) Andreas Gruenbacher, February 2001
.\" Copyright (C) Silicon Graphics Inc, September 2001
.\"
.\" SPDX-License-Identifier: GPL-2.0-or-later
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH setxattr 2 2022\-12\-04 "Linux man\-pages 6.03" 
.SH NAME
setxattr、lsetxattr、fsetxattr \- 设置扩展属性值
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <sys/xattr.h>\fP
.PP
\fBint setxattr(const char *\fP\fIpath\fP\fB, const char *\fP\fIname\fP\fB,\fP
\fB              const void \fP\fIvalue\fP\fB[.\fP\fIsize\fP\fB], size_t \fP\fIsize\fP\fB, int \fP\fIflags\fP\fB);\fP  
\fBint lsetxattr(const char *\fP\fIpath\fP\fB, const char *\fP\fIname\fP\fB,\fP
\fB              const void \fP\fIvalue\fP\fB[.\fP\fIsize\fP\fB], size_t \fP\fIsize\fP\fB, int \fP\fIflags\fP\fB);\fP
\fBint fsetxattr(int \fP\fIfd\fP\fB, const char *\fP\fIname\fP\fB,\fP
\fB              const void \fP\fIvalue\fP\fB[.\fP\fIsize\fP\fB], size_t \fP\fIsize\fP\fB, int \fP\fIflags\fP\fB);\fP
.fi
.SH DESCRIPTION
扩展属性是与索引节点 (文件、目录、符号链接等) 关联的 \fIname\fP:\fIvalue\fP 对。 它们是与系统中所有 inode 关联的普通属性的扩展
(即 \fBstat\fP(2) 数据)。 可以在 \fBxattr\fP(7) 中找到扩展属性概念的完整概述。
.PP
\fBsetxattr\fP() 设置由 \fIname\fP 标识并与文件系统中给定的 \fIpath\fP 关联的扩展属性的 \fIvalue\fP。 \fIsize\fP
参数指定 \fIvalue\fP 的大小 (以字节为单位) ; 允许零长度值。
.PP
\fBlsetxattr\fP() 与 \fBsetxattr\fP() 相同，除了在符号链接的情况下，扩展属性是在链接本身上设置的，而不是它所引用的文件。
.PP
\fBfsetxattr\fP() 与 \fBsetxattr\fP() 相同，只是在 \fIfd\fP 引用的打开文件上设置了扩展属性 (由 \fBopen\fP(2))
代替 \fIpath\fP 返回。
.PP
扩展属性名称是一个以 null 结尾的字符串。 \fIname\fP 包含一个名称空间前缀; 可能有几个与单个 inode 相关联的不相交的命名空间。
扩展属性的 \fIvalue\fP 是指定长度的任意文本或二进制数据块。
.PP
默认情况下 (即 \fIflags\fP 为零)，如果扩展属性不存在，将创建它，如果属性已经存在，将替换该值。 要修改这些语义，可以在 \fIflags\fP:
中指定以下值之一
.TP 
\fBXATTR_CREATE\fP
执行纯创建，如果指定的属性已经存在，则创建失败。
.TP 
\fBXATTR_REPLACE\fP
执行纯替换操作，如果指定的属性尚不存在，该操作将失败。
.SH "RETURN VALUE"
成功时，返回零。 失败时，返回 \-1 并设置 \fIerrno\fP 以指示错误。
.SH ERRORS
.TP 
\fBEDQUOT\fP
磁盘配额限制意味着没有足够的剩余空间来存储扩展属性。
.TP 
\fBEEXIST\fP
指定了 \fBXATTR_CREATE\fP，并且该属性已经存在。
.TP 
\fBENODATA\fP
.\" .RB ( ENOATTR
.\" is defined to be a synonym for
.\" .BR ENODATA
.\" in
.\" .IR <attr/attributes.h> .)
指定了 \fBXATTR_REPLACE\fP，但属性不存在。
.TP 
\fBENOSPC\fP
剩余空间不足，无法存储扩展属性。
.TP 
\fBENOTSUP\fP
\fIname\fP 的名称空间前缀无效。
.TP 
\fBENOTSUP\fP
文件系统不支持或禁用扩展属性，
.TP 
\fBEPERM\fP
该文件被标记为不可更改或仅，追加。 (见 \fBioctl_iflags\fP(2).)
.PP
此外，\fBstat\fP(2) 中记录的错误也可能发生。
.TP 
\fBERANGE\fP
\fIname\fP 或 \fIvalue\fP 的大小超出了文件系统特定的限制。
.SH VERSIONS
这些系统调用从 Linux 2.4 开始可用; 自 glibc 2.3 起提供 glibc 支持。
.SH STANDARDS
.\" .SH AUTHORS
.\" Andreas Gruenbacher,
.\" .RI < a.gruenbacher@computer.org >
.\" and the SGI XFS development team,
.\" .RI < linux-xfs@oss.sgi.com >.
.\" Please send any bug reports or comments to these addresses.
这些系统调用是特定于 Linux 的。
.SH "SEE ALSO"
\fBgetfattr\fP(1), \fBsetfattr\fP(1), \fBgetxattr\fP(2), \fBlistxattr\fP(2), \fBopen\fP(2),
\fBremovexattr\fP(2), \fBstat\fP(2), \fBsymlink\fP(7), \fBxattr\fP(7)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
