.\" -*- coding: UTF-8 -*-
.de  Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de  Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de  Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie  n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.ie  \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.de  IX
..
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.nr rF 0
.if  \n(.g .if rF .nr rF 1
.if  (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" fudge factors for nroff and troff
.    
.if  n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.if  t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.\" simple accents for nroff and troff
.    
.if  n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if  t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.\" troff and (daisy-wheel) nroff accents
.    
.ds : \k:\h'-(\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \k:\h'-(\n(.wu+\w'\(de'u\-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\fI\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.\" corrections for vroff
.    
.if  v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if  v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.\" for low resolution devices (crt and lpr)
.    
.if  \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "C++FILT 1"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH C++FILT 1 2023\-02\-03 binutils\-2.40 "GNU Development Tools"
.if  n .ad l
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.nh
.SH NAME
c++filt \- 分解 C++ 和 Java 符号
.SH SYNOPSIS
.IX Header SYNOPSIS
c++filt [\fB\-_\fP|\fB\-\-strip\-underscore\fP]
        [\fB\-n\fP|\fB\-\-no\-strip\-underscore\fP]
        [\fB\-p\fP|\fB\-\-no\-params\fP]
        [\fB\-t\fP|\fB\-\-types\fP]
        [\fB\-i\fP|\fB\-\-no\-verbose\fP]
        [\fB\-r\fP|\fB\-\-no\-recurse\-limit\fP]
        [\fB\-R\fP|\fB\-\-recurse\-limit\fP]
        [\fB\-s\fP \fIformat\fP|\fB\-\-format=\fP\fIformat\fP]
        [\fB\-\-help\fP]  [\fB\-\-version\fP]  [\fIsymbol\fP...]
.SH DESCRIPTION
.IX Header DESCRIPTION
\*(C + 和 Java 语言提供了函数重载，这意味着您可以编写许多同名函数，前提是每个函数采用不同类型的参数。 为了能够区分这些类似命名的函数
\*(C + 和 Java 将它们编码成一个底层汇编程序名称，唯一标识每个不同的版本。 此过程称为 \fImangling\fP。\&\fBc++filt\fP
[1] 程序执行反向映射: 它将 (\fIdemangles\fP) 底层名称解码为用户级名称，以便可以读取它们。
.PP
输入中看到的每个字母数字词 (由字母、数字、下划线、美元或句点组成) 都是一个潜在的错位名称。 如果名称解码为 \*(C + 名称，则 \*(C +
名称将替换输出中的底层名称，否则输出原始单词。 通过这种方式，您可以通过 \fBc++filt\fP
传递包含经过修饰的名称的整个汇编程序源文件，并查看包含经过修饰的名称的同一源文件。
.PP
您还可以使用 \fBc++filt\fP 通过在命令行上传递单个符号来破译它们:
.PP
.Vb 1
\& c++filt <symbol>
.Ve
.PP
如果没有给出 \fIsymbol\fP 参数，则 \fBc++filt\fP 改为从标准输入读取符号名称。 所有结果都打印在标准输出上。
从命令行读取名称与从标准输入读取名称之间的区别在于，命令行参数预计只是错位的名称，并且不执行检查以将它们与周围的文本分开。 因此例如:
.PP
.Vb 1
\& c++filt \-n _Z1fv
.Ve
.PP
将工作并将名称分解为 \*(L"f ()\*(R" 而:
.PP
.Vb 1
\& c++filt \-n _Z1fv,
.Ve
.PP
不管用。 (注意在损坏的名称末尾的额外逗号使其无效)。 但是，此命令将起作用:
.PP
.Vb 1
\& 回显 _Z1fv，| c++filt \-n
.Ve
.PP
并将显示 \*(L"f (),\*(R"，即后跟尾随逗号的 demangled 名称。
此行为是因为当从标准输入中读取名称时，预计它们可能是汇编程序源文件的一部分，其中可能有额外的、无关的字符尾随在损坏的名称之后。 例如:
.PP
.Vb 1
\&.type_Z1fv,@函数
.Ve
.SH OPTIONS
.IX Header OPTIONS
.IP \fB\-_\fP 4
.IX Item \-_
.PD 0
.IP \fB\-\-strip\-underscore\fP 4
.IX Item \-\-strip\-underscore
.PD
在某些系统上，C 和 \*(C + 编译器都会在每个名称前加上下划线。 例如，C 名称 \f(CW\*(C`foo\*(C'\fP 得到底层名称
\f(CW\*(C`_foo\*(C'\fP。 此选项删除初始下划线。 \&\fBc++filt\fP 是否默认删除下划线取决于目标。
.IP \fB\-n\fP 4
.IX Item \-n
.PD 0
.IP \fB\-\-no\-strip\-underscore\fP 4
.IX Item \-\-no\-strip\-underscore
.PD
不要删除开头的下划线。
.IP \fB\-p\fP 4
.IX Item \-p
.PD 0
.IP \fB\-\-no\-params\fP 4
.IX Item \-\-no\-params
.PD
对一个函数的名称进行分解时，不要显示函数的参数类型。
.IP \fB\-t\fP 4
.IX Item \-t
.PD 0
.IP \fB\-\-types\fP 4
.IX Item \-\-types
.PD
尝试 demangle types 以及号码 names。 默认情况下这是禁用的，因为错位类型通常只在编译器内部使用，并且它们可能与非错位名称混淆。
例如，一个名为 \*(L"a\*(R" 的函数被视为一个损坏的类型名称将被分解为 \*(L"signed char\*(R".
.IP \fB\-i\fP 4
.IX Item \-i
.PD 0
.IP \fB\-\-no\-verbose\fP 4
.IX Item \-\-no\-verbose
.PD
不要在 demangled 输出中包含实现细节 (如果有)。
.IP \fB\-r\fP 4
.IX Item \-r
.PD 0
.IP \fB\-R\fP 4
.IX Item \-R
.IP \fB\-\-recurse\-limit\fP 4
.IX Item \-\-recurse\-limit
.IP \fB\-\-no\-recurse\-limit\fP 4
.IX Item \-\-no\-recurse\-limit
.IP \fB\-\-recursion\-limit\fP 4
.IX Item \-\-recursion\-limit
.IP \fB\-\-no\-recursion\-limit\fP 4
.IX Item \-\-no\-recursion\-limit
.PD
启用或禁用对 demangling 字符串时执行的递归数量的限制。
由于名称修改格式允许无限级别的递归，因此可以创建字符串，其解码将耗尽主机上可用的栈空间量，从而触发内存错误。 该限制试图通过将递归限制为 2048
层嵌套来防止这种情况发生。
.Sp
默认情况下启用此限制，但可能需要禁用它才能分解真正复杂的名称。 但是请注意，如果禁用递归限制，则可能会耗尽栈，并且将拒绝有关此类事件的任何错误报告。
.Sp
\fB\-r\fP 选项是 \&\fB\-\-no\-recurse\-limit\fP 选项的同义词。 \fB\-R\fP 选项是 \fB\-\-recurse\-limit\fP
选项的同义词。
.IP "\fB\-s\fP \fIformat\fP" 4
.IX Item "\-s format"
.PD 0
.IP \fB\-\-format=\fP\fIformat\fP 4
.IX Item \-\-format=format
.PD
\&\fBc++filt\fP 可以解码不同编译器使用的各种方法。 此选项的参数选择它使用的方法:
.RS 4
.ie  n .IP """auto""" 4
.el .IP "\f(CWauto\fR" 4
.IX Item auto
基于可执行文件的自动选择 (默认方法)
.ie  n .IP """gnu""" 4
.el .IP "\f(CWgnu\fR" 4
.IX Item gnu
\s-1GNU\*(C+\s0 编译器 (g++)
.ie  n .IP """lucid""" 4
.el .IP "\f(CWlucid\fR" 4
.IX Item lucid
Lucid 编译器 (lcc) 使用的那个
.ie  n .IP """arm""" 4
.el .IP "\f(CWarm\fR" 4
.IX Item arm
\*(C + 注解引用手册指定的那个
.ie  n .IP """hp""" 4
.el .IP "\f(CWhp\fR" 4
.IX Item hp
\s-1HP\s0 编译器 (aCC) 使用的那个
.ie  n .IP """edg""" 4
.el .IP "\f(CWedg\fR" 4
.IX Item edg
\s-1EDG\s0 编译器使用的那个
.ie  n .IP """gnu\-v3""" 4
.el .IP "\f(CWgnu\-v3\fR" 4
.IX Item gnu\-v3
\s-1GNU\*(C+\s0 编译器 (g++) 和 V3\s-1ABI 使用的那个。\s0
.ie  n .IP """java""" 4
.el .IP "\f(CWjava\fR" 4
.IX Item java
\s-1GNU\s0 Java 编译器 (gcj) 使用的那个
.ie  n .IP """gnat""" 4
.el .IP "\f(CWgnat\fR" 4
.IX Item gnat
\s-1GNU\s0 Ada 编译器 (\s-1GNAT\s0) 使用的那个。
.RE
.RS 4
.RE
.IP \fB\-\-help\fP 4
.IX Item \-\-help
将选项的总结打印到 \fBc++filt\fP 并退出。
.IP \fB\-\-version\fP 4
.IX Item \-\-version
打印 \fBc++filt\fP 的版本号并退出。
.IP \fB@\fP\fIfile\fP 4
.IX Item @file
从 \fIfile\fP 读取命令行选项。 读取的选项插入到原始 @\fIfile\fP 选项的位置。 如果 \fIfile\fP
不存在或无法读取，则该选项将按字面意思处理，而不是删除。
.Sp
\fIfile\fP 中的选项由空格分隔。 通过用单引号或双引号将整个选项括起来，可以将空白字符包含在选项中。 任何字符 (包括反斜杠)
都可以通过在要包含的字符前加上反斜杠来包含。 \fIfile\fP 本身可能包含额外的 @\fIfile\fP 选项; 任何此类选项都将递归处理。
.SH FOOTNOTES
.IX Header FOOTNOTES
.IP 1. 4
MS\-DOS 不允许在文件名中使用 \f(CW\*(C`+\*(C'\fP 字符，因此在 MS\-DOS 上该程序被命名为 \fB\s-1CXXFILT\s0\fP。
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\fIbinutils\fP 的信息条目。
.SH COPYRIGHT
.IX Header COPYRIGHT
Copyright (c) 1991\-2023 Free Software Foundation, Inc.
.PP
根据 \s-1GNU\s0 自由文档许可证版本 1.3 或自由软件基金会发布的任何更高版本的条款，授予复制、分发或者修改本文档的权限;
没有不变的部分，没有封面文本，也没有封底文本。 该许可证的副本包含在标题为 \*(L"\s-1GNU\s0 Free Documentation
License\*(R") 的部分中。
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
