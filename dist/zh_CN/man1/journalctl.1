.\" -*- coding: UTF-8 -*-
'\" t
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH JOURNALCTL 1 "" "systemd 253" journalctl
.ie  \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH NAME
journalctl \- 从 systemd 日志打印日志条目
.SH SYNOPSIS
.HP \w'\fBjournalctl\fR\ 'u
\fBjournalctl\fP [OPTIONS...] [MATCHES...]
.SH DESCRIPTION
.PP
\fBjournalctl\fP 用于打印 \fBsystemd\-journald.service\fP(8) 和
\fBsystemd\-journal\-remote.service\fP(8)\& 存储在日志中的日志条目。
.PP
如果不带参数调用，它将显示调用用户可访问的日志内容，从收集到的最旧条目开始 \&。
.PP
如果传递了一个或多个匹配参数，输出将被相应地过滤 \&。匹配项的格式为 "FIELD=VALUE", e\&.g\&。
"_SYSTEMD_UNIT=httpd\&.service"，指的是结构化日记帐分录的组成部分 \&。请参见
\fBsystemd.journal\-fields\fP(7) 以获得众所周知的字段列表 \&。如果指定了多个匹配项来匹配不同的字段，则日志条目将同时通过
i\&.e\&
进行过滤。结果输出将只显示匹配所有指定匹配项的条目。如果两个匹配项适用于同一个字段，那么它们将自动匹配为替代项，i\&.e\&。结果输出将显示与同一字段的任何指定匹配项匹配的条目
\&。最后，字符 "+" 可能作为单独的单词出现在命令行中的其他术语之间 \&。这会导致之前和之后的所有匹配项组合成析取
(i\&.e\&. logical OR)\&。
.PP
也可以通过将绝对文件路径指定为参数 \& 来过滤条目。文件路径可以是文件或符号链接，并且该文件必须在查询时存在
\&。如果文件路径引用可执行二进制文件，则将规范化二进制路径的 "_EXE=" 匹配添加到查询 \&。如果文件路径引用可执行脚本，则将脚本名称的
"_COMM=" 匹配添加到查询 \&。如果文件路径引用设备节点，则 "_KERNEL_DEVICE="
匹配设备的内核名称，并将其每个祖先设备添加到查询 \&。解引用符号链接，合成内核名称，并在查询时从环境中识别父设备
\&。通常，设备节点是实际设备的最佳代理，因为日志条目通常不包含标识实际设备的字段。为了使生成的日志条目对实际设备正确，记录条目时环境的相关部分，特别是对应于设备节点的实际设备，必须与记录条目时的那些相同询问
\&。由于设备节点通常会在重新启动后更改其相应的设备，因此指定设备节点路径会导致结果条目仅限于当前引导 \&。
.PP
可以使用选项 \fB\-\-boot\fP、\fB\-\-unit=\fP 等 \& 添加其他约束，以进一步限制将显示的条目 (逻辑与) \&。
.PP
输出从所有可访问的日志文件中交错，无论它们是旋转的还是当前正在写入的，也不管它们是属于系统本身还是可访问的用户日志 \&。\fB\-\-header\fP
选项可用于识别 \fIare\fP 正在显示的文件 \&。
.PP
可以使用 \fB\-\-user\fP、\fB\-\-system\fP、\fB\-\-directory\fP 和 \fB\-\-file\fP 选项修改将要使用的日志文件集，请参见下文
\&。
.PP
所有用户都被授予访问他们 private 每用户日记的权限 \&。但是，默认情况下，只有 root
用户和属于少数特殊组的用户才有权访问系统日志和其他用户的日志。"systemd\-journal"、"adm" 和 "wheel"
组的成员可以读取所有日志文件 \&。请注意，后两个组传统上具有分发指定的附加权限 \&。"wheel" 组的成员通常可以执行管理任务 \&。
.PP
输出默认通过 \fBless\fP 分页，长行 "truncated" 到屏幕宽度 \&。隐藏部分可以使用左箭头和右箭头键 \& 查看。可以禁用分页;
请参见下面的 \fB\-\-no\-pager\fP 选项和 "Environment" 部分 \&。
.PP
当输出到 tty 时，线条根据优先级着色: ERROR 和更高级别的线条为红色; 突出显示级别 NOTICE 和更高级别的行; 级别 DEBUG
的行颜色为浅灰色; 其他行正常显示 \&。
.PP
要将条目 \fIto\fP 写入日志，可以使用一些方法 \&。通常，systemd 单元的输出会自动连接到日志，请参见
\fBsystemd\-journald.service\fP(8)\&。此外，\fBsystemd\-cat\fP(1) 可用于直接向日志发送消息 \&。
.SH "SOURCE OPTIONS"
.PP
以下选项控制从何处读取日志记录:
.PP
\fB\-\-system\fP, \fB\-\-user\fP
.RS 4
显示来自系统服务和内核的消息 (使用 \fB\-\-system\fP)\&。显示来自当前用户服务的消息 (使用
\fB\-\-user\fP)\&。如果两者均未指定，则显示用户可以看到的所有消息 \&。
.sp
\fB\-\-user\fP 选项会影响 \fB\-\-unit\fP 参数的处理方式 \&。请参见 \fB\-\-unit\fP\&。
.RE
.PP
\fB\-M\fP, \fB\-\-machine=\fP
.RS 4
显示来自正在运行的本地容器的消息 \&。指定要连接到的容器名称 \&。
.RE
.PP
\fB\-m\fP, \fB\-\-merge\fP
.RS 4
显示与所有可用日志交错的条目，包括远程日志 \&。
.RE
.PP
\fB\-D \fP\fIDIR\fP, \fB\-\-directory=\fP\fIDIR\fP
.RS 4
取目录路径为参数 \&。如果指定，journalctl 将在指定的日志目录 \fIDIR\fP 上运行，而不是默认的运行时和系统日志路径 \&。
.RE
.PP
\fB\-\-file=\fP\fIGLOB\fP
.RS 4
将文件 glob 作为参数 \&。如果指定，journalctl 将对匹配 \fIGLOB\fP 的指定日志文件进行操作，而不是默认的运行时和系统日志路径
\&。可以指定多次，在这种情况下文件将适当地交错 \&。
.RE
.PP
\fB\-\-root=\fP\fIROOT\fP
.RS 4
将目录路径作为参数 \&。如果指定，\fBjournalctl\fP 将操作指定目录下的日志目录和目录文件层次结构，而不是根目录 (例如
\&.g\&。\fB\-\-update\-catalog\fP 将创建 \fIROOT\fP/var/lib/systemd/catalog/database，并显示
\fIROOT\fP/run/journal/ 或 \fIROOT\fP/var/log/journal/ 下的日志文件) \&。
.RE
.PP
\fB\-\-image=\fP\fIIMAGE\fP
.RS 4
采用磁盘映像文件或块设备节点的路径 \&。如果指定，\fBjournalctl\fP 将在指示的磁盘映像 \& 中的文件系统上运行。该选项类似于
\fB\-\-root=\fP，但操作的是存储在磁盘映像或块设备中的文件系统，因此提供了一种从磁盘映像中提取日志数据的简便方法。磁盘映像应该在 GPT
分区表中仅包含一个文件系统或一组文件系统，紧跟在 \m[blue]\fBDiscoverable Partitions Specification\fP\m[]\&\s-2\u[1]\d\s+2\& 之后。有关支持的磁盘映像的更多信息，请参见同名的
\fBsystemd\-nspawn\fP(1)\*(Aqs 开关 \&。
.RE
.PP
\fB\-\-namespace=\fP\fINAMESPACE\fP
.RS 4
将日志名称空间标识符字符串作为参数 \&。如果未指定，则显示默认名称空间收集的数据 \&。如果指定则显示指定命名空间的日志数据而不是
\&。如果命名空间指定为 "*"，则显示来自所有命名空间的数据，交错 \&。如果命名空间标识符以来自指定命名空间的 "+"
数据为前缀，则显示默认命名空间，交错，但没有其他 \&。有关日志名称空间的详细信息，请参见
\fBsystemd\-journald.service\fP(8)\&。
.RE
.SH "FILTERING OPTIONS"
.PP
以下选项控制如何过滤日志记录:
.PP
\fB\-S\fP, \fB\-\-since=\fP, \fB\-U\fP, \fB\-\-until=\fP
.RS 4
分别开始显示指定日期或晚于指定日期或指定日期或早于指定日期的条目 \&。日期规范应采用 `2012\-10\-30 18:17:16`\&
格式。如果省略时间部分，则假定为 "00:00:00"\&。如果只省略秒部分，则假定为 ":00"\&。如果省略日期部分，则假定为当前日期
\&。或者理解为字符串 "yesterday"、"today"、"tomorrow"，分别表示前一天、当天或后一天的 00:00:00\&。 "now"
指的是当前时间 \&。最后，可以指定相对时间，以 "\-" 或 "+" 为前缀，分别指代当前时间之前或之后的时间 \&。有关完整的时间和日期规范，请参见
\fBsystemd.time\fP(7)\&。请注意，\fB\-\-output=short\-full\fP 打印的时间戳恰好遵循此格式 \&。
.RE
.PP
\fB\-c\fP, \fB\-\-cursor=\fP
.RS 4
从传递的游标 \& 指定的日志中的位置开始显示条目。
.RE
.PP
\fB\-\-after\-cursor=\fP
.RS 4
从日志 \fIafter\fP 中传递的游标 \& 指定的位置开始显示条目。使用 \fB\-\-show\-cursor\fP 选项时显示游标 \&。
.RE
.PP
\fB\-\-cursor\-file=\fP\fIFILE\fP
.RS 4
如果 \fIFILE\fP 存在并包含游标，则开始显示条目 \fIafter\fP 此位置 \&。否则根据其他给定选项显示条目 \&。最后，将最后一个条目的游标写入
\fIFILE\fP\&。使用此选项通过顺序调用 \fBjournalctl\fP\& 连续读取日志。
.RE
.PP
\fB\-b \fP\fB[[\fP\fIID\fP][\fI\(+-offset\fP]|\fBall\fP],
\fB\-\-boot\fP\fB[=[\fP\fIID\fP][\fI\(+-offset\fP]|\fBall\fP]
.RS 4
显示来自特定引导的消息 \&。这将为 `_BOOT_ID="\& 添加匹配项。
.sp
参数可能为空，在这种情况下将显示当前引导的日志 \&。
.sp
如果省略引导 ID，则正的 \fIoffset\fP 将从日志的开头查找引导，而等于或小于零的 \fIoffset\fP 将从日志的末尾开始查找引导
\&。因此，\fB1\fP 表示按时间顺序在日志中找到的第一个引导，\fB2\fP 表示第二个，依此类推; \fB\-0\fP 是最后一次启动，\fB\-1\fP
是最后一次启动，依此类推 \&。一个空的 \fIoffset\fP 等同于指定 \fB\-0\fP，除非当前引导不是最后一次引导 (e\&.g\&。因为指定
\fB\-\-directory\fP 是为了查看来自不同机器的日志) \&。
.sp
如果指定了 32 个字符的 \fIID\fP，则可以选择在其后跟 \fIoffset\fP，它标识相对于由引导 \fIID\fP\& 给出的引导的引导。Negative
值表示较早启动，正值表示较晚启动 \&。如果未指定 \fIoffset\fP，则假定值为零，并显示 \fIID\fP 给出的引导日志 \&。
.sp
特殊的参数 \fBall\fP 可以用来抵消之前使用 \fB\-b\fP\& 的影响。
.RE
.PP
\fB\-u\fP, \fB\-\-unit=\fP\fIUNIT\fP\fB|\fP\fIPATTERN\fP
.RS 4
显示指定 systemd 元 \fIUNIT\fP (例如服务元) 或 \fIPATTERN\fP\&
匹配的任何单元的消息。如果指定了模式，则将在日志中找到的元名称列表与指定模式进行比较，并使用所有匹配的 \&。对于每个元名称，都会为来自元
("_SYSTEMD_UNIT=\fIUNIT\fP") 的消息添加一个匹配项，并为来自 systemd 的消息和有关指定元 \&
的核心转储的消息添加其他匹配项。还为 "_SYSTEMD_SLICE=\fIUNIT\fP" 添加了匹配项，这样如果提供的 \fIUNIT\fP 是
\fBsystemd.slice\fP(5) 元，则将显示切片的所有子项日志 \&。
.sp
使用 \fB\-\-user\fP，所有 \fB\-\-unit\fP 参数将被转换以匹配用户消息，就像使用 \fB\-\-user\-unit\fP\& 指定的一样。
.sp
该参数可以指定多次 \&。
.RE
.PP
\fB\-\-user\-unit=\fP
.RS 4
显示指定用户会话的消息元 \&。这将为来自元 ("_SYSTEMD_USER_UNIT=" 和 "_UID=") 的消息添加匹配，并为来自会话
systemd 的消息和有关指定元 \& 的核心转储的消息添加额外的匹配。还为 "_SYSTEMD_USER_SLICE=\fIUNIT\fP"
添加了匹配项，这样如果提供的 \fIUNIT\fP 是 \fBsystemd.slice\fP(5) 元，则将显示该元的所有子项的日志 \&。
.sp
该参数可以指定多次 \&。
.RE
.PP
\fB\-t\fP, \fB\-\-identifier=\fP\fISYSLOG_IDENTIFIER\fP
.RS 4
显示指定系统日志标识符 \fISYSLOG_IDENTIFIER\fP\& 的消息。
.sp
该参数可以指定多次 \&。
.RE
.PP
\fB\-p\fP, \fB\-\-priority=\fP
.RS 4
按消息优先级或优先级范围过滤输出 \&。采用单个数字或文本日志级别 (i\&.e\&. 在 0/"emerg" 和 7/"debug" 之间)，或采用
FROM\&.\&.TO 形式的一系列 numeric/text 日志级别 \&。日志级别是 \fBsyslog\fP(3) 中记录的常用 syslog
日志级别，i\&.e\&。 "emerg"\\&(0), "alert"\\&(1), "crit"\\&(2), "err"\\&(3),
"warning"\\&(4), `通知`\\&(5)，`信息`\\&(6)，`调试`\\&(7)\&。如果指定单个日志级别，则显示具有此日志级别或更低
(因此更重要) 日志级别的所有消息 \&。如果指定了范围，则会显示该范围内的所有消息，包括范围的开始值和结束值 \&。这将为指定的优先级添加
"PRIORITY=" 匹配 \&。
.RE
.PP
\fB\-\-facility=\fP
.RS 4
通过 syslog facility\& 过滤输出。采用逗号分隔的数字或设施名称列表 \&。这些名称是 \fBsyslog\fP(3)\&
中记录的常用系统日志工具。\fB\-\-facility=help\fP 可用于显示已知设施名称列表并退出 \&。
.RE
.PP
\fB\-g\fP, \fB\-\-grep=\fP
.RS 4
将输出过滤为 \fIMESSAGE=\fP 字段与指定正则表达式 \& 匹配的条目。使用与 PERL 兼容的正则表达式，有关语法 \& 的详细说明，请参见
\fBpcre2pattern\fP(3)。
.sp
如果模式全部为小写，则匹配不区分大小写 \&。否则，匹配区分大小写 \&。这可以用 \fB\-\-case\-sensitive\fP 选项覆盖，见下文 \&。
.RE
.PP
\fB\-\-case\-sensitive\fP\fB[=BOOLEAN]\fP
.RS 4
使模式匹配区分大小写或不区分大小写 \&。
.RE
.PP
\fB\-k\fP, \fB\-\-dmesg\fP
.RS 4
仅显示内核消息 \&。这意味着 \fB\-b\fP 并添加匹配项 `_TRANSPORT=kernel`\&。
.RE
.SH "OUTPUT OPTIONS"
.PP
以下选项控制日志记录的打印方式:
.PP
\fB\-o\fP, \fB\-\-output=\fP
.RS 4
控制显示的日记条目的格式 \&。采用以下选项之一:
.PP
\fBshort\fP
.RS 4
是默认设置，生成的输出与经典系统日志文件的格式基本相同，每个日志条目显示一行 \&。
.RE
.PP
\fBshort\-full\fP
.RS 4
非常相似，但以 \fB\-\-since=\fP 和 \fB\-\-until=\fP 选项接受 \& 的格式显示时间戳。与 \fBshort\fP
输出模式中显示的时间戳信息不同，此模式在输出中包括工作日、年份和时区信息，并且与区域设置无关 \&。
.RE
.PP
\fBshort\-iso\fP
.RS 4
非常相似，但显示 ISO 8601 挂钟时间戳 \&。
.RE
.PP
\fBshort\-iso\-precise\fP
.RS 4
对于 \fBshort\-iso\fP，但包括完整的微秒精度 \&。
.RE
.PP
\fBshort\-precise\fP
.RS 4
非常相似，但显示具有完整微秒精度的经典系统日志时间戳 \&。
.RE
.PP
\fBshort\-monotonic\fP
.RS 4
非常相似，但显示单调时间戳而不是挂钟时间戳 \&。
.RE
.PP
\fBshort\-delta\fP
.RS 4
对于 \fBshort\-monotonic\fP，但包括与前一个条目的时间差 \&。也许不可靠的时间差异用 `*`\& 标记。
.RE
.PP
\fBshort\-unix\fP
.RS 4
非常相似，但显示自 1970 年 1 月 1 日 UTC 以来经过的秒数，而不是挂钟时间戳 (`UNIX 时间`) \&。时间以微秒精度显示 \&。
.RE
.PP
\fBverbose\fP
.RS 4
显示具有所有字段 \& 的全结构条目项。
.RE
.PP
\fBexport\fP
.RS 4
将日志序列化为适用于备份和网络传输的二进制 (但主要是基于文本的) 流 (有关更多信息，请参见 \m[blue]\fBJournal Export Format\fP\m[]\&\s-2\u[2]\d\s+2) \&。要将二进制流导入回原生日志格式，请使用
\fBsystemd\-journal\-remote\fP(8)\&。
.RE
.PP
\fBjson\fP
.RS 4
将条目格式化为 JSON 对象，以换行符分隔 (有关更多信息，请参见 \m[blue]\fBJournal JSON Format\fP\m[]\&\s-2\u[3]\d\s+2) \&。字段值通常编码为 JSON 字符串，但有以下三个例外:
.sp
.RS 4
.ie  n \{\
\h'-04' 1.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  1." 4.2
.\}
大于 4096 字节的字段被编码为 \fBnull\fP 值 \&。(这可以通过传递 \fB\-\-all\fP 来关闭，但请注意，这可能会分配过长的 JSON 对象
\&。)
.RE
.sp
.RS 4
.ie  n \{\
\h'-04' 2.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  2." 4.2
.\}
日志条目允许同一日志条目中的非唯一字段 \&。JSON 不允许对象中的非唯一字段 \&。因此，如果遇到非唯一字段，则使用 JSON
数组作为字段值，将所有字段值列为元素 \&。
.RE
.sp
.RS 4
.ie  n \{\
\h'-04' 3.\h'+01'\c
.\}
.el \{\
.sp -1
.IP "  3." 4.2
.\}
包含不可打印或非 UTF8 字节的字段被编码为数组，其中包含单独格式化为无符号数字 \& 的原始字节。
.RE
.sp
请注意，此编码是可逆的 (大小限制除外) \&。
.RE
.PP
\fBjson\-pretty\fP
.RS 4
将条目格式化为 JSON 数据结构，但将它们格式化为多行以使它们更易于人类阅读 \&。
.RE
.PP
\fBjson\-sse\fP
.RS 4
将条目格式化为 JSON 数据结构，但将它们包装在适合 \m[blue]\fBServer\-Sent Events\fP\m[]\&\s-2\u[4]\d\s+2\& 的格式中。
.RE
.PP
\fBjson\-seq\fP
.RS 4
根据 \m[blue]\fBJavaScript Object Notation (JSON) Text Sequences\fP\m[]\&\s-2\u[5]\d\s+2 ("application/json\-seq")\&，将条目格式化为 JSON
数据结构，但在它们前面加上 ASCII 记录分隔符字符 (0x1E)，并在它们后面加上 ASCII 换行符字符 (0x0A)。
.RE
.PP
\fBcat\fP
.RS 4
生成一个非常简洁的输出，只显示每个日志条目的实际消息，没有元数据，甚至没有时间戳 \&。如果与 \fB\-\-output\-fields=\fP
选项结合使用，将为每条日志记录输出列出的字段，而不是消息 \&。
.RE
.PP
\fBwith\-unit\fP
.RS 4
与 \fBshort\-full\fP 类似，但前缀为元和用户元名称，而不是传统的系统日志标识符 \&。在使用模板化实例时很有用，因为它将在元名称 \&
中包含参数。
.RE
.RE
.PP
\fB\-\-output\-fields=\fP
.RS 4
应包含在输出中的逗号分隔字段列表 \&。这仅对通常显示所有字段
(\fBverbose\fP、\fBexport\fP、\fBjson\fP、\fBjson\-pretty\fP、\fBjson\-sse\fP 和 \fBjson\-seq\fP) 以及
\fBcat\fP\& 的输出模式有影响。对于前者，始终打印
"__CURSOR"、"__REALTIME_TIMESTAMP"、"__MONOTONIC_TIMESTAMP" 和 "_BOOT_ID" 字段
\&。
.RE
.PP
\fB\-n\fP, \fB\-\-lines=\fP
.RS 4
显示最近的日志事件并限制显示的事件数 \&。如果使用 \fB\-\-follow\fP，则隐含此选项 \&。参数为正整数或 "all" 表示禁用行限制
\&。如果没有给出参数，默认值为 10\&。
.RE
.PP
\fB\-r\fP, \fB\-\-reverse\fP
.RS 4
反转输出，以便首先显示最新的条目 \&。
.RE
.PP
\fB\-\-show\-cursor\fP
.RS 4
游标显示在两个破折号之后的最后一个条目之后:
.sp
.if  n \{\
.RS 4
.\}
.nf
\-\- 游标: s=0639\&...
.fi
.if  n \{\
.RE
.\}
.sp
游标的格式是私有的，随时可能更改 \&。
.RE
.PP
\fB\-\-utc\fP
.RS 4
以协调世界时 (UTC)\& 表示的时间。
.RE
.PP
\fB\-x\fP, \fB\-\-catalog\fP
.RS 4
使用消息目录中的解释文本扩充日志行 \&。这将添加解释性帮助文本以在可用的输出中记录消息
\&。这些简短的帮助文本将解释错误或日志事件的上下文、可能的解决方案，以及指向支持论坛、开发人员文档和任何其他相关手册的指针。请注意，帮助文本并非适用于所有消息，但仅适用于选定的
\&。有关消息目录的更多信息，请参见 \m[blue]\fBMessage Catalog Developer Documentation\fP\m[]\&\s-2\u[6]\d\s+2\&。
.sp
Note: 将 \fBjournalctl\fP 输出附加到错误报告时，请使用 \fB\-x\fP\& 做 \fInot\fP。
.RE
.PP
\fB\-\-no\-hostname\fP
.RS 4
Don\*(Aqt 显示源自本地主机的日志消息的主机名字段 \&。此开关仅对 \fBshort\fP 系列输出模式 (见上文) \& 有影响。
.sp
Note: 此选项不会从日志条目本身中删除主机名的出现，因此它不会阻止主机名在日志中可见 \&。
.RE
.PP
\fB\-\-no\-full\fP, \fB\-\-full\fP, \fB\-l\fP
.RS 4
当字段不适合可用列时，将其省略 \&。默认是显示完整的字段，允许它们换行或被寻呼机截断，如果使用的话 \&。
.sp
旧选项 \fB\-l\fP/\fB\-\-full\fP 不再有用，除了撤消 \fB\-\-no\-full\fP\&。
.RE
.PP
\fB\-a\fP, \fB\-\-all\fP
.RS 4
完整显示所有字段，即使它们包含不可打印的字符或很长 \&。默认情况下，具有不可打印字符的字段缩写为 `blob
数据`\&。(请注意，寻呼机可能会再次转义不可打印的字符 \&。)
.RE
.PP
\fB\-f\fP, \fB\-\-follow\fP
.RS 4
仅显示最近的日记条目，并在新条目追加到日记后不断打印它们。
.RE
.PP
\fB\-\-no\-tail\fP
.RS 4
显示所有存储的输出行，即使在跟随模式下也是如此。撤销 \fB\-\-lines=\fP\& 的效果。
.RE
.PP
\fB\-q\fP, \fB\-\-quiet\fP
.RS 4
禁止显示所有信息性消息 (i\&.e\&."\-\- Journal begins at \&..."、"\-\- Reboot
\-\-")、以普通用户身份运行时有关无法访问系统日志的任何警告消息 \&。
.RE
.SH "PAGER CONTROL OPTIONS"
.PP
以下选项控制页面支持:
.PP
\fB\-\-no\-pager\fP
.RS 4
不要将输出通过管道传输到寻呼机 \&。
.RE
.PP
\fB\-e\fP, \fB\-\-pager\-end\fP
.RS 4
立即跳转到隐含的分页工具内的日志末尾 \&。这意味着 \fB\-n1000\fP 保证寻呼机不会缓冲无限大小的日志 \&。这可能会被带有一些其他数值的显式
\fB\-n\fP 覆盖，而 \fB\-nall\fP 将禁用此上限 \&。请注意，此选项仅支持 \fBless\fP(1) pager\&。
.RE
.SH "FORWARD SECURE SEALING (FSS) OPTIONS"
.PP
以下选项可与下述 \fB\-\-setup\-keys\fP 命令一起使用:
.PP
\fB\-\-interval=\fP
.RS 4
使用 \fB\-\-setup\-keys\fP\& 生成 FSS 密钥对时，指定密封密钥的更改间隔。较短的间隔会增加 CPU
消耗，但会缩短无法检测到的日志更改的时间范围。默认为 15 分钟 \&。
.RE
.PP
\fB\-\-verify\-key=\fP
.RS 4
指定用于 \fB\-\-verify\fP 操作 \& 的 FSS 验证密钥。
.RE
.PP
\fB\-\-force\fP
.RS 4
当传递 \fB\-\-setup\-keys\fP 并且已经配置了 Forward Secure Sealing (FSS) 时，重新创建 FSS 密钥 \&。
.RE
.SH COMMANDS
.PP
理解以下命令 \&。如果未指定，则默认显示日志记录 \&。
.PP
\fB\-N\fP, \fB\-\-fields\fP
.RS 4
打印当前在日志的所有条目中使用的所有字段名称 \&。
.RE
.PP
\fB\-F\fP, \fB\-\-field=\fP
.RS 4
打印指定字段在日志的所有条目中可以接受的所有可能的数据值。
.RE
.PP
\fB\-\-list\-boots\fP
.RS 4
显示启动编号 (相对于当前启动)、它们的 ID 以及与启动有关的第一条和最后一条消息的时间戳的表格列表。
.RE
.PP
\fB\-\-disk\-usage\fP
.RS 4
显示所有日志文件的当前磁盘使用情况 \&。这显示了所有归档和活动日志文件的磁盘使用总和 \&。
.RE
.PP
\fB\-\-vacuum\-size=\fP, \fB\-\-vacuum\-time=\fP, \fB\-\-vacuum\-files=\fP
.RS 4
删除最旧的归档日志文件，直到它们使用的磁盘空间低于指定大小 (用通常的 "K"、"M"、"G" 和 "T"
后缀指定)，或者所有归档日志文件不包含比指定时间跨度 (用通常的后缀指定) 更早的数据
"s"、"m"、"h"、"days"、"months"、"weeks" 和 "years" 后缀) 或不超过指定数量的单独日志文件保留
\&。请注意，运行 \fB\-\-vacuum\-size=\fP 仅对 \fB\-\-disk\-usage\fP
显示的输出产生间接影响，因为后者包含活动日志文件，而清理操作仅对归档日志文件 \& 进行操作。同样，\fB\-\-vacuum\-files=\fP
实际上可能不会将日志文件的数量减少到指定数量以下，因为它不会删除活动的日志文件 \&。
.sp
\fB\-\-vacuum\-size=\fP、\fB\-\-vacuum\-time=\fP 和 \fB\-\-vacuum\-files=\fP
可以组合在单个调用中，以对归档日志文件实现大小、时间和文件数量限制的任意组合
\&。将这三个参数中的任何一个指定为零等同于不强制执行特定限制，因此是多余的 \&。
.sp
这三个开关也可以与 \fB\-\-rotate\fP 组合成一个命令 \&。如果是这样，首先轮换所有活动文件，并在 \&
之后立即执行请求的清理操作。旋转的效果是所有当前活动的文件都被归档
(并且可能打开新的空日志文件作为替换)，因此清理操作具有最大的效果，因为它可以考虑到目前为止写入的所有日志数据 \&。
.RE
.PP
\fB\-\-verify\fP
.RS 4
检查日志文件的内部一致性 \&。如果文件是在启用 FSS 的情况下生成的，并且已使用 \fB\-\-verify\-key=\fP 指定了 FSS
验证密钥，则会验证日志文件的真实性 \&。
.RE
.PP
\fB\-\-sync\fP
.RS 4
要求日志守护进程将所有尚未写入的日志数据写入支持文件系统并同步所有日志 \&。这个调用直到同步操作完成后才返回
\&。此命令保证在调用它之前写入的任何日志消息在它返回时安全地存储在磁盘上 \&。
.RE
.PP
\fB\-\-relinquish\-var\fP
.RS 4
向日志守护进程请求对 \fB\-\-flush\fP: 的反向操作，如果请求守护进程将进一步写入日志数据到 /run/log/journal/ 并停止写入
/var/journal/\&。随后调用 \fB\-\-flush\fP 会导致日志输出切换回 /var/log/journal/，请参见上文 \&。
.RE
.PP
\fB\-\-smart\-relinquish\-var\fP
.RS 4
类似于 \fB\-\-relinquish\-var\fP，但如果根文件系统和 /var/lib/journal/ 在同一个挂载点
\&，则不执行任何操作。此操作在系统关闭期间使用，以便在目录位于需要卸载的挂载点上时使日志守护程序停止将数据写入 /var/log/journal/。
.RE
.PP
\fB\-\-flush\fP
.RS 4
要求日志守护进程将存储在 /run/log/journal/ 中的任何日志数据刷新到 /var/log/journal/ 中，如果启用了持久存储
\&。这个调用直到操作完成 \& 才返回。请注意，此调用是幂等的: 数据仅在系统运行时从 /run/log/journal/ 刷新到
/var/log/journal/ 一次 (但请参见下面的
\fB\-\-relinquish\-var\fP)，如果这已经发生，则此命令会干净地退出而不执行任何操作 \&。此命令有效地保证在返回 \& 时所有数据都刷新到
/var/log/journal/。
.RE
.PP
\fB\-\-rotate\fP
.RS 4
要求日志守护程序轮换日志文件 \&。这个调用直到轮换操作完成后才返回
\&。日志文件轮换的效果是所有当前活动的日志文件都被标记为已归档并重命名，因此它们永远不会写入 future\&。然后在其位置创建新的 (empty)
日志文件 \&。此操作可以与 \fB\-\-vacuum\-size=\fP、\fB\-\-vacuum\-time=\fP 和 \fB\-\-vacuum\-file=\fP
组合成单个命令，请参见上文 \&。
.RE
.PP
\fB\-\-header\fP
.RS 4
不显示日志内容，而是显示访问的日志字段的内部标题信息 \&。
.sp
当试图识别无序的日志条目时，此选项特别有用，例如当机器以错误的系统时间启动时会发生。
.RE
.PP
\fB\-\-list\-catalog \fP\fB[\fP\fI128\-bit\-ID\&...\fP]
.RS 4
将消息目录的内容列为消息 ID 表，以及它们的简短描述字符串 \&。
.sp
如果指定了任何 \fI128\-bit\-ID\fPs，则仅显示那些条目 \&。
.RE
.PP
\fB\-\-dump\-catalog \fP\fB[\fP\fI128\-bit\-ID\&...\fP]
.RS 4
显示消息目录的内容，条目由由两个短划线和 ID 组成的行分隔 (格式与 \&.catalog 文件相同) \&。
.sp
如果指定了任何 \fI128\-bit\-ID\fPs，则仅显示那些条目 \&。
.RE
.PP
\fB\-\-update\-catalog\fP
.RS 4
更新消息目录索引 \&。每次安装、删除或更新新目录文件时都需要执行此命令以重建二进制目录索引 \&。
.RE
.PP
\fB\-\-setup\-keys\fP
.RS 4
不显示日志内容，而是为前向安全密封 (FSS)\& 生成新的密钥对。这将生成密封密钥和验证密钥 \&。密封密钥存储在日志数据目录中，并应保留在主机上
\&。验证密钥应存储在外部 \&。请参见 \fBjournald.conf\fP(5) 中的 \fBSeal=\fP
选项以获取有关前向安全密封的信息以及指向参考学术论文的链接，该论文详细介绍了它所基于的密码学理论 \&。
.RE
.PP
\fB\-h\fP, \fB\-\-help\fP
.RS 4
打印一个简短的帮助文本并退出 \&。
.RE
.PP
\fB\-\-version\fP
.RS 4
打印一个短版本字符串并退出 \&。
.RE
.SH "EXIT STATUS"
.PP
成功返回 0; 否则，返回一个非零故障代码 \&。
.SH ENVIRONMENT
.PP
\fI$SYSTEMD_LOG_LEVEL\fP
.RS 4
发出消息的最大日志级别 (具有更高日志级别的消息，i\&.e\&。不太重要的消息将被抑制)
\&。\fBemerg\fP、\fBalert\fP、\fBcrit\fP、\fBerr\fP、\fBwarning\fP、\fBnotice\fP、\fBinfo\fP、\fBdebug\fP 之一
(按重要性递减顺序) 或 0\&...7\& 范围内的整数。有关详细信息，请参见 \fBsyslog\fP(3)\&。
.RE
.PP
\fI$SYSTEMD_LOG_COLOR\fP
.RS 4
一个布尔值 \&。如果为真，写入 tty 的消息将根据优先级着色。
.sp
这个设置只在消息直接写入终端时才有用，因为 \fBjournalctl\fP(1) 等显示日志的工具会自行根据日志级别给消息着色 \&。
.RE
.PP
\fI$SYSTEMD_LOG_TIME\fP
.RS 4
一个布尔值 \&。如果为 true，控制台日志消息将以时间戳 \& 为前缀。
.sp
这个设置只在消息直接写入终端或文件时才有用，因为 \fBjournalctl\fP(1) 等显示日志的工具会根据条目元数据自行附加时间戳 \&。
.RE
.PP
\fI$SYSTEMD_LOG_LOCATION\fP
.RS 4
一个布尔值 \&。如果为 true，消息将在源代码中以文件名和行号为前缀 \&。
.sp
请注意，日志位置通常作为元数据附加到日志条目中。尽管如此，在调试程序时将它直接包含在消息文本中还是很方便的 \&。
.RE
.PP
\fI$SYSTEMD_LOG_TID\fP
.RS 4
一个布尔值 \&。如果为真，消息将以当前数字线程 ID (TID)\& 为前缀。
.sp
请注意，此信息无论如何都作为元数据附加到日记条目 \&。尽管如此，在调试程序时将它直接包含在消息文本中还是很方便的 \&。
.RE
.PP
\fI$SYSTEMD_LOG_TARGET\fP
.RS 4
日志消息的目的地 \&。\fBconsole\fP (记录到附加的 tty)、\fBconsole\-prefixed\fP (记录到附加的
tty，但带有编码日志级别和 "facility" 的前缀，参见 \fBsyslog\fP(3)、\fBkmsg\fP
(记录到内核循环日志缓冲区)、\fBjournal\fP (记录到日志) 之一，\fBjournal\-or\-kmsg\fP (如果可用则记录到日志，否则记录到
kmsg)，\fBauto\fP (自动确定适当的日志目标，默认)，\fBnull\fP (禁用日志输出) \&。
.RE
.PP
\fI$SYSTEMD_PAGER\fP
.RS 4
未给出 \fB\-\-no\-pager\fP 时使用的寻呼机; 覆盖 \fI$PAGER\fP\&。如果 \fI$SYSTEMD_PAGER\fP 和 \fI$PAGER\fP
都没有设置，则依次尝试一组众所周知的寻呼机实现，包括 \fBless\fP(1) 和 \fBmore\fP(1)，直到找到一个
\&。如果没有发现寻呼机实现，则不调用寻呼机 \&。将此环境变量设置为空字符串或值 "cat" 等同于传递 \fB\-\-no\-pager\fP\&。
.sp
Note: 如果未设置 \fI$SYSTEMD_PAGERSECURE\fP，\fI$SYSTEMD_PAGER\fP (以及 \fI$PAGER\fP) 将被忽略
\&。
.RE
.PP
\fI$SYSTEMD_LESS\fP
.RS 4
覆盖传递给 \fBless\fP (默认 "FRSXMK") \& 的选项。
.sp
用户可能希望特别更改两个选项:
.PP
\fBK\fP
.RS 4
此选项指示寻呼机在按下 Ctrl+C 时立即退出 \&。要允许 \fBless\fP 自己处理 Ctrl+C 以切换回寻呼机命令提示符，请取消设置此选项
\&。
.sp
如果 \fI$SYSTEMD_LESS\fP 的值不包括 "K"，调用的分页器是 \fBless\fP，Ctrl+C 会被可执行文件忽略，需要分页器处理 \&。
.RE
.PP
\fBX\fP
.RS 4
此选项指示寻呼机不将 termcap 初始化和取消初始化字符串发送到终端 \&。它默认设置为允许命令输出在终端中保持可见，即使在寻呼机退出 \&
之后也是如此。然而，这会阻止某些寻呼机功能工作，特别是无法使用鼠标滚动分页输出。
.RE
.sp
有关更多讨论，请参见 \fBless\fP(1)\&。
.RE
.PP
\fI$SYSTEMD_LESSCHARSET\fP
.RS 4
覆盖传递给 \fBless\fP 的字符集 (默认为 "utf\-8"，如果调用终端被确定为与 UTF\-8 兼容) \&。
.RE
.PP
\fI$SYSTEMD_PAGERSECURE\fP
.RS 4
采用布尔型参数 \&。为真时，启用寻呼机的 "secure" 模式; 如果为假，则禁用 \&。如果根本未设置
\fI$SYSTEMD_PAGERSECURE\fP，则在有效 UID 与登录会话的所有者不同时启用安全模式，请参见 \fBgeteuid\fP(2) 和
\fBsd_pid_get_owner_uid\fP(3)\&。在安全模式下，调用寻呼机时将设置
\fBLESSSECURE=1\fP，寻呼机应禁用打开或创建新文件或启动新子进程的命令 \&。当根本没有设置 \fI$SYSTEMD_PAGERSECURE\fP
时，将不会使用未知实现安全模式的寻呼机 \&。(目前只有 \fBless\fP(1) 实现了安全模式 \&。)
.sp
Note: 当以提升的权限调用命令时，例如在 \fBsudo\fP(8) 或 \fBpkexec\fP(1) 下，必须小心确保未启用意外的交互，特性 \&。寻呼机的
"Secure" 模式可以如上所述自动启用 \&。设置 \fISYSTEMD_PAGERSECURE=0\fP 或不将其从继承环境中删除允许用户调用任意命令
\&。请注意，如果要兑现 \fI$SYSTEMD_PAGER\fP 或 \fI$PAGER\fP 变量，则必须同时设置
\fI$SYSTEMD_PAGERSECURE\fP\&。改为使用 \fB\-\-no\-pager\fP\& 完全禁用寻呼机可能是合理的。
.RE
.PP
\fI$SYSTEMD_COLORS\fP
.RS 4
采用布尔型参数 \&。当为真时，\fBsystemd\fP 和相关的实用工具将在其输出中使用颜色，否则输出将为单色 \&。此外，该变量可以采用以下特殊值之一:
"16"、"256"，分别将颜色的使用限制为基本 16 或 256 ANSI 颜色 \&。这可以被指定以覆盖基于 \fI$TERM\fP
和控制台连接到什么的自动决定 \&。
.RE
.PP
\fI$SYSTEMD_URLIFY\fP
.RS 4
该值必须是布尔值 \&。控制是否应在支持此 \& 的终端模拟器的输出中生成可点击链接。这可以被指定来覆盖 \fBsystemd\fP 基于 \fI$TERM\fP
和其他条件做出的决定 \&。
.RE
.SH EXAMPLES
.PP
没有参数，所有收集的日志都显示未过滤:
.sp
.if  n \{\
.RS 4
.\}
.nf
journalctl
.fi
.if  n \{\
.RE
.\}
.PP
指定一个匹配项后，将显示具有与表达式匹配的字段的所有条目:
.sp
.if  n \{\
.RS 4
.\}
.nf
journalctl _SYSTEMD_UNIT=avahi\-daemon\&.service
journalctl _SYSTEMD_CGROUP=/user\&.slice/user\-42\&.slice/session\-c1\&.scope
.fi
.if  n \{\
.RE
.\}
.PP
如果匹配了两个不同的字段，则只显示同时匹配两个表达式的条目:
.sp
.if  n \{\
.RS 4
.\}
.nf
journalctl _SYSTEMD_UNIT=avahi\-daemon\&.service _PID=28097
.fi
.if  n \{\
.RE
.\}
.PP
如果两个匹配项引用同一个字段，则显示与任一表达式匹配的所有条目:
.sp
.if  n \{\
.RS 4
.\}
.nf
journalctl _SYSTEMD_UNIT=avahi\-daemon\&.service _SYSTEMD_UNIT=dbus\&.service
.fi
.if  n \{\
.RE
.\}
.PP
如果使用分隔符 "+"，则两个表达式可以组合成逻辑 OR\&。以下将显示来自 PID 为 28097 的 Avahi 服务进程的所有消息以及来自
D\-Bus 服务 (来自其任何进程) 的所有消息:
.sp
.if  n \{\
.RS 4
.\}
.nf
journalctl _SYSTEMD_UNIT=avahi\-daemon\&.service _PID=28097 + _SYSTEMD_UNIT=dbus\&.service
.fi
.if  n \{\
.RE
.\}
.PP
要显示发出 \fIby\fP 元和 \fIabout\fP 元的所有字段，应使用选项 \fB\-u\fP/\fB\-\-unit=\fP\&。 \fBjournalctl \-u \fP\fIname\fP 扩展为一个复杂的过滤器，类似于
.sp
.if  n \{\
.RS 4
.\}
.nf
_SYSTEMD_UNIT=\fIname\fP\&.service
  + UNIT=\fIname\fP\&.service _PID=1
  + OBJECT_SYSTEMD_UNIT=\fIname\fP\&.service _UID=0
  + COREDUMP_UNIT=\fIname\fP\&.service _UID=0 MESSAGE_ID=fc2e22bc6ee647b6b90729ab34a250b1
.fi
.if  n \{\
.RE
.\}
.sp
(有关这些模式的解释，请参见 \fBsystemd.journal\-fields\fP(7)) \&。
.PP
显示 D\-Bus 可执行文件生成的所有日志:
.sp
.if  n \{\
.RS 4
.\}
.nf
journalctl /usr/bin/dbus\-daemon
.fi
.if  n \{\
.RE
.\}
.PP
显示上次启动的所有内核日志:
.sp
.if  n \{\
.RS 4
.\}
.nf
journalctl \-k \-b \-1
.fi
.if  n \{\
.RE
.\}
.PP
显示来自系统服务 apache\&.service 的实时日志显示:
.sp
.if  n \{\
.RS 4
.\}
.nf
journalctl \-f \-u apache
.fi
.if  n \{\
.RE
.\}
.SH "SEE ALSO"
.PP
\fBsystemd\fP(1), \fBsystemd\-cat\fP(1), \fBsystemd\-journald.service\fP(8),
\fBsystemctl\fP(1), \fBcoredumpctl\fP(1), \fBsystemd.journal\-fields\fP(7),
\fBjournald.conf\fP(5), \fBsystemd.time\fP(7),
\fBsystemd\-journal\-remote.service\fP(8), \fBsystemd\-journal\-upload.service\fP(8)
.SH NOTES
.IP " 1." 4
可发现分区规范
.RS 4
\%https://uapi\-group.org/specifications/specs/discoverable_partitions_specification
.RE
.IP " 2." 4
期刊导出格式
.RS 4
\%https://systemd.io/JOURNAL_EXPORT_FORMATS#journal\-export\-format
.RE
.IP " 3." 4
日志 JSON 格式
.RS 4
\%https://systemd.io/JOURNAL_EXPORT_FORMATS#journal\-json\-format
.RE
.IP " 4." 4
服务器发送的事件
.RS 4
\%https://developer.mozilla.org/en\-US/docs/Server\-sent_events/Using_server\-sent_events
.RE
.IP " 5." 4
JavaScript 对象表示法 (JSON) 文本序列
.RS 4
\%https://tools.ietf.org/html/rfc7464
.RE
.IP " 6." 4
消息目录开发者文档
.RS 4
\%https://www.freedesktop.org/wiki/Software/systemd/catalog
.RE
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
