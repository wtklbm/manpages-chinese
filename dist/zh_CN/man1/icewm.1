.\" -*- coding: UTF-8 -*-
.de  Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de  Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de  Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie  n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.ie  \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.de  IX
..
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.nr rF 0
.if  \n(.g .if rF .nr rF 1
.if  (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" fudge factors for nroff and troff
.    
.if  n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.if  t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.\" simple accents for nroff and troff
.    
.if  n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if  t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.\" troff and (daisy-wheel) nroff accents
.    
.ds : \k:\h'-(\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \k:\h'-(\n(.wu+\w'\(de'u\-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\fI\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.\" corrections for vroff
.    
.if  v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if  v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.\" for low resolution devices (crt and lpr)
.    
.if  \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "ICEWM 1"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH ICEWM 1 2023\-01\-23 "icewm 3.3.1" "User Commands"
.if  n .ad l
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.nh
.SS \s-1NAME\s0
.IX Subsection NAME
.Vb 1
\&icewm \- 轻量级 X11 窗口管理器
.Ve
.SS \s-1SYNOPSIS\s0
.IX Subsection SYNOPSIS
\&\fBicewm\fP [\fI\s-1OPTIONS\s0\fP]
.SS \s-1DESCRIPTION\s0
.IX Subsection DESCRIPTION
\&\fBicewm\fP 是 X11 窗口系统的窗口管理器。 它的目标是小，快，新用户熟悉。
.PP
\&\fBicewm\fP 被称为重父窗口管理器，因为它在应用程序 windows 周围绘制小框架。 通过用鼠标拖动此框，可以调整或移动 windows。
.PP
因为 windows 可能重叠，所以 \fBicewm\fP 也是一个堆叠窗口管理器。 许多 windows 可能存在，有些隐藏在其他后面。
.PP
\&\fBicewm\fP 支持可配置数量的虚拟桌面。 这些被称为工作空间。相关的 windows 被分组在一个专用的工作区中。
通过在工作空间之间切换，用户可以参加不同的任务，同时保持监督。 这是由任务栏和寻呼机支持的。
.PP
安装带有几个主题。通过菜单选择主题。
.PP
\&\fBicewm\fP 符合 \s-1ICCCM\s0 和 \s-1EWMH\s0 窗口管理器规范。
.SS \s-1PROGRAMS\s0
.IX Subsection PROGRAMS
\fBicewm\fP 软件包包括几个程序:
.IP \fBicewm\fP\|(1) 4
.IX Item icewm
实际的窗口管理器。它将应用程序 windows 定位在屏幕上并用边框装饰它们。它为当前活动的应用程序提供输入焦点。\fBicewm\fP
支持不同的对焦模式，下面将对其进行说明。它在屏幕底部绘制了一个小任务栏，可以方便地访问程序、虚拟桌面、活动应用程序和一小组监控小程序。
.IP \fBicewmbg\fP\|(1) 4
.IX Item icewmbg
后台设置应用程序。它可以为 X 背景分配纯背景颜色或不同格式的图像。 每个工作区都可以有自己的背景。
它支持半透明。可以配置半透明背景图像和颜色。当背景图像发生变化时，可以通知 \fBicewmbg\fP\|(1) 更新背景。 完全支持多头显示器设置。 请参见
\fBicewmbg\fP\|(1)。
.IP \fBicewm\-session\fP\|(1) 4
.IX Item icewm\-session
\&\fBicewm\-session\fP\|(1) 是启动 IceWM 系统的首选程序。 它首先从可选的 \&\fIenv\fP 文件加载额外的环境变量。然后启动
\fBicewmbg\fP\|(1) 和 \fBicewm\fP。它还运行 \fIstartup\fP 脚本并实现基本的会话管理。 终止时，\fIshutdown\fP
脚本将首先运行，然后 \&\fBicewm\-session\fP\|(1) 将终止 \fBicewm\fP 和 \fBicewmbg\fP\|(1)。 如果您为
\&\fBicewm\-session\fP\|(1) 提供 \fB\-\-sound\fP 选项，\&\fBicewm\-session\fP\|(1) 也将启动可选的
\fBicesound\fP\|(1)。 请参见 \fBicewm\-session\fP\|(1)。
.IP \fBicesh\fP\|(1) 4
.IX Item icesh
一个控制窗口属性和与窗口管理器交互的强大工具。它通常用于 shell 脚本。请参见 \fBicesh\fP\|(1)。
.IP \fBicehelp\fP\|(1) 4
.IX Item icehelp
一个小型文档浏览器，\fBicewm\fP 使用它来显示 \&'IceWM 手册 ' 和一些手册页。
.IP \fBicewmhint\fP\|(1) 4
.IX Item icewmhint
用于将 IceWM 特定窗口选项传递给 \fBicewm\fP 的实用程序。 这些选项用于配置随后启动的第一个应用程序。 请参见
\fBicewmhint\fP\|(1)。
.IP \fBicesound\fP\|(1) 4
.IX Item icesound
在 \fBicewm\fP 引发的 \s-1GUI\s0 事件上播放音频文件。 它支持 \s-1ALSA、AO\s0 和 \s-1OSS。\s0 请参见
\fBicesound\fP\|(1) 手册页。
.IP \fBicewm\-menu\-fdo\fP\|(1) 4
.IX Item icewm\-menu\-fdo
根据 \s-1XDG\s0 规范生成带有可执行桌面应用程序的 \fBicewm\fP 菜单。请参见 \fBicewm\-menu\-fdo\fP\|(1) 手册页。
.IP \fBicewm\-set\-gnomewm\fP\|(1) 4
.IX Item icewm\-set\-gnomewm
配置 \s-1GNOME\s0 以启动 IceWM 而不是它自己的 \s-1WM。\s0
.SS \s-1OPTIONS\s0
.IX Subsection OPTIONS
.SS "\s-1COMMON OPTIONS\s0"
.IX Subsection "COMMON OPTIONS"
每个 IceWM 可执行文件都支持以下选项:
.IP "\fB\-c\fP, \fB\-\-config\fP=\fI\s-1FILE\s0\fP" 4
.IX Item "\-c, \-\-config=FILE"
使用 \fI\s-1FILE\s0\fP 作为配置选项的来源。 默认情况下，\fBicewm\fP 查找名为 \fIpreferences\fP 的文件。
这是一个可读的文本文件，可以在文本编辑器的帮助下进行修改。
.IP "\fB\-t\fP, \fB\-\-theme\fP=\fI\s-1NAME\s0\fP" 4
.IX Item "\-t, \-\-theme=NAME"
使用 \fI\s-1NAME\s0\fP 作为要使用的 \fBicewm\fP 主题的名称。 主题定义 \fBicewm\fP 的外观和感觉，如颜色、字体和按钮。
.IP "\fB\-d\fP, \fB\-\-display\fP=\fI\s-1DISPLAY\s0\fP" 4
.IX Item "\-d, \-\-display=DISPLAY"
连接到 \fI\s-1DISPLAY\s0\fP 上的 X11 服务器。 默认使用环境变量 \f(CW\*(C`DISPLAY\*(C'\fP。
.IP \fB\-\-sync\fP 4
.IX Item \-\-sync
该选项指定与 X11 服务器使用较慢的同步通信模式。 这与正常使用无关。
.IP "\fB\-h\fP, \fB\-\-help\fP" 4
.IX Item "\-h, \-\-help"
给出了所有可用命令行选项的完整列表以及一些非常简短的解释。
.IP "\fB\-V\fP, \fB\-\-version\fP" 4
.IX Item "\-V, \-\-version"
显示此程序的软件发行版本。
.SS "\s-1ICEWM OPTIONS\s0"
.IX Subsection "ICEWM OPTIONS"
\fBicewm\fP 程序支持一些额外的选项:
.IP "\fB\-a\fP, \fB\-\-alpha\fP" 4
.IX Item "\-a, \-\-alpha"
使用 32 位视觉对象实现半透明。这也可以在首选项文件中设置为 \f(CW\*(C`Alpha=1\*(C'\fP。
.IP \fB\-\-replace\fP 4
.IX Item \-\-replace
指示 \fBicewm\fP 替换现有的窗口管理器。 如果被替换的窗口管理器是 \s-1ICCCM 2.0\s0
兼容的，一旦它注意到它要被替换，它将停止操作并且通常会停止执行。 这允许 \fBicewm\fP 将自己确立为唯一活动的窗口管理器。
.IP "\fB\-r\fP, \fB\-\-restart\fP" 4
.IX Item "\-r, \-\-restart"
告诉 \fBicewm\fP 自己重新启动。这将从文件重新加载配置。如果没有窗口管理器处于活动状态，则它会启动一个。
.IP "\fB\-s\fP, \fB\-\-splash\fP=\fI\s-1IMAGE\s0\fP" 4
.IX Item "\-s, \-\-splash=IMAGE"
启动时在屏幕中央短暂显示 \fI\s-1IMAGE\s0\fP。 这也可以在首选项文件中设置为 Splash=\f(CW\*(C`image.jpg\*(C'\fP。
.IP \fB\-\-configured\fP 4
.IX Item \-\-configured
显示从源代码编译 \fBicewm\fP 时启用的配置选项列表。 如果怀疑某些功能可能缺失，这会很有帮助。
.IP \fB\-\-directories\fP 4
.IX Item \-\-directories
给出 \fBicewm\fP 将在其中查找配置数据的目录列表。 该列表按 \fBicewm\fP 使用它搜索配置文件的实际顺序打印。
.IP "\fB\-l\fP, \fB\-\-list\-themes\fP" 4
.IX Item "\-l, \-\-list\-themes"
\&\fBicewm\fP 将在所有配置目录中搜索主题文件并打印所有找到的主题的列表。
.IP "\fB\-p\fP, \fB\-\-postpreferences\fP" 4
.IX Item "\-p, \-\-postpreferences"
在 \fBicewm\fP 处理完所有配置和主题文件后，这给出了所有内部 \fBicewm\fP
选项及其实际值的长列表。在某些高级场景中，这有助于检查选择了哪个配置或选项格式是否正确。
.IP \fB\-\-rewrite\-preferences\fP 4
.IX Item \-\-rewrite\-preferences
使用 icewm 默认首选项覆盖现有的首选项文件，但保留所有与默认设置不同的修改。
.IP \fB\-\-extensions\fP 4
.IX Item \-\-extensions
给出当前 X 扩展的列表、它们的版本和状态。
.IP \fB\-\-trace\fP=\fIconf\fP,\fIfont\fP,\fIicon\fP,\fIprog\fP,\fIsystray\fP 4
.IX Item \-\-trace=conf,font,icon,prog,systray
启用跟踪用于加载配置、字体、图标、已执行程序或者系统托盘小程序的路径。
.SS \s-1USAGE\s0
.IX Subsection USAGE
.SS \s-1TASKBAR\s0
.IX Subsection TASKBAR
启动时，\fBicewm\fP 会在屏幕底部启动任务栏。 任务栏从左到右由以下组件组成:
.PP
左下角的 \fIMenu\fP 按钮可以访问 \fBicewm\fP 根菜单。该菜单包含启动应用程序、控制 \&\fBicewm\fP 设置和 \fBicewm\fP
\fILogout\fP 菜单的子菜单。
.PP
\fIShow Desktop\fP 按钮取消映射所有应用程序 windows 以完全显示桌面。
.PP
\fIWindow List Menu\fP 按钮可以访问一个菜单，其中包含当前工作区的活动 windows 列表和工作空间列表及其活动应用程序
windows 的子菜单。
.PP
\fIToolbar\fP 是工具栏配置文件中定义的应用程序图标列表。
.PP
\fIWorkspace Pane\fP 为每个工作区显示一个按钮。 当前工作区由按下的按钮指示。 单击另一个工作区会切换到该工作区。 按下鼠标左键，然后按下
Shift 键，然后释放鼠标左键，将当前窗口带到该工作区。 按左键，然后按 Alt，然后松开左键，仅将焦点窗口移动到其他工作区，而不更改当前工作区。
.PP
工作空间在 \fIpreferences\fP 文件中定义。 要仅更改此会话的名称，请双击，编辑名称并按 Enter。 当
\f(CW\*(C`PagerShowPreview\*(C'\fP 打开时，会显示每个工作区的小图形窗口总结。它们支持拖放: 将 Firefox
选项卡拖到工作区按钮会更改当前工作区。 然后释放它将该选项卡移动到该工作区中的新窗口。
.PP
\fITask Pane\fP 包含当前工作区上运行的每个应用程序的宽按钮列表，如果是
\&\f(CW\*(C`TaskBarShowAllWindows=1\*(C'\fP，则包含所有工作空间。 每个任务按钮显示应用程序图标和应用程序标题。
活动应用程序由按下的按钮指示。 这是具有输入焦点的应用程序。 按下另一个按钮激活该应用程序: 它被带到前台并接收输入焦点。
窗口按钮上的其他鼠标控制活动有: 用鼠标左键拖动窗口按钮以重新排列顺序，用 \f(CW\*(C`Alt\*(C'\fP + 中键关闭应用程序窗口，用
\&\f(CW\*(C`Ctrl\*(C'\fP + 中键降低应用程序窗口，或将应用程序窗口带到当前工作区 \f(CW\*(C`Shift\*(C'\fP + 中间按钮
(如果 \f(CW\*(C`TaskBarShowAllWindows=1\*(C'\fP)。
.PP
如果应用程序按钮不多，则可以看到一段普通的任务栏。 用鼠标右键单击它会出现任务栏菜单。
即使有一个完整的任务窗格，通常也可以通过右键单击任务栏的右下角来访问此菜单。
.PP
\fITray Applet\fP 显示系统托盘对象。
.PP
\fI\s-1APM\s0 Applet\fP 显示电池电量状态。
.PP
\fINet Applet\fP 显示网络活动。 要监视的网络设备由 \f(CW\*(C`NetworkStatusDevice\*(C'\fP 选项给出。
.PP
\fIMemory Applet\fP 监控内存使用情况。
.PP
\fI\s-1CPU\s0 Applet\fP 监控处理器利用率。
.PP
\fIMailbox Applet\fP 监控邮箱状态变化。 请参见下面的 \s-1MAILBOX MONITORING\s0 部分。
.PP
\fIClock Applet\fP 显示当前时间和日期。 它由 \f(CW\*(C`TimeFormat\*(C'\fP 选项配置。
.PP
\fITask Bar Collapse\fP 按钮折叠并隐藏任务栏。
.PP
并非所有 \fBicewm\fP 小程序都可能显示在任务栏上。 它们必须在配置 \fBicewm\fP 软件期间启用。 它们的外观也由 \fIpreferences\fP
文件中的选项控制。
.SS "\s-1INPUT FOCUS\s0"
.IX Subsection "INPUT FOCUS"
在所有可见的 windows 中，只有一个可以是活动窗口。 这是具有输入焦点的窗口。
它是键盘和鼠标事件的主要接收者，因此可以与创建该窗口的应用程序进行交互。 窗口管理器的一项主要任务是允许用户在不同的 windows 之间切换输入焦点。
执行此操作的主要方法是鼠标指针。 通过将鼠标指针在屏幕上移动到另一个窗口，也许还可以通过单击一个窗口，可以定向输入焦点。
.PP
\f(CW\*(C`FocusMode\*(C'\fP 选项控制 \fBicewm\fP 为应用程序提供输入焦点的方式。 它由 \fIfocus_mode\fP
配置文件初始化。 对焦模式通过 \fIFocus\fP 菜单设置。 \fBicewm\fP 支持六种对焦模式:
.IP "\fB1. Click\-to\-focus\fP" 4
.IX Item "1. Click\-to\-focus"
默认对焦模式。 在此模式下，更改输入焦点需要使用鼠标左键单击窗口。如果需要，窗口会升起。 当应用程序请求焦点时，其任务窗格按钮会闪烁。
这提供了接受或忽略此请求的选项。 当一个新的应用程序窗口出现时，它会自动获得焦点。 此外，当隐藏的应用程序提升到最前面时，它会获得焦点。
.IP "\fB2. Sloppy\-mouse\-focus\fP" 4
.IX Item "2. Sloppy\-mouse\-focus"
仅通过将鼠标指针移到窗口上来设置输入焦点。 之所以称为草率，是因为如果鼠标随后离开窗口并移动到桌面背景，输入焦点将保留在最后一个活动窗口中。
当一个窗口获得焦点时，它会被提升。 当应用程序请求焦点时，其任务窗格按钮会闪烁。 新应用程序或提升到最前面的应用程序会自动获得焦点。
.IP "\fB3. Explicit\-focus\fP" 4
.IX Item "3. Explicit\-focus"
焦点比 \fBClick\-to\-focus\fP 更受用户控制。 当窗口获得焦点时，默认情况下它不会升起，除非单击框架边框。
当应用程序请求焦点时不会发生闪烁。 当出现新的应用程序窗口时，它不会获得焦点。 只有通过显式单击窗口才能获得焦点。
.IP "\fB4. Strict\-mouse\-focus\fP" 4
.IX Item "4. Strict\-mouse\-focus"
与 \fBSloppy\fP 类似，但焦点仍停留在最后一个窗口。新应用程序不会获得焦点，并映射到其他 windows 后面。
当一个应用程序被提升到最前面时，它仍然没有获得焦点。
.IP "\fB5. Quiet\-sloppy\-focus\fP" 4
.IX Item "5. Quiet\-sloppy\-focus"
与 \fBSloppy\fP 类似，但当应用程序请求焦点时，任务栏上不会出现令人不安的闪烁。
.IP "\fB6. Custom\-mode\fP" 4
.IX Item "6. Custom\-mode"
\&\fIpreferences\fP 文件中的十个选项详细定义了一种对焦模式。 它们是:
\&\f(CW\*(C`ClickToFocus\*(C'\fP、\&\f(CW\*(C`FocusOnAppRaise\*(C'\fP、\&\f(CW\*(C`RequestFocusOnAppRaise\*(C'\fP、\&\f(CW\*(C`RaiseOnFocus\*(C'\fP、\&\f(CW\*(C`RaiseOnClickClient\*(C'\fP、\&\f(CW\*(C`FocusChangesWorkspace\*(C'\fP、\&\f(CW\*(C`FocusOnMap\*(C'\fP、\&\f(CW\*(C`FocusOnMapTransient\*(C'\fP、\&\f(CW\*(C`FocusOnMapTransientActive\*(C'\fP、\&\f(CW\*(C`MapInactiveOnTop\*(C'\fP。
.Sp
所有非自定义对焦模式都会覆盖这十个选项。
.PP
除了鼠标，\fBicewm\fP 还支持通过键盘两种方式改变输入焦点。 通过按 \f(CW\*(C`Alt+Esc\*(C'\fP 或
\f(CW\*(C`Alt+Shift+Esc\*(C'\fP，输入焦点立即更改为下一个或上一个窗口，该窗口将被提升以使其完全可见。另一种方法涉及快速切换。
.SS "\s-1QUICK SWITCH\s0"
.IX Subsection "QUICK SWITCH"
\fBQuickSwitch\fP 是一种快速交互地将输入焦点更改到另一个窗口的方法。 它通过按 \&\f(CW\*(C`Alt+Tab\*(C'\fP 或
\f(CW\*(C`Alt+Shift+Tab\*(C'\fP 组合键激活。 屏幕中央会弹出一个窗口，其中包含可供选择的 windows 列表。 narrow
带表示一个选择: 释放 Alt 键时将被激活以接收输入焦点的候选窗口。
.PP
可以通过反复按 Tab 键，同时按住 Alt 键来更改选择。如果同时按下 Shift 键，则遍历方向相反。或者使用鼠标的滚轮。
或者使用其中一个数字键从列表中选择相应的窗口。 还支持箭头键，以及 Home 和 End 键。
.PP
要使选定窗口成为活动窗口，只需松开 Alt 键，或按下 Return 键，或单击它。 要取消 QuickSwitch，请按 Escape 或在
QuickSwitch 窗口外单击。
.PP
可以通过删除、\f(CW\*(C`Alt+F4\*(C'\fP 或鼠标中键关闭选定的窗口。 当 QuickSwitch
窗口打开时，您仍然可以使用常用的工作区热键更改工作区。
.PP
QuickSwitch 有两种不同的模式: 垂直和水平。 窗口列表可以包括所有 windows 或仅限于当前工作区。有一个选项可以提高选定的候选人。
查看可用于 QuickSwitch 的许多首选项。
.SS "\s-1WINDOW PLACEMENT\s0"
.IX Subsection "WINDOW PLACEMENT"
窗口管理器的第二个重要任务是在屏幕上放置新的 windows。 默认情况下，\fBicewm\fP 选择重叠最少的放置，但这由
\&\fIpreferences\fP 文件中的 \f(CW\*(C`SmartPlacement\*(C'\fP 选项决定。 如果
\f(CW\*(C`SmartPlacement\*(C'\fP 关闭，则 windows 按从左到右、从上到下的顺序放置。 也可以打开
\f(CW\*(C`ManualPlacement\*(C'\fP。 然后新的 windows 最初出现在左上角，鼠标游标变为拳头。
通过将拳头游标移动到合适的位置并单击新窗口将出现在鼠标单击的位置。
.SS "\s-1WINDOW LAYERS\s0"
.IX Subsection "WINDOW LAYERS"
Windows 可以重叠。 哪个窗口出现在顶部由三个特性决定。 较新的 windows 出现在较旧的 windows 之上。
通过单击一个窗口，它会被提升到顶部。 但是两者都被窗口层否决了。 Windows 可以通过 \fILayers\fP 菜单放置在不同的层中。
在窗框上单击鼠标右键并选择 \&\fILayer\fP。 从那里选择七个窗口层之一。 这些是从高到低排列的。 较高层中的 Windows 出现在较低层中的
windows 之上。
.SS "\s-1TABBED WINDOWS\s0"
.IX Subsection "TABBED WINDOWS"
一个窗口框架可能包含多个客户端 windows。只有一个客户端可见，而其他客户端则隐藏。这称为制表符。 这有助于减少可见 windows
的数量。要创建选项卡，请在按住 Shift
键的同时使用鼠标中键将标题栏拖到另一个框架的标题栏上。两个标题栏将开始闪烁，表示它们可以合并。松开鼠标键，将上层窗口的客户端合并到下层窗口中。
现在下框架将有多个客户端，称为选项卡。标题栏将显示一个带有三点的垂直条来表示这一点。 要更改当前选项卡:
.IP \(bu 4
单击垂直条旁边的三点。
.IP \(bu 4
使用 \f(CW\*(C`KeyWinNext=Alt+F6\*(C'\fP 选择下一个选项卡。
.IP \(bu 4
将 \f(CW\*(C`KeyWinPrev=Alt+Shift+F6\*(C'\fP 用于上一个选项卡。
.IP \(bu 4
使用快速切换。
.IP \(bu 4
使用窗口列表窗口。
.IP \(bu 4
使用窗口菜单中的子菜单。
.PP
要更改用于创建选项卡的鼠标绑定，请修改
\&\fBMouseWinTabbing\fP=\f(CW\*(C`Shift+Pointer_Button2\*(C'\fP。 另一个有用的设置是
\fBMouseWinTabbing\fP=\f(CW\*(C`Pointer_Button1\*(C'\fP。
.PP
\&\f(CW\*(C`Alt+F4\*(C'\fP 关闭所有选项卡。要仅关闭活动选项卡，请添加到 \f(CW\*(C`keys\*(C'\fP:
.PP
.Vb 1
\& 键 "Ctrl+Shift+F4" icesh \-f 关闭
.Ve
.PP
要通过按键将活动选项卡移动到它自己的窗口框架，请添加到 \f(CW\*(C`keys\*(C'\fP:
.PP
.Vb 1
\& 键 "Alt+u" icesh \-f untab
.Ve
.PP
要在同一帧中打开所有 chrome windows，请将其添加到 \f(CW\*(C`winoptions\*(C'\fP:
.PP
.Vb 1
\& 谷歌 \- chrome.frame: chrome
.Ve
.SS \s-1WORKSPACES\s0
.IX Subsection WORKSPACES
\&\fBicewm\fP 支持多个称为工作空间的虚拟桌面。 工作区就像一个屏幕，其中映射了所有应用程序 windows 的子集。
得益于多个工作空间，我们可以更轻松地管理大量应用程序。 工作空间的数量及其名称可通过 \&\f(CW\*(C`WorkspaceNames\*(C'\fP
选项在 \fIpreferences\fP 文件中配置。 默认创建四个工作空间，名称分别为 1、2、3 和 4，因此:
.PP
.Vb 1
\& WorkspaceNames=" 1 ", " 2 ", " 3 ", " 4 "
.Ve
.PP
此语法对于接收多个值的 \fBicewm\fP 选项是典型的。 它是一个逗号分隔值的列表，每个值都可以被引用。
.PP
工作空间在工具栏上可见。 可以通过按工具栏中的工作区按钮切换到不同的工作区，但在熟悉下面的 `键盘快捷键` 后，人们会想使用热键来选择工作区。 如果在
\fIpreferences\fP 文件中启用了 \f(CW\*(C`EdgeSwitch\*(C'\fP 选项 (使用子选项
\&\f(CW\*(C`HorizontalEdgeSwitch\*(C'\fP 和
\f(CW\*(C`VerticalEdgeSwitch\*(C'\fP)，则可以通过将鼠标移动到屏幕的 edge 来移动到下一个或上一个工作区。
\f(CW\*(C`ContinuousEdgeSwitch\*(C'\fP 选项可以连续移动到后续工作空间。
\f(CW\*(C`EdgeSwitchDelay\*(C'\fP 选项表示在更改工作区之前要等待多长时间。
.PP
要将应用程序窗口移动到不同的工作区，可以使用键盘快捷键。 另一种选择是在窗口框架的窗口菜单中选择 \fIMove To\fP 子菜单。
.SS "\s-1DRAG AND DROP\s0"
.IX Subsection "DRAG AND DROP"
任务栏支持拖动和丢弃操作。当拖动正在进行时，可以通过将拖动图标悬停在该窗口的任务按钮上来激活目标窗口。
或者，可以通过将拖动图标悬停在所需工作区按钮上来更改当前工作区。 当启用 edge 切换时，也可以通过将拖动图标带到屏幕 edge 来更改当前工作区。
.SS "\s-1ADDRESS BAR\s0"
.IX Subsection "ADDRESS BAR"
如果 \fBEnableAddressBar\fP=1 则 \fBKeySysAddressBar\fP=\f(CW\*(C`Alt+Ctrl+Space\*(C'\fP
激活任务栏中的地址栏。 如果是 \fBShowAddressBar\fP=1，则始终显示。这是任务栏中的命令行，可以在其中键入 shell 命令。 按
\f(CW\*(C`Enter\*(C'\fP 将执行命令。 \&\fBAddressBarCommand\fP=\f(CW\*(C`/bin/sh\*(C'\fP
将用于执行命令。 在 \f(CW\*(C`Control+Enter\*(C'\fP 上，命令在 \fBTerminalCommand\fP 给出的终端中执行。
地址栏保留了一个历史记录，可以通过 \fIUp\fP 和 \fIDown\fP 键进行导航。 它支持使用 \f(CW\*(C`Tab\*(C'\fP 或
\f(CW\*(C`Ctrl+I\*(C'\fP 完成命令。 支持一组丰富的编辑操作，包括 cut\-/copy\-/paste\-operations。
.SS "\s-1WINDOW LIST\s0"
.IX Subsection "WINDOW LIST"
窗口列表窗口显示所有工作空间的列表。对于每个工作区，它显示映射到其上的 windows 的窗口标题。底部条目显示为 \f(CW\*(C`All Workspaces\*(C'\fP。它持有粘性 windows。这些 windows 映射在所有的工作空间中。
.PP
窗口列表窗口通常是隐藏的。选择以下四种方法之一使其可见:
.IP \(bu 4
选择底部窗口列表菜单条目。
.IP \(bu 4
按 \f(CW\*(C`KeySysWindowList=Ctrl+Alt+Esc\*(C'\fP 键。
.IP \(bu 4
如果 \f(CW\*(C`Win95Keys=1\*(C'\fP 按右 Windows 键
.IP \(bu 4
在根窗口中按下 \f(CW\*(C`DesktopWinListButton=2\*(C'\fP 鼠标按钮。
.IP \(bu 4
在任务栏上的工作区按钮中按鼠标中键。
.PP
单击窗口条目将其选中。可以通过 \f(CW\*(C`Shift+Pointer_Button1\*(C'\fP 或鼠标左键拖动来选择一组 windows。使用
\f(CW\*(C`Ctrl+Pointer_Button1\*(C'\fP 在多选中单独选择 windows。在一个选择上单击鼠标右键将弹出该选择的系统菜单。
要关闭选定的 windows，请按 \f(CW\*(C`Delete\*(C'\fP。按 \f(CW\*(C`Shift+Delete\*(C'\fP 强行杀死他们。
在粘性 windows 下方单击鼠标右键，以获取包含窗口排列操作的菜单。
.PP
双击工作区以切换到它。 双击一个窗口将其激活。 或者通过箭头键导航并按 Enter。 空格键切换窗口的选择。\f(CW\*(C`Ctrl+a\*(C'\fP 和
\f(CW\*(C`Ctrl+/\*(C'\fP 将选择 windows 的整个列表。\f(CW\*(C`Ctrl+\e\e\*(C'\fP 取消选择所有内容。
按窗口标题的第一个字母导航到它并选择它。如果多个 windows 的标题以相同的字母开头，则重复按第一个字母会在这些 windows 上循环。
\&\f(CW\*(C`Home\*(C'\fP 选择第一个条目，\f(CW\*(C`End\*(C'\fP 选择最后一个条目。\f(CW\*(C`PageUp\*(C'\fP
和 \&\f(CW\*(C`PageDown\*(C'\fP 向上或向下移动十个条目。将其与 \&\f(CW\*(C`Shift\*(C'\fP
键结合使用以扩展运动范围内的选择。
.SS "\s-1MAILBOX MONITORING\s0"
.IX Subsection "MAILBOX MONITORING"
任务栏可以显示一个或多个图标来反映邮箱的状态。邮箱可以是本地文件或远程 \s-1POP\s0 或 \s-1IMAP\s0
帐户。为此，必须设置几个选项。首先，必须启用 \&\fITaskBarShowMailboxStatus\fP，这是默认设置。 然后必须设置邮箱的位置。
Icewm 首先在偏好设置中寻找 \&\fIMailBoxPath\fP。如果未设置，它会查看环境变量 \f(CW\*(C`MAILPATH\*(C'\fP 和
\f(CW\*(C`MAIL\*(C'\fP。 \fIMailBoxPath\fP 可能包含以空格分隔的邮箱列表，而 \f(CW\*(C`MAILPATH\*(C'\fP
可能包含以冒号分隔的邮箱列表。 如果邮箱以斜杠 \f(CW\*(C`/\*(C'\fP 开头，则它是本地文件，否则为 \s-1URL。\s0
以下是可能的邮箱的六个示例:
.PP
.Vb 6
\& file:///var/spool/mail/captnmark \& file:///home/captnmark/Maildir/ \&
pop3://markus:%2f%40%3a@maol.ch/ \& pop3s://markus:password@pop.gmail.com/
\& imap://mathias@localhost/INBOX.Maillisten.icewm\-user \&
imaps://mathias:password@imap.gmail.com/INBOX
.Ve
.PP
\s-1POP3S\s0 和 \s-1IMAPS\s0 方案使用 \f(CW\*(C`openssl\*(C'\fP 进行 \s-1TLS/SSL\s0 加密。
请注意，要使 IceWM 访问 Gmail，您必须首先配置您的 Gmail 帐户以启用 \s-1POP3\s0 或 \s-1IMAP\s0 访问。
确保您对 IceWM 首选项文件和包含它的目录具有安全文件权限。
.PP
密码中的保留字符，如 \fIslash\fP、\fIat\fP 和 \fIcolon\fP，可以使用十六进制编码的转义序列指定，如 \f(CW%2f\fP 用于斜线或
\f(CW%40\fP 用于 at 符号。 例如，要对 \f(CW\*(C`!p@a%s&s~\*(C'\fP 进行十六进制编码，请使用以下 Perl 片段:
.PP
.Vb 2
\& perl \-e \*(Aqforeach(split("", $ARGV[0])) { printf "%%%02x", ord($_); };
\& print "\en";\*(Aq \*(Aq!p@a%s&s~\*(Aq
.Ve
.PP
哪个将打印:
.PP
.Vb 1
\& %21%40%23%24%25%5e%26%2a%7e
.Ve
.PP
这是十六进制编码的密码。但是，在您的首选项中存储密码是不明智的。考虑 IceWM 的钱包扩展。
.PP
IceWM 会定期检查邮箱。以秒为单位的周期可以通过 \fIMailCheckDelay\fP 选项设置，默认为 30 秒。
.PP
每当有新邮件到达时，邮箱图标将突出显示。 颜色将指示邮件是否已被阅读。将鼠标悬停在邮箱图标上将显示包含更多详细信息的工具提示。
也可以对新邮件运行命令。设置 \fINewMailCommand\fP 选项。它的环境将具有 IceWM 设置的这些变量:
.IP \s-1ICEWM_MAILBOX\s0 4
.IX Item ICEWM_MAILBOX
\fIMailBoxPath\fP 起始的邮箱索引号 1.
.IP \s-1ICEWM_COUNT\s0 4
.IX Item ICEWM_COUNT
此邮箱中的邮件总数。
.IP \s-1ICEWM_UNREAD\s0 4
.IX Item ICEWM_UNREAD
此邮箱中未读邮件的数量。
.SS "\s-1KEYBOARD LAYOUT SWITCHING\s0"
.IX Subsection "KEYBOARD LAYOUT SWITCHING"
要控制任务栏上的键盘布局，请在 \fIpreferences\fP 中将选项 \fBKeyboardLayouts\fP 定义为以逗号分隔的首选键盘布局列表。例如:
.PP
.Vb 1
\& KeyboardLayouts="de","fr","jp"
.Ve
.PP
键盘布局可以只是一个名称。通常这是一个两个字母的国家代码。有关系统可用键盘布局的列表，请参见目录
\fI/usr/share/X11/xkb/symbols\fP。 如果用双引号括起来，它也可以是一个以空格分隔的命令行参数列表，用于调用
\f(CW\*(C`setxkbmap\*(C'\fP 程序。
.PP
第一个布局是默认布局。它会在 icewm 启动时安装。
任务栏将显示当前的键盘布局。如果可以找到布局前两个字母的图标，则会显示该图标。否则将显示布局名称的前两个字母。
.PP
单击当前键盘布局以循环浏览所有可用的键盘布局，或使用 \fBKeySysKeyboardNext\fP 键。 单击鼠标右键可打开包含所有可用键盘布局的菜单。
.PP
也可以在 \fBicewm\-winoptions\fP\|(5) 文件中为每个程序单独配置默认键盘布局。 每当此类程序接收到输入焦点时，icewm
将自动安装此配置的键盘布局。任务栏上的键盘状态将更新以反映这一点。
.PP
请注意，要使键盘布局切换起作用，必须安装 \&\f(CW\*(C`setxkbmap\*(C'\fP 程序。要查看当前的键盘布局设置，请执行
\f(CW\*(C`setxkbmap \-query\*(C'\fP。
.SS "\s-1KEYBOARD SHORTCUTS\s0"
.IX Subsection "KEYBOARD SHORTCUTS"
\&\fBicewm\fP 支持大量热键，通过单个组合键激活某些行为。 这些都可以在 \&\fIpreferences\fP 文件中配置。
在这里，我们给出了它们的首选项名称，后跟它们用双引号引起来的默认值，以及它们的效果的简短描述。
.PP
请注意，所有这些都使用一个或多个键修饰符。Icewm 支持以下修饰符: Alt、AltGr、Ctrl、Hyper、Meta、Shift、Super。
设置 \fBModSuperIsCtrlAlt=1\fP 使 Super 修饰符成为 Ctrl+Alt 的别名。
.ie  n .IP "\fBKeyWinRaise\fR=""Alt+F1""" 4
.el .IP "\fBKeyWinRaise\fR=\f(CWAlt+F1\fR" 4
.IX Item KeyWinRaise=Alt+F1
提升当前具有输入焦点的窗口。
.ie  n .IP "\fBKeyWinOccupyAll\fR=""Alt+F2""" 4
.el .IP "\fBKeyWinOccupyAll\fR=\f(CWAlt+F2\fR" 4
.IX Item KeyWinOccupyAll=Alt+F2
使活动窗口占据所有工作空间。
.ie  n .IP "\fBKeyWinLower\fR=""Alt+F3""" 4
.el .IP "\fBKeyWinLower\fR=\f(CWAlt+F3\fR" 4
.IX Item KeyWinLower=Alt+F3
降低当前具有输入焦点的窗口。
.ie  n .IP "\fBKeyWinClose\fR=""Alt+F4""" 4
.el .IP "\fBKeyWinClose\fR=\f(CWAlt+F4\fR" 4
.IX Item KeyWinClose=Alt+F4
关闭活动窗口。
.ie  n .IP "\fBKeyWinRestore\fR=""Alt+F5""" 4
.el .IP "\fBKeyWinRestore\fR=\f(CWAlt+F5\fR" 4
.IX Item KeyWinRestore=Alt+F5
将活动窗口恢复到可见状态。
.ie  n .IP "\fBKeyWinNext\fR=""Alt+F6""" 4
.el .IP "\fBKeyWinNext\fR=\f(CWAlt+F6\fR" 4
.IX Item KeyWinNext=Alt+F6
将焦点切换到下一个窗口。
.ie  n .IP "\fBKeyWinPrev\fR=""Alt+Shift+F6""" 4
.el .IP "\fBKeyWinPrev\fR=\f(CWAlt+Shift+F6\fR" 4
.IX Item KeyWinPrev=Alt+Shift+F6
将焦点切换到上一个窗口。
.ie  n .IP "\fBKeyWinMove\fR=""Alt+F7""" 4
.el .IP "\fBKeyWinMove\fR=\f(CWAlt+F7\fR" 4
.IX Item KeyWinMove=Alt+F7
开始移动活动窗口。
.ie  n .IP "\fBKeyWinSize\fR=""Alt+F8""" 4
.el .IP "\fBKeyWinSize\fR=\f(CWAlt+F8\fR" 4
.IX Item KeyWinSize=Alt+F8
开始调整活动窗口的大小。
.ie  n .IP "\fBKeyWinMinimize\fR=""Alt+F9""" 4
.el .IP "\fBKeyWinMinimize\fR=\f(CWAlt+F9\fR" 4
.IX Item KeyWinMinimize=Alt+F9
图标化活动窗口。
.ie  n .IP "\fBKeyWinMaximize\fR=""Alt+F10""" 4
.el .IP "\fBKeyWinMaximize\fR=\f(CWAlt+F10\fR" 4
.IX Item KeyWinMaximize=Alt+F10
最大化带边框的活动窗口。
.ie  n .IP "\fBKeyWinMaximizeVert\fR=""Alt+Shift+F10""" 4
.el .IP "\fBKeyWinMaximizeVert\fR=\f(CWAlt+Shift+F10\fR" 4
.IX Item KeyWinMaximizeVert=Alt+Shift+F10
垂直最大化活动窗口。
.ie  n .IP "\fBKeyWinMaximizeHoriz\fR=""undefined""" 4
.el .IP "\fBKeyWinMaximizeHoriz\fR=\f(CWundefined\fR" 4
.IX Item KeyWinMaximizeHoriz=undefined
水平最大化活动窗口。
.ie  n .IP "\fBKeyWinFullscreen\fR=""Alt+F11""" 4
.el .IP "\fBKeyWinFullscreen\fR=\f(CWAlt+F11\fR" 4
.IX Item KeyWinFullscreen=Alt+F11
无边框最大化活动窗口。
.ie  n .IP "\fBKeyWinRollup\fR=""Alt+F12""" 4
.el .IP "\fBKeyWinRollup\fR=\f(CWAlt+F12\fR" 4
.IX Item KeyWinRollup=Alt+F12
卷起活动窗口。
.ie  n .IP "\fBKeyWinHide\fR=""Alt+Shift+F12""" 4
.el .IP "\fBKeyWinHide\fR=\f(CWAlt+Shift+F12\fR" 4
.IX Item KeyWinHide=Alt+Shift+F12
隐藏活动窗口。
.ie  n .IP "\fBKeyWinMenu\fR=""Alt+Space""" 4
.el .IP "\fBKeyWinMenu\fR=\f(CWAlt+Space\fR" 4
.IX Item KeyWinMenu=Alt+Space
发布窗口菜单。
.ie  n .IP "\fBKeyWinArrangeNW\fR=""Ctrl+Alt+KP_7""" 4
.el .IP "\fBKeyWinArrangeNW\fR=\f(CWCtrl+Alt+KP_7\fR" 4
.IX Item KeyWinArrangeNW=Ctrl+Alt+KP_7
将活动窗口移动到屏幕的左上角。
.ie  n .IP "\fBKeyWinArrangeN\fR=""Ctrl+Alt+KP_8""" 4
.el .IP "\fBKeyWinArrangeN\fR=\f(CWCtrl+Alt+KP_8\fR" 4
.IX Item KeyWinArrangeN=Ctrl+Alt+KP_8
将活动窗口移动到屏幕的顶部中间。
.ie  n .IP "\fBKeyWinArrangeNE\fR=""Ctrl+Alt+KP_9""" 4
.el .IP "\fBKeyWinArrangeNE\fR=\f(CWCtrl+Alt+KP_9\fR" 4
.IX Item KeyWinArrangeNE=Ctrl+Alt+KP_9
将活动窗口移动到屏幕的右上角。
.ie  n .IP "\fBKeyWinArrangeE\fR=""Ctrl+Alt+KP_6""" 4
.el .IP "\fBKeyWinArrangeE\fR=\f(CWCtrl+Alt+KP_6\fR" 4
.IX Item KeyWinArrangeE=Ctrl+Alt+KP_6
将活动窗口移动到屏幕的中间右侧。
.ie  n .IP "\fBKeyWinArrangeSE\fR=""Ctrl+Alt+KP_3""" 4
.el .IP "\fBKeyWinArrangeSE\fR=\f(CWCtrl+Alt+KP_3\fR" 4
.IX Item KeyWinArrangeSE=Ctrl+Alt+KP_3
将活动窗口移动到屏幕的右下角。
.ie  n .IP "\fBKeyWinArrangeS\fR=""Ctrl+Alt+KP_2""" 4
.el .IP "\fBKeyWinArrangeS\fR=\f(CWCtrl+Alt+KP_2\fR" 4
.IX Item KeyWinArrangeS=Ctrl+Alt+KP_2
将活动窗口移动到屏幕的底部中间。
.ie  n .IP "\fBKeyWinArrangeSW\fR=""Ctrl+Alt+KP_1""" 4
.el .IP "\fBKeyWinArrangeSW\fR=\f(CWCtrl+Alt+KP_1\fR" 4
.IX Item KeyWinArrangeSW=Ctrl+Alt+KP_1
将活动窗口移动到屏幕的左下角。
.ie  n .IP "\fBKeyWinArrangeW\fR=""Ctrl+Alt+KP_4""" 4
.el .IP "\fBKeyWinArrangeW\fR=\f(CWCtrl+Alt+KP_4\fR" 4
.IX Item KeyWinArrangeW=Ctrl+Alt+KP_4
将活动窗口移动到屏幕的中间左侧。
.ie  n .IP "\fBKeyWinArrangeC\fR=""Ctrl+Alt+KP_5""" 4
.el .IP "\fBKeyWinArrangeC\fR=\f(CWCtrl+Alt+KP_5\fR" 4
.IX Item KeyWinArrangeC=Ctrl+Alt+KP_5
将活动窗口移动到屏幕中央。
.ie  n .IP "\fBKeyWinTileLeft\fR=""""" 4
.el .IP "\fBKeyWinTileLeft\fR=``''" 4
.IX Item KeyWinTileLeft=\(dq\(dq
让活动窗口占据屏幕的左半部分。
.ie  n .IP "\fBKeyWinTileRight\fR=""""" 4
.el .IP "\fBKeyWinTileRight\fR=``''" 4
.IX Item KeyWinTileRight=\(dq\(dq
让活动窗口占据屏幕的右半部分。
.ie  n .IP "\fBKeyWinTileTop\fR=""""" 4
.el .IP "\fBKeyWinTileTop\fR=``''" 4
.IX Item KeyWinTileTop=\(dq\(dq
让活动窗口占据屏幕的上半部分。
.ie  n .IP "\fBKeyWinTileBottom\fR=""""" 4
.el .IP "\fBKeyWinTileBottom\fR=``''" 4
.IX Item KeyWinTileBottom=\(dq\(dq
让活动窗口占据屏幕的下半部分。
.ie  n .IP "\fBKeyWinTileTopLeft\fR=""""" 4
.el .IP "\fBKeyWinTileTopLeft\fR=``''" 4
.IX Item KeyWinTileTopLeft=\(dq\(dq
让活动窗口占据屏幕的左上角。
.ie  n .IP "\fBKeyWinTileTopRight\fR=""""" 4
.el .IP "\fBKeyWinTileTopRight\fR=``''" 4
.IX Item KeyWinTileTopRight=\(dq\(dq
让活动窗口占据屏幕的右上角。
.ie  n .IP "\fBKeyWinTileBottomLeft\fR=""""" 4
.el .IP "\fBKeyWinTileBottomLeft\fR=``''" 4
.IX Item KeyWinTileBottomLeft=\(dq\(dq
让活动窗口占据屏幕的左下角。
.ie  n .IP "\fBKeyWinTileBottomRight\fR=""""" 4
.el .IP "\fBKeyWinTileBottomRight\fR=``''" 4
.IX Item KeyWinTileBottomRight=\(dq\(dq
让活动窗口占据屏幕的右下角。
.ie  n .IP "\fBKeyWinTileCenter\fR=""""" 4
.el .IP "\fBKeyWinTileCenter\fR=``''" 4
.IX Item KeyWinTileCenter=\(dq\(dq
让活动窗口占据屏幕的中心四分之一。
.ie  n .IP "\fBKeyWinSmartPlace\fR=""Ctrl+Alt+Shift+KP_5""" 4
.el .IP "\fBKeyWinSmartPlace\fR=\f(CWCtrl+Alt+Shift+KP_5\fR" 4
.IX Item KeyWinSmartPlace=Ctrl+Alt+Shift+KP_5
智能放置活动窗口。
.ie  n .IP "\fBKeySysWinMenu\fR=""Shift+Esc""" 4
.el .IP "\fBKeySysWinMenu\fR=\f(CWShift+Esc\fR" 4
.IX Item KeySysWinMenu=Shift+Esc
发布系统窗口菜单。
.ie  n .IP "\fBKeySysWinNext\fR=""Alt+Esc""" 4
.el .IP "\fBKeySysWinNext\fR=\f(CWAlt+Esc\fR" 4
.IX Item KeySysWinNext=Alt+Esc
将焦点放在下一个窗口并提升它。
.ie  n .IP "\fBKeySysWinPrev\fR=""Alt+Shift+Esc""" 4
.el .IP "\fBKeySysWinPrev\fR=\f(CWAlt+Shift+Esc\fR" 4
.IX Item KeySysWinPrev=Alt+Shift+Esc
将焦点放在上一个窗口上并将其提升。
.ie  n .IP "\fBKeySysDialog\fR=""Alt+Ctrl+Del""" 4
.el .IP "\fBKeySysDialog\fR=\f(CWAlt+Ctrl+Del\fR" 4
.IX Item KeySysDialog=Alt+Ctrl+Del
在屏幕中央打开 IceWM 系统对话框。
.ie  n .IP "\fBKeySysMenu\fR=""Ctrl+Esc""" 4
.el .IP "\fBKeySysMenu\fR=\f(CWCtrl+Esc\fR" 4
.IX Item KeySysMenu=Ctrl+Esc
激活左下角的 IceWM 根菜单。
.ie  n .IP "\fBKeySysWindowList\fR=""Alt+Ctrl+Esc""" 4
.el .IP "\fBKeySysWindowList\fR=\f(CWAlt+Ctrl+Esc\fR" 4
.IX Item KeySysWindowList=Alt+Ctrl+Esc
在屏幕中央打开 IceWM 系统窗口列表。
.ie  n .IP "\fBKeySysAddressBar\fR=""Alt+Ctrl+Space""" 4
.el .IP "\fBKeySysAddressBar\fR=\f(CWAlt+Ctrl+Space\fR" 4
.IX Item KeySysAddressBar=Alt+Ctrl+Space
打开任务栏中的地址栏，可以在其中键入命令。
.ie  n .IP "\fBKeySysWorkspacePrev\fR=""Alt+Ctrl+Left""" 4
.el .IP "\fBKeySysWorkspacePrev\fR=\f(CWAlt+Ctrl+Left\fR" 4
.IX Item KeySysWorkspacePrev=Alt+Ctrl+Left
向左移动一个工作区。
.ie  n .IP "\fBKeySysWorkspaceNext\fR=""Alt+Ctrl+Right""" 4
.el .IP "\fBKeySysWorkspaceNext\fR=\f(CWAlt+Ctrl+Right\fR" 4
.IX Item KeySysWorkspaceNext=Alt+Ctrl+Right
向右移动一个工作区。
.ie  n .IP "\fBKeySysWorkspaceLast\fR=""Alt+Ctrl+Down""" 4
.el .IP "\fBKeySysWorkspaceLast\fR=\f(CWAlt+Ctrl+Down\fR" 4
.IX Item KeySysWorkspaceLast=Alt+Ctrl+Down
转到上一个工作区。
.ie  n .IP "\fBKeySysWorkspacePrevTakeWin\fR=""Alt+Ctrl+Shift+Left""" 4
.el .IP "\fBKeySysWorkspacePrevTakeWin\fR=\f(CWAlt+Ctrl+Shift+Left\fR" 4
.IX Item KeySysWorkspacePrevTakeWin=Alt+Ctrl+Shift+Left
将活动窗口向左移动一个工作区。
.ie  n .IP "\fBKeySysWorkspaceNextTakeWin\fR=""Alt+Ctrl+Shift+Right""" 4
.el .IP "\fBKeySysWorkspaceNextTakeWin\fR=\f(CWAlt+Ctrl+Shift+Right\fR" 4
.IX Item KeySysWorkspaceNextTakeWin=Alt+Ctrl+Shift+Right
使活动窗口向右移动一个工作区。
.ie  n .IP "\fBKeySysWorkspaceLastTakeWin\fR=""Alt+Ctrl+Shift+Down""" 4
.el .IP "\fBKeySysWorkspaceLastTakeWin\fR=\f(CWAlt+Ctrl+Shift+Down\fR" 4
.IX Item KeySysWorkspaceLastTakeWin=Alt+Ctrl+Shift+Down
将活动窗口带到上一个工作区。
.ie  n .IP "\fBKeySysWorkspace1\fR=""Alt+Ctrl+1""" 4
.el .IP "\fBKeySysWorkspace1\fR=\f(CWAlt+Ctrl+1\fR" 4
.IX Item KeySysWorkspace1=Alt+Ctrl+1
前往工作区 1.
.ie  n .IP "\fBKeySysWorkspace2\fR=""Alt+Ctrl+2""" 4
.el .IP "\fBKeySysWorkspace2\fR=\f(CWAlt+Ctrl+2\fR" 4
.IX Item KeySysWorkspace2=Alt+Ctrl+2
前往工作区 2.
.ie  n .IP "\fBKeySysWorkspace3\fR=""Alt+Ctrl+3""" 4
.el .IP "\fBKeySysWorkspace3\fR=\f(CWAlt+Ctrl+3\fR" 4
.IX Item KeySysWorkspace3=Alt+Ctrl+3
前往工作区 3.
.ie  n .IP "\fBKeySysWorkspace4\fR=""Alt+Ctrl+4""" 4
.el .IP "\fBKeySysWorkspace4\fR=\f(CWAlt+Ctrl+4\fR" 4
.IX Item KeySysWorkspace4=Alt+Ctrl+4
前往工作区 4.
.ie  n .IP "\fBKeySysWorkspace5\fR=""Alt+Ctrl+5""" 4
.el .IP "\fBKeySysWorkspace5\fR=\f(CWAlt+Ctrl+5\fR" 4
.IX Item KeySysWorkspace5=Alt+Ctrl+5
前往工作区 5.
.ie  n .IP "\fBKeySysWorkspace6\fR=""Alt+Ctrl+6""" 4
.el .IP "\fBKeySysWorkspace6\fR=\f(CWAlt+Ctrl+6\fR" 4
.IX Item KeySysWorkspace6=Alt+Ctrl+6
前往工作区 6.
.ie  n .IP "\fBKeySysWorkspace7\fR=""Alt+Ctrl+7""" 4
.el .IP "\fBKeySysWorkspace7\fR=\f(CWAlt+Ctrl+7\fR" 4
.IX Item KeySysWorkspace7=Alt+Ctrl+7
前往工作区 7.
.ie  n .IP "\fBKeySysWorkspace8\fR=""Alt+Ctrl+8""" 4
.el .IP "\fBKeySysWorkspace8\fR=\f(CWAlt+Ctrl+8\fR" 4
.IX Item KeySysWorkspace8=Alt+Ctrl+8
前往工作区 8.
.ie  n .IP "\fBKeySysWorkspace9\fR=""Alt+Ctrl+9""" 4
.el .IP "\fBKeySysWorkspace9\fR=\f(CWAlt+Ctrl+9\fR" 4
.IX Item KeySysWorkspace9=Alt+Ctrl+9
前往工作区 9.
.ie  n .IP "\fBKeySysWorkspace10\fR=""Alt+Ctrl+0""" 4
.el .IP "\fBKeySysWorkspace10\fR=\f(CWAlt+Ctrl+0\fR" 4
.IX Item KeySysWorkspace10=Alt+Ctrl+0
转到工作区 10。
.ie  n .IP "\fBKeySysWorkspace11\fR=""Alt+Ctrl+minus""" 4
.el .IP "\fBKeySysWorkspace11\fR=\f(CWAlt+Ctrl+minus\fR" 4
.IX Item KeySysWorkspace11=Alt+Ctrl+minus
转到工作区 11。
.ie  n .IP "\fBKeySysWorkspace12\fR=""Alt+Ctrl+equal""" 4
.el .IP "\fBKeySysWorkspace12\fR=\f(CWAlt+Ctrl+equal\fR" 4
.IX Item KeySysWorkspace12=Alt+Ctrl+equal
转到工作区 12。
.ie  n .IP "\fBKeySysWorkspace1TakeWin\fR=""Alt+Ctrl+Shift+1""" 4
.el .IP "\fBKeySysWorkspace1TakeWin\fR=\f(CWAlt+Ctrl+Shift+1\fR" 4
.IX Item KeySysWorkspace1TakeWin=Alt+Ctrl+Shift+1
将活动窗口带到工作区 1.
.ie  n .IP "\fBKeySysWorkspace2TakeWin\fR=""Alt+Ctrl+Shift+2""" 4
.el .IP "\fBKeySysWorkspace2TakeWin\fR=\f(CWAlt+Ctrl+Shift+2\fR" 4
.IX Item KeySysWorkspace2TakeWin=Alt+Ctrl+Shift+2
将活动窗口带到工作区 2.
.ie  n .IP "\fBKeySysWorkspace3TakeWin\fR=""Alt+Ctrl+Shift+3""" 4
.el .IP "\fBKeySysWorkspace3TakeWin\fR=\f(CWAlt+Ctrl+Shift+3\fR" 4
.IX Item KeySysWorkspace3TakeWin=Alt+Ctrl+Shift+3
将活动窗口带到工作区 3.
.ie  n .IP "\fBKeySysWorkspace4TakeWin\fR=""Alt+Ctrl+Shift+4""" 4
.el .IP "\fBKeySysWorkspace4TakeWin\fR=\f(CWAlt+Ctrl+Shift+4\fR" 4
.IX Item KeySysWorkspace4TakeWin=Alt+Ctrl+Shift+4
将活动窗口带到工作区 4.
.ie  n .IP "\fBKeySysWorkspace5TakeWin\fR=""Alt+Ctrl+Shift+5""" 4
.el .IP "\fBKeySysWorkspace5TakeWin\fR=\f(CWAlt+Ctrl+Shift+5\fR" 4
.IX Item KeySysWorkspace5TakeWin=Alt+Ctrl+Shift+5
将活动窗口带到工作区 5.
.ie  n .IP "\fBKeySysWorkspace6TakeWin\fR=""Alt+Ctrl+Shift+6""" 4
.el .IP "\fBKeySysWorkspace6TakeWin\fR=\f(CWAlt+Ctrl+Shift+6\fR" 4
.IX Item KeySysWorkspace6TakeWin=Alt+Ctrl+Shift+6
将活动窗口带到工作区 6.
.ie  n .IP "\fBKeySysWorkspace7TakeWin\fR=""Alt+Ctrl+Shift+7""" 4
.el .IP "\fBKeySysWorkspace7TakeWin\fR=\f(CWAlt+Ctrl+Shift+7\fR" 4
.IX Item KeySysWorkspace7TakeWin=Alt+Ctrl+Shift+7
将活动窗口带到工作区 7.
.ie  n .IP "\fBKeySysWorkspace8TakeWin\fR=""Alt+Ctrl+Shift+8""" 4
.el .IP "\fBKeySysWorkspace8TakeWin\fR=\f(CWAlt+Ctrl+Shift+8\fR" 4
.IX Item KeySysWorkspace8TakeWin=Alt+Ctrl+Shift+8
将活动窗口带到工作区 8.
.ie  n .IP "\fBKeySysWorkspace9TakeWin\fR=""Alt+Ctrl+Shift+9""" 4
.el .IP "\fBKeySysWorkspace9TakeWin\fR=\f(CWAlt+Ctrl+Shift+9\fR" 4
.IX Item KeySysWorkspace9TakeWin=Alt+Ctrl+Shift+9
将活动窗口带到工作区 9.
.ie  n .IP "\fBKeySysWorkspace10TakeWin\fR=""Alt+Ctrl+Shift+0""" 4
.el .IP "\fBKeySysWorkspace10TakeWin\fR=\f(CWAlt+Ctrl+Shift+0\fR" 4
.IX Item KeySysWorkspace10TakeWin=Alt+Ctrl+Shift+0
将活动窗口带到工作区 10。
.ie  n .IP "\fBKeySysWorkspace11TakeWin\fR=""Alt+Ctrl+Shift+minus""" 4
.el .IP "\fBKeySysWorkspace11TakeWin\fR=\f(CWAlt+Ctrl+Shift+minus\fR" 4
.IX Item KeySysWorkspace11TakeWin=Alt+Ctrl+Shift+minus
将活动窗口带到工作区 11。
.ie  n .IP "\fBKeySysWorkspace12TakeWin\fR=""Alt+Ctrl+Shift+equal""" 4
.el .IP "\fBKeySysWorkspace12TakeWin\fR=\f(CWAlt+Ctrl+Shift+equal\fR" 4
.IX Item KeySysWorkspace12TakeWin=Alt+Ctrl+Shift+equal
将活动窗口带到工作区 12。
.ie  n .IP "\fBKeySysTileVertical\fR=""Alt+Shift+F2""" 4
.el .IP "\fBKeySysTileVertical\fR=\f(CWAlt+Shift+F2\fR" 4
.IX Item KeySysTileVertical=Alt+Shift+F2
从左到右平铺所有 windows 垂直最大化。
.ie  n .IP "\fBKeySysTileHorizontal\fR=""Alt+Shift+F3""" 4
.el .IP "\fBKeySysTileHorizontal\fR=\f(CWAlt+Shift+F3\fR" 4
.IX Item KeySysTileHorizontal=Alt+Shift+F3
从上到下平铺所有 windows 水平最大化。
.ie  n .IP "\fBKeySysCascade\fR=""Alt+Shift+F4""" 4
.el .IP "\fBKeySysCascade\fR=\f(CWAlt+Shift+F4\fR" 4
.IX Item KeySysCascade=Alt+Shift+F4
对垂直最大化的所有 windows 进行水平级联。
.ie  n .IP "\fBKeySysArrange\fR=""Alt+Shift+F5""" 4
.el .IP "\fBKeySysArrange\fR=\f(CWAlt+Shift+F5\fR" 4
.IX Item KeySysArrange=Alt+Shift+F5
重新排列 windows。
.ie  n .IP "\fBKeySysUndoArrange\fR=""Alt+Shift+F7""" 4
.el .IP "\fBKeySysUndoArrange\fR=\f(CWAlt+Shift+F7\fR" 4
.IX Item KeySysUndoArrange=Alt+Shift+F7
撤消安排。
.ie  n .IP "\fBKeySysArrangeIcons\fR=""Alt+Shift+F8""" 4
.el .IP "\fBKeySysArrangeIcons\fR=\f(CWAlt+Shift+F8\fR" 4
.IX Item KeySysArrangeIcons=Alt+Shift+F8
重新排列图标。
.ie  n .IP "\fBKeySysMinimizeAll\fR=""Alt+Shift+F9""" 4
.el .IP "\fBKeySysMinimizeAll\fR=\f(CWAlt+Shift+F9\fR" 4
.IX Item KeySysMinimizeAll=Alt+Shift+F9
最小化所有 windows。
.ie  n .IP "\fBKeySysHideAll\fR=""Alt+Shift+F11""" 4
.el .IP "\fBKeySysHideAll\fR=\f(CWAlt+Shift+F11\fR" 4
.IX Item KeySysHideAll=Alt+Shift+F11
隐藏所有 windows。
.ie  n .IP "\fBKeySysShowDesktop\fR=""Alt+Ctrl+d""" 4
.el .IP "\fBKeySysShowDesktop\fR=\f(CWAlt+Ctrl+d\fR" 4
.IX Item KeySysShowDesktop=Alt+Ctrl+d
取消映射所有 windows 以显示桌面。
.ie  n .IP "\fBKeySysCollapseTaskBar\fR=""Alt+Ctrl+h""" 4
.el .IP "\fBKeySysCollapseTaskBar\fR=\f(CWAlt+Ctrl+h\fR" 4
.IX Item KeySysCollapseTaskBar=Alt+Ctrl+h
隐藏任务栏。
.ie  n .IP "\fBKeyTaskBarSwitchNext\fR=""undefined""" 4
.el .IP "\fBKeyTaskBarSwitchNext\fR=\f(CWundefined\fR" 4
.IX Item KeyTaskBarSwitchNext=undefined
切换到任务栏中的下一个窗口。
.ie  n .IP "\fBKeyTaskBarSwitchPrev\fR=""undefined""" 4
.el .IP "\fBKeyTaskBarSwitchPrev\fR=\f(CWundefined\fR" 4
.IX Item KeyTaskBarSwitchPrev=undefined
切换到任务栏中的上一个窗口。
.ie  n .IP "\fBKeyTaskBarMoveNext\fR=""undefined""" 4
.el .IP "\fBKeyTaskBarMoveNext\fR=\f(CWundefined\fR" 4
.IX Item KeyTaskBarMoveNext=undefined
将当前窗口的任务栏按钮向右移动。
.ie  n .IP "\fBKeyTaskBarMovePrev\fR=""undefined""" 4
.el .IP "\fBKeyTaskBarMovePrev\fR=\f(CWundefined\fR" 4
.IX Item KeyTaskBarMovePrev=undefined
将当前窗口的任务栏按钮向左移动。
.ie  n .IP "\fBKeySysWinListMenu\fR=""undefined""" 4
.el .IP "\fBKeySysWinListMenu\fR=\f(CWundefined\fR" 4
.IX Item KeySysWinListMenu=undefined
显示窗口列表菜单。
.ie  n .IP "\fBKeySysKeyboardNext\fR=""undefined""" 4
.el .IP "\fBKeySysKeyboardNext\fR=\f(CWundefined\fR" 4
.IX Item KeySysKeyboardNext=undefined
切换到 KeyboardLayouts 列表中的下一个键盘布局。
.ie  n .IP "\fBKeySysSwitchNext\fR=""Alt+Tab""" 4
.el .IP "\fBKeySysSwitchNext\fR=\f(CWAlt+Tab\fR" 4
.IX Item KeySysSwitchNext=Alt+Tab
打开 \f(CW\*(C`QuickSwitch\*(C'\fP 弹出窗口 (参见 \*(L"\s-1INPUT FOCUS\*(R"\s0) 或者在
\f(CW\*(C`QuickSwitch\*(C'\fP 弹出窗口中移动选择器。
.ie  n .IP "\fBKeySysSwitchLast\fR=""Alt+Shift+Tab""" 4
.el .IP "\fBKeySysSwitchLast\fR=\f(CWAlt+Shift+Tab\fR" 4
.IX Item KeySysSwitchLast=Alt+Shift+Tab
像 \f(CW\*(C`KeySysSwitchNext\*(C'\fP 一样工作，但朝相反的方向移动。
.ie  n .IP "\fBKeySysSwitchClass\fR=""Alt+grave""" 4
.el .IP "\fBKeySysSwitchClass\fR=\f(CWAlt+grave\fR" 4
.IX Item KeySysSwitchClass=Alt+grave
类似于 \f(CW\*(C`KeySysSwitchNext\*(C'\fP，但仅适用于与当前聚焦窗口具有相同 \s-1WM_CLASS\s0 属性的
windows。
.SS "\s-1MOUSE BINDINGS\s0"
.IX Subsection "MOUSE BINDINGS"
您可以通过修改鼠标按钮来控制 windows:
.ie  n .IP "\fBMouseWinMove\fR=""Alt+Pointer_Button1""" 4
.el .IP "\fBMouseWinMove\fR=\f(CWAlt+Pointer_Button1\fR" 4
.IX Item MouseWinMove=Alt+Pointer_Button1
将鼠标下的窗口移到屏幕上。
.ie  n .IP "\fBMouseWinSize\fR=""Alt+Pointer_Button3""" 4
.el .IP "\fBMouseWinSize\fR=\f(CWAlt+Pointer_Button3\fR" 4
.IX Item MouseWinSize=Alt+Pointer_Button3
调整窗口大小。 按住键和按钮。 要放大窗口，请将鼠标按钮从中心移开。 缩小它向中心移动。
.ie  n .IP "\fBMouseWinRaise\fR=""Ctrl+Alt+Pointer_Button1""" 4
.el .IP "\fBMouseWinRaise\fR=\f(CWCtrl+Alt+Pointer_Button1\fR" 4
.IX Item MouseWinRaise=Ctrl+Alt+Pointer_Button1
在鼠标下升高窗口。
.ie  n .IP "\fBMouseWinLower\fR=""Ctrl+Alt+Pointer_Button1""" 4
.el .IP "\fBMouseWinLower\fR=\f(CWCtrl+Alt+Pointer_Button1\fR" 4
.IX Item MouseWinLower=Ctrl+Alt+Pointer_Button1
降低鼠标下方的窗口。 如果这等于 \f(CW\*(C`MouseWinRaise\*(C'\fP 并且可以升起窗口，则
\f(CW\*(C`MouseWinRaise\*(C'\fP 优先于 \f(CW\*(C`MouseWinLower\*(C'\fP。
.ie  n .IP "\fBMouseWinTabbing\fR=""Shift+Pointer_Button2""" 4
.el .IP "\fBMouseWinTabbing\fR=``Shift+Pointer_Button2''" 4
.IX Item MouseWinTabbing=Shift+Pointer_Button2
鼠标绑定以创建选项卡。 使用此按钮将标题栏拖动到另一个标题栏上。 当它们开始闪烁时，松开按钮以合并框架选项卡。
.PP
窗口的标题框也会监听鼠标点击。 左键双击最大化窗口 (\f(CW\*(C`TitleBarMaximizeButton=1\*(C'\fP)。按 Shift
仅垂直最大化。水平按 Alt+Shift。 中键双击卷起窗口 (\f(CW\*(C`TitleBarRollupButton=2\*(C'\fP)。 同时按
Shift 以水平最大化。如果 \fBTitleBarRollupButton\fP 为 4 或 5，则滚轮控制向上或向下滚动。
按下鼠标按钮并移动它将移动窗口。 \&\f(CW\*(C`Alt+Pointer_Button1\*(C'\fP 降下车窗。
.PP
当鼠标位于窗口框架上时，单击左键会弹出窗口。 用左键向下拖动可调整窗口大小。 单击右键弹出上下文菜单。 用右键拖动可移动窗口。
.PP
单击桌面会激活一个菜单。 中间按钮显示窗口列表 (\f(CW\*(C`DesktopWinListButton=2\*(C'\fP)。右键显示根菜单
(\f(CW\*(C`DesktopMenuButton=3\*(C'\fP)。如果您按下
\f(CW\*(C`Ctrl+Alt\*(C'\fP，则鼠标滚轮将依次聚焦所有应用程序。
.SS \s-1SIGNALS\s0
.IX Subsection SIGNALS
\&\fBicewm\fP 支持以下信号:
.IP \fB\s-1SIGHUP\s0\fP 4
.IX Item SIGHUP
\&\fBicewm\fP 将自行重启。这是一种重新加载配置的方法。
.IP "\fB\s-1SIGINT\s0\fP, \fB\s-1SIGTERM\s0\fP" 4
.IX Item "SIGINT, SIGTERM"
\&\fBicewm\fP 将停止管理应用程序 windows 并终止。
.IP \fB\s-1SIGQUIT\s0\fP 4
.IX Item SIGQUIT
\&\fBicewm\fP 将启动注销程序。 如果配置了 \f(CW\*(C`LogoutCommand\*(C'\fP 首选项选项，它将被执行。
.IP \fB\s-1SIGUSR2\s0\fP 4
.IX Item SIGUSR2
如果配置了 \f(CW\*(C`logevents\*(C'\fP，则切换 X11 事件的记录。
.SS "\s-1ENVIRONMENT VARIABLES\s0"
.IX Subsection "ENVIRONMENT VARIABLES"
.IP \fB\s-1ICEWM_PRIVCFG\s0\fP 4
.IX Item ICEWM_PRIVCFG
用户私有配置文件的目录。 当不指定该环境变量时，如果该目录存在则默认目录为
\&\f(CI$XDG_CONFIG_HOME\fI/icewm\fP，否则默认值为 \f(CI$HOME\fI/.icewm\fP。
.IP \fB\s-1DISPLAY\s0\fP 4
.IX Item DISPLAY
X11 服务器的名称。 请参见 \fBXorg\fP\|(1) 或 \fBXserver\fP\|(1)。 该值可以被 \fB\-\-display\fP 选项覆盖。
.IP "\fB\s-1MAILPATH\s0\fP, \fB\s-1MAIL\s0\fP" 4
.IX Item "MAILPATH, MAIL"
给出邮箱的位置。 如果省略模式，则假定本地 \&\*(L"file\*(R" 模式。 任务栏中的邮箱小程序使用它来显示邮箱的状态。 如果在
\fIpreferences\fP 文件中设置了 \f(CW\*(C`MailBoxPath\*(C'\fP 选项，则该选项优先。
.SS \s-1FILES\s0
.IX Subsection FILES
.SS "\s-1CONFIGURATION DIRECTORIES\s0"
.IX Subsection "CONFIGURATION DIRECTORIES"
\&\fBicewm\fP 按照给定顺序在以下目录中查找配置文件，直到找到一个:
.IP \f(CI$ICEWM_PRIVCFG\fI/\fP 4
.IX Item $ICEWM_PRIVCFG/
包含用户特定的配置。 当指定 \fB\s-1ICEWM_PRIVCFG\s0\fP 时，此目录优先于
\&\f(CI$XDG_CONFIG_HOME\fI/icewm\fP 和 \f(CI$HOME\fI/.icewm\fP。
.IP \f(CI$XDG_CONFIG_HOME\fI/icewm/\fP 4
.IX Item $XDG_CONFIG_HOME/icewm/
包含用户特定的配置。 当此目录存在时，它优先于 \f(CI$HOME\fI/.icewm\fP。
.IP \f(CI$HOME\fI/.icewm/\fP 4
.IX Item $HOME/.icewm/
包含用户特定的配置。 这是历史默认目录。
.IP \fI/etc/icewm/\fP 4
.IX Item /etc/icewm/
包含系统范围的自定义默认值。 请注意，您的本地安装可能已配置为使用不同的系统位置。 \f(CW\*(C`icewm \-\-directories\*(C'\fP
的输出将显示此位置。
.IP \fI/usr/share/icewm/\fP 4
.IX Item /usr/share/icewm/
默认本地安装设置。
.SS "\s-1CONFIGURATION FILES\s0"
.IX Subsection "CONFIGURATION FILES"
.IP \fIenv\fP 4
.IX Item env
\&\fBicewm\-session\fP\|(1) 从文件 \&\fIenv\fP 加载附加环境变量。 每行通过 \&\fBwordexp\fP\|(3) 进行
\s-1POSIX\s0 shell 扩展。 以哈希符号 (\f(CW\*(C`#\*(C'\fP) 开头的注释行将被忽略。
\&\fBicewm\-session\fP\|(1) 将加载那些包含名称、后跟等号和值 (可能为空) 的扩展行。
.Sp
请参见 \fBicewm\-env\fP\|(5)。
.IP \fIfocus_mode\fP 4
.IX Item focus_mode
定义 \f(CW\*(C`FocusMode\*(C'\fP 的初始值。 其默认值为 \&\f(CW\*(C`FocusMode=1\*(C'\fP
(Click\-to\-focus)。 这可以通过菜单更改。 \&\fBicewm\fP 将在此文件中保存焦点菜单选项。
.Sp
请参见 \fBicewm\-focus_mode\fP\|(5)。
.IP \fIkeys\fP 4
.IX Item keys
全局键绑定以启动应用程序，不需要与窗口管理器相关。 每个非空行都以单词 \f(CW\*(C`key\*(C'\fP 开头。
一个或多个空格后跟一个双引号字符串绑定的 X11 键组合，如 \f(CW\*(C`Alt+Ctrl+Shift+X\*(C'\fP。 然后在至少一个空格之后是
shell 命令行，只要按下此组合键，\fBicewm\fP 就会执行该命令行。 例如，以下行创建了一个热键来重新加载 \fBicewm\fP 配置:
.Sp
.Vb 1
\& 键 "Ctrl+Shift+r" icesh 重启
.Ve
.Sp
请参见 \fBicewm\-keys\fP\|(5)。
.IP \fImenu\fP 4
.IX Item menu
应用程序菜单; 通常由用户定制。 \fBicewm\fP 提供 \fBicewm\-menu\-fdo\fP\|(1) 程序生成默认菜单。 类似的方案有
\fBxdg_menu\fP\|(1)、\fBmmaker\fP\|(1)、(MenuMaker)、\&\fBxde\-menu\fP\|(1)、\fBxdgmenumaker\fP\|(1)。
.Sp
请参见 \fBicewm\-menu\fP\|(5)。
.IP \fIpreferences\fP 4
.IX Item preferences
包含路径、颜色和字体等常规设置，还包含用于控制 \fBicewm\fP 焦点行为和在任务栏中启动的小程序的选项。 \fBicewm\fP 安装会提供一个默认的
\fIpreferences\fP 文件，可以复制到 \fBicewm\fP 用户配置目录下修改。
.Sp
请参见 \fBicewm\-preferences\fP\|(5)。
.IP \fIprefoverride\fP 4
.IX Item prefoverride
覆盖主题设置的设置。 控制外观的首选项文件中的一些 \fBicewm\fP 配置选项可能会被主题覆盖，如果主题设计者认为这是可取的。 但是，此
\fIprefoverride\fP 文件将再次覆盖您选择的几个特定选项。 最初将此文件留空是安全的。
.Sp
请参见 \fBicewm\-prefoverride\fP\|(5)。
.IP \fIprograms\fP 4
.IX Item programs
自动生成的应用程序菜单。 \&\fBwmconfig\fP\|(1)、菜单或类似程序可以使用它来轻松访问系统上安装的所有桌面应用程序。
.Sp
请参见 \fBicewm\-programs\fP\|(5)。
.IP \fItheme\fP 4
.IX Item theme
该文件包含默认主题的名称。 在启动时，\fBicewm\fP 会读取此文件以获取主题名称，除非 \fBicewm\fP 是使用 \fB\-\-theme\fP 选项启动的。
每当从 \fBicewm\fP 菜单中选择不同的主题时，主题文件就会被所选主题的名称覆盖。 此主题文件包含关键字
\f(CW\*(C`Theme\*(C'\fP，后跟一个等号，然后是带有主题名称的双引号字符串。 主题名称是主题目录的名称，后跟一个斜杠，然后是主题文件。
通常主题文件只是 \&\fIdefault.theme\fP，但主题可能有替代品。 备选方案是对主题的小调整。 这些在它们自己的 \fI.theme\fP
文件中指定，该文件取代了 \fIdefault.theme\fP。 如果不存在主题文件，则 \&\fBicewm\fP 将使用默认设置
\&\f(CW\*(C`Theme="default/default.theme"\*(C'\fP。
.Sp
请参见 \fBicewm\-theme\fP\|(5)。
.IP \fItoolbar\fP 4
.IX Item toolbar
包含带有任务栏图标的快速启动应用程序的名称。 每个非空非注释行都以关键字 \fBprog\fP 开头。
在一个或多个空格后跟一个名称，只要鼠标游标悬停在工具栏图标上，该名称就会显示在工具提示中。 该名称可以是双引号字符串。
然后跟随图标的裸名以在没有扩展名的情况下使用。 该图标将显示在工具栏中。 最后一个组件是 shell 命令行，只要用户按下工具栏中的图标，它就会执行。
例如，工具栏中的以下行将创建一个带有工具提示 \f(CW\*(C`Mozilla Firefox\*(C'\fP 和 \fIfirefox\fP
图标的按钮，单击该按钮会启动 \fBfirefox\fP\|(1):
.Sp
.Vb 1
\& prog "Mozilla Firefox" firefox /usr/bin/firefox \-\-private\-window
.Ve
.Sp
请参见 \fBicewm\-toolbar\fP\|(5)。
.IP \fIwinoptions\fP 4
.IX Item winoptions
包含用于控制特定于应用程序或应用程序组的窗口外观和行为的设置。 Options 可以控制边框，是否出现在任务栏、窗口列表、系统托盘和工作空间。
还有它的图层、几何形状、是否可以移动、调整大小和关闭。
.Sp
请参见 \fBicewm\-winoptions\fP\|(5)。
.IP \fIstartup\fP 4
.IX Item startup
包含要在 \fBicewm\fP 启动时执行的命令。 这是一个可执行脚本，其中包含用于调整 X11 设置并启动一些需要在 \fBicewm\fP
启动时处于活动状态的应用程序的命令。 \fBicewm\fP 启动时由 \fBicewm\-session\fP\|(1) 运行。
.Sp
请参见 \fBicewm\-startup\fP\|(5)。
.IP \fIshutdown\fP 4
.IX Item shutdown
包含要在 \fBicewm\fP 关闭时执行的命令。 这是一个可执行脚本，其中包含要在 \&\fBicewm\fP 终止的最后阶段执行的命令。 通常他们可能会撤消
\fIstartup\fP 脚本的某些效果。 它在 \fBicewm\fP 终止时由 \fBicewm\-session\fP\|(1) 运行。
.Sp
请参见 \fBicewm\-shutdown\fP\|(5)。
.SS "\s-1CONFIGURATION SUBDIRECTORIES\s0"
.IX Subsection "CONFIGURATION SUBDIRECTORIES"
.IP \fIcursors\fP 4
.IX Item cursors
可能包含 \s-1XPM\s0 图像格式的游标图标。这些否决了主题提供的游标。有 3 个方向游标:
\fIleft.xpm\fP、\&\fIright.xpm\fP、\fImove.xpm\fP，8 个调整大小游标:
\fIsizeR.xpm\fP、\fIsizeTR.xpm\fP、\&\fIsizeT.xpm\fP、\fIsizeTL.xpm\fP、\fIsizeL.xpm\fP、\fIsizeBL.xpm\fP、\fIsizeB.xpm\fP、\&\fIsizeBR.xpm\fP
和 4 个滚动游标: \fIscrollL.xpm\fP、\fIscrollR.xpm\fP、\&\fIscrollU.xpm\fP 和 \fIscrollD.xpm\fP。
默认情况下，\s-1XPM\s0 标头定义四个维度: 宽度、高度、颜色和每像素字符数。对于游标，这必须扩展到六个。最后两个是 \fIx\-hotspot\fP
和 \fIy\-hotspot\fP。这些定义 \s-1XPM\s0 图像中的哪个点是鼠标指针的敏感点。
.IP \fIicons\fP 4
.IX Item icons
包含用于识别应用程序的图标。 通常这些文件是 \s-1XPM\s0 格式，但也支持 \s-1PNG\s0 和 \s-1SVG\s0 图像格式。
图标文件的名称可能遵循特定的命名模式，例如 \fIapp_32x32.xpm\fP。 它们以基本名称开头，通常这只是一个单词。 然后是下划线，然后是
\f(CW\*(C`SIZExSIZE\*(C'\fP 格式的大小规范。 后面跟着一个点和文件扩展名，其中扩展名表示图标图像格式。
小图标、大图标和超大图标的常用尺寸为 16、32 和 48。 这取决于各自的 \f(CW\*(C`IconSize\*(C'\fP 首选项。
.IP \fIledclock\fP 4
.IX Item ledclock
任务栏右下角显示的 \s-1LED\s0 时钟的数字图片。 当 \&\f(CW\*(C`TaskBarShowClock\*(C'\fP 和
\f(CW\*(C`TaskBarClockLeds\*(C'\fP 选项都设置为 1.
.IP \fImailbox\fP 4
.IX Item mailbox
用于在任务栏中显示邮箱小程序不同状态的图标。 有五种状态，每种状态都有自己的图标:
\&\fImail.xpm\fP、\fInewmail.xpm\fP、\fIunreadmail.xpm\fP、\fInomail.xpm\fP、\&\fIerrmail.xpm\fP。
.IP \fIsounds\fP 4
.IX Item sounds
\fBicesound\fP\|(1) 在 \s-1GUI\s0 事件中播放的音频文件。 它们是:
\fIstartup.wav\fP、\fIshutdown.wav\fP、\fIrestart.wav\fP、\fIlaunchApp.wav\fP、\&\fIworkspaceChange.wav\fP、\fIwindowOpen.wav\fP、\fIwindowClose.wav\fP、\&\fIdialogOpen.wav\fP、\fIdialogClose.wav\fP、\fIwindowMax.wav\fP、\&\fIwindowRestore.wav\fP、\fIwindowMin.wav\fP、\fIwindowHide.wav\fP、\&\fIwindowRollup.wav\fP、\fIwindowMoved.wav\fP、\fIwindowSized.wav\fP、\&\fIwindowLower.wav\fP。
.IP \fItaskbar\fP 4
.IX Item taskbar
用于自定义任务栏外观的图片。 其中包括:
\&\fItaskbarbg.xpm\fP、\fItaskbuttonactive.xpm\fP、\fItaskbuttonbg.xpm\fP、\&\fItaskbuttonminimized.xpm\fP、\fItoolbuttonbg.xpm\fP、\&\fIworkspacebuttonactive.xpm\fP、\fIworkspacebuttonbg.xpm\fP。
.IP \fIthemes\fP 4
.IX Item themes
存储主题的目录。 每个主题都存储在 \fIthemes\fP 目录中它自己的子目录中。一个主题至少包含一个 \&\fIdefault.theme\fP
文件，以及可选的主题备选方案，这些备选方案是具有 \fI.theme\fP 文件扩展名并且包含 \fIdefault.theme\fP 文件的调整的附加文件。
IceWM Theme Creation Howto 中解释了如何创建主题。
.IP \fIworkspace\fP 4
.IX Item workspace
如果 \f(CW\*(C`PagerShowPreview\*(C'\fP 被禁用，icewm 在 \f(CW\*(C`workspace\*(C'\fP
目录中查找图像以在工作区按钮上绘制。图像文件名应具有工作区的名称。图片扩展名是可选的。
.SS \s-1OPACITY\s0
.IX Subsection OPACITY
IceWM 支持与 \fBcompton\fP\|(1) 或 \fBpicom\fP\|(1) 等外部合成器相关的窗口不透明度和透明度。
如果客户端窗口在其窗口上设置 \f(CW\*(C`_NET_WM_WINDOW_OPACITY\*(C'\fP 属性，则 \fBicewm\fP
会将其复制到外部框架窗口，合成器将在其中读取它并相应地调整不透明度。
.PP
不透明度也可以在 \fBicewm\-winoptions\fP\|(5) 文件中设置。 \&\fBicesh\fP\|(1)
可以控制正在运行的应用程序的不透明度级别。
.PP
\fBicewm\fP 在其 windows 上设置的 _NET_WM_WINDOW_TYPE 属性为
\fI\s-1DIALOG\s0\fP、\fI\s-1NOTIFICATION\s0\fP、\fI\s-1POPUP_MENU\s0\fP 和
\fI\s-1TOOLTIP\s0\fP。\f(CW\*(C`icesh windows\*(C'\fP 的输出显示它们的 \s-1WM_CLASS\s0
值。这些可以帮助配置康普顿。
.SS \s-1EXAMPLES\s0
.IX Subsection EXAMPLES
上述配置文件的示例可以在默认安装路径或系统范围的默认值中找到。 有关它们的位置，请参见 \&\f(CW\*(C`icewm \-\-directories\*(C'\fP 的输出。
.SS "\s-1CONFORMING TO\s0"
.IX Subsection "CONFORMING TO"
\&\s-1ICCCM 2.0:\s0 部分。 NetWM/EWMH: 广泛。 有关完整详细信息，请参见分发中的文件
\fI\s-1COMPLIANCE\s0\fP。
.SS "\s-1SEE ALSO\s0"
.IX Subsection "SEE ALSO"
\&\fBicehelp\fP\|(1), \&\fBicesh\fP\|(1), \&\fBicesound\fP\|(1), \&\fBicewm\-env\fP\|(5),
\&\fBicewm\-focus_mode\fP\|(5), \&\fBicewm\-keys\fP\|(5), \&\fBicewm\-menu\fP\|(5),
\&\fBicewm\-menu\-fdo\fP\|(1), \&\fBicewm\-menu\-xrandr\fP\|(1),
\&\fBicewm\-preferences\fP\|(5), \&\fBicewm\-prefoverride\fP\|(5),
\&\fBicewm\-programs\fP\|(5), \&\fBicewm\-session\fP\|(1),
\&\fBicewm\-set\-gnomewm\fP\|(1), \&\fBicewm\-shutdown\fP\|(5),
\&\fBicewm\-startup\fP\|(5), \&\fBicewm\-theme\fP\|(5), \&\fBicewm\-toolbar\fP\|(5),
\&\fBicewm\-winoptions\fP\|(5), \&\fBicewmbg\fP\|(1), \&\fBicewmhint\fP\|(1),
\&\fBsetxkbmap\fP\|(1), \&\fBXorg\fP\|(1), \&\fBXserver\fP\|(1), \&\fBxinit\fP\|(1),
\&\fBxprop\fP\|(1), \&\fBxwininfo\fP\|(1), \&\fBwmctrl\fP\|(1).
.SS \s-1BUGS\s0
.IX Subsection BUGS
请在 <https://github.com/bbidulock/icewm/issues> 报告错误。
.SS \s-1AUTHOR\s0
.IX Subsection AUTHOR
布赖恩・比杜洛克 <mailto:bidulock@openss7.org>。
.PP
有关完整的版权声明和复制权限，请参见 \fB\-\-copying\fP。
.SS \s-1LICENSE\s0
.IX Subsection LICENSE
\&\fBIceWM\fP 根据 \s-1GNU\s0 库通用公共许可证获得许可。 请参见分发中的 \fI\s-1COPYING\s0\fP 文件或使用
\fB\-\-copying\fP 标志来显示复制权限。
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
