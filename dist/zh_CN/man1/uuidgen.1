.\" -*- coding: UTF-8 -*-
'\" t
.\"     Title: uuidgen
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.15
.\"      Date: 2022-05-11
.\"    Manual: User Commands
.\"    Source: util-linux 2.38.1
.\"  Language: English
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH UUIDGEN 1 2022\-05\-11 "util\-linux 2.38.1" "User Commands"
.ie  \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de  URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if  \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH NAME
uuidgen \- 创建一个新的 UUID 值
.SH SYNOPSIS
.sp
\fBuuidgen\fP [options]
.SH DESCRIPTION
.sp
\fBuuidgen\fP 程序使用 \fBlibuuid\fP(3) 库创建 (并打印) 一个新的通用唯一标识符 (UUID)。可以合理地认为新的 UUID
在本地系统上创建的所有 UUID 中，以及在过去和 future 中在其他系统上创建的 UUID 中是唯一的。
.sp
\fBuuidgen\fP 可以生成三种类型的 UUID: 基于时间的 UUID、基于随机的 UUID 和基于哈希的
UUID。默认情况下，如果存在高质量随机数生成器，\fBuuidgen\fP 将生成基于随机的 UUID。否则，它将选择基于时间的 UUID。可以使用
\fB\-\-random\fP 或 \fB\-\-time\fP 选项强制生成前两种 UUID 类型之一。
.sp
第三种 UUID 是用 \fB\-\-md5\fP 或 \fB\-\-sha1\fP 选项生成的，其次是 \fB\-\-namespace\fP \fInamespace\fP 和
\fB\-\-name\fP \fIname\fP。\fInamespace\fP 可以是众所周知的 UUID，也可以是 RFC 4122 中定义的其中一个众所周知的
UUID 的别名，即 \fB@dns\fP、\fB@url\fP、\fB@oid\fP 或 \fB@x500\fP。\fIname\fP 是任意字符串值。生成的 UUID 是命名空间
UUID 和名称值的串联摘要，使用 MD5 或 SHA1 算法进行哈希处理。因此，它是一个可预测的值，当 UUID
被用作更复杂值或不应直接公开的值的句柄或随机数时，它可能很有用。有关详细信息，请参见 RFC。
.SH OPTIONS
.sp
\fB\-r\fP, \fB\-\-random\fP
.RS 4
生成基于随机的 UUID。此方法创建一个主要由随机位组成的 UUID。它要求操作系统有一个高质量的随机数发生器，比如 \fI/dev/random\fP。
.RE
.sp
\fB\-t\fP, \fB\-\-time\fP
.RS 4
生成基于时间的 UUID。此方法基于系统时钟加上系统 \(cqs 以太网硬件地址 (如果存在) 创建一个 UUID。
.RE
.sp
\fB\-h\fP, \fB\-\-help\fP
.RS 4
显示帮助文本并退出。
.RE
.sp
\fB\-V\fP, \fB\-\-version\fP
.RS 4
打印版本并退出。
.RE
.sp
\fB\-m\fP, \fB\-\-md5\fP
.RS 4
使用 MD5 作为哈希算法。
.RE
.sp
\fB\-s\fP, \fB\-\-sha1\fP
.RS 4
使用 SHA1 作为哈希算法。
.RE
.sp
\fB\-n\fP, \fB\-\-namespace\fP \fInamespace\fP
.RS 4
生成带有 \fInamespace\fP 前缀的散列。\fInamespace\fP 是 UUID，或 \(aq@ns\(aq，其中 "ns" 是众所周知的预定义
UUID，由名称空间名称寻址 (见上文)。
.RE
.sp
\fB\-N\fP, \fB\-\-name\fP \fIname\fP
.RS 4
生成 \fIname\fP 的哈希值。
.RE
.sp
\fB\-x\fP, \fB\-\-hex\fP
.RS 4
将名称 \fIname\fP 解释为十六进制字符串。
.RE
.SH "CONFORMING TO"
.sp
OSF DCE 1.1
.SH EXAMPLES
.sp
uuidgen \-\-sha1 \-\-namespace @dns \-\-name "www.example.com"
.SH AUTHORS
.sp
\fBuuidgen\fP 由 Andreas Dilger 为 \fBlibuuid\fP(3) 编写。
.SH "SEE ALSO"
.sp
\fBuuidparse\fP(1), \fBlibuuid\fP(3),
.URL https://tools.ietf.org/html/rfc4122 "RFC 4122" ""
.SH "REPORTING BUGS"
.sp
对于错误报告，请使用问题跟踪器
.URL https://github.com/util\-linux/util\-linux/issues "" .
.SH AVAILABILITY
.sp
\fBuuidgen\fP 命令是 util\-linux 包的一部分，可以从
.URL https://www.kernel.org/pub/linux/utils/util\-linux/ "Linux Kernel Archive" .
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
