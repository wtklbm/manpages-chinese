.\" -*- coding: UTF-8 -*-
'\" t
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH LESS 1 "Version 608: 22 Jul 2022"  
.SH NAME
少 \- 多的相反
.SH SYNOPSIS
\fBless \-?\fP
.br
\fBless \-\-help\fP
.br
\fBless \-V\fP
.br
\fBless \-\-version\fP
.br
\fBless [\-[+]aABcCdeEfFgGiIJKLmMnNqQrRsSuUVwWX~]\fP
.br
\fB[\-b \fP\fIspace\/\fP\fB] [\-h \fP\fIlines\/\fP\fB] [\-j \fP\fIline\/\fP\fB] [\-k \fP\fIkeyfile\/\fP\fB]\fP
.br
\fB[\-{oO} \fP\fIlogfile\/\fP\fB] [\-p \fP\fIpattern\/\fP\fB] [\-P \fP\fIprompt\/\fP\fB] [\-t \fP\fItag\/\fP\fB]\fP
.br
\fB[\-T \fP\fItagsfile\/\fP\fB] [\-x \fP\fItab\/\fP\fB,...] [\-y \fP\fIlines\/\fP\fB] [\-[z] \fP\fIlines\/\fP\fB]\fP
.br
\fB[\-# \fP\fIshift\/\fP\fB] [+[+]\fP\fIcmd\/\fP\fB] [\-\-] [\fP\fIfilename\/\fP\fB]...\fP
.br
(有关长选项名称的替代选项语法，请参见 OPTIONS 部分。)
.
.SH DESCRIPTION
\fILess\fP 是一个类似于 \fImore\fP(1) 的程序，但它允许在文件中向后移动以及向前移动。 此外，\fIless\fP
不必在启动前读取整个输入文件，因此对于大型输入文件，它的启动速度比像 \fIvi\fP(1) 这样的文本编辑器要快。 \fILess\fP 使用 termcap
(或某些系统上的 terminfo)，因此它可以在各种终端上运行。 甚至对硬拷贝终端的支持也很有限。
(在硬拷贝终端上，应打印在屏幕顶部的行以插入符号为前缀。)
.PP
命令基于 \fImore\fP 和 \fIvi\fP。 命令前面可以有一个十进制数，在下面的描述中称为 N。 如所示，该编号由某些命令使用。
.
.SH COMMANDS
在下面的描述中，^X 表示 control\-X。 ESC 代表 ESCAPE 键; 例如 ESC\-v 表示两个字符序列 "ESCAPE"，然后是
"v"。
.IP "h or H"
帮助: 显示这些命令的总结。 如果您忘记了所有其他命令，请记住这个命令。
.IP "SPACE or ^V or f or ^F"
向前滚动 N 行，默认一个窗口 (见下面的选项 \-z)。 如果 N 大于屏幕大小，则只显示最后一屏。 警告: 某些系统使用 ^V 作为特殊文字化字符。
.IP z
与 SPACE 类似，但如果指定了 N，它将成为新的窗口大小。
.IP ESC\-SPACE
像 SPACE，但滚动一整屏，即使它在此过程中到达文件末尾。
.IP "ENTER or RETURN or ^N or e or ^E or j or ^J"
向前滚动 N 行，默认 1。 显示整个 N 行，即使 N 大于屏幕大小。
.IP "d or ^D"
向前滚动 N 行，默认为屏幕大小的一半。 如果指定 N，它将成为后续 d 和 u 命令的新默认值。
.IP "b or ^B or ESC\-v"
向后滚动 N 行，默认一个窗口 (见下面的选项 \-z)。 如果 N 大于屏幕大小，则只显示最后一屏。
.IP w
与 ESC\-v 类似，但如果指定了 N，它将成为新的窗口大小。
.IP "y or ^Y or ^P or k or ^K"
向后滚动 N 行，默认 1。 显示整个 N 行，即使 N 大于屏幕大小。 警告: 某些系统使用 ^Y 作为特殊的作业控制字符。
.IP "u or ^U"
向后滚动 N 行，默认为屏幕大小的一半。 如果指定 N，它将成为后续 d 和 u 命令的新默认值。
.IP J
与 j 类似，但继续滚动到文件末尾之外。
.IP "K or Y"
与 k 类似，但继续滚动到文件开头之外。
.IP "ESC\-) or RIGHTARROW"
水平向右滚动 N 个字符，默认为屏幕宽度的一半 (请参见 \-# 选项)。 如果指定了数字 N，它将成为 future RIGHTARROW 和
LEFTARROW 命令的默认值。 当文本滚动时，它就像 \-S 选项 (截线) 生效一样。
.IP "ESC\-( or LEFTARROW"
水平向左滚动 N 个字符，默认为屏幕宽度的一半 (请参见 \-# 选项)。 如果指定了数字 N，它将成为 future RIGHTARROW 和
LEFTARROW 命令的默认值。
.IP "ESC\-} or ^RIGHTARROW"
水平向右滚动以显示最长显示行的末尾。
.IP "ESC\-{ or ^LEFTARROW"
向左水平滚动回到第一列。
.IP "r or ^R or ^L"
重绘画面。
.IP R
重新绘制屏幕，丢弃所有缓冲的输入。 即重新加载当前文件。 如果文件在查看时正在更改，则很有用。
.IP F
向前滚动，并在到达文件末尾时继续尝试阅读。 通常，当已经在文件末尾时将使用此命令。 这是一种监视文件尾部的方法，该文件在查看时正在增长。 (行为类似于
"tail \-f" 命令。) 要停止等待更多数据，请输入中断字符 (通常为 ^C)。 在某些系统上，您还可以使用 ^X。 如果输入是管道，并且
\-\-exit\-follow\-on\-close 选项生效，当管道的输入端关闭时，\fIless\fP 会自动停止等待数据。
.IP ESC\-F
与 F 类似，但一旦找到与上次搜索模式匹配的行，最终铃声就会响起，向前滚动停止。
.IP "g or < or ESC\-<"
转到文件中的第 N 行，默认为第 1 行 (文件开头)。 (警告: 如果 N 很大，这可能会很慢。)
.IP "G or > or ESC\->"
转到文件中的第 N 行，默认为文件末尾。 (警告: 如果 N 很大，或者如果 N 未指定并且正在读取标准输入而不是文件，这可能会很慢。)
.IP ESC\-G
与 G 相同，除非没有指定数字 N 并且输入是标准输入，转到当前缓冲的最后一行。
.IP "p or %"
转到文件中 N % 的位置。 N 应介于 0 和 100 之间，并且可以包含小数点。
.IP P
转到文件中包含字节偏移量 N 的行。
.IP {
如果左大括号出现在屏幕上显示的第一行，则 {命令将转到匹配的右大括号。 匹配的右花括号位于屏幕的底行。 如果第一行有多个左花括号，则可以使用数字 N
来指定该行的第 N 个括号。
.IP }
如果右大括号出现在屏幕上显示的底行，} 命令将转到匹配的左大括号。 匹配的左大括号位于屏幕的顶行。 如果最后一行有多个右花括号，则可以使用数字 N
来指定该行的第 N 个括号。
.IP (
类似于 {，但适用于圆括号而不是大括号。
.IP )
类似于}，但适用于圆括号而不是大括号。
.IP [
与 {类似，但适用于方括号而不是大括号。
.IP ]
类似于}，但适用于方括号而不是大括号。
.IP ESC\-^F
后跟两个字符，作用类似于 {，但分别将这两个字符用作左括号和右括号。 例如，`ESC ^F < >" 可用于前进到与顶部显示行中的
< 匹配的 >。
.IP ESC\-^B
后跟两个字符，作用类似于}，但分别将这两个字符用作左括号和右括号。 例如，`ESC ^B < >" 可用于返回到与底部显示行中的
> 匹配的 <。
.IP m
后跟任何小写或大写字母，用该字母标记显示的第一行。 如果通过 \-J 选项启用状态列，则状态列显示标记线。
.IP M
与 m 类似，除了标记最后显示的行而不是显示的第一行。
.IP '
(单引号。) 后跟任何小写或大写字母，返回到先前用该字母标记的位置。 再跟一个单引号，返回到上次执行 "large" 移动命令的位置。 后跟 ^ 或
$，分别跳转到文件的开头或结尾。 检查新文件时会保留标记，因此可以使用 ' 命令在输入文件之间切换。
.IP ^X^X
与单引号相同。
.IP ESC\-m
后跟任何小写或大写字母，清除由该字母标识的标记。
.IP /pattern
在文件中向前搜索包含该模式的第 N 行。 N 默认为 1。 该模式是一个正则表达式，由您的系统提供的正则表达式库识别。 搜索从显示的第一行开始
(但请参见 \-a 和 \-j 选项，它们会改变这一点)。
.sp
如果在模式的开头输入某些字符是特殊的; 他们修改搜索类型而不是成为模式的一部分:
.RS
.IP "^N or !"
搜索与模式不匹配的行。
.IP "^E or *"
搜索多个文件。 也就是说，如果搜索到达当前文件的末尾但未找到匹配项，则搜索将继续搜索命令行列表中的下一个文件。
.IP "^F or @"
从命令行列表中第一个文件的第一行开始搜索，而不管屏幕上当前显示的内容或 \-a 或 \-j 选项的设置如何。
.IP ^K
突出显示与当前屏幕上的模式匹配的任何文本，但不要移动到第一个匹配项 (保持当前位置)。
.IP ^R
不要解释正则表达式元字符; 也就是做一个简单的文字对比。
.IP ^W
环绕当前文件。 也就是说，如果搜索到达当前文件的末尾但没有找到匹配项，则搜索将从当前文件的第一行继续到它开始的行。 如果设置了 ^W 修饰符，则忽略
^E 修饰符。
.RE
.IP ?pattern
在文件中向后搜索包含该模式的第 N 行。 搜索从显示的最后一行开始 (但请参见 \-a 和 \-j 选项，它们会改变这一点)。
.sp
某些字符在 / 命令中是特殊的:
.RS
.IP "^N or !"
搜索与模式不匹配的行。
.IP "^E or *"
搜索多个文件。 也就是说，如果搜索到达当前文件的开头但没有找到匹配项，则搜索会继续搜索命令行列表中的前一个文件。
.IP "^F or @"
从命令行列表中最后一个文件的最后一行开始搜索，无论当前屏幕上显示什么或 \-a 或 \-j 选项的设置如何。
.IP ^K
与前向搜索一样。
.IP ^R
与前向搜索一样。
.IP ^W
环绕当前文件。 也就是说，如果搜索到达当前文件的开头但没有找到匹配项，则搜索将从当前文件的最后一行继续到它开始的那一行。
.RE
.IP ESC\-/pattern
与 "/*" 相同。
.IP ESC\-?pattern
与 "?*" 相同。
.IP n
重复先前的搜索，查找包含最后一个模式的第 N 行。 如果先前的搜索被 ^N 修改，则搜索不包含该模式的第 N 行。 如果先前的搜索被 ^E
修改，如果在当前文件中不满足，则在下一个 (或上一个) 文件中继续搜索。 如果先前的搜索被 ^R 修改，则搜索将在不使用正则表达式的情况下完成。
如果先前的搜索被 ^F 或 ^K 修改，则没有任何效果。
.IP N
重复先前的搜索，但方向相反。
.IP ESC\-n
重复先前的搜索，但跨越文件边界。 效果就好像之前的搜索被 * 修改了一样。
.IP ESC\-N
重复先前的搜索，但方向相反并跨越文件边界。
.IP ESC\-u
撤消搜索突出显示。 关闭与当前搜索模式匹配的字符串的突出显示。 如果由于之前的 ESC\-u 命令高亮已经关闭，请重新打开高亮。
任何搜索命令也会重新打开突出显示。 (也可以通过切换 \-G 选项来禁用突出显示; 在这种情况下，搜索命令不会重新打开突出显示。)
.IP ESC\-U
与 ESC\-u 类似，但也会清除保存的搜索模式。 如果通过 \-J 选项启用状态列，这将清除状态列中标记的所有搜索匹配项。
.IP &pattern
仅显示与模式匹配的行; 不匹配模式的行不会显示。 如果 pattern 为空 (如果您键入 & 后立即按 ENTER)，则将关闭任何过滤，并显示所有行。
当过滤生效时，提示符的开头会显示一个符号，以提醒文件中的某些行可能被隐藏。 可以输入多个 & 命令，在这种情况下，只会显示与所有模式匹配的行。
.sp
某些字符在 / 命令中是特殊的:
.RS
.IP "^N or !"
仅显示与模式不匹配的行。
.IP ^R
不要解释正则表达式元字符; 也就是做一个简单的文字对比。
.RE
.IP ":e [filename]"
检查一个新文件。 如果文件名丢失，将重新检查命令行文件列表中的 "current" 文件 (请参见下面的 :n 和 :p 命令)。 文件名中的百分号
(%) 将替换为当前文件的名称。 井号 (#) 替换为先前检查的文件的名称。 但是，两个连续的百分号只是简单地替换为一个百分号。
这允许您输入名称中包含百分号的文件名。 类似地，两个连续的井号被替换为一个井号。 文件名被插入到文件的命令行列表中，以便后续的 :n 和 :p
命令可以看到它。 如果文件名由多个文件组成，则将它们全部插入到文件列表中并检查第一个文件。 如果文件名包含一个或多个空格，则整个文件名应该用双引号引起来
(另请参见 \-" 选项)。
.IP "^X^V or E"
与 :e 相同。 警告: 某些系统使用 ^V 作为特殊文字化字符。 在这样的系统上，您可能无法使用 ^V。
.IP :n
检查下一个文件 (来自命令行中给出的文件列表)。 如果指定了数字 N，则检查下一个第 N 个文件。
.IP :p
检查命令行列表中的前一个文件。 如果指定了数字 N，则检查前 N 个文件。
.IP :x
检查命令行列表中的第一个文件。 如果指定了数字 N，则检查列表中的第 N 个文件。
.IP :d
从文件列表中删除当前文件。
.IP t
如果当前标签有多个匹配项，则转到下一个标签。 有关标签的更多详细信息，请参见 \-t 选项。
.IP T
如果当前标签有多个匹配项，则转到上一个标签。
.IP "= or ^G or :f"
打印有关正在查看的文件的一些信息，包括其名称以及正在显示的底行的行号和字节偏移量。
如果可能，它还会打印文件的长度、文件中的行数以及最后显示行以上的文件百分比。
.IP \-
后面跟着一个命令行选项字母 (请参见下面的选项)，这将更改该选项的设置并打印一条描述新设置的消息。 如果在破折号后立即输入 ^P
(CONTROL\-P)，选项的设置会更改但不会打印任何消息。 如果选项字母有数值 (如 \-b 或 \-h)，或字符串值 (如 \-P 或
\-t)，则可以在选项字母后输入新值。 如果没有输入新值，则会打印一条描述当前设置的消息，并且没有任何更改。
.IP \-\-
与 \- 命令类似，但采用长选项名称 (请参见下面的选项) 而不是单个选项字母。 您必须在键入选项名称后按 ENTER 或 RETURN。
紧跟在第二个破折号之后的 ^P 禁止打印描述新设置的消息，如 \- 命令。
.IP \-+
后面跟着一个命令行选项字母，这会将选项重置为其默认设置并打印一条描述新设置的消息。 ("\-+\fIX\fP" 命令与命令行上的 "\-+\fIX\fP"
执行相同的操作。) 这不适用于字符串值选项。
.IP \-\-+
与 \-+ 命令类似，但采用长选项名称而不是单个选项字母。
.IP \-!
后跟一个命令行选项字母，这会将选项重置为其默认设置的 "opposite"，并打印一条描述新设置的消息。 这不适用于数字或字符串值选项。
.IP \-\-!
类似于 \-!\& 命令，但采用长选项名称而不是单个选项字母。
.IP _
(Underscore.) 后跟一个命令行选项字母，这将打印一条消息，描述该选项的当前设置。 选项的设置没有改变。
.IP __
(双下划线。) 类似于 _ (underscore) 命令，但采用长选项名称而不是单个选项字母。 您必须在键入选项名称后按 ENTER 或
RETURN。
.IP +cmd
导致每次检查新文件时执行指定的 cmd。 例如，+G 使 \fIless\fP 最初显示每个文件从结尾而不是开头开始。
.IP V
打印正在运行的 \fIless\fP 的版本号。
.IP "q or Q or :q or :Q or ZZ"
退出 \fIless\fP。
.PP
以下四个命令可能有效也可能无效，具体取决于您的特定安装。
.
.IP v
调用编辑器来编辑当前正在查看的文件。 如果已定义，则编辑器取自环境变量 VISUAL; 如果未定义 VISUAL，则取自 EDITOR; 如果既未定义
VISUAL 也未定义 EDITOR，则默认为 "vi"。 另请参见下面关于 PROMPTS 的部分下对 LESSEDIT 的讨论。
.IP "! shell\-command"
调用 shell 来运行给定的 shell 命令。 命令中的百分号 (%) 将替换为当前文件的名称。 井号 (#) 替换为先前检查的文件的名称。
"!!" 重复最后一个 shell 命令。 没有 shell 命令的 "!" 只是调用 shell。 在 Unix 系统上，shell 取自环境变量
SHELL，或默认为 "sh"。 在 MS\-DOS 和 OS/2 系统上，shell 是普通的命令处理器。
.IP "| <m> shell\-command"
<m> 代表任何标记字母。 将输入文件的一部分通过管道传递给给定的 shell 命令。
要传输的文件部分位于字母标记的位置和当前屏幕之间。 包括整个当前屏幕，无论标记位置是在当前屏幕之前还是之后。 <m> 也可以是 ^ 或
$ 分别表示文件的开头或结尾。 如果 <m> 是 \&.\& 或换行符，则当前屏幕是管道。
.IP "s filename"
将输入保存到文件中。 这仅适用于输入是管道而不是普通文件的情况。
.
.SH OPTIONS
命令行选项如下所述。 大多数选项可以在 \fIless\fP 运行时通过 "\-" 命令更改。
.PP
大多数选项可以以两种形式之一给出: 一个破折号后跟一个字母，或者两个破折号后跟一个长选项名称。 长选项名称可以缩写，只要缩写是明确的即可。
例如，\-\-quit\-at\-eof 可能缩写为 \-\-quit，但不是 \-\-qui，因为 \-\-quit\-at\-eof 和 \-\-quiet 都以 \-\-qui
开头。 一些长选项名称是大写的，例如 \-\-QUIT\-AT\-EOF，与 \-\-quit\-at\-eof 不同。 这样的选项名称只需要将首字母大写即可;
名称的其余部分可以是任何一种情况。 例如，\-\-Quit\-at\-eof 等同于 \-\-QUIT\-AT\-EOF。
.PP
选项也取自环境变量 "LESS"。 例如，为了避免每次调用 \fIless\fP 时键入 "less \-options \&...\&"，您可以告诉
\fIcsh\fP:
.sp
setenv LESS "\-options"
.sp
或者如果您使用 \fIsh\fP:
.sp
LESS="\-options";  少出口
.sp
在 MS\-DOS 上，您不需要引号，但您应该将选项字符串中的任何百分号替换为双百分号。
.sp
环境变量在命令行之前被解析，因此命令行选项会覆盖 LESS 环境变量。 如果一个选项出现在 LESS 变量中，则可以通过以 "\-+"
开头的命令行选项将其重置为命令行上的默认值。
.sp
某些选项 (如 \-k 或 \-D) 需要在选项字母后跟一个字符串。 当找到美元符号 ($) 时，该选项的字符串被视为结束。 例如，您可以像这样在
MS\-DOS 上设置两个 \-D 选项:
.sp
LESS="Dn9.1$Ds4.1"
.sp
如果 \-\-use\-backslash 选项出现在选项的前面，则美元符号或反斜杠可以通过在其前面加上反斜杠来按字面意思包含在选项字符串中。 如果
\-\-use\-backslash 选项没有生效，那么反斜杠不会被特殊处理，并且没有办法在选项字符串中包含美元符号。
.IP "\-? or \-\-help"
该选项显示 \fIless\fP 接受的命令的总结 (与 h 命令相同)。 (根据您的 shell 解释问号的方式，可能需要引用问号，因此: `\-\e?`。)
.IP "\-a or \-\-search\-skip\-screen"
默认情况下，正向搜索从显示屏幕的顶部开始，向后搜索从显示屏幕的底部开始 (n 或 N 命令调用的重复搜索除外，它们分别在 "target"
行之后或之前开始; 请参见 \-j 有关目标行的更多信息的选项)。 \-a
选项导致向前搜索改为从屏幕底部开始，向后搜索从屏幕顶部开始，从而跳过屏幕上显示的所有行。
.IP "\-A or \-\-SEARCH\-SKIP\-SCREEN"
使所有向前搜索 (不仅仅是非重复搜索) 在目标行之后开始，所有向后搜索在目标行之前开始。 因此，正向搜索将跳过显示屏幕的一部分
(从第一行到并包括目标行)。 类似地，向后搜索将跳过显示的屏幕，从最后一行直到并包括目标行。 这是 441 之前 less 版本的默认行为。
.IP "\-b\fIn\fP or \-\-buffers=\fIn\fP"
指定 \fIless\fP 将用于每个文件的缓冲区空间量，以千字节 (1024 字节) 为单位。 默认情况下，每个文件使用 64\KB 的缓冲区空间
(除非文件是管道; 请参见 \-B 选项)。 \-b 选项指定应该为每个文件使用 \fIn\fP 千字节的缓冲区空间。 如果 \fIn\fP 为
\-1，则缓冲区空间不受限制; 也就是说，可以将整个文件读入内存。
.IP "\-B or \-\-auto\-buffers"
默认情况下，当从管道读取数据时，会根据需要自动分配缓冲区。 如果从管道读取大量数据，这会导致分配大量内存。 \-B 选项禁止为管道自动分配缓冲区，因此只有
64\KB (或 \-b 选项指定的空间量) 用于管道。 警告: 使用 \-B 会导致错误显示，因为只有最近查看的管道数据部分保留在内存中;
任何较早的数据都将丢失。
.IP "\-c or \-\-clear\-screen"
导致从顶行向下绘制全屏重绘。 默认情况下，全屏重绘是通过从屏幕底部滚动来完成的。
.IP "\-C or \-\-CLEAR\-SCREEN"
与 \-c 相同，以兼容旧版本的 \fIless\fP。
.IP "\-d or \-\-dumb"
\-d 选项会抑制终端为哑时通常显示的错误消息; 也就是说，缺少一些重要的功能，例如清除屏幕或向后滚动的能力。 \-d 选项不会以其他方式改变
\fIless\fP 在哑终端上的行为。
.IP "\-D\fBx\fP\fIcolor\fP or \-\-color=\fBx\fP\fIcolor\fP"
更改显示文本不同部分的颜色。 \fBx\fP 是单个字符，用于选择要设置颜色的文本类型:
.RS
.IP B
二进制字符。
.IP C
控制字符。
.IP E
错误和信息性消息。
.IP H
标题行和列，通过 \-\-header 选项设置。
.IP M
在状态栏中标记字母。
.IP N
通过 \-N 选项启用行号。
.IP P
Prompts.
.IP R
滚动字符。
.IP S
搜索结果。
.IP W
通过 \-w 选项启用高亮显示。
.IP d
加粗字体。
.IP k
闪烁的文字。
.IP s
突出的文字。
.IP u
带下划线的文本。
.RE
 
.RS
只有启用 \-\-use\-color 选项时才能使用大写字母。 当文本颜色由大写字母和小写字母指定时，大写字母优先。 例如，错误消息通常显示为醒目的文本。
因此，如果 "s" 和 "E" 都指定了颜色，则 "E" 颜色适用于错误消息，"s" 颜色适用于其他突出文本。 "d" 和 "u"
字母指的是通过用退格键重划形成的粗体和下划线文本 (请参见 \-u 选项)，而不是指使用带有 \-R 选项的 ANSI 转义序列的文本。
.PP
一个小写字母后面可以跟一个 + 来表示正常的格式变化和指定的颜色都应该被使用。 例如，\-Dug 将带下划线的文本显示为绿色而没有下划线;
绿色已经取代了通常的下划线格式。 但是 \- Du+g 将带下划线的文本显示为绿色和带下划线的格式。
.PP
\fIcolor\fP 是 4 位颜色字符串或 8 位颜色字符串:
.PP
一个 4 位颜色字符串是零个、一个或两个字符，其中第一个字符指定前景色，第二个字符指定背景色，如下所示:
.IP b
Blue
.IP c
Cyan
.IP g
Green
.IP k
Black
.IP m
Magenta
.IP r
Red
.IP w
White
.IP y
Yellow
.PP
相应的大写字母表示颜色的较亮阴影。 例如，\-DNGk 将行号显示为黑色背景上的亮绿色文本，而 \-DEbR 将错误消息显示为亮红色背景上的蓝色文本。
如果任一字符是 "\-" 或被省略，则相应的颜色设置为普通文本的颜色。
.PP
一个 8 位颜色字符串是由一个点分隔的一个或两个十进制整数，其中第一个整数指定前景颜色，第二个指定背景颜色。 每个整数都是 0 到 255
之间的一个值，它选择一个 "CSI 38;5" 颜色值 (参见
.br
.nh
https://en.wikipedia.org/wiki/ANSI_escape_code#SGR)
.hy
如果任一整数是 "\-" 或被省略，则相应的颜色设置为普通文本的颜色。 在 \fIless\fP 的 MS\-DOS 版本上，不支持 8 位颜色;
相反，十进制值被解释为 4 位 CHAR_INFO.Attributes 值 (参见
.br
.nh
https://docs.microsoft.com/en\-us/windows/console/char\-info\-str).
.hy
.RE
.IP "\-e or \-\-quit\-at\-eof"
使 \fIless\fP 在第二次到达文件末尾时自动退出。 默认情况下，退出 \fIless\fP 的唯一方法是通过 "q" 命令。
.IP "\-E or \-\-QUIT\-AT\-EOF"
使 \fIless\fP 在第一次到达文件末尾时自动退出。
.IP "\-f or \-\-force"
强制打开非常规文件。 (非常规文件是目录或设备特殊文件。) 打开二进制文件时也会抑制警告消息。 默认情况下，\fIless\fP 将拒绝打开非常规文件。
请注意，即使设置了 \-f，某些操作系统也不允许读取目录。
.IP "\-F or \-\-quit\-if\-one\-screen"
如果整个文件可以显示在第一个屏幕上，则导致 \fIless\fP 自动退出。
.IP "\-g or \-\-hilite\-search"
通常情况下，\fIless\fP 会高亮显示所有匹配上一个搜索命令的字符串。 \-g 选项更改此行为以仅突出显示上一个搜索命令找到的特定字符串。 这会导致
\fIless\fP 的运行速度比默认值快一些。
.IP "\-G or \-\-HILITE\-SEARCH"
\-G 选项禁止突出显示搜索命令找到的字符串。
.IP "\-h\fIn\fP or \-\-max\-back\-scroll=\fIn\fP"
指定向后滚动的最大行数。 如果需要向后滚动超过 \fIn\fP 行，则屏幕会向前重新绘制。 (如果最终端没有向后滚动的能力，则隐含 \-h0。)
.IP "\-i or \-\-ignore\-case"
导致搜索忽略大小写; 也就是说，大写和小写被认为是相同的。 如果搜索模式中出现任何大写字母，则忽略此选项;
换句话说，如果模式包含大写字母，则该搜索不会忽略大小写。
.IP "\-I or \-\-IGNORE\-CASE"
与 \-i 类似，但即使模式包含大写字母，搜索也会忽略大小写。
.IP "\-j\fIn\fP or \-\-jump\-target=\fIn\fP"
在屏幕上指定 "target" 行所在的行。 目标行是任意命令指定的行，用于搜索模式、跳转到行号、跳转到文件百分比或跳转到标签。 屏幕行可以用数字指定:
屏幕上的第一行是 1，下一行是 2，依此类推。 数字可以是 negative 来指定相对于屏幕底部的一行: 屏幕底部的一行是 \-1，倒数第二行是
\-2，依此类推。 或者，屏幕行可以指定为屏幕高度的分数，以小数点开始: \&.5 位于屏幕中间，\&.3 是第一行下方的十分之三，并且很快。
如果将行指定为分数，则在调整最终窗口大小时重新计算实际行号，以便目标行保持在屏幕高度的指定分数处。 如果使用任何形式的 \-j 选项，则重复向前搜索
(使用 "n" 或 "N" 调用) 从目标行之后的行开始，重复向后搜索从目标行开始，除非被 \-a 或 \-A 更改。 例如，如果使用
"\-j4"，则目标行是屏幕上的第四行，因此正向搜索从屏幕上的第五行开始。 然而，非重复搜索 (使用 "/" 或 "?" 调用)
始终分别从当前屏幕的开头或结尾开始。
.IP "\-J or \-\-status\-column"
在屏幕左侧 edge 显示状态栏。 状态列显示与当前搜索匹配的行，以及任何被标记的行 (通过 m 或 M 命令)。
.IP "\-k\fIfilename\fP or \-\-lesskey\-file=\fIfilename\fP"
导致 \fIless\fP 打开命名文件并将其解释为 \fIlesskey\fP(1) 二进制文件。 可以指定多个 \-k 选项。 如果设置了 LESSKEY 或
LESSKEY_SYSTEM 环境变量，或者如果在标准位置找到了 lesskey 文件 (请参见 KEY BINDINGS)，它也被用作
\fIlesskey\fP 文件。
.IP \-\-lesskey\-src=\fIfilename\fP
导致 \fIless\fP 打开命名文件并将其解释为 \fIlesskey\fP(1) 源文件。 如果设置了 LESSKEYIN 或
LESSKEYIN_SYSTEM 环境变量，或者如果在标准位置找到了 lesskey 源文件 (请参见 KEY BINDINGS)，它也被用作
\fIlesskey source\fP 文件。 在 582 版本之前，需要运行 \fIlesskey\fP 程序将 \fIlesskey source\fP 文件转换为
\fIlesskey binary\fP 文件以供 \fIless\fP 使用。 较新版本的 \fIless\fP 直接读取 \fIlesskey source\fP
文件，如果源文件存在则忽略二进制文件。
.IP "\-K or \-\-quit\-on\-intr"
当键入中断字符 (通常为 ^C) 时，导致 \fIless\fP 立即退出 (状态为 2)。 通常，中断字符会导致 \fIless\fP
停止其正在执行的操作并返回其命令提示符。 请注意，使用此选项将无法从 "F" 命令返回到命令提示符。
.IP "\-L or \-\-no\-lessopen"
忽略 LESSOPEN 环境变量 (参见下面的 INPUT PREPROCESSOR 部分)。 该选项可以在 \fIless\fP
中设置，但它只适用于随后打开的文件，而不适用于当前打开的文件。
.IP "\-m or \-\-long\-prompt"
导致 \fIless\fP 详细提示 (如 \fImore\fP)，将百分比放入文件中。 默认情况下，\fIless\fP 使用冒号进行提示。
.IP "\-M or \-\-LONG\-PROMPT"
导致 \fIless\fP 的提示比 \fImore\fP 更冗长。
.IP "\-n or \-\-line\-numbers"
抑制行号。 默认值 (使用行号) 在某些情况下可能会导致 \fIless\fP 运行得更慢，尤其是对于非常大的输入文件。 使用 \-n
选项抑制行号将避免此问题。 使用行号意味着: 行号将显示在详细提示和 = 命令中，v 命令会将当前行号传递给编辑器 (另请参见下面 PROMPTS 中
LESSEDIT 的讨论)。
.IP "\-N or \-\-LINE\-NUMBERS"
使行号显示在显示屏中每行的开头。
.IP "\-o\fIfilename\fP or \-\-log\-file=\fIfilename\fP"
使 \fIless\fP 在查看时将其输入复制到命名文件。 这仅适用于输入文件是管道而不是普通文件的情况。 如果文件已经存在，\fIless\fP
将在覆盖之前要求确认。
.IP "\-O\fIfilename\fP or \-\-LOG\-FILE=\fIfilename\fP"
\-O 选项类似于 \-o，但它会在不要求确认的情况下覆盖现有文件。
.sp
如果未指定日志文件，则可以在 \fIless\fP 中使用 \-o 和 \-O 选项来指定日志文件。 如果没有文件名，他们将只报告日志文件的名称。 "s"
命令等同于从 \fIless\fP 中指定 \-o。
.IP "\-p\fIpattern\fP or \-\-pattern=\fIpattern\fP"
命令行中的 \-p 选项相当于指定 +/\fIpattern\fP; 也就是说，它告诉 \fIless\fP 从文件中第一次出现 \fIpattern\fP 开始。
.IP "\-P\fIprompt\fP or \-\-prompt=\fIprompt\fP"
提供了一种方法来定制三个提示
风格根据自己的喜好。
这个选项通常会放在 LESS 环境中
变量，而不是输入每个
\fIless\fP
command.
这样的选项必须是 LESS 变量中的最后一个选项，
或以美元符号终止。
 \-Ps 后跟一个字符串更改默认的 (short) 提示
到那个字符串。
 \-Pm 更改中等 (\-m) 提示。
 \-PM 更改长 (\-M) 提示符。
 \-Ph 更改帮助屏幕的提示。
 \- P = 更改 = 命令打印的消息。
 \-Pw 更改等待数据时打印的消息 (在 "F" 命令中)。
.sp 1
所有提示字符串都由一系列字母和特殊转义序列组成。 有关更多详细信息，请参见有关 PROMPTS 的部分。
.IP "\-q or \-\-quiet or \-\-silent"
适度导致 "quiet" 操作: 如果尝试滚动到文件末尾或文件开头之前，则最终铃不会响起。 如果终端有 "visual bell"，则使用它代替。
铃声会在某些其他错误时响起，例如键入无效字符。 在所有此类情况下，默认设置为敲响终端铃。
.IP "\-Q or \-\-QUIET or \-\-SILENT"
完全导致 "quiet" 操作: 终端铃从不响。 如果最终端有 "visual bell"，则在最终端铃响的所有情况下都使用它。
.IP "\-r or \-\-raw\-control\-chars"
导致显示 "raw" 控制字符。 默认是使用插入符号显示控制字符; 例如，控件 A (八进制 001) 显示为 "^A"。 警告: 当使用 \-r
选项时，\fIless\fP 无法跟踪屏幕的实际外观 (因为这取决于屏幕如何响应每种类型的控制字符)。
因此，可能会导致各种显示问题，例如长行在错误的位置被分割。
.sp
不推荐使用 \-r 选项。
.IP "\-R or \-\-RAW\-CONTROL\-CHARS"
与 \-r 类似，但只有 ANSI "color" 转义序列和 OSC 8 超链接序列以 "raw" 形式输出。 与 \-r
不同，如果文件中除了这些类型的转义序列之外没有转义序列，屏幕外观将得到正确维护。 只有当颜色在一行内而不是跨行更改时才支持颜色转义序列。
换句话说，每行的开头都假定为正常的 (non\-colored)，而不管前面行中的任何转义序列。 为了跟踪屏幕外观，假定这些转义序列不会移动游标。
.sp
OSC 8 超链接是以下形式的序列:
.sp
  电调] 8 ;\&...\&\e7
.sp
终止序列可以是 BEL 字符 (\e7) 或双字符序列 "ESC \e"。
.sp
ANSI 颜色转义序列是以下形式的序列:
.sp
  ESC [ \&...\& m
.sp
其中 "...\&" 是零个或多个颜色规范字符。 您可以通过将环境变量 LESSANSIENDCHARS 设置为可以结束颜色转义序列的字符列表，使
\fIless\fP 认为 "m" 以外的字符可以结束 ANSI 颜色转义序列。 并且您可以通过将环境变量 LESSANSIMIDCHARS
设置为可以出现的字符列表，让 \fIless\fP 认为除了标准字符之外的字符可能出现在 ESC 和 m 之间。
.IP "\-s or \-\-squeeze\-blank\-lines"
导致连续的空行被压缩成一个空行。 这在查看 \fInroff\fP 输出时很有用。
.IP "\-S or \-\-chop\-long\-lines"
导致长于屏幕宽度的行被截断 (truncated) 而不是换行。 也就是说，不适合屏幕宽度的长线部分不会显示，直到您按下 RIGHT\-ARROW。
默认是换行; 即，在下一行显示余数。
.IP "\-t\fItag\fP or \-\-tag=\fItag\fP"
\-t 选项紧跟一个标签，将编辑包含该标签的文件。 为此，标签信息必须可用; 例如，当前目录中可能有一个名为 "tags" 的文件，该文件以前是由
\fIctags\fP(1) 或等效命令构建的。 如果设置了环境变量 LESSGLOBALTAGS，它将被视为与 \fIglobal\fP(1)
兼容的命令的名称，并执行该命令以查找标签。 (See
.nh
http://www.gnu.org/software/global/global.html).
.hy
\-t 选项也可以从 \fIless\fP 中指定 (使用 \- 命令) 作为检查新文件的一种方式。 命令 ":t" 等同于从 \fIless\fP 中指定 \-t。
.IP "\-T\fItagsfile\fP or \-\-tag\-file=\fItagsfile\fP"
指定要使用的标记文件而不是 "tags"。
.IP "\-u or \-\-underline\-special"
导致退格和回车被视为可打印字符; 也就是说，当它们出现在输入中时，它们将被发送到最终端。
.IP "\-U or \-\-UNDERLINE\-SPECIAL"
使退格键、制表符、回车符和 "formatting characters" (由 Unicode 定义) 被视为控制字符; 也就是说，它们按照 \-r
选项指定的方式进行处理。
.sp
默认情况下，如果既没有给出 \-u 也没有给出 \-U，出现在下划线字符旁边的退格符将被特殊处理: 带下划线的文本使用最终的硬件下划线功能显示。
此外，出现在两个相同字符之间的退格符会被特殊处理: 使用最终的硬件粗体功能打印过度文本。 其他退格键与前面的字符一起被删除。 紧跟换行符的回车符被删除。
其他回车按 \-r 选项指定的方式处理。 Unicode 格式字符，例如字节顺序标记，被发送到终端。 如果 \-u 和 \-U
都没有生效，则可以搜索被覆盖或下划线的文本。
.IP "\-V or \-\-version"
显示 \fIless\fP 的版本号。
.IP "\-w or \-\-hilite\-unread"
在向前移动整页后临时突出显示第一行 "new"。 第一个 "new" 行是紧跟在屏幕底部的前一行之后的行。 还突出显示 ag 或 p 命令后的目标行。
在下一个导致移动的命令中，突出显示被删除。 如果 \-\-status\-line 选项有效，整行 (屏幕的宽度) 都会高亮显示。
否则，只会突出显示行中的文本，除非 \-J 选项生效，在这种情况下，只会突出显示状态列。
.IP "\-W or \-\-HILITE\-UNREAD"
与 \-w 类似，但在任何大于一行的向前移动命令之后临时突出显示第一个新行。
.IP "\-x\fIn\fP,...\& or \-\-tabs=\fIn\fP,..."
设置制表位。 如果只指定一个 \fIn\fP，制表位设置为 \fIn\fP 的倍数。
如果指定了多个以逗号分隔的值，则在这些位置设置制表位，然后以与最后两个相同的间距继续。 例如，\fI\-x9,17\fP 将在位置 9、17、25、33
等处设置制表符。\fIn\fP 的默认值为 8.
.IP "\-X or \-\-no\-init"
禁用将 termcap 初始化和取消初始化字符串发送到终端。 如果取消初始化字符串做了一些不必要的事情，比如清除屏幕，这有时是可取的。
.IP "\-y\fIn\fP or \-\-max\-forw\-scroll=\fIn\fP"
指定向前滚动的最大行数。 如果需要向前滚动超过 \fIn\fP 行，屏幕将被重新绘制。 如果需要，可以使用 \-c 或 \-C 选项从屏幕顶部重新绘制。
默认情况下，任何向前移动都会导致滚动。
.IP "\-z\fIn\fP or \-\-window=\fIn\fP or \-\fIn\fP"
将默认滚动窗口大小更改为 \fIn\fP 行。 默认为一屏。 z 和 w 命令也可用于更改窗口大小。 为了与某些版本的 \fImore\fP 兼容，可能会省略
"z"。 如果数字 \fIn\fP 为 negative，则表示 \fIn\fP 行小于当前屏幕尺寸。 例如，如果屏幕为 24 行，则 \fI\-z\-4\fP
将滚动窗口设置为 20 行。 如果屏幕大小调整为 40 行，则滚动窗口会自动更改为 36 行。
.IP \-\(dq\fIcc\fP\ or\ \-\-quotes=\fIcc\fP
更改文件名引号字符。 如果您尝试命名包含空格和引号字符的文件，这可能是必要的。 后跟一个字符，这会将引号字符更改为该字符。
包含空格的文件名应该用该字符而不是双引号括起来。 后跟两个字符，将左引号更改为第一个字符，将右引号更改为第二个字符。
包含空格的文件名应该以左引号字符开头，然后是右引号字符。 请注意，即使在更改引号字符后，此选项仍然保留 \-" (破折号后跟双引号)。
.IP "\-~ or \-\-tilde"
通常文件末尾后的行显示为单个波浪线 (~)。 此选项会导致文件末尾后的行显示为空行。
.IP "\-# or \-\-shift"
指定在 RIGHTARROW 和 LEFTARROW 命令中水平滚动的默认位置数。 如果指定的数字为零，它将默认位置数设置为屏幕宽度的二分之一。
或者，可以将数字指定为屏幕宽度的分数，以小数点开头: \&.5 是屏幕宽度的一半，\&.3 是屏幕宽度的十分之三，依此类推。
如果将数字指定为分数，则在调整最终窗口大小时重新计算滚动位置的实际数量，以便实际滚动保持在屏幕宽度的指定分数处。
.IP \-\-exit\-follow\-on\-close
在管道上使用 "F" 命令时，当管道的输入端关闭时，\fIless\fP 将自动停止等待更多数据。
.IP \-\-file\-size
如果指定 \-\-file\-size，\fIless\fP 会在打开文件后立即判断文件的大小。 通常不会这样做，因为如果输入文件是不可搜索的 (例如管道)
并且很大，它可能会很慢。
.IP \-\-follow\-name
通常，如果在执行 F 命令时输入文件被重命名，\fIless\fP 将继续显示原始文件的内容，尽管其名称已更改。 如果指定了 \-\-follow\-name，在
F 命令期间，\fIless\fP 将定期尝试按名称重新打开文件。 如果重新打开成功并且该文件与原始文件不同 (这意味着已创建一个与原始 (现已重命名)
文件同名的新文件)，\fIless\fP 将显示该新文件的内容。
.IP \-\-header
设置屏幕上显示的标题行数和列数。 该值可以是 "N,M" 的形式，其中 N 和 M 是整数，以将标题行设置为 N，将标题列设置为
M，或者它可以是单个整数 "N"，将标题行设置为 N，将标题列设置为零.  当 N 不为零时，屏幕顶部的前 N 行将替换为文件的前 N
行，而不管正在查看文件的哪个部分。 当 M 为非零时，每行开头显示的字符将替换为该行的前 M 个字符，即使该行的其余部分水平滚动也是如此。 如果 N 或
M 为零，则 \fIless\fP 分别停止显示标题行或列。 (请注意，可能需要更改 \-j 选项的设置，以确保目标行不被标题 line(s).) 遮挡
.IP \-\-incsearch
随后的搜索命令将是 "incremental"; 也就是说，当输入模式的每个字符时，\fIless\fP 将前进到包含搜索模式的下一行。
.IP \-\-line\-num\-width
当 \-N 选项生效时，设置行号字段的最小宽度。 默认为 7 个字符。
.IP \-\-mouse
启用鼠标输入: 向下滚动鼠标滚轮在文件中向前移动，向上滚动鼠标滚轮在文件中向后移动，单击鼠标将 "#" 标记设置为鼠标单击的行。
移动滚轮时要滚动的行数可以通过 \-\-wheel\-lines 选项设置。 鼠标输入仅适用于支持 X11 鼠标报告的终端，以及 \fIless\fP 的
Windows 版本。
.IP \-\-MOUSE
与 \-\-mouse 一样，除了鼠标滚轮移动时滚动的方向是相反的。
.IP \-\-no\-keypad
禁止将键盘初始化和取消初始化字符串发送到终端。 如果键盘字符串使数字键盘以不希望的方式运行，这有时很有用。
.IP \-\-no\-histdups
此选项更改行为，以便如果键入搜索字符串或文件名，并且历史列表中已存在相同的字符串，则在添加新副本之前，现有副本将从历史列表中删除。
因此，给定的字符串在历史列表中只会出现一次。 通常，一个字符串可能会出现多次。
.IP \-\-no\-number\-headers
标题行 (通过 \-\-header 选项定义) 没有分配行号。 行号 1 分配给任何标题行之后的第一行。
.IP \-\-rscroll
此选项更改用于标记截断行的字符。 它可以像 LESSBINFMT 那样以两个字符的属性指示符开头。 如果没有属性指标，则使用 standout。
如果设置为 "\-"，则不标记截断的行。
.IP \-\-redraw\-on\-quit
退出时，在发送最终取消初始化字符串后，重新绘制整个最后一个屏幕。 在终端取消初始化字符串导致终端从备用屏幕切换的终端上，这使得当前文件的最后一屏在
\fIless\fP 退出后仍然可见。
.IP \-\-save\-marks
在历史文件中保存标记，以便在 \fIless\fP 的不同调用中保留标记。
.IP \-\-search\-options
设置默认搜索修饰符。 该值是由一个或多个字符 E、F、K、N、R 或 W 组成的字符串。
设置其中任何一个与在每个搜索模式的开头键入该控制字符具有相同的效果。 例如，设置 \-\-search\-options=W 与在每个模式的开头键入 ^W
相同。 值 "\-" 禁用所有默认搜索修饰符。
.IP \-\-status\-col\-width
设置 \-J 选项生效时状态栏的宽度。 默认为 2 个字符。
.IP \-\-status\-line
如果标记了一行，则会突出显示整行 (而不仅仅是状态列)。 此外，由于 \-w 选项而突出显示的行将突出显示整行。 如果设置了
\-\-use\-color，则该行是彩色的而不是突出显示的。
.IP \-\-use\-backslash
这个选项改变了这个选项后面的选项的解释。 在 \-\-use\-backslash
选项之后，选项字符串中的任何反斜杠都将被删除，后面的字符将按字面意思进行处理。 这允许在选项字符串中包含美元符号。
.IP \-\-use\-color
在各个地方启用彩色文本。 \-D 选项可用于更改颜色。 彩色文本仅在终端支持 ANSI 颜色转义序列 (如 ECMA\-48 SGR 中定义; see
.br
.nh
https://www.ecma\-international.org/publications\-and\-standards/standards/ecma\-48).
.hy
.IP \-\-wheel\-lines=\fIn\fP
设置当鼠标滚轮滚动且 \-\-mouse 或 \-\-MOUSE 选项生效时要滚动的行数。 默认为 1 行。
.IP \-\-
"\-\-" 的命令行参数标志着选项参数的结束。 在此之后的任何参数都被解释为文件名。 这在查看名称以 "\-" 或 "+" 开头的文件时很有用。
.IP +
如果命令行选项以 \fB+\fP 开头，则该选项的其余部分将被视为 \fIless\fP 的初始命令。 例如，+G 告诉 \fIless\fP
从文件末尾而不是开头开始，+/xyz 告诉它从文件中第一次出现 "xyz" 开始。 作为特例，+<number> 的行为类似于
+<number>g; 也就是说，它在指定的行号处开始显示 (但是，请参见上面 "g" 命令下的警告)。 如果选项以 ++
开头，则初始命令适用于正在查看的每个文件，而不仅仅是第一个文件。 前面描述的 + 命令也可用于设置 (或更改) 每个文件的初始命令。
.
.SH "LINE EDITING"
在屏幕底部输入命令行时 (例如，:e 命令的文件名，或搜索命令的模式)，可以使用某些键来操作命令行。 大多数命令在 [ brackets ]
中都有一种替代形式，如果特定键盘上不存在某个键，则可以使用这种形式。 (请注意，以 ESC 开头的形式在某些 MS\-DOS 和 Windows
系统中不起作用，因为 ESC 是行擦除字符。) 这些特殊键中的任何一个都可以通过在其前面加上 "literal" 字符 (^V 或 ^A)
来按字面输入。 反斜杠本身也可以通过输入两个反斜杠按字面输入。
.IP "LEFTARROW [ ESC\-h ]"
将游标向左移动一个空格。
.IP "RIGHTARROW [ ESC\-l ]"
将游标向右移动一格。
.IP "^LEFTARROW [ ESC\-b or ESC\-LEFTARROW ]"
(即同时使用 CONTROL 和 LEFTARROW。) 将游标向左移动一个单词。
.IP "^RIGHTARROW [ ESC\-w or ESC\-RIGHTARROW ]"
(即同时使用 CONTROL 和 RIGHTARROW。) 将游标向右移动一个单词。
.IP "HOME [ ESC\-0 ]"
将游标移动到行首。
.IP "END [ ESC\-$ ]"
将游标移动到行尾。
.IP BACKSPACE
删除游标左边的字符，如果命令行为空则取消命令。
.IP "DELETE or [ ESC\-x ]"
删除游标下的字符。
.IP "^BACKSPACE [ ESC\-BACKSPACE ]"
(即同时使用 CONTROL 和 BACKSPACE。) 删除游标左侧的单词。
.IP "^DELETE [ ESC\-X or ESC\-DELETE ]"
(即同时进行 CONTROL 和 DELETE。) 删除游标下的单词。
.IP "UPARROW [ ESC\-k ]"
检索以前的命令行。 如果您先输入一些文本然后按 UPARROW，它将检索以该文本开头的先前命令。
.IP "DOWNARROW [ ESC\-j ]"
检索下一个命令行。 如果您先输入一些文本然后按下向下键，它将检索以该文本开头的下一个命令。
.IP TAB
完成游标左侧的部分文件名。 如果它匹配多个文件名，则将第一个匹配项输入命令行。 重复的 TAB 将循环通过其他匹配的文件名。
如果完整的文件名是一个目录，则 "/" 追加到文件名。 (在 MS\-DOS 系统上，追加 "\e"。) 环境变量 LESSSEPARATOR
可用于指定要追加到目录名称的不同字符。
.IP "BACKTAB [ ESC\-TAB ]"
与 TAB 一样，但通过匹配的文件名以相反的方向循环。
.IP ^L
完成游标左侧的部分文件名。 如果它匹配多个文件名，则将所有匹配项输入命令行 (如果它们适合)。
.IP "^U (Unix and OS/2) or ESC (MS\-DOS)"
删除整个命令行，如果命令行为空则取消命令。 如果您将 Unix 中的行终止字符更改为 ^U 以外的其他字符，则使用该字符而不是 ^U。
.IP ^G
删除整个命令行并返回主提示符。
.
.SH "KEY BINDINGS"
您可以通过创建一个 lesskey 源文件来定义您自己的 \fIless\fP 命令。 该文件指定一组命令键和与每个键关联的操作。 您还可以更改行编辑键
(请参见行编辑)，并设置环境变量。 如果设置了环境变量 LESSKEYIN，\fIless\fP 会使用它作为 lesskey 源文件的名称。
否则，\fIless\fP 在标准位置查找 lesskey 源文件: 在 Unix 系统上，\fIless\fP 查找名为
"$XDG_CONFIG_HOME/lesskey" 或 "$HOME/.config/lesskey" 或 "$HOME/.lesskey" 的
lesskey 文件。 在 MS\-DOS 和 Windows 系统上，\fIless\fP 寻找名为 "$HOME/_lesskey" 的 lesskey
文件，如果在那里没有找到，则在 PATH 环境变量指定的任何目录中寻找名为 "_lesskey" 的 lesskey 文件。 在 OS/2
系统上，\fIless\fP 寻找一个名为 "$HOME/lesskey.ini" 的 lesskey 文件，如果没有找到，则在 INIT
环境变量中指定的任何目录中寻找一个名为 "lesskey.ini" 的 lesskey 文件，如果在那里没有找到，则寻找一个 lesskey 在
PATH 环境变量中指定的任何目录中创建名为 "lesskey.ini" 的文件。 有关详细信息，请参见 \fIlesskey\fP 手册页。
.PP
系统范围的 lesskey 源文件也可以设置为提供键绑定。 如果在本地 lesskey
文件和系统范围文件中都定义了键，则本地文件中的键绑定优先于系统范围文件中的键绑定。 如果设置了环境变量 LESSKEYIN_SYSTEM，则
\fIless\fP 将其用作系统范围的 lesskey 文件的名称。 否则，\fIless\fP 在系统范围的 lesskey 文件的标准位置查找: 在 Unix
系统上，系统范围的 lesskey 文件是 /usr/local/etc/syslesskey。 (但是，如果 \fIless\fP 是使用与
/usr/local/etc 不同的 sysconf 目录构建的，那么该目录就是找到 sysless 文件的地方。) 在 MS\-DOS 和
Windows 系统上，系统范围的 lesskey 文件是 c:\e_syslesskey。 在 OS/2 系统上，系统范围的 lesskey 文件是
c:\esyslesskey.ini。
.PP
\fIless\fP 的早期版本 (v582 之前) 使用由 \fIlesskey\fP 程序生成的二进制格式的 lesskey 文件。不再需要使用
\fIlesskey\fP 程序。
.
.SH "INPUT PREPROCESSOR"
您可以为 \fIless\fP 定义一个 "input preprocessor"。 在 \fIless\fP
打开文件之前，它首先让您的输入预处理器有机会修改文件内容的显示方式。 输入预处理器只是一个可执行程序 (或 shell
脚本)，它将文件的内容写入另一个文件，称为替换文件。 然后显示替换文件的内容以代替原始文件的内容。 但是，它对用户来说就像打开了原始文件一样;
也就是说，\fIless\fP 会将原始文件名显示为当前文件的名称。
.PP
输入预处理器接收一个命令行参数，即用户输入的原始文件名。 它应该创建替换文件，并在完成后将替换文件的名称打印到其标准输出。
如果输入预处理器没有输出替换文件名，\fIless\fP 将照常使用原始文件。 查看标准输入时不调用输入预处理器。 要设置输入预处理器，请将 LESSOPEN
环境变量设置为将调用输入预处理器的命令行。 此命令行应包含一次字符串 "%s"，调用输入预处理器命令时将替换为文件名。
.PP
当 \fIless\fP 关闭以这种方式打开的文件时，它将调用另一个程序，称为输入后处理器，它可以执行任何所需的清理操作 (例如删除由 LESSOPEN
创建的替换文件)。 该程序接收两个命令行参数，用户输入的原始文件名和替换文件的名称。 要设置输入后处理器，请将 LESSCLOSE
环境变量设置为将调用输入后处理器的命令行。 它可能包括两次出现的字符串 "%s"; 第一个替换为文件的原始名称，第二个替换为替换文件的名称，由
LESSOPEN 输出。
.PP
例如，在许多 Unix 系统上，这两个脚本将允许您以压缩格式保存文件，但仍然让 \fIless\fP 直接查看它们:
.PP
lessopen.sh:
.br
  #! /bin/sh
.br
  case "$1" in
.br
  *.Z)	TEMPFILE=$(mktemp)
.br
  uncompress \-c $1 >$TEMPFILE 2>/dev/null
.br
  if [ \-s $TEMPFILE ];  then
.br
  echo $TEMPFILE
.br
  else
.br
  rm \-f $TEMPFILE
.br
  fi
.br
  ;;
.br
  esac
.PP
lessclose.sh:
.br
  #! /bin/sh
.br
  rm $2
.PP
要使用这些脚本，请将它们放在可以执行的位置并设置 LESSOPEN="lessopen.sh\%s" 和
LESSCLOSE="lessclose.sh\%s\%s"。 可以编写更复杂的 LESSOPEN 和 LESSCLOSE
脚本来接受其他类型的压缩文件，等等。
.PP
也可以设置输入预处理器将文件数据直接通过管道传输到 \fIless\fP，而不是将数据放入替换文件中。 这避免了在开始查看之前解压缩整个文件的需要。
以这种方式工作的输入预处理器称为输入管道。 输入管道不是在其标准输出上写入替换文件的名称，而是在其标准输出上写入替换文件的全部内容。
如果输入管道没有在其标准输出上写入任何字符，则没有替换文件，\fIless\fP 照常使用原始文件。 要使用输入管道，请将 LESSOPEN
环境变量中的第一个字符设置为竖线 (|)，以表示输入预处理器是输入管道。 对于非管道输入预处理器，命令字符串必须包含一次
%s，它被输入文件的文件名替换。
.PP
例如，在许多 Unix 系统上，此脚本将像前面的示例脚本一样工作:
.PP
lesspipe.sh:
.br
  #! /bin/sh
.br
  case "$1" in
.br
  * .Z) 解压缩 \-c $1 2>/dev/null
.br
  ;;
.br
  *) 出口 1
.br
  ;;
.br
  esac
.br
  退出 $?
.br
.PP
要使用此脚本，请将其放在可以执行的位置并设置 LESSOPEN="|lesspipe.sh %s"。
.PP
请注意，预处理器不能输出空文件，因为这被解释为没有替换，而是使用原始文件。 为避免这种情况，如果 LESSOPEN
以两个竖线开始，脚本的退出状态将决定输出为空时的行为。 如果输出为空且退出状态为零，则将空输出视为替换文本。
如果输出为空且退出状态为非零，则使用原始文件。 为了与以前版本的 \fIless\fP 兼容，如果 LESSOPEN
仅以一个竖线开始，则预处理器的退出状态将被忽略。
.PP
当使用输入管道时，可以使用 LESSCLOSE 后处理器，但通常没有必要，因为没有要清理的替换文件。 在这种情况下，传递给 LESSCLOSE
后处理器的替换文件名是 "\-"。
.PP
为了与以前版本的 \fIless\fP 兼容，如果 \fIless\fP 正在查看标准输入，则不使用输入预处理器或管道。 但是，如果 LESSOPEN
的第一个字符是破折号 (\-)，则输入预处理器将用于标准输入和其他文件。 在这种情况下，破折号不被视为预处理器命令的一部分。
如果正在查看标准输入，输入预处理器将传递一个由单个破折号组成的文件名。 同样，如果 LESSOPEN 的前两个字符是竖线和破折号 (|\-)
或两个竖线和破折号 (||\-)，则输入管道用于标准输入和其他文件。 同样，在这种情况下，破折号不被视为输入管道命令的一部分。
.
.SH "NATIONAL CHARACTER SETS"
输入文件中存在三种类型的字符:
.IP "normal characters"
可以直接显示在屏幕上。
.IP "control characters"
不应直接显示，但应在普通文本文件中找到 (如退格键和制表符)。
.IP "binary characters"
不应直接显示，也不应在文本文件中找到。
.PP
"character set" 只是对哪些字符被视为普通字符、控制字符和二进制字符的描述。 LESSCHARSET 环境变量可用于选择字符集。
LESSCHARSET 的可能值为:
.IP ascii
BS、TAB、NL、CR 和 formfeed 是控制字符，值在 32 到 126 之间的所有字符都是正常字符，其他所有字符都是二进制字符。
.IP iso8859
选择 ISO 8859 字符集。 这与 ASCII 相同，只是 160 到 255 之间的字符被视为普通字符。
.IP latin1
与 iso8859 相同。
.IP latin9
与 iso8859 相同。
.IP dos
选择适合 MS\-DOS 的字符集。
.IP ebcdic
选择 EBCDIC 字符集。
.IP IBM\-1047
选择 OS/390 Unix 服务使用的 EBCDIC 字符集。 这是 latin1 的 EBCDIC 模拟。 通过在您的环境中设置
LESSCHARSET=IBM\-1047 或 LC_CTYPE=en_US，您会得到类似的结果。
.IP koi8\-r
选择俄语字符集。
.IP next
选择适合 NeXT 计算机的字符集。
.IP utf\-8
选择 ISO 10646 字符集的 UTF\-8 编码。 UTF\-8 的特殊之处在于它支持输入文件中的多字节字符。 它是唯一支持多字节字符的字符集。
.IP windows
选择适合 Microsoft Windows (cp 1251) 的字符集。
.PP
在极少数情况下，可能需要定制 \fIless\fP 以使用 LESSCHARSET 可定义的字符集以外的字符集。 在这种情况下，环境变量
LESSCHARDEF 可用于定义字符集。 它应该设置为一个字符串，其中字符串中的每个字符代表字符集中的一个字符。 字符 ".\&"
用于普通字符，"c" 用于控制，"b" 用于二进制。 十进制数可用于重复。 例如，"bccc4b.\&" 表示字符 0 是二进制的，1、2 和 3
是控制字符，4、5、6 和 7 是二进制字符，8 是普通字符。 最后一个之后的所有字符都被视为与最后一个相同，因此字符 9 到 255 将是正常的。
(这是一个例子，并不一定代表任何真实的字符集。)
.PP
下表显示了 LESSCHARDEF 的值，它等效于 LESSCHARSET 的每个可能值:
.
.RS 5m
.TS
l l.
ascii	8bcccbcc18b95.b
dos	8bcccbcc12bc5b95.b.
ebcdic	5bc6bcc7bcc41b.9b7.9b5.b..8b6.10b6.b9.7b
	9.8b8.17b3.3b9.7b9.8b8.6b10.b.b.b.
IBM\-1047	4cbcbc3b9cbccbccbb4c6bcc5b3cbbc4bc4bccbc
	191.b
iso8859	8bcccbcc18b95.33b.
koi8\-r	8bcccbcc18b95.b128.
latin1	8bcccbcc18b95.33b.
next	8bcccbcc18b95.bb125.bb
.TE
.RE
.PP
如果 LESSCHARSET 和 LESSCHARDEF 均未设置，但在 LC_ALL、LC_CTYPE 或 LANG 环境变量中找到任何字符串
"UTF\-8"、"UTF8"、"utf\-8" 或 "utf8"，则默认字符集为 utf\-8。
.PP
如果找不到该字符串，但您的系统支持 \fIsetlocale\fP 接口，\fIless\fP 将使用 setlocale 来确定字符集。 setlocale
通过设置 LANG 或 LC_CTYPE 环境变量来控制。
.PP
最后，如果 \fIsetlocale\fP 接口也没有，默认字符集是 latin1。
.PP
控制和二进制字符以突出显示 (反向视频)。 如果可能，每个这样的字符都以脱字符号显示 (例如 control\-A 的 \&^A)。 仅当反转 0100
位导致正常的可打印字符时才使用插入符号。 否则，该字符在尖括号中显示为十六进制数字。 可以通过设置 LESSBINFMT 环境变量来更改此格式。
LESSBINFMT 可以以一个 "*" 开头，一个字符来选择显示属性: "*k" 闪烁，"*d" 粗体，"*u" 下划线，"*s" 突出，"*n"
正常。 如果 LESSBINFMT 不以 "*" 开头，则假定为正常属性。 LESSBINFMT 的其余部分是一个字符串，其中可能包含一个 printf
样式的转义序列 (% 后跟 x、X、o、d 等)。 例如，如果 LESSBINFMT 是
"*u[%x]"，则二进制字符以括号括起来的带下划线的十六进制显示。 如果未指定 LESSBINFMT，则默认值为
"*s<%02X>"。 警告: 通过 LESSBINFMT 扩展字符的结果必须小于 31 个字符。
.PP
当字符集为 utf\-8 时，LESSUTFBINFMT 环境变量的行为类似于 LESSBINFMT，但它适用于已成功解码但不适合显示的 Unicode
代码点 (例如，未分配的代码点)。 它的默认值为 "<U+%04lX>"。 请注意，LESSUTFBINFMT 和 LESSBINFMT
共享它们的显示属性设置 ("*x")，因此指定一个将影响两者; LESSUTFBINFMT 在 LESSBINFMT 之后读取，因此其设置 (如果有)
将具有优先权。 UTF\-8 文件中有问题的八位字节 (截断序列的八位字节、完整但非最短格式序列的八位字节、无效八位字节和杂散尾随八位字节) 使用
LESSBINFMT 单独显示，以便于诊断 UTF\-8 文件是如何出错的形成。
.
.SH PROMPTS
\-P 选项允许您根据自己的喜好定制提示。 给 \-P 选项的字符串替换指定的提示字符串。 字符串中的某些字符被特殊解释。
提示机制比较复杂，提供了灵活性，但普通用户不需要了解构造个性化提示字符串的细节。
.sp
百分号后跟单个字符根据以下字符扩展:
.IP %b\fIX\fP
替换为当前输入文件中的字节偏移量。 b 后跟一个字符 (上面显示为 \fIX\fP)，它指定要使用其字节偏移量的行。 如果字符是
"t"，则使用显示中顶行的字节偏移量，"m" 表示使用中间行，"b" 表示使用底行，"B" 表示使用底行之后的行，a "j" 表示使用 "target"
线，由 \-j 选项指定。
.IP %B
替换为当前输入文件的大小。
.IP %c
替换为出现在屏幕第一列中的文本的列号。
.IP %d\fIX\fP
替换为输入文件中一行的页码。 要使用的线路由 \fIX\fP 确定，与 %b 选项一样。
.IP %D
替换为输入文件中的页数，或者等效地，输入文件中最后一行的页码。
.IP %E
替换为编辑器的名称 (来自 VISUAL 环境变量，如果未定义 VISUAL，则替换为 EDITOR 环境变量)。 请参见下面对 LESSEDIT
特性的讨论。
.IP %f
替换为当前输入文件的名称。
.IP %F
替换为当前输入文件名称的最后一个组件。
.IP %g
替换为当前输入文件的 shell 转义名称。 这在扩展字符串将用于 shell 命令时很有用，例如在 LESSEDIT 中。
.IP %i
替换为输入文件列表中当前文件的索引。
.IP %l\fIX\fP
替换为输入文件中一行的行号。 要使用的线路由 \fIX\fP 确定，与 %b 选项一样。
.IP %L
替换为输入文件中最后一行的行号。
.IP %m
替换为输入文件的总数。
.IP %p\fIX\fP
根据字节偏移量替换为当前输入文件的百分比。 与 %b 选项一样，使用的线路由 \fIX\fP 确定。
.IP %P\fIX\fP
根据行号替换为当前输入文件的百分比。 与 %b 选项一样，使用的线路由 \fIX\fP 确定。
.IP %s
与 %B 相同。
.IP %t
导致删除任何尾随空格。 通常用在字符串的末尾，但也可能出现在任何地方。
.IP %T
通常扩展为单词 "file"。 但是，如果使用 \-t 选项通过标签列表查看文件，它会扩展为单词 "tag"。
.IP %x
替换为列表中下一个输入文件的名称。
.PP
如果任何项未知 (例如，如果输入是管道，则文件大小)，而是打印一个问号。
.PP
可以根据特定条件更改提示字符串的格式。 问号后跟单个字符的作用类似于 "IF": 根据后面的字符评估条件。
如果条件为真，则提示中包括问号和条件字符之后的任何字符，直至句点。 如果条件为假，则不包括此类字符。 出现在问号和句号之间的冒号可用于建立
"ELSE": 当且仅当 IF 条件为假时，冒号和句号之间的任何字符都包含在字符串中。 条件字符 (跟在问号后面) 可能是:
.IP ?a
如果到目前为止提示中包含任何字符，则为真。
.IP ?b\fIX\fP
如果指定行的字节偏移量已知，则为真。
.IP ?B
如果当前输入文件的大小已知，则为真。
.IP ?c
如果文本水平移动 (%c 不为零) 则为真。
.IP ?d\fIX\fP
如果指定行的页码已知，则为真。
.IP ?e
如果在文件末尾则为真。
.IP ?f
如果存在输入文件名 (即，如果输入不是管道) 则为真。
.IP ?l\fIX\fP
如果指定行的行号已知，则为真。
.IP ?L
如果文件中最后一行的行号已知，则为真。
.IP ?m
如果有多个输入文件，则为真。
.IP ?n
如果这是新输入文件中的第一个提示，则为真。
.IP ?p\fIX\fP
如果指定行的基于字节偏移的当前输入文件的百分比已知，则为真。
.IP ?P\fIX\fP
如果基于行号，指定行在当前输入文件中的百分比已知，则为真。
.IP ?s
与 "?B" 相同。
.IP ?x
如果有下一个输入文件 (即，如果当前输入文件不是最后一个) 则为真。
.PP
除了特殊字符 (问号、冒号、句号、百分号和反斜杠) 之外的任何字符都将成为提示的字面意思。
任何特殊字符都可以通过在其前面加上反斜杠来按字面意思包含在提示中。
.PP
一些例子:
.sp
?f%f: 标准输入。
.sp
此提示打印文件名 (如果已知) ; 否则字符串 "Standard input"。
.sp
?f%f \&.?ltLine %lt:?pt%pt\e%:?btByte %bt:\-...
.sp
如果已知，此提示将打印文件名。 文件名后跟行号 (如果已知)，否则为百分比 (如果已知)，否则为字节偏移量 (如果已知)。 否则，打印破折号。
请注意每个问号如何具有匹配句点，以及 %pt 之后的 % 是如何通过使用反斜杠转义来逐字包含的。
.sp
?n?f%f\ .?m(%T %i of %m)\ ..?e(END)\ ?x\-\ Next\e:\ %x..%t";
.sp
如果这是文件中的第一个提示，则打印文件名，如果有多个输入文件，则后跟 "file N of N" 消息。 然后，如果我们在文件末尾，则打印字符串
"(END)" 后跟下一个文件的名称 (如果有的话)。 最后，任何尾随空格都会被截断。 这是默认提示。 对于引用，这里是其他两个提示的默认值 (分别为
\-m 和 \-M)。 为了便于阅读，每一个都在这里分成两行。
.nf
.sp
?n?f%f\ .?m(%T\ %i\ of\ %m)\ ..?e(END)\ ?x\-\ Next\e:\ %x.:
	?pB%pB\e%:byte\ %bB?s/%s...%t
.sp
?f%f\ .?n?m(%T\ %i\ of\ %m)\ ..?ltlines\ %lt\-%lb?L/%L.\ :
	byte\ %bB?s/%s.\ .?e(END)\ ?x\-\ Next\e:\ %x.:?pB%pB\e%..%t
.sp
.fi
这是 = 命令生成的默认消息:
.nf
.sp
?f%f\ .?m(%T\ %i\ of\ %m)\ .?ltlines\ %lt\-%lb?L/%L.\ .
	字节 \%bB?s/%s.\?e (END)\:?pB%pB\e%..%t
.fi
.PP
提示扩展特性还用于另一个目的: 如果定义了一个环境变量 LESSEDIT，它被用作调用 v 命令时要执行的命令。 LESSEDIT
字符串的扩展方式与提示字符串相同。 LESSEDIT 的默认值为:
.nf
.sp
	%E\ ?lm+%lm.\ %g
.sp
.fi
请注意，这会扩展为编辑器名称，后跟 + 和行号，然后是 shell 转义文件名。 如果您的编辑器不接受 "+linenumber"
语法，或者调用语法有其他差异，可以更改 LESSEDIT 变量来修改此默认值。
.
.SH SECURITY
当环境变量 LESSSECURE 设置为 1 时，\fIless\fP 以 "secure" 模式运行。 这意味着这些特性被禁用:
.RS
.IP !
shell 命令
.IP |
管道命令
.IP :e
检查命令。
.IP v
编辑命令
.IP "s  \-o"
日志文件
.IP \-k
使用 lesskey 文件
.IP \-t
标签文件的使用
.IP
文件名中的元字符，例如 *
.IP
文件名补全 (TAB、^L)
.IP
历史文件
.RE
.PP
Less 也可以编译为永久在 "secure" 模式下。
.
.SH "COMPATIBILITY WITH MORE"
如果环境变量 LESS_IS_MORE 设置为 1，或者如果程序是通过名为 "more" 的文件链接调用的，则 \fIless\fP 的行为与
(mostly) 的行为符合 POSIX "more" 命令规范。 在这种模式下，less 在这些方面表现不同:
.PP
\-e 选项的工作方式不同。 如果未设置 \-e 选项，则 \fIless\fP 的行为就像设置了 \-e 选项一样。 如果设置了 \-e 选项，则 \fIless\fP
的行为就像设置了 \-E 选项一样。
.PP
\-m 选项的工作方式不同。 如果未设置 \-m 选项，则使用中等提示，并以字符串 "\-\-More\-\-" 为前缀。 如果设置了 \-m 选项，则使用简短提示。
.PP
\-n 选项的作用类似于 \-z 选项。 \-n 选项的正常行为在此模式下不可用。
.PP
\-p 选项的参数被认为是 \fIless\fP 命令而不是搜索模式。
.PP
忽略 LESS 环境变量，并使用 MORE 环境变量取而代之。
.
.SH "ENVIRONMENT VARIABLES"
环境变量可以像往常一样在系统环境中指定，也可以在 \fIlesskey\fP(1) 文件中指定。 如果在多个地方定义环境变量，则在本地 lesskey
文件中定义的变量优先于系统环境中定义的变量，系统环境中定义的变量优先于系统范围 lesskey 文件中定义的变量。
.IP COLUMNS
设置屏幕上的列数。 优先于 TERM 变量指定的列数。 (但是如果您有一个支持 TIOCGWINSZ 或 WIOCGETD
的窗口系统，窗口系统的屏幕大小的想法优先于 LINES 和 COLUMNS 环境变量。)
.IP EDITOR
编辑器的名称 (用于 v 命令)。
.IP HOME
用户主目录的名称 (用于在 Unix 和 OS/2 系统上查找 lesskey 文件)。
.IP "HOMEDRIVE, HOMEPATH"
HOMEDRIVE 和 HOMEPATH 环境的串联如果未设置 HOME 变量 (仅在 Windows 版本中)，变量是用户主目录的名称。
.IP INIT
用户初始化目录的名称 (用于在 OS/2 系统上查找 lesskey 文件)。
.IP LANG
用于确定字符集的语言。
.IP LC_CTYPE
用于确定字符集的语言。
.IP LESS
自动传递给 \fIless\fP 的选项。
.IP LESSANSIENDCHARS
可以结束 ANSI 颜色转义序列的字符 (默认 "m")。
.IP LESSANSIMIDCHARS
可能出现在 ANSI 颜色转义序列中 ESC 字符和结束字符之间的字符 (默认为 `0123456789:;[?!`'#%()*+`。
.IP LESSBINFMT
显示不可打印、非控制字符的格式。
.IP LESSCHARDEF
定义字符集。
.IP LESSCHARSET
选择预定义的字符集。
.IP LESSCLOSE
调用 (optional) 输入后处理器的命令行。
.IP LESSECHO
lessecho 程序的名称 (默认 "lessecho")。 lessecho 程序需要在 Unix 系统上扩展文件名中的元字符，例如 * 和 ?。
.IP LESSEDIT
编辑器原型字符串 (用于 v 命令)。 请参见提示下的讨论。
.IP LESSGLOBALTAGS
\-t 选项用于查找全局标签的命令的名称。 如果您的系统有 \fIglobal\fP(1) 命令，通常应设置为 "global"。
如果未设置，则不使用全局标签。
.IP LESSHISTFILE
用于记住 \fIless\fP 调用之间的搜索命令和 shell 命令的历史文件的名称。 如果设置为 "\-" 或 "/dev/null"，则不使用历史文件。
在 Unix 系统上默认为 "$XDG_STATE_HOME/lesshst" 或 "$HOME/.local/state/lesshst" 或
"$XDG_DATA_HOME/lesshst" 或 "$HOME/.lesshst"，在 DOS 和 Windows 系统上默认为
"$HOME/_lesshst"，或者在 OS/2 系统上默认为 "$HOME/lesshst.ini" 或 "$INIT/lesshst.ini"。
.IP LESSHISTSIZE
保存在历史文件中的最大命令数。 默认值为 100。
.IP LESSKEYIN
默认 \fIlesskey source\fP 文件的名称。
.IP LESSKEY
默认 \fIlesskey binary\fP 文件的名称。(如果 "$LESSKEYIN" 存在则不使用。)
.IP LESSKEYIN_SYSTEM
默认系统范围 \fIlesskey source\fP 文件的名称。
.IP LESSKEY_SYSTEM
默认系统范围 \fIlesskey binary\fP 文件的名称。(如果 "$LESSKEYIN_SYSTEM" 存在则不使用。)
.IP LESSMETACHARS
shell 认为 "metacharacters" 的字符列表。
.IP LESSMETAESCAPE
less 将在发送到 shell 的命令中的每个元字符之前添加的前缀。 如果 LESSMETAESCAPE 是一个空字符串，包含元字符的命令将不会传递给
shell。
.IP LESSOPEN
调用 (optional) 输入预处理器的命令行。
.IP LESSSECURE
在 "secure" 模式下运行较少。 请参见安全下的讨论。
.IP LESSSEPARATOR
要在文件名完成中追加到目录名称的字符串。
.IP LESSUTFBINFMT
用于显示不可打印的 Unicode 代码点的格式。
.IP LESS_IS_MORE
模拟 \fImore\fP(1) 命令。
.IP LINES
设置屏幕上的行数。 优先于 TERM 变量指定的行数。 (但是如果您有一个支持 TIOCGWINSZ 或 WIOCGETD
的窗口系统，窗口系统的屏幕大小的想法优先于 LINES 和 COLUMNS 环境变量。)
.IP MORE
在 \fImore\fP 兼容模式下运行时自动传递给 \fIless\fP 的选项。
.IP PATH
用户的搜索路径 (用于在 MS\-DOS 和 OS/2 系统上查找 lesskey 文件)。
.IP SHELL
shell 用于执行 !\& 命令，以及扩展文件名。
.IP TERM
运行 \fIless\fP 的终端类型。
.IP VISUAL
编辑器的名称 (用于 v 命令)。
.
.SH "SEE ALSO"
\fBlesskey\fP(1)
.
.SH COPYRIGHT
Copyright (C) 1984\-2022 Mark Nudelman
.PP
less 是 GNU 项目的一部分，是免费软件。 您可以根据以下任一条款重新分发或者修改它: (1) 自由软件基金会发布的 GNU 通用公共许可证; 或
(2) 较少许可证。 有关重新分发的更多详细信息，请参见 less 分发中的文件 README。 您应该以更少的价格收到 GNU
通用公共许可证的副本以及源代码; 请参见文件复制。 如果没有，请写信给自由软件基金会，59 Temple Place, Suite 330,
Boston, MA 02111\-1307, USA。 您还应该收到 Less License 的副本; 请参见文件许可证。
.PP
less 的分发是希望它有用，但不提供任何保证; 甚至没有针对特定用途的适销性或适用性的默示保证。 有关详细信息，请参见 GNU 通用公共许可证。
.
.SH AUTHOR
.
Mark Nudelman
.br
在 https://github.com/gwsw/less/issues 报告错误。
.br
有关更多信息，请参见 less 主页
.br
https://greenwoodsoftware.com/less
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
