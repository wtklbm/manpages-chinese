.\" -*- coding: UTF-8 -*-
'\" t
.\"     Title: script
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.15
.\"      Date: 2022-08-04
.\"    Manual: User Commands
.\"    Source: util-linux 2.38.1
.\"  Language: English
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH SCRIPT 1 2022\-08\-04 "util\-linux 2.38.1" "User Commands"
.ie  \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de  URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if  \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH NAME
script \- 制作最终会话的 typescript
.SH SYNOPSIS
.sp
\fBscript\fP [options] [\fIfile\fP]
.SH DESCRIPTION
.sp
\fBscript\fP 将您最终会话中的所有内容都变成 typescript。终端数据以原始形式存储在日志文件中，有关时间的信息存储在另一个
(optional) 结构化日志文件中。计时日志文件对于稍后由 \fBscriptreplay\fP(1) 重播会话以及存储有关会话的其他信息是必需的。
.sp
从版本 2.35 开始，\fBscript\fP 支持多个流，并允许将输入和输出记录到单独的文件或所有文件中。此版本还支持记录附加信息的新计时文件。命令
\fBscriptreplay \-\-summary\fP 然后提供所有信息。
.sp
如果给出参数 \fIfile\fP 或选项 \fB\-\-log\-out\fP \fIfile\fP，则 \fBscript\fP 将对话保存在这个 \fIfile\fP
中。如果没有给出文件名，对话将保存在文件 \fItypescript\fP 中。
.sp
请注意，使用 \fB\-\-log\-in\fP 或 \fB\-\-log\-io\fP 记录输入可能会记录安全敏感信息，因为日志文件包含所有终端会话输入
(例如密码)，与终端回显标志设置无关。
.SH OPTIONS
.sp
下面，\fIsize\fP 参数后面可以跟乘数后缀 KiB (=1024)、MiB (=1024*1024) 等，分别表示
GiB、TiB、PiB、EiB、ZiB 和 YiB ("iB" 是可选的，例如，"K" 与 "KiB" 含义相同)，或 GB、TB、PB、EB、ZB 和
YB 的后缀 KB (=1000)、MB (=1000*1000) 等。
.sp
\fB\-a\fP, \fB\-\-append\fP
.RS 4
将输出追加到 \fIfile\fP 或 \fItypescript\fP，保留先前的内容。
.RE
.sp
\fB\-c\fP, \fB\-\-command\fP \fIcommand\fP
.RS 4
运行 \fIcommand\fP 而不是交互式 shell。这使得脚本很容易捕获当 stdout 不是 tty 时表现不同的程序的输出。
.RE
.sp
\fB\-E\fP, \fB\-\-echo\fP \fIwhen\fP
.RS 4
此选项控制会话从端的 \fBECHO\fP 标志 \(cqs pseudoterminal. 支持的模式为 \fIalways\fP、\fInever\fP 或
\fIauto\fP。
.sp
默认为 \fIauto\fP\(em 在这种情况下，为伪终端从机启用 \fBECHO\fP; 如果当前标准输入是终端，\fBECHO\fP 被禁用以防止双重回显;
如果当前标准输入不是终端 (例如管道: \fBecho date | script\fP)，则为伪终端从站启用 \fBECHO\fP
可以使标准输入数据在屏幕上查看，同时记录到会话日志中。
.sp
请注意，\(aqnever\(aq 模式会影响会话输出日志的内容，因为用户输入不会在输出中重复。
.RE
.sp
\fB\-e\fP, \fB\-\-return\fP
.RS 4
返回子进程的退出状态。在信号终止时使用与 bash 终止相同的格式 (即，退出状态为 128 +
信号编号)。子进程的退出状态也总是存储在类型脚本文件中。
.RE
.sp
\fB\-f\fP, \fB\-\-flush\fP
.RS 4
每次写入后刷新输出。这对远程合作很好: 一个人做 \fBmkfifo\fP \fIfoo\fP; \fBscript \-f\fP \fIfoo\fP，另一个可以实时监督使用
\fBcat\fP \fIfoo\fP 正在做什么。请注意，flush 对性能有影响; \(cqs 可以使用 \fBSIGUSR1\fP 按需刷新日志。
.RE
.sp
\fB\-\-force\fP
.RS 4
允许默认输出文件 \fItypescript\fP 为硬链接或符号链接。该命令将跟随一个符号链接。
.RE
.sp
\fB\-B\fP, \fB\-\-log\-io\fP \fIfile\fP
.RS 4
将输入和输出记录到同一个 \fIfile\fP。请注意，此选项仅在还指定了 \fB\-\-log\-timing\fP 时才有意义，否则无法从日志 \fIfile\fP
中分离输出和输入流。
.RE
.sp
\fB\-I\fP, \fB\-\-log\-in\fP \fIfile\fP
.RS 4
将输入记录到 \fIfile\fP。如果仅指定 \fB\-\-log\-in\fP，则禁用日志输出。
.sp
小心使用此日志记录功能，因为它会记录所有输入，包括最终禁用回显标志时的输入 (例如，密码输入)。
.RE
.sp
\fB\-O\fP, \fB\-\-log\-out\fP \fIfile\fP
.RS 4
日志输出到 \fIfile\fP。如果未给出选项 \fB\-\-log\-out\fP 或 \fB\-\-log\-in\fP，默认情况下将输出记录到名称为
\fItypescript\fP 的文件中。如果仅指定 \fB\-\-log\-in\fP，则禁用日志输出。
.RE
.sp
\fB\-T\fP, \fB\-\-log\-timing\fP \fIfile\fP
.RS 4
将计时信息记录到 \fIfile\fP。现在支持两种计时文件格式。当仅启用一个流 (输入或输出) 日志记录时使用经典格式。多流格式用于 \fB\-\-log\-io\fP
或 \fB\-\-log\-in\fP 和 \fB\-\-log\-out\fP 一起使用时。另请详见 \fB\-\-logging\-format\fP。
.RE
.sp
\fB\-m\fP, \fB\-\-logging\-format\fP \fIformat\fP
.RS 4
强制使用 \fIadvanced\fP 或 \fIclassic\fP 格式。默认是仅记录输出的经典格式和请求输入以及输出日志记录时的高级格式。
.sp
\fBClassic format\fP
.RS 4
日志包含两个字段，以空格分隔。第一个字段表示自上次输出以来经过了多少时间。第二个字段表示这次输出了多少个字符。
.RE
.sp
\fBAdvanced (multi\-stream) format\fP
.RS 4
第一个字段是条目类型标识符
(\(aqI\(cqnput,\(aqO\(cqutput,\(aqH\(cqeader,\(aqS\(cqignal.
第二个字段是自上一个条目以来经过了多长时间，并且条目的剩余部分是特定于类型的数据。
.RE
.RE
.sp
\fB\-o\fP, \fB\-\-output\-limit\fP \fIsize\fP
.RS 4
限制 typescript 和 timing 文件的大小为 \fIsize\fP，超过这个大小就停止子进程。计算的文件大小不包括 \fBscript\fP
命令添加到子进程输出的开始和完成消息。由于缓冲，生成的输出文件可能大于指定值。
.RE
.sp
\fB\-q\fP, \fB\-\-quiet\fP
.RS 4
保持安静 (不要将开始和完成消息写入标准输出)。
.RE
.sp
\fB\-t\fP[\fIfile\fP], \fB\-\-timing\fP[=\fIfile\fP]
.RS 4
将计时数据输出到标准错误，或在给定时输出到 \fIfile\fP。不推荐使用此选项以支持 \fB\-\-log\-timing\fP，其中 \fIfile\fP
参数不是可选的。
.RE
.sp
\fB\-h\fP, \fB\-\-help\fP
.RS 4
显示帮助文本并退出。
.RE
.sp
\fB\-V\fP, \fB\-\-version\fP
.RS 4
打印版本并退出。
.RE
.SH SIGNALS
.sp
收到 \fBSIGUSR1\fP 后，\fBscript\fP 立即刷新输出文件。
.SH ENVIRONMENT
.sp
\fBscript\fP: 使用以下环境变量
.sp
\fBSHELL\fP
.RS 4
如果变量 \fBSHELL\fP 存在，则由 \fBscript\fP 派生的 shell 将是 shell。如果未设置 \fBSHELL\fP，则假定为 Bourne
shell。(大多数 shells 会自动设置此变量)。
.RE
.SH NOTES
.sp
当分叉的 shell 退出时脚本结束 (\fIcontrol\-D\fP 用于 Bourne shell
(\fBsh\fP(1p))，\fIexit\fP，\fIlogout\fP 或 \fIcontrol\-d\fP (如果未设置 \fIignoreeof\fP) 用于
C\-shell，\fBcsh\fP(1))。
.sp
某些交互式命令 (例如 \fBvi\fP(1)) 会在 typescript 文件中产生垃圾。\fBscript\fP
最适合不操作屏幕的命令，结果旨在模拟硬拷贝终端。
.sp
不建议在非交互式 shells 中运行 \fBscript\fP。\fBscript\fP 的内部 shell 总是交互的，这可能会导致意想不到的结果。如果在
shell 初始化文件中使用 \fBscript\fP，则必须避免进入死循环。例如，您可以使用 \fB.profile\fP 文件，该文件仅由登录名 shells
读取:
.sp
.if  n .RS 4
.nf
.fam C
如果测试 \-t 0 ; 然后
    script
    exit
fi
.fam
.fi
.if  n .RE
.sp
您还应该避免在命令管道中使用 \fBscript\fP，因为 \fBscript\fP 可以读取比您预期更多的输入。
.SH HISTORY
.sp
\fBscript\fP 命令出现在 3.0BSD 中。
.SH BUGS
.sp
\fBscript\fP 将 \fIeverything\fP 放在日志文件中，包括换行符和退格符。这不是天真的用户所期望的。
.sp
\fBscript\fP 主要是为交互式终端会话而设计的。当 stdin 不是终点时 (例如: \fBecho foo | script\fP)，则会话可以挂起，因为脚本会话中的交互式 shell 错过了 EOF，而 \fBscript\fP 不知道何时关闭会话。有关详细信息，请参见
\fBNOTES\fP 部分。
.SH "SEE ALSO"
.sp
\fBcsh\fP(1) (用于 \fIhistory\fP 机构)、\fBscriptreplay\fP(1)、\fBscriptlive\fP(1)
.SH "REPORTING BUGS"
.sp
对于错误报告，请使用问题跟踪器
.URL https://github.com/util\-linux/util\-linux/issues "" .
.SH AVAILABILITY
.sp
\fBscript\fP 命令是 util\-linux 包的一部分，可以从
.URL https://www.kernel.org/pub/linux/utils/util\-linux/ "Linux Kernel Archive" .
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
