.\" -*- coding: UTF-8 -*-
.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.48.5.
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH ENV 1 "November 2022" "GNU coreutils 9.1" "User Commands"
.SH NAME
env \- 在修改后的环境中运行程序
.SH SYNOPSIS
\fBenv\fP [\fI\,OPTION\/\fP]... [\fI\,\-\/\fP] [\fI\,NAME=VALUE\/\fP]... [\fI\,COMMAND \/\fP[\fI\,ARG\/\fP]...]
.SH DESCRIPTION
.\" Add any additional description here
.PP
在环境中将每个 NAME 设置为 VALUE 并运行 COMMAND。
.PP
长选项的强制参数对于短选项也是强制性的。
.TP 
\fB\-i\fP, \fB\-\-ignore\-environment\fP
从一个空的环境开始
.TP 
\fB\-0\fP, \fB\-\-null\fP
每个输出行以 NUL 结束，而不是换行
.TP 
\fB\-u\fP, \fB\-\-unset\fP=\fI\,NAME\/\fP
从环境中删除变量
.TP 
\fB\-C\fP, \fB\-\-chdir\fP=\fI\,DIR\/\fP
将工作目录更改为 DIR
.TP 
\fB\-S\fP, \fB\-\-split\-string\fP=\fI\,S\/\fP
处理并将 S 拆分为单独的参数; 用于在 shebang 行上传递多个参数
.TP 
\fB\-\-block\-signal\fP[=\fI\,SIG\/\fP]
阻止将 SIG signal(s) 交付给 COMMAND
.TP 
\fB\-\-default\-signal\fP[=\fI\,SIG\/\fP]
将 SIG signal(s) 的处理重置为默认值
.TP 
\fB\-\-ignore\-signal\fP[=\fI\,SIG\/\fP]
将 SIG signal(s) 的处理设置为不执行任何操作
.TP 
\fB\-\-list\-signal\-handling\fP
列出标准错误的非默认信号处理
.TP 
\fB\-v\fP, \fB\-\-debug\fP
打印每个处理步骤的详细信息
.TP 
\fB\-\-help\fP
显示此帮助并退出
.TP 
\fB\-\-version\fP
输出版本信息并退出
.PP
仅仅是 \- 表示 \fB\-i\fP。 如果没有 COMMAND，打印结果环境。
.PP
SIG 可以是信号名称，如 'PIPE'，也可以是信号编号，如 '13'。 没有 SIG，所有已知信号都包括在内。 多个信号可以用逗号分隔。
.SH OPTIONS
.SS "\-S/\-\-split\-string usage in scripts"
\fB\-S\fP 选项允许在脚本中指定多个参数。 运行包含以下第一行的名为 \fB1.pl\fP 的脚本:
.PP
.RS
.nf
#!/usr/bin/env \-S perl \-w \-T
\&...
.fi
.RE
.PP
将执行 \fBperl \-w \-T 1.pl .\fP
.PP
如果没有 \fB'\-S'\fP 参数，脚本可能会失败:
.PP
.RS
.nf
/usr/bin/env: 'perl \-w \-T': No such file or directory
.fi
.RE
.PP
有关详细信息，请参见完整文档。
.PP
.SS "\-\-default\-signal[=SIG] usage"
此选项允许将信号处理程序设置为其默认操作，这使用传统的 shell 陷阱命令是不可能的。
以下示例确保无论在调用命令的进程中如何处理此信号，SIGPIPE 都会终止 seq。

.PP
.RS
.nf
sh \-c 'env\-\-default\-signal=PIPE seq inf | 头 \- n1'
.fi
.RE
.PP
.SH NOTES
POSIX 的 \fBexec\fP(3p) 页面说:
.RS
"许多现有的应用程序错误地假设它们以某些设置为默认操作或者未阻止的信号开始...... 因此，最好不要在没有明确理由的情况下阻止或忽略跨 exec
的信号，尤其是不要阻止任意 (非密切合作) 程序的 exec 之间的信号。"
.RE
.SH AUTHOR
由 Richard Mlynarik、David MacKenzie 和 Assaf Gordon 撰写。
.SH "REPORTING BUGS"
GNU coreutils 联机帮助: <https://www.gnu.org/software/coreutils/>
.br
向 <https://translationproject.org/team/> 报告任何翻译错误
.SH COPYRIGHT
Copyright \(co 2022 Free Software Foundation, Inc.   License GPLv3+: GNU GPL
version 3 or later <https://gnu.org/licenses/gpl.html>.
.br
这是免费软件: 您可以自由更改和重新分发它。 在法律允许的范围内，不提供任何保证。
.SH "SEE ALSO"
\fBsigaction\fP(2), \fBsigprocmask\fP(2), \fBsignal\fP(7)
.PP
.br
完整文档 <https://www.gnu.org/software/coreutils/env>
.br
或通过以下方式在本地获取: 信息 \(aq(coreutils) env invocation\(aq
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
