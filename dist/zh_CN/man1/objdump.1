.\" -*- coding: UTF-8 -*-
.de  Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de  Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de  Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie  n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.ie  \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.de  IX
..
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.nr rF 0
.if  \n(.g .if rF .nr rF 1
.if  (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" fudge factors for nroff and troff
.    
.if  n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.if  t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.\" simple accents for nroff and troff
.    
.if  n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if  t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.\" troff and (daisy-wheel) nroff accents
.    
.ds : \k:\h'-(\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \k:\h'-(\n(.wu+\w'\(de'u\-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\fI\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.\" corrections for vroff
.    
.if  v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if  v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.\" for low resolution devices (crt and lpr)
.    
.if  \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OBJDUMP 1"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH OBJDUMP 1 2023\-02\-03 binutils\-2.40 "GNU Development Tools"
.if  n .ad l
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.nh
.SH NAME
objdump \- 显示来自目标文件的信息
.SH SYNOPSIS
.IX Header SYNOPSIS
对象转储 [\fB\-a\fP|\fB\-\-archive\-headers\fP]
        [\fB\-b\fP \fIbfdname\fP|\fB\-\-target=\fP\fIbfdname\fP]
        [\fB\-C\fP|\fB\-\-demangle\fP[=\fIstyle\fP] ]
        [\fB\-d\fP|\fB\-\-disassemble\fP[=\fIsymbol\fP]]
        [\fB\-D\fP|\fB\-\-disassemble\-all\fP]
        [\fB\-z\fP|\fB\-\-disassemble\-zeroes\fP]
        [\fB\-EB\fP|\fB\-EL\fP|\fB\-\-endian=\fP{big | little }]
        [\fB\-f\fP|\fB\-\-file\-headers\fP]
        [\fB\-F\fP|\fB\-\-file\-offsets\fP]
        [\fB\-\-file\-start\-context\fP]
        [\fB\-g\fP|\fB\-\-debugging\fP]
        [\fB\-e\fP|\fB\-\-debugging\-tags\fP]
        [\fB\-h\fP|\fB\-\-section\-headers\fP|\fB\-\-headers\fP]
        [\fB\-i\fP|\fB\-\-info\fP]
        [\fB\-j\fP \fIsection\fP|\fB\-\-section=\fP\fIsection\fP]
        [\fB\-l\fP|\fB\-\-line\-numbers\fP]
        [\fB\-S\fP|\fB\-\-source\fP]
        [\fB\-\-source\-comment\fP[=\fItext\fP]]
        [\fB\-m\fP \fImachine\fP|\fB\-\-architecture=\fP\fImachine\fP]
        [\fB\-M\fP \fIoptions\fP|\fB\-\-disassembler\-options=\fP\fIoptions\fP]
        [\fB\-p\fP|\fB\-\-private\-headers\fP]
        [\fB\-P\fP \fIoptions\fP|\fB\-\-private=\fP\fIoptions\fP]
        [\fB\-r\fP|\fB\-\-reloc\fP]
        [\fB\-R\fP|\fB\-\-dynamic\-reloc\fP]
        [\fB\-s\fP|\fB\-\-full\-contents\fP]
        [\fB\-W[lLiaprmfFsoORtUuTgAck]\fP|
         \fB\-\-dwarf\fP[=rawline,=decodedline,=info,=abbrev,=pubnames,=aranges,=macro,=frames,=frames\-interp,=str,=str\-offsets,=loc,=Ranges,=pubtypes,=trace_info,=trace_abbrev,=trace_aranges,=gdb_index,=addr,=cu_index,=links]]
        [\fB\-WK\fP|\fB\-\-dwarf=follow\-links\fP]
        [\fB\-WN\fP|\fB\-\-dwarf=no\-follow\-links\fP]
        [\fB\-wD\fP|\fB\-\-dwarf=use\-debuginfod\fP]
        [\fB\-wE\fP|\fB\-\-dwarf=do\-not\-use\-debuginfod\fP]
        [\fB\-L\fP|\fB\-\-process\-links\fP]
        [\fB\-\-ctf=\fP\fIsection\fP]
        [\fB\-\-sframe=\fP\fIsection\fP]
        [\fB\-G\fP|\fB\-\-stabs\fP]
        [\fB\-t\fP|\fB\-\-syms\fP]
        [\fB\-T\fP|\fB\-\-dynamic\-syms\fP]
        [\fB\-x\fP|\fB\-\-all\-headers\fP]
        [\fB\-w\fP|\fB\-\-wide\fP]
        [\fB\-\-start\-address=\fP\fIaddress\fP]
        [\fB\-\-stop\-address=\fP\fIaddress\fP]
        [\fB\-\-no\-addresses\fP]
        [\fB\-\-prefix\-addresses\fP]
        [\fB\-\-[no\-]show\-raw\-insn\fP]
        [\fB\-\-adjust\-vma=\fP\fIoffset\fP]
        [\fB\-\-show\-all\-symbols\fP]
        [\fB\-\-dwarf\-depth=\fP\fIn\fP]
        [\fB\-\-dwarf\-start=\fP\fIn\fP]
        [\fB\-\-ctf\-parent=\fP\fIsection\fP]
        [\fB\-\-no\-recurse\-limit\fP|\fB\-\-recurse\-limit\fP]
        [\fB\-\-special\-syms\fP]
        [\fB\-\-prefix=\fP\fIprefix\fP]
        [\fB\-\-prefix\-strip=\fP\fIlevel\fP]
        [\fB\-\-insn\-width=\fP\fIwidth\fP]
        [\fB\-\-visualize\-jumps[=color|=extended\-color|=off]\fP
        [\fB\-\-disassembler\-color=[off|terminal|on|extended]\fP
        [\fB\-U\fP \fImethod\fP] [\fB\-\-unicode=\fP\fImethod\fP]
        [\fB\-V\fP|\fB\-\-version\fP]
        [\fB\-H\fP|\fB\-\-help\fP]
        \fIobjfile\fP ...
.SH DESCRIPTION
.IX Header DESCRIPTION
\&\fBobjdump\fP 显示有关一个或多个目标文件的信息。 选项控制要显示的特定信息。
这些信息对使用编译工具的程序员最有用，而不是那些只想让他们的程序编译和工作的程序员。
.PP
\&\fIobjfile\fP... 是要检查的目标文件。 当您指定存档时，\fBobjdump\fP 显示有关每个成员对象文件的信息。
.SH OPTIONS
.IX Header OPTIONS
选项的长格式和短格式，在这里显示为可选项，是等价的。 必须至少给出列表
\&\fB\-a,\-d,\-D,\-e,\-f,\-g,\-G,\-h,\-H,\-p,\-P,\-r,\-R,\-s,\-S,\-t,\-T,\-V,\-x\fP 中的一个选项。
.IP \fB\-a\fP 4
.IX Item \-a
.PD 0
.IP \fB\-\-archive\-header\fP 4
.IX Item \-\-archive\-header
.PD
如果任何 \fIobjfile\fP 文件是存档，则显示存档标题信息 (格式类似于 \fBls \-l\fP).  除了您可以使用 \fBar tv\fP
列出的信息外，\fBobjdump \-a\fP 还显示每个存档成员的目标文件格式。
.IP \fB\-\-adjust\-vma=\fP\fIoffset\fP 4
.IX Item \-\-adjust\-vma=offset
转储信息时，首先将 \fIoffset\fP 添加到所有段地址。 如果节地址不对应于符号表，这很有用，当使用不能表示节地址的格式 (例如 a.out)
将节放在特定地址时，可能会发生这种情况。
.IP "\fB\-b\fP \fIbfdname\fP" 4
.IX Item "\-b bfdname"
.PD 0
.IP \fB\-\-target=\fP\fIbfdname\fP 4
.IX Item \-\-target=bfdname
.PD
指定目标文件的目标代码格式为 \&\fIbfdname\fP。 这个选项可能不是必需的; \fIobjdump\fP 可以自动识别多种格式。
.Sp
例如，
.Sp
.Vb 1
\& objdump \-b oasys \-m vax \-h fu.o
.Ve
.Sp
显示来自 \&\fIfu.o\fP 的节标题 (\fB\-h\fP) 的总结信息，该信息在 Oasys 编译器生成的格式中被明确标识为 (\fB\-m\fP) 为
\s-1VAX\s0 目标文件。 您可以列出 \fB\-i\fP 选项可用的格式。
.IP \fB\-C\fP 4
.IX Item \-C
.PD 0
.IP \fB\-\-demangle[=\fP\fIstyle\fP\fB]\fP 4
.IX Item \-\-demangle[=style]
.PD
将 (\fIdemangle\fP) 底层符号名称解码为用户级名称。 除了删除系统前置的任何初始下划线外，这还使 \*(C + 函数名称可读。
不同的编译器有不同的修饰风格。可选的 demangling style 参数可用于为您的编译器选择合适的 demangling 样式。
.IP \fB\-\-recurse\-limit\fP 4
.IX Item \-\-recurse\-limit
.PD 0
.IP \fB\-\-no\-recurse\-limit\fP 4
.IX Item \-\-no\-recurse\-limit
.IP \fB\-\-recursion\-limit\fP 4
.IX Item \-\-recursion\-limit
.IP \fB\-\-no\-recursion\-limit\fP 4
.IX Item \-\-no\-recursion\-limit
.PD
启用或禁用对 demangling 字符串时执行的递归数量的限制。
由于名称修改格式允许无限级别的递归，因此可以创建字符串，其解码将耗尽主机上可用的栈空间量，从而触发内存错误。 该限制试图通过将递归限制为 2048
层嵌套来防止这种情况发生。
.Sp
默认情况下启用此限制，但可能需要禁用它才能分解真正复杂的名称。 但是请注意，如果禁用递归限制，则可能会耗尽栈，并且将拒绝有关此类事件的任何错误报告。
.IP \fB\-g\fP 4
.IX Item \-g
.PD 0
.IP \fB\-\-debugging\fP 4
.IX Item \-\-debugging
.PD
显示调试信息。 这会尝试解析存储在文件中的 \s-1STABS\s0 调试格式信息，并使用类似 C 的语法将其打印出来。 如果未找到
\s-1STABS\s0 调试，则此选项将退回到 \fB\-W\fP 选项以打印文件中的任何 \s-1DWARF\s0 信息。
.IP \fB\-e\fP 4
.IX Item \-e
.PD 0
.IP \fB\-\-debugging\-tags\fP 4
.IX Item \-\-debugging\-tags
.PD
与 \fB\-g\fP 类似，但信息以与 ctags 工具兼容的格式生成。
.IP \fB\-d\fP 4
.IX Item \-d
.PD 0
.IP \fB\-\-disassemble\fP 4
.IX Item \-\-disassemble
.IP \fB\-\-disassemble=\fP\fIsymbol\fP 4
.IX Item \-\-disassemble=symbol
.PD
显示输入文件中机器指令的汇编助记符。 此选项仅反汇编那些预期包含说明的部分。 如果给出可选的 \fIsymbol\fP 参数，则显示从 \&\fIsymbol\fP
开始的汇编助记符。 如果 \fIsymbol\fP 是一个函数名称，那么反汇编将在函数结束时停止，否则它将在遇到下一个符号时停止。 如果 \fIsymbol\fP
没有匹配项，则不会显示任何内容。
.Sp
请注意，如果启用了 \fB\-\-dwarf=follow\-links\fP 选项，则链接调试信息文件中的任何符号表都将被读入并在反汇编时使用。
.IP \fB\-D\fP 4
.IX Item \-D
.PD 0
.IP \fB\-\-disassemble\-all\fP 4
.IX Item \-\-disassemble\-all
.PD
与 \fB\-d\fP 类似，但反汇编了所有部分的内容，而不仅仅是那些预期包含说明的部分。
.Sp
该选项对代码段中指令的反汇编也有微妙的影响。 When option \fB\-d\fP is in effect objdump will assume
that any symbols present in a code section occur on the boundary between
instructions and it will refuse to disassemble across such a boundary.  当作用
\fB\-D\fP 效果时，此假设被抑制了。 这意味着 \fB\-d\fP 和 \fB\-D\fP 的输出可能不同，例如，如果数据存储在代码段中。
.Sp
如果目标是 \s-1ARM\s0 体系结构，则此开关还具有强制反汇编器解码代码段中找到的数据片段的效果，就好像它们是指令一样。
.Sp
请注意，如果启用了 \fB\-\-dwarf=follow\-links\fP 选项，则链接调试信息文件中的任何符号表都将被读入并在反汇编时使用。
.IP \fB\-\-no\-addresses\fP 4
.IX Item \-\-no\-addresses
反汇编时，不要在每一行或符号和重定位偏移量上打印地址。 结合 \fB\-\-no\-show\-raw\-insn\fP 这可能对比较编译器输出很有用。
.IP \fB\-\-prefix\-addresses\fP 4
.IX Item \-\-prefix\-addresses
拆卸时，每行打印完整地址。 这是较旧的反汇编格式。
.IP \fB\-EB\fP 4
.IX Item \-EB
.PD 0
.IP \fB\-EL\fP 4
.IX Item \-EL
.IP \fB\-\-endian={big|little}\fP 4
.IX Item \-\-endian={big|little}
.PD
指定目标文件的字节顺序。 这仅影响反汇编。 这在反汇编不描述字节序信息的文件格式 (例如 S\-records) 时很有用。
.IP \fB\-f\fP 4
.IX Item \-f
.PD 0
.IP \fB\-\-file\-headers\fP 4
.IX Item \-\-file\-headers
.PD
显示每个 \fIobjfile\fP 文件的总标题中的总结信息。
.IP \fB\-F\fP 4
.IX Item \-F
.PD 0
.IP \fB\-\-file\-offsets\fP 4
.IX Item \-\-file\-offsets
.PD
反汇编部分时，每当显示符号时，还会显示即将转储的数据区域的文件偏移量。
如果零被跳过，那么当反汇编恢复时，告诉用户跳过了多少个零以及反汇编恢复位置的文件偏移量。 转储部分时，显示转储开始位置的文件偏移量。
.IP \fB\-\-file\-start\-context\fP 4
.IX Item \-\-file\-start\-context
指定在显示 interlisted source code/disassembly 时 (假定 \fB\-S\fP)
来自尚未显示的文件，将上下文扩展到文件的开头。
.IP \fB\-h\fP 4
.IX Item \-h
.PD 0
.IP \fB\-\-section\-headers\fP 4
.IX Item \-\-section\-headers
.IP \fB\-\-headers\fP 4
.IX Item \-\-headers
.PD
显示目标文件节标题中的总结信息。
.Sp
文件段可以重定位到非标准地址，例如通过使用 \fB\-Ttext\fP、\fB\-Tdata\fP 或 \fB\-Tbss\fP 选项到 \&\fBld\fP。
但是，某些目标文件格式 (例如 a.out) 不存储文件段的起始地址。 在那些情况下，尽管 \fBld\fP 正确地重新定位了这些部分，但使用
\fBobjdump \&\-h\fP 列出文件部分标题无法显示正确的地址。 相反，它显示通常的地址，这些地址对于目标是隐式的。
.Sp
请注意，在某些情况下，一个部分可能同时设置了 \&\s-1READONLY\s0 和 \s-1NOREAD\s0 属性。
在这种情况下，\s-1NOREAD\s0 属性优先，但 \fBobjdump\fP 将报告这两个属性，因为标志位的确切设置可能很重要。
.IP \fB\-H\fP 4
.IX Item \-H
.PD 0
.IP \fB\-\-help\fP 4
.IX Item \-\-help
.PD
将选项的总结打印到 \fBobjdump\fP 并退出。
.IP \fB\-i\fP 4
.IX Item \-i
.PD 0
.IP \fB\-\-info\fP 4
.IX Item \-\-info
.PD
显示一个列表，其中显示可用于 \fB\-b\fP 或 \fB\-m\fP 规范的所有体系结构和对象格式。
.IP "\fB\-j\fP \fIname\fP" 4
.IX Item "\-j name"
.PD 0
.IP \fB\-\-section=\fP\fIname\fP 4
.IX Item \-\-section=name
.PD
仅显示部分 \fIname\fP 的信息。
.IP \fB\-L\fP 4
.IX Item \-L
.PD 0
.IP \fB\-\-process\-links\fP 4
.IX Item \-\-process\-links
.PD
显示在链接到主文件的单独调试信息文件中找到的非调试部分的内容。 此选项自动暗示 \fB\-WK\fP 选项，并且只会显示其他命令行选项请求的部分。
.IP \fB\-l\fP 4
.IX Item \-l
.PD 0
.IP \fB\-\-line\-numbers\fP 4
.IX Item \-\-line\-numbers
.PD
使用与显示的目标代码或重定位相对应的文件名和源行号标记显示 (使用调试信息)。 仅对 \fB\-d\fP、\fB\-D\fP 或 \fB\-r\fP 有用。
.IP "\fB\-m\fP \fImachine\fP" 4
.IX Item "\-m machine"
.PD 0
.IP \fB\-\-architecture=\fP\fImachine\fP 4
.IX Item \-\-architecture=machine
.PD
指定反汇编目标文件时要使用的体系结构。 这在反汇编不描述体系结构信息的目标文件 (例如 S\-records) 时很有用。 您可以使用 \fB\-i\fP
选项列出可用的体系结构。
.Sp
对于大多数体系结构，可以提供体系结构名称和机器名称，用冒号分隔。 例如，\&\fBfoo:bar\fP 将指代 \&\fBfoo\fP 架构中的 \fBbar\fP
机器类型。 如果 objdump 已配置为支持多种体系结构，这将很有帮助。
.Sp
如果目标是 \s-1ARM\s0 体系结构，那么此开关会有额外的效果。 它将反汇编限制为仅由 \fImachine\fP 指定的体系结构支持的那些指令。
如果因为输入文件不包含任何体系结构信息而需要使用此开关，但又希望反汇编所有指令使用 \fB\-marm\fP。
.IP "\fB\-M\fP \fIoptions\fP" 4
.IX Item "\-M options"
.PD 0
.IP \fB\-\-disassembler\-options=\fP\fIoptions\fP 4
.IX Item \-\-disassembler\-options=options
.PD
将目标特定信息传递给反汇编程序。 仅在某些目标上受支持。 如果需要指定多个反汇编程序选项，则可以使用多个 \fB\-M\fP
选项，或者将它们放在一起以逗号分隔的列表中。
.Sp
对于 \s-1ARC，\s0 \fBdsp\fP 控制 \s-1DSP\s0 指令的打印，\&\fBspfp\fP 选择 \s-1FPX\s0 单精度
\s-1FP\s0 指令的打印，\fBdpfp\fP 选择 \s-1FPX\s0 双精度 \s-1FP\s0 指令的打印，\fBquarkse_em\fP 选择特殊
QuarkSE\-EM 指令的打印，\fBfpuda\fP \fBfpus\fP 选择打印双精度辅助指令，\fBfpus\fP 选择打印 \s-1FPU\s0 单精度
\s-1FP\s0 指令，\fBfpud\fP 选择打印 \s-1FPU\s0 双精度 \s-1FP\s0 指令。 此外，可以选择使用 \fBhex\fP
以十六进制打印所有立即数。 默认情况下，短立即数使用十进制表示打印，而长 immediate 值打印为十六进制。
.Sp
\&\fBcpu=...\fP 允许在反汇编指令时强制执行特定的 \s-1ISA\s0，覆盖 \fB\-m\fP 值或 \s-1ELF\s0 文件中的任何内容。
这可能对选择 \s-1ARC EM\s0 或 \s-1HS ISA 很有用，\s0 因为它们的体系结构相同，反汇编程序依赖私有 \s-1ELF\s0
标头数据来决定代码是用于 \s-1EM\s0 还是 \s-1HS。\s0 这选项可能被指定多次 \- 只会使用最新的值。 有效值与汇编程序
\&\fB\-mcpu=...\fP 选项相同。
.Sp
如果目标是 \s-1ARM\s0 体系结构，则此开关可用于选择在反汇编期间使用哪个寄存器名称集。 指定 \&\fB\-M reg\-names\-std\fP
(默认值) 将选择 \s-1ARM\s0 指令集文档中使用的寄存器名称，但寄存器 13 称为 \&'sp'，寄存器 14 称为 'lr'，寄存器 15
称为 'pc'。指定 \&\fB\-M reg\-names\-apcs\fP 将选择 \s-1ARM\s0 程序调用标准使用的名称集，而指定 \fB\-M reg\-names\-raw\fP 将仅使用 \fBr\fP 后跟寄存器号。
.Sp
\fB\-M reg\-names\-atpcs\fP 和 \fB\-M reg\-names\-special\-atpcs\fP 启用的 \s-1APCS\s0
寄存器命名方案也有两个变体，它们使用 ARM/Thumb 过程调用标准命名约定。 (使用普通寄存器名称或特殊寄存器名称)。
.Sp
此选项也可用于 \s-1ARM\s0 体系结构，以强制反汇编程序通过使用开关 \fB\-\-disassembler\-options=force\-thumb\fP
将所有指令解释为 Thumb 指令。 这在尝试反汇编其他编译器生成的缩略图代码时非常有用。
.Sp
对于 AArch64 目标，此开关可用于设置是否使用 \fB\-M no\-aliases\fP 选项将指令反汇编为最通用的指令，或者是否应在使用 \fB\-M notes\fP 的反汇编中将指令注释生成为注释。
.Sp
对于 x86，一些选项重复 \fB\-m\fP 开关的号码，但允许更细粒度的控制。
.RS 4
.ie  n .IP """x86\-64""" 4
.el .IP "\f(CWx86\-64\fR" 4
.IX Item x86\-64
.PD 0
.ie  n .IP """i386""" 4
.el .IP "\f(CWi386\fR" 4
.IX Item i386
.ie  n .IP """i8086""" 4
.el .IP "\f(CWi8086\fR" 4
.IX Item i8086
.PD
为给定的体系结构选择反汇编。
.ie  n .IP """intel""" 4
.el .IP "\f(CWintel\fR" 4
.IX Item intel
.PD 0
.ie  n .IP """att""" 4
.el .IP "\f(CWatt\fR" 4
.IX Item att
.PD
在 intel 语法模式和 \s-1AT&T\s0 语法模式之间选择。
.ie  n .IP """amd64""" 4
.el .IP "\f(CWamd64\fR" 4
.IX Item amd64
.PD 0
.ie  n .IP """intel64""" 4
.el .IP "\f(CWintel64\fR" 4
.IX Item intel64
.PD
在 \s-1AMD64 ISA\s0 和 Intel64\s-1ISA 之间选择。\s0
.ie  n .IP """intel\-mnemonic""" 4
.el .IP "\f(CWintel\-mnemonic\fR" 4
.IX Item intel\-mnemonic
.PD 0
.ie  n .IP """att\-mnemonic""" 4
.el .IP "\f(CWatt\-mnemonic\fR" 4
.IX Item att\-mnemonic
.PD
在 intel 助记符模式和 \s-1AT&T\s0 助记符模式之间选择。 注: \f(CW\*(C`intel\-mnemonic\*(C'\fP 表示
\f(CW\*(C`intel\*(C'\fP，\&\f(CW\*(C`att\-mnemonic\*(C'\fP 表示 \f(CW\*(C`att\*(C'\fP。
.ie  n .IP """addr64""" 4
.el .IP "\f(CWaddr64\fR" 4
.IX Item addr64
.PD 0
.ie  n .IP """addr32""" 4
.el .IP "\f(CWaddr32\fR" 4
.IX Item addr32
.ie  n .IP """addr16""" 4
.el .IP "\f(CWaddr16\fR" 4
.IX Item addr16
.ie  n .IP """data32""" 4
.el .IP "\f(CWdata32\fR" 4
.IX Item data32
.ie  n .IP """data16""" 4
.el .IP "\f(CWdata16\fR" 4
.IX Item data16
.PD
指定默认地址大小和操作数大小。 如果 \f(CW\*(C`x86\-64\*(C'\fP、\f(CW\*(C`i386\*(C'\fP 或
\f(CW\*(C`i8086\*(C'\fP 稍后出现在选项字符串中，这五个选项将被覆盖。
.ie  n .IP """suffix""" 4
.el .IP "\f(CWsuffix\fR" 4
.IX Item suffix
在 \s-1AT&T\s0 模式下以及在 Intel
模式下对于一组有限的指令，指示反汇编程序打印助记符后缀，即使后缀可以由操作数推断，或者对于某些指令，执行模式的默认值.
.RE
.RS 4
.Sp
对于 PowerPC，\fB\-M\fP 参数 \fBraw\fP 选择反汇编硬件 insn 而不是别名。 例如，您将看到 \f(CW\*(C`rlwinm\*(C'\fP
而不是 \f(CW\*(C`clrlwi\*(C'\fP，以及 \f(CW\*(C`addi\*(C'\fP 而不是 \f(CW\*(C`li\*(C'\fP。 支持所有选择
\s-1CPU\s0 的 \&\fBgas\fP 的 \fB\-m\fP 参数。 它们是:
\&\fB403\fP、\fB405\fP、\fB440\fP、\fB464\fP、\fB476\fP、\&\fB601\fP、\fB603\fP、\fB604\fP、\fB620\fP、\fB7400\fP、\&\fB7410\fP、\fB7450\fP、\fB7455\fP、\fB750cl\fP、\&\fB821\fP、\fB850\fP、\fB860\fP、\fBa2\fP、\fBbooke\fP、\&\fBbooke32\fP、\fBcell\fP、X0221X、\fBe200z2\fP、\fBe200z2\fP、，x024x，x025x，x026x，x027x，x028x，x029x，x0331x，x031x，x032x，x033x，x034x，x034x，x035x，x035x，x036x，x037x，x038x，x038x，x039x，x039x，x04439x，x0439x，x0439x，x0439x，x0439x，x0439x，x0439x，x0439x，x044x，x0439x，x04430
x04x ,,、\&\fBpwr6\fP、\fBpwr7\fP、\fBpwr8\fP、\fBpwr9\fP、\fBpwr10\fP、\&\fBpwrx\fP、\fBtitan\fP、\fBvle\fP
和 \fBfuture\fP。 X00X 和 X01X 修改默认或先前的 X02X 选择，分别禁用和启用 64 位 insns。
此外，\fBaltivec\fP、\fBany\fP、\fBlsp\fP、\fBhtm\fP、\&\fBvsx\fP、\fBspe\fP 和 \fBspe2\fP 为之前的 \fIor later\fP \s-1CPU\s0 选择增加了功能。 \&\fBany\fP 将反汇编 binutils
已知的任何操作码，但在操作码具有两种不同含义或不同参数的情况下，您可能看不到预期的反汇编。 如果您反汇编时没有给出 \s-1CPU\s0 选择，则将从
\s-1BFD\s0 从目标文件头中收集的信息中选择默认值，但结果可能与您预期的不同。
.Sp
对于 \s-1MIPS，\s0 此选项控制反汇编指令中指令助记符名称和寄存器名称的打印。 以下多项选择可以指定为逗号分隔的字符串，无效选项将被忽略:
.ie  n .IP """no\-aliases""" 4
.el .IP "\f(CWno\-aliases\fR" 4
.IX Item no\-aliases
打印 'raw' 指令助记符而不是一些伪指令助记符。 即，打印 'daddu' 或 'or' 而不是 'move'，\&'sll' 而不是
\&'nop'，等等。
.ie  n .IP """msa""" 4
.el .IP "\f(CWmsa\fR" 4
.IX Item msa
反汇编 \s-1MSA\s0 指令。
.ie  n .IP """virt""" 4
.el .IP "\f(CWvirt\fR" 4
.IX Item virt
反汇编虚拟化 \s-1ASE\s0 指令。
.ie  n .IP """xpa""" 4
.el .IP "\f(CWxpa\fR" 4
.IX Item xpa
反汇编扩展物理地址 (\s-1XPA\s0) \s-1ASE\s0 指令。
.ie  n .IP """gpr\-names=\fIABI\fP""" 4
.el .IP "\f(CWgpr\-names=\f(CIABI\f(CW\fR" 4
.IX Item gpr\-names=ABI
根据指定的 \s-1ABI 打印 \s-1GPR\s0 (通用寄存器) 名称。\s0 默认情况下，根据被反汇编的二进制文件的 \s-1ABI\s0 选择
\s-1GPR\s0 名称。
.ie  n .IP """fpr\-names=\fIABI\fP""" 4
.el .IP "\f(CWfpr\-names=\f(CIABI\f(CW\fR" 4
.IX Item fpr\-names=ABI
根据指定的 \s-1ABI 打印 \s-1FPR\s0 (浮点寄存器) 名称。\s0 默认情况下，打印 \s-1FPR\s0 数字而不是名称。
.ie  n .IP """cp0\-names=\fIARCH\fP""" 4
.el .IP "\f(CWcp0\-names=\f(CIARCH\f(CW\fR" 4
.IX Item cp0\-names=ARCH
打印 \s-1CP0\s0 (系统控制协处理器; 协处理器 0) 适合 \s-1CPU\s0 或 \&\fI\s-1ARCH\s0\fP
指定的体系结构的寄存器名称。 默认情况下，根据被反汇编的二进制文件的体系结构和 \s-1CPU\s0 选择 \s-1CP0\s0 寄存器名称。
.ie  n .IP """hwr\-names=\fIARCH\fP""" 4
.el .IP "\f(CWhwr\-names=\f(CIARCH\f(CW\fR" 4
.IX Item hwr\-names=ARCH
打印适用于 \s-1CPU\s0 或 \&\fI\s-1ARCH\s0\fP 指定的体系结构的 \s-1HWR\s0 (硬件寄存器，由
\f(CW\*(C`rdhwr\*(C'\fP 指令使用) 名称。 默认情况下，\s-1HWR\s0 名称是根据被反汇编的二进制文件的体系结构和
\s-1CPU\s0 选择的。
.ie  n .IP """reg\-names=\fIABI\fP""" 4
.el .IP "\f(CWreg\-names=\f(CIABI\f(CW\fR" 4
.IX Item reg\-names=ABI
打印适合所选 \s-1ABI 的 \s-1GPR\s0 和 \s-1FPR\s0 名称。\s0
.ie  n .IP """reg\-names=\fIARCH\fP""" 4
.el .IP "\f(CWreg\-names=\f(CIARCH\f(CW\fR" 4
.IX Item reg\-names=ARCH
打印适合所选 \s-1CPU\s0 或体系结构的特定于 CPU 的寄存器名称 (\s-1CP0\s0 寄存器和 \s-1HWR\s0 名称)。
.RE
.RS 4
.Sp
对于上面列出的任何选项，\fI\s-1ABI\s0\fP 或 \&\fI\s-1ARCH\s0\fP 可以指定为
\fBnumeric\fP，以便为选定类型的寄存器打印数字而不是名称。 您可以使用 \fB\-\-help\fP 选项列出 \fI\s-1ABI\s0\fP 和
\fI\s-1ARCH\s0\fP 的可用值。
.Sp
对于 \s-1VAX,\s0 可以用 \fB\-M entry:0xf00ba\fP 指定函数入口地址。 您可以多次使用它来正确反汇编不包含符号表 (如
\&\s-1ROM\s0 转储) 的 \s-1VAX\s0 二进制文件。 在这些情况下，函数条目掩码将被解码为 \s-1VAX\s0
指令，这可能会导致其余的函数被错误地反汇编。
.RE
.IP \fB\-p\fP 4
.IX Item \-p
.PD 0
.IP \fB\-\-private\-headers\fP 4
.IX Item \-\-private\-headers
.PD
打印特定于目标文件格式的信息。 打印的确切信息取决于目标文件格式。 对于某些目标文件格式，不会打印任何附加信息。
.IP "\fB\-P\fP \fIoptions\fP" 4
.IX Item "\-P options"
.PD 0
.IP \fB\-\-private=\fP\fIoptions\fP 4
.IX Item \-\-private=options
.PD
打印特定于目标文件格式的信息。 参数 \fIoptions\fP 是一个逗号分隔的列表，取决于格式 (选项列表显示在帮助中)。
.Sp
对于 \s-1XCOFF,\s0 可用的选项是:
.RS 4
.ie  n .IP """header""" 4
.el .IP "\f(CWheader\fR" 4
.IX Item header
.PD 0
.ie  n .IP """aout""" 4
.el .IP "\f(CWaout\fR" 4
.IX Item aout
.ie  n .IP """sections""" 4
.el .IP "\f(CWsections\fR" 4
.IX Item sections
.ie  n .IP """syms""" 4
.el .IP "\f(CWsyms\fR" 4
.IX Item syms
.ie  n .IP """relocs""" 4
.el .IP "\f(CWrelocs\fR" 4
.IX Item relocs
.ie  n .IP """lineno,""" 4
.el .IP "\f(CWlineno,\fR" 4
.IX Item lineno,
.ie  n .IP """loader""" 4
.el .IP "\f(CWloader\fR" 4
.IX Item loader
.ie  n .IP """except""" 4
.el .IP "\f(CWexcept\fR" 4
.IX Item except
.ie  n .IP """typchk""" 4
.el .IP "\f(CWtypchk\fR" 4
.IX Item typchk
.ie  n .IP """traceback""" 4
.el .IP "\f(CWtraceback\fR" 4
.IX Item traceback
.ie  n .IP """toc""" 4
.el .IP "\f(CWtoc\fR" 4
.IX Item toc
.ie  n .IP """ldinfo""" 4
.el .IP "\f(CWldinfo\fR" 4
.IX Item ldinfo
.RE
.RS 4
.PD
.Sp
并非所有对象格式都支持此选项。 特别是 \s-1ELF\s0 格式不使用它。
.RE
.IP \fB\-r\fP 4
.IX Item \-r
.PD 0
.IP \fB\-\-reloc\fP 4
.IX Item \-\-reloc
.PD
打印文件的重定位条目。 如果与 \fB\-d\fP 或 \&\fB\-D\fP 一起使用，则重定位与反汇编散布在一起。
.IP \fB\-R\fP 4
.IX Item \-R
.PD 0
.IP \fB\-\-dynamic\-reloc\fP 4
.IX Item \-\-dynamic\-reloc
.PD
打印文件的动态重定位条目。 这仅对动态对象有意义，例如某些类型的共享库。 至于 \fB\-r\fP，如果与 \fB\-d\fP 或 \&\fB\-D\fP
一起使用，则重定位打印穿插在反汇编中。
.IP \fB\-s\fP 4
.IX Item \-s
.PD 0
.IP \fB\-\-full\-contents\fP 4
.IX Item \-\-full\-contents
.PD
显示请求的任何部分的完整内容。 默认情况下显示所有非空部分。
.IP \fB\-S\fP 4
.IX Item \-S
.PD 0
.IP \fB\-\-source\fP 4
.IX Item \-\-source
.PD
如果可能，显示与反汇编混合的源代码。 表示 \&\fB\-d\fP。
.IP \fB\-\-show\-all\-symbols\fP 4
.IX Item \-\-show\-all\-symbols
反汇编时，显示所有匹配给定地址的符号，而不仅仅是第一个。
.IP \fB\-\-source\-comment[=\fP\fItxt\fP\fB]\fP 4
.IX Item \-\-source\-comment[=txt]
与 \fB\-S\fP 选项类似，但所有源代码行都以 \fItxt\fP 为前缀显示。 通常 \fItxt\fP 将是一个注释字符串，可用于区分汇编代码和源代码。
如果未提供 \fItxt\fP，则将使用默认字符串 \&\fI\*(L"# \*(R"\fP (散列后跟一个空格)。
.IP \fB\-\-prefix=\fP\fIprefix\fP 4
.IX Item \-\-prefix=prefix
指定 \fIprefix\fP 以在与 \&\fB\-S\fP 一起使用时添加到绝对路径。
.IP \fB\-\-prefix\-strip=\fP\fIlevel\fP 4
.IX Item \-\-prefix\-strip=level
指示要剥离硬连线绝对路径的初始目录名称的数量。没有 \fB\-\-prefix=\fP\fIprefix\fP 就没有效果。
.IP \fB\-\-show\-raw\-insn\fP 4
.IX Item \-\-show\-raw\-insn
反汇编指令时，以十六进制和符号形式打印指令。 这是默认值，除非使用 \&\fB\-\-prefix\-addresses\fP。
.IP \fB\-\-no\-show\-raw\-insn\fP 4
.IX Item \-\-no\-show\-raw\-insn
反汇编指令时，不要打印指令字节。 这是使用 \fB\-\-prefix\-addresses\fP 时的默认设置。
.IP \fB\-\-insn\-width=\fP\fIwidth\fP 4
.IX Item \-\-insn\-width=width
反汇编指令时在一行中显示 \fIwidth\fP 个字节。
.IP \fB\-\-visualize\-jumps[=color|=extended\-color|=off]\fP 4
.IX Item \-\-visualize\-jumps[=color|=extended\-color|=off]
通过在起始地址和目标地址之间绘制 \s-1ASCII\s0 图形，可视化保留在函数内的跳转。 可选的 \fB=color\fP
参数使用简单的终端颜色为输出添加颜色。 或者，\fB=extended\-color\fP 参数将使用 8 位颜色添加颜色，但这些可能不适用于所有终端。
.Sp
如果需要在之前启用 \fBvisualize\-jumps\fP 选项后禁用它，请使用 \&\fBvisualize\-jumps=off\fP。
.IP \fB\-\-disassembler\-color=off\fP 4
.IX Item \-\-disassembler\-color=off
.PD 0
.IP \fB\-\-disassembler\-color=terminal\fP 4
.IX Item \-\-disassembler\-color=terminal
.IP \fB\-\-disassembler\-color=on|color|colour\fP 4
.IX Item \-\-disassembler\-color=on|color|colour
.IP \fB\-\-disassembler\-color=extened|extended\-color|extened\-colour\fP 4
.IX Item \-\-disassembler\-color=extened|extended\-color|extened\-colour
.PD
在反汇编输出中启用或禁用彩色语法突出显示。 默认行为是通过配置时间选项确定的。
请注意，并非所有体系结构都支持彩色语法高亮显示，并且根据所使用的终端，彩色输出实际上可能并不清晰。
.Sp
\fBon\fP 参数使用简单的终端颜色添加颜色。
.Sp
\fBterminal\fP 参数做同样的事情，但前提是输出设备是终端。
.Sp
\fBextended\-color\fP 参数类似于 \fBon\fP 参数，但它使用 8 位颜色。 这些可能不适用于所有终端。
.Sp
\fBoff\fP 参数禁用彩色反汇编。
.IP \fB\-W[lLiaprmfFsoORtUuTgAckK]\fP 4
.IX Item \-W[lLiaprmfFsoORtUuTgAckK]
.PD 0
.IP \fB\-\-dwarf[=rawline,=decodedline,=info,=abbrev,=pubnames,=aranges,=macro,=frames,=frames\-interp,=str,=str\-offsets,=loc,=Ranges,=pubtypes,=trace_info,=trace_abbrev,=trace_aranges,=gdb_index,=addr,=cu_index,=links,=follow\-links]\fP 4
.IX Item \-\-dwarf[=rawline,=decodedline,=info,=abbrev,=pubnames,=aranges,=macro,=frames,=frames\-interp,=str,=str\-offsets,=loc,=Ranges,=pubtypes,=trace_info,=trace_abbrev,=trace_aranges,=gdb_index,=addr,=cu_index,=links,=follow\-links]
.PD
显示文件中 \s-1DWARF\s0 调试部分的内容 (如果存在)。 压缩的调试部分在显示之前会自动解压缩 (temporarily)。
如果一个或多个可选字母或单词跟随开关，则只有那些 type(s) 的数据将被转储。 字母和单词指的是以下信息:
.RS 4
.ie  n .IP """a""" 4
.el .IP "\f(CWa\fR" 4
.IX Item a
.PD 0
.ie  n .IP """=abbrev""" 4
.el .IP "\f(CW=abbrev\fR" 4
.IX Item =abbrev
.PD
显示 \fB.debug_abbrev\fP 部分的内容。
.ie  n .IP """A""" 4
.el .IP "\f(CWA\fR" 4
.IX Item A
.PD 0
.ie  n .IP """=addr""" 4
.el .IP "\f(CW=addr\fR" 4
.IX Item =addr
.PD
显示 \fB.debug_addr\fP 部分的内容。
.ie  n .IP """c""" 4
.el .IP "\f(CWc\fR" 4
.IX Item c
.PD 0
.ie  n .IP """=cu_index""" 4
.el .IP "\f(CW=cu_index\fR" 4
.IX Item =cu_index
.PD
显示 \fB.debug_cu_index\fP 或者 \&\fB.debug_tu_index\fP 部分的内容。
.ie  n .IP """f""" 4
.el .IP "\f(CWf\fR" 4
.IX Item f
.PD 0
.ie  n .IP """=frames""" 4
.el .IP "\f(CW=frames\fR" 4
.IX Item =frames
.PD
显示 \fB.debug_frame\fP 部分的原始内容。
.ie  n .IP """F""" 4
.el .IP "\f(CWF\fR" 4
.IX Item F
.PD 0
.ie  n .IP """=frames\-interp""" 4
.el .IP "\f(CW=frames\-interp\fR" 4
.IX Item =frames\-interp
.PD
显示 \fB.debug_frame\fP 部分的解释内容。
.ie  n .IP """g""" 4
.el .IP "\f(CWg\fR" 4
.IX Item g
.PD 0
.ie  n .IP """=gdb_index""" 4
.el .IP "\f(CW=gdb_index\fR" 4
.IX Item =gdb_index
.PD
显示 \fB.gdb_index\fP 或者 \&\fB.debug_names\fP 部分的内容。
.ie  n .IP """i""" 4
.el .IP "\f(CWi\fR" 4
.IX Item i
.PD 0
.ie  n .IP """=info""" 4
.el .IP "\f(CW=info\fR" 4
.IX Item =info
.PD
显示 \fB.debug_info\fP 部分的内容。 注意: 此选项的输出也可以通过使用 \&\fB\-\-dwarf\-depth\fP 和
\fB\-\-dwarf\-start\fP 选项来限制。
.ie  n .IP """k""" 4
.el .IP "\f(CWk\fR" 4
.IX Item k
.PD 0
.ie  n .IP """=links""" 4
.el .IP "\f(CW=links\fR" 4
.IX Item =links
.PD
显示 \fB.gnu_debuglink\fP、\&\fB.gnu_debugaltlink\fP 和 \fB.debug_sup\fP 部分的内容 (如果存在)。
如果它们由 \fB.debug_info\fP 部分中的 DW_AT_GNU_dwo_name 或 DW_AT_dwo_name
属性指定，还显示任何指向单独的矮对象文件 (dwo) 的链接。
.ie  n .IP """K""" 4
.el .IP "\f(CWK\fR" 4
.IX Item K
.PD 0
.ie  n .IP """=follow\-links""" 4
.el .IP "\f(CW=follow\-links\fR" 4
.IX Item =follow\-links
.PD
显示在链接的单独调试信息 file(s) 中找到的任何选定调试部分的内容。 如果同一调试节存在于多个文件中，这可能会导致显示多个版本。
.Sp
另外，在显示 \s-1DWARF\s0 属性时，如果发现有表格引用了单独的 debug info 文件，那么引用的内容也会显示出来。
.Sp
注意 \- 在某些发行版中，此选项默认启用。 它可以通过 \fBN\fP 调试选项禁用。 通过
\&\fB\-\-enable\-follow\-debug\-links=yes\fP 或 \&\fB\-\-enable\-follow\-debug\-links=no\fP
选项配置 binutils 时可以选择默认值。 如果不使用这些，则默认启用以下调试链接。
.Sp
注意 \- 如果在构建 binutils 时启用了对 debuginfod 协议的支持，那么此选项还将包括尝试联系
\fI\s-1DEBUGINFOD_URLS\s0\fP 环境变量中提到的任何 debuginfod 服务器。 这可能需要一些时间才能解决。 可以通过
\fB=do\-not\-use\-debuginfod\fP 调试选项禁用此行为。
.ie  n .IP """N""" 4
.el .IP "\f(CWN\fR" 4
.IX Item N
.PD 0
.ie  n .IP """=no\-follow\-links""" 4
.el .IP "\f(CW=no\-follow\-links\fR" 4
.IX Item =no\-follow\-links
.PD
禁用以下指向单独调试信息文件的链接。
.ie  n .IP """D""" 4
.el .IP "\f(CWD\fR" 4
.IX Item D
.PD 0
.ie  n .IP """=use\-debuginfod""" 4
.el .IP "\f(CW=use\-debuginfod\fR" 4
.IX Item =use\-debuginfod
.PD
如果需要跟踪调试链接，则启用联系 debuginfod 服务器。 这是默认行为。
.ie  n .IP """E""" 4
.el .IP "\f(CWE\fR" 4
.IX Item E
.PD 0
.ie  n .IP """=do\-not\-use\-debuginfod""" 4
.el .IP "\f(CW=do\-not\-use\-debuginfod\fR" 4
.IX Item =do\-not\-use\-debuginfod
.PD
当需要跟踪调试链接时禁用联系 debuginfod 服务器。
.ie  n .IP """l""" 4
.el .IP "\f(CWl\fR" 4
.IX Item l
.PD 0
.ie  n .IP """=rawline""" 4
.el .IP "\f(CW=rawline\fR" 4
.IX Item =rawline
.PD
以原始格式显示 \fB.debug_line\fP 部分的内容。
.ie  n .IP """L""" 4
.el .IP "\f(CWL\fR" 4
.IX Item L
.PD 0
.ie  n .IP """=decodedline""" 4
.el .IP "\f(CW=decodedline\fR" 4
.IX Item =decodedline
.PD
显示 \fB.debug_line\fP 部分的解释内容。
.ie  n .IP """m""" 4
.el .IP "\f(CWm\fR" 4
.IX Item m
.PD 0
.ie  n .IP """=macro""" 4
.el .IP "\f(CW=macro\fR" 4
.IX Item =macro
.PD
显示 \fB.debug_macro\fP 或者 \&\fB.debug_macinfo\fP 部分的内容。
.ie  n .IP """o""" 4
.el .IP "\f(CWo\fR" 4
.IX Item o
.PD 0
.ie  n .IP """=loc""" 4
.el .IP "\f(CW=loc\fR" 4
.IX Item =loc
.PD
显示 \fB.debug_loc\fP 或者 \&\fB.debug_loclists\fP 部分的内容。
.ie  n .IP """O""" 4
.el .IP "\f(CWO\fR" 4
.IX Item O
.PD 0
.ie  n .IP """=str\-offsets""" 4
.el .IP "\f(CW=str\-offsets\fR" 4
.IX Item =str\-offsets
.PD
显示 \fB.debug_str_offsets\fP 部分的内容。
.ie  n .IP """p""" 4
.el .IP "\f(CWp\fR" 4
.IX Item p
.PD 0
.ie  n .IP """=pubnames""" 4
.el .IP "\f(CW=pubnames\fR" 4
.IX Item =pubnames
.PD
显示 \fB.debug_pubnames\fP 或者 \&\fB.debug_gnu_pubnames\fP 部分的内容。
.ie  n .IP """r""" 4
.el .IP "\f(CWr\fR" 4
.IX Item r
.PD 0
.ie  n .IP """=aranges""" 4
.el .IP "\f(CW=aranges\fR" 4
.IX Item =aranges
.PD
显示 \fB.debug_aranges\fP 部分的内容。
.ie  n .IP """R""" 4
.el .IP "\f(CWR\fR" 4
.IX Item R
.PD 0
.ie  n .IP """=Ranges""" 4
.el .IP "\f(CW=Ranges\fR" 4
.IX Item =Ranges
.PD
显示 \fB.debug_ranges\fP 或者 \&\fB.debug_rnglists\fP 部分的内容。
.ie  n .IP """s""" 4
.el .IP "\f(CWs\fR" 4
.IX Item s
.PD 0
.ie  n .IP """=str""" 4
.el .IP "\f(CW=str\fR" 4
.IX Item =str
.PD
显示 \fB.debug_str\fP、\fB.debug_line_str\fP 或者 \fB.debug_str_offsets\fP 部分的内容。
.ie  n .IP """t""" 4
.el .IP "\f(CWt\fR" 4
.IX Item t
.PD 0
.ie  n .IP """=pubtype""" 4
.el .IP "\f(CW=pubtype\fR" 4
.IX Item =pubtype
.PD
显示 \fB.debug_pubtypes\fP 或者 \&\fB.debug_gnu_pubtypes\fP 部分的内容。
.ie  n .IP """T""" 4
.el .IP "\f(CWT\fR" 4
.IX Item T
.PD 0
.ie  n .IP """=trace_aranges""" 4
.el .IP "\f(CW=trace_aranges\fR" 4
.IX Item =trace_aranges
.PD
显示 \fB.trace_aranges\fP 部分的内容。
.ie  n .IP """u""" 4
.el .IP "\f(CWu\fR" 4
.IX Item u
.PD 0
.ie  n .IP """=trace_abbrev""" 4
.el .IP "\f(CW=trace_abbrev\fR" 4
.IX Item =trace_abbrev
.PD
显示 \fB.trace_abbrev\fP 部分的内容。
.ie  n .IP """U""" 4
.el .IP "\f(CWU\fR" 4
.IX Item U
.PD 0
.ie  n .IP """=trace_info""" 4
.el .IP "\f(CW=trace_info\fR" 4
.IX Item =trace_info
.PD
显示 \fB.trace_info\fP 部分的内容。
.RE
.RS 4
.Sp
Note: 当前不支持显示 \fB.debug_static_funcs\fP、\&\fB.debug_static_vars\fP 和
\fBdebug_weaknames\fP 部分的内容。
.RE
.IP \fB\-\-dwarf\-depth=\fP\fIn\fP 4
.IX Item \-\-dwarf\-depth=n
将 \f(CW\*(C`.debug_info\*(C'\fP 部分的转储限制为 \fIn\fP 子级。 这仅对 \fB\-\-debug\-dump=info\fP 有用。
默认是打印所有 DIE; \fIn\fP 的特殊值 0 也会产生这种效果。
.Sp
对于 \fIn\fP 的非零值，将不会打印 \fIn\fP 级别或更深级别的 DIE。 \fIn\fP 的范围是从零开始的。
.IP \fB\-\-dwarf\-start=\fP\fIn\fP 4
.IX Item \-\-dwarf\-start=n
仅打印编号为 \fIn\fP 的 \s-1DIE\s0 开头的 DIE。 这仅对 \fB\-\-debug\-dump=info\fP 有用。
.Sp
如果指定，此选项将禁止打印任何标头信息和编号为 \fIn\fP 的 \s-1DIE\s0 之前的所有 DIE。 仅打印指定 \s-1DIE\s0
的兄弟姐妹和子节点。
.Sp
这可以与 \fB\-\-dwarf\-depth\fP 一起使用。
.IP \fB\-\-dwarf\-check\fP 4
.IX Item \-\-dwarf\-check
为 Dwarf 信息的一致性启用额外检查。
.IP \fB\-\-ctf[=\fP\fIsection\fP\fB]\fP 4
.IX Item \-\-ctf[=section]
显示指定 \s-1CTF\s0 部分的内容。 \s-1CTF\s0 节本身包含许多小节，所有小节都按顺序显示。
.Sp
默认情况下，显示名为 \fI.ctf\fP 的部分的名称，这是 \fBld\fP 发出的名称。
.IP \fB\-\-ctf\-parent=\fP\fImember\fP 4
.IX Item \-\-ctf\-parent=member
如果 \s-1CTF\s0 部分包含定义不明确的类型，它将由许多 \s-1CTF\s0 字典的存档组成，所有字典都继承自包含明确类型的字典。
该成员默认命名为 \fI.ctf\fP，就像包含它的部分一样，但可以在链接时使用
\f(CW\*(C`ctf_link_set_memb_name_changer\*(C'\fP 函数更改此名称。
当查看由使用名称更改器重命名父档案成员的链接器创建的 \s-1CTF\s0 档案时，\fB\-\-ctf\-parent\fP 可用于指定用于父档案的名称。
.IP \fB\-\-sframe[=\fP\fIsection\fP\fB]\fP 4
.IX Item \-\-sframe[=section]
显示指定 SFrame 部分的内容。
.Sp
默认情况下，显示名为 \fI.sframe\fP 的部分的名称，这是 \fBld\fP 发出的名称。
.IP \fB\-G\fP 4
.IX Item \-G
.PD 0
.IP \fB\-\-stabs\fP 4
.IX Item \-\-stabs
.PD
显示请求的任何部分的完整内容。 显示 \&\s-1ELF\s0 文件中 .stab、.stab.index 和 .stab.excl 部分的内容。
这仅在 \&\f(CW\*(C`.stab\*(C'\fP 调试符号表条目包含在 \s-1ELF\s0 部分中的系统 (例如 Solaris 2.0) 上有用。
在大多数其他文件格式中，调试符号表条目与链接符号交织在一起，并且在 \fB\-\-syms\fP 输出中可见。
.IP \fB\-\-start\-address=\fP\fIaddress\fP 4
.IX Item \-\-start\-address=address
开始显示指定地址的数据。 这会影响 \fB\-d\fP、\fB\-r\fP 和 \fB\-s\fP 选项的输出。
.IP \fB\-\-stop\-address=\fP\fIaddress\fP 4
.IX Item \-\-stop\-address=address
停止显示指定地址的数据。 这会影响 \fB\-d\fP、\fB\-r\fP 和 \fB\-s\fP 选项的输出。
.IP \fB\-t\fP 4
.IX Item \-t
.PD 0
.IP \fB\-\-syms\fP 4
.IX Item \-\-syms
.PD
打印文件的符号表条目。 这类似于 \fBnm\fP 程序提供的信息，尽管显示格式不同。 输出格式取决于被转储文件的格式，但主要有两种类型。 一个看起来像这样:
.Sp
.Vb 2
\&[4](sec 3)(fl 0x00)(ty 0)(scl 3)(nx 1) 0x00000000 .bss\&[6](sec 1)(fl
0x00)(ty 0)(scl 2)(nx 0) 0x00000000 弗雷德
.Ve
.Sp
其中方括号内的数字是符号表中条目的编号，\fIsec\fP 数字是段号，\&\fIfl\fP 值是符号的标志位，\fIty\fP 数字是符号的类型，\fIscl\fP
数字是符号的存储类和 \fInx\fP 值是与符号关联的辅助条目数。 最后两个字段是符号的值及其名称。
.Sp
另一种常见的输出格式，通常出现在基于 \s-1ELF\s0 的文件中，如下所示:
.Sp
.Vb 2
\& 00000000 l d .bss 00000000 .bss \& 00000000 g .text 00000000 fred
.Ve
.Sp
这里的第一个数字是符号的值 (有时称为它的地址)。 下一个字段实际上是一组字符和空格，指示在符号上设置的标志位。 这些字符如下所述。
接下来是符号关联的部分，如果该部分是绝对的 (即未与任何部分连接)，则为 \fI*ABS*\fP，如果该部分在被转储的文件中被引用，但未在此处定义，则为
\fI*UND*\fP。
.Sp
在部分名称之后是另一个字段，一个数字，对于常见符号来说是对齐方式，对于其他符号来说是大小。 最后显示符号的名称。
.Sp
标志字符分为以下 7 组:
.RS 4
.ie  n .IP """l""" 4
.el .IP "\f(CWl\fR" 4
.IX Item l
.PD 0
.ie  n .IP """g""" 4
.el .IP "\f(CWg\fR" 4
.IX Item g
.ie  n .IP """u""" 4
.el .IP "\f(CWu\fR" 4
.IX Item u
.ie  n .IP """!""" 4
.el .IP "\f(CW!\fR" 4
.IX Item !
.PD
符号是局部 (l)，全局 (g)，唯一全局 (u)，既不是全局也不是局部 (空格) 或者全局和局部 (!)。
由于各种原因，符号既不是本地的也不是全局的，例如，因为它用于调试，但如果它既是本地的又是全局的，则可能表示错误。 唯一全局符号是 \s-1ELF\s0
符号绑定标准集的 \s-1GNU\s0 扩展。 对于这样一个符号，动态链接器将确保在整个过程中只有一个具有该名称和类型的符号在使用中。
.ie  n .IP """w""" 4
.el .IP "\f(CWw\fR" 4
.IX Item w
符号是弱 (w) 或强 (空格)。
.ie  n .IP """C""" 4
.el .IP "\f(CWC\fR" 4
.IX Item C
该符号表示构造函数 (C) 或普通符号 (空格)。
.ie  n .IP """W""" 4
.el .IP "\f(CWW\fR" 4
.IX Item W
该符号是警告 (W) 或正常符号 (空格)。 警告符号的名称是在警告符号后面的符号被引用时显示的消息。
.ie  n .IP """I""" 4
.el .IP "\f(CWI\fR" 4
.IX Item I
.PD 0
.ie  n .IP """i""" 4
.el .IP "\f(CWi\fR" 4
.IX Item i
.PD
该符号是对另一个符号 (I) 的间接引用，在重定位处理 (i) 期间要计算的函数或普通符号 (空格)。
.ie  n .IP """d""" 4
.el .IP "\f(CWd\fR" 4
.IX Item d
.PD 0
.ie  n .IP """D""" 4
.el .IP "\f(CWD\fR" 4
.IX Item D
.PD
该符号是调试符号 (d) 或动态符号 (D) 或普通符号 (空格)。
.ie  n .IP """F""" 4
.el .IP "\f(CWF\fR" 4
.IX Item F
.PD 0
.ie  n .IP """f""" 4
.el .IP "\f(CWf\fR" 4
.IX Item f
.ie  n .IP """O""" 4
.el .IP "\f(CWO\fR" 4
.IX Item O
.PD
该符号是一个函数 (F) 或文件 (f) 或对象 (O) 的名称或只是一个普通符号 (空格)。
.RE
.RS 4
.RE
.IP \fB\-T\fP 4
.IX Item \-T
.PD 0
.IP \fB\-\-dynamic\-syms\fP 4
.IX Item \-\-dynamic\-syms
.PD
打印文件的动态符号表条目。 这仅对动态对象有意义，例如某些类型的共享库。 这类似于 \fBnm\fP 程序在给定 \fB\-D\fP (\fB\-\-dynamic\fP)
选项时提供的信息。
.Sp
输出格式类似于 \fB\-\-syms\fP 选项产生的格式，除了在符号名称之前插入一个额外字段，提供与符号关联的版本信息。
如果版本是将未版本化的引用解析为符号时使用的默认版本，则按原样显示，否则将其放入括号中。
.IP \fB\-\-special\-syms\fP 4
.IX Item \-\-special\-syms
当显示符号时，包括那些目标认为在某些方面很特殊并且用户通常不会感兴趣的符号。
.IP "\fB\-U\fP \fI[d|i|l|e|x|h]\fP" 4
.IX Item "\-U [d|i|l|e|x|h]"
.PD 0
.IP \fB\-\-unicode=\fP\fI[default|invalid|locale|escape|hex|highlight]\fP 4
.IX Item \-\-unicode=[default|invalid|locale|escape|hex|highlight]
.PD
控制 \s-1UTF\-8\s0 编码的多字节字符在字符串中的显示。 默认的 (\fB\-\-unicode=default\fP) 是不对它们进行特殊处理。
\fB\-\-unicode=locale\fP 选项在当前语言环境中显示序列，该语言环境可能支持也可能不支持它们。 选项 \&\fB\-\-unicode=hex\fP
和 \fB\-\-unicode=invalid\fP 将它们显示为用尖括号或花括号括起来的十六进制字节序列。
.Sp
\fB\-\-unicode=escape\fP 选项将它们显示为转义序列 (\fI\euxxxx\fP)，\fB\-\-unicode=highlight\fP
选项将它们显示为以红色突出显示的转义序列 (如果输出设备支持)。 着色旨在引起人们注意可能不希望出现的 unicode 序列。
.IP \fB\-V\fP 4
.IX Item \-V
.PD 0
.IP \fB\-\-version\fP 4
.IX Item \-\-version
.PD
打印 \fBobjdump\fP 的版本号并退出。
.IP \fB\-x\fP 4
.IX Item \-x
.PD 0
.IP \fB\-\-all\-headers\fP 4
.IX Item \-\-all\-headers
.PD
显示所有可用的头信息，包括符号表和重定位条目。 使用 \fB\-x\fP 等同于指定所有 \&\fB\-a \-f \-h \-p \-r \-t\fP。
.IP \fB\-w\fP 4
.IX Item \-w
.PD 0
.IP \fB\-\-wide\fP 4
.IX Item \-\-wide
.PD
为超过 80 列的输出设备格式化一些行。 显示时也不要截断符号名称。
.IP \fB\-z\fP 4
.IX Item \-z
.PD 0
.IP \fB\-\-disassemble\-zeroes\fP 4
.IX Item \-\-disassemble\-zeroes
.PD
通常反汇编输出将跳过零块。 该选项指示反汇编器反汇编这些块，就像任何其他数据一样。
.IP \fB@\fP\fIfile\fP 4
.IX Item @file
从 \fIfile\fP 读取命令行选项。 读取的选项插入到原始 @\fIfile\fP 选项的位置。 如果 \fIfile\fP
不存在或无法读取，则该选项将按字面意思处理，而不是删除。
.Sp
\fIfile\fP 中的选项由空格分隔。 通过用单引号或双引号将整个选项括起来，可以将空白字符包含在选项中。 任何字符 (包括反斜杠)
都可以通过在要包含的字符前加上反斜杠来包含。 \fIfile\fP 本身可能包含额外的 @\fIfile\fP 选项; 任何此类选项都将递归处理。
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBnm\fP\|(1)、\fBreadelf\fP\|(1) 和信息条目 \fIbinutils\fP.
.SH COPYRIGHT
.IX Header COPYRIGHT
Copyright (c) 1991\-2023 Free Software Foundation, Inc.
.PP
根据 \s-1GNU\s0 自由文档许可证版本 1.3 或自由软件基金会发布的任何更高版本的条款，授予复制、分发或者修改本文档的权限;
没有不变的部分，没有封面文本，也没有封底文本。 该许可证的副本包含在标题为 \*(L"\s-1GNU\s0 Free Documentation
License\*(R") 的部分中。
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
