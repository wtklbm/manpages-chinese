.\" -*- coding: UTF-8 -*-
'\" t
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH LESSKEY 1 "Version 608: 22 Jul 2022"  
.SH NAME
lesskey \- 为 less 自定义键绑定
.SH "SYNOPSIS (deprecated)"
\fBlesskey [\-o output] [\-\-] [input]\fP
.br
\fBlesskey [\-\-output=output] [\-\-] [input]\fP
.br
\fBlesskey \-V\fP
.br
\fBlesskey \-\-version\fP
.SH SCOPE
本文档描述了 \fIlesskey\fP 源文件的格式，\fIless\fP 版本 582 及更高版本使用该格式。 在以前的 \fIless\fP 版本中，使用一个名为
\fIlesskey\fP 的单独程序将 \fIlesskey\fP 源文件编译成 \fIless\fP 可以理解的格式。 不再需要此编译步骤，因此不推荐使用
\fIlesskey\fP 程序，尽管 \fIless\fP 本身仍支持该文件格式。
.PP
.SH DESCRIPTION
\fIlesskey\fP 文件指定了一组键绑定和环境变量，供后续调用 \fIless.\fP 使用
.SH "FILE FORMAT"
输入文件由一个或多个 \fIsections.\fP 组成，每个部分都以标识部分类型的一行开头。 可能的部分是:
.IP #command
自定义命令键绑定。
.IP #line\-edit
自定义行编辑键绑定。
.IP #env
定义环境变量。
.PP
空白行和以井号 (#) 开头的行将被忽略，但以下情况除外。
.
.SH "COMMAND SECTION"
命令部分以行开头
.sp
#command
.sp
如果命令部分是文件中的第一部分，则可以省略此行。 命令部分由以下形式的行组成:
.sp
  \fIstring\fP <whitespace> \fIaction\fP [extra\-string] <newline>
.sp
空格是一个或多个空格或者制表符的任意序列。 \fIstring\fP 是调用操作的命令 key(s)。 \fIstring\fP 可以是单个命令键，也可以是最多
15 个键的序列。 \fIaction\fP 是下面列表中 less 动作的名称。 \fIstring\fP
中的字符可能按字面意思出现，或以插入符号作为前缀以指示控制键。 反斜杠后跟一到三个八进制数字可用于通过其八进制值指定字符。
后跟某些字符的反斜杠指定输入字符，如下所示:
.RS 5m
.TS
l l l.
\eb	BACKSPACE	(0x08)
\ee	ESCAPE	(0x1B)
\en	NEWLINE	(0x0A)
\er	RETURN	(0x0D)
\et	TAB	(0x09)
.TE
.sp
\ek 后跟一个字符表示按下这些键之一时产生的 char(s):
.TS
l l.
\ekb	BACKSPACE (the BACKSPACE key)
\ekB	ctrl\-BACKSPACE
\ekd	向下箭头
\ekD	向下翻页
\eke	END
\ekh	HOME
\eki	INSERT
\ekl	左箭头
\ekL	ctrl\-LEFT ARROW
\ekr	右箭头
\ekR	ctrl\-RIGHT ARROW
\ekt	BACKTAB
\eku	向上箭头
\ekU	向上翻页
\ekx	DELETE
\ekX	ctrl\-DELETE
\ek1	F1
.TE

.PP
反斜杠后跟任何其他字符表示该字符将按字面意思理解。 前面必须加反斜杠的字符包括脱字号、空格、制表符和反斜杠本身。
.PP
一个动作后面可以跟一个 "extra" 字符串。 当在运行 \fIless\fP 时输入这样的命令时，将执行操作，然后解析额外的字符串，就好像它是输入到
\fIless\fP 中一样。 在某些情况下可以使用此特性来扩展命令的，特性。 例如，请参见下例中的 "{" 和 ":t" 命令。 额外字符串对于
"quit" 动作有特殊意义: 当 \fIless\fP 退出时，额外字符串的第一个字符用作其退出状态。
.
.SH EXAMPLE
以下输入文件描述了 \fIless\fP 使用的一组默认命令键。 每个命令的文档可以在
.less
手册页，在调用命令的键序列下。
.sp
.RS 5m
.TS
l l.
#command
\er	forw\-line
\en	forw\-line
e	forw\-line
j	forw\-line
\ekd	forw\-line
^E	forw\-line
^N	forw\-line
k	back\-line
y	back\-line
^Y	back\-line
^K	back\-line
^P	back\-line
J	forw\-line\-force
K	back\-line\-force
Y	back\-line\-force
d	forw\-scroll
^D	forw\-scroll
u	back\-scroll
^U	back\-scroll
\e40	forw\-screen
f	forw\-screen
^F	forw\-screen
^V	forw\-screen
\ekD	forw\-screen
b	back\-screen
^B	back\-screen
\eev	back\-screen
\ekU	back\-screen
z	forw\-window
w	back\-window
\ee\e40	forw\-screen\-force
F	forw\-forever
\eeF	forw\-until\-hilite
R	repaint\-flush
r	repaint
^R	repaint
^L	repaint
\eeu	undo\-hilite
\eeU	clear\-search
g	goto\-line
\ekh	goto\-line
<	goto\-line
\ee<	goto\-line
p	percent
%	percent
\ee[	left\-scroll
\ee]	right\-scroll
\ee(	left\-scroll
\ee)	right\-scroll
\ekl	left\-scroll
\ekr	right\-scroll
\ee{	no\-scroll
\ee}	end\-scroll
{	forw\-bracket {}
}	back\-bracket {}
(	forw\-bracket ()
)	back\-bracket ()
[	forw\-bracket []
]	back\-bracket []
\ee^F	forw\-bracket
\ee^B	back\-bracket
G	goto\-end
\ee>	goto\-end
>	goto\-end
\eke	goto\-end
\eeG	goto\-end\-buffered
\&=	status
^G	status
:f	status
/	forw\-search
?	back\-search
\ee/	forw\-search *
\ee?	back\-search *
n	repeat\-search
\een	repeat\-search\-all
N	reverse\-search
\eeN	reverse\-search\-all
&	filter
m	set\-mark
M	set\-mark\-bottom
\eem	clear\-mark
'	goto\-mark
^X^X	goto\-mark
E	examine
:e	examine
^X^V	examine
:n	next\-file
:p	prev\-file
t	next\-tag
T	prev\-tag
:x	index\-file
:d	remove\-file
\-	toggle\-option
:t	toggle\-option t
s	toggle\-option o
	## Use a long option name by starting the extra string with ONE dash; eg:
	##   s toggle\-option \-log\-file\n
\&_	display\-option
|	pipe
v	visual
!	shell
+	firstcmd
H	help
h	help
V	version
0	digit
1	digit
2	digit
3	digit
4	digit
5	digit
6	digit
7	digit
8	digit
9	digit
q	quit
Q	quit
:q	quit
:Q	quit
ZZ	quit
.TE
.RE
.sp
.SH PRECEDENCE
\fIlesskey\fP 指定的命令优先于默认命令。 可以通过将默认命令键包含在具有操作 "invalid" 的输入文件中来禁用它。 或者，可以使用操作
"noaction" 将键定义为不执行任何操作。 "noaction" 与 "invalid" 类似，但 \fIless\fP 会为 "invalid"
命令发出错误蜂鸣声，但不会为 "noaction" 命令发出错误蜂鸣声。 此外，可以通过将此控制行添加到输入文件来禁用所有默认命令:
.sp
#stop
.sp
这将导致忽略所有默认命令。 #stop 行应该是文件该部分的最后一行。
.PP
请注意，#stop 可能很危险。 由于所有默认命令都被禁用，您必须在 #stop 行之前提供足够的命令以启用所有必要的操作。 例如，未能提供
"quit" 命令可能会导致失败。
.
.SH "LINE EDITING SECTION"
行编辑部分以以下行开始:
.sp
#line\-edit
.sp
本节为行编辑命令指定新的键绑定，其方式类似于在 #command 节中指定普通命令的键绑定的方式。
行编辑部分由一系列键和操作组成，每行一个，如下例所示。
.
.SH EXAMPLE
以下输入文件描述了 \fIless\fP: 使用的一组默认行编辑键
.sp
.RS 5m
.TS
l l.
#line\-edit
\et	forw\-complete
\e17	back\-complete
\ee\et	back\-complete
^L	expand
^V	literal
^A	literal
\eel	right
\ekr	right
\eeh	left
\ekl	left
\eeb	word\-left
\ee\ekl	word\-left
\eew	word\-right
\ee\ekr	word\-right
\eei	insert
\eex	delete
\ekx	delete
\eeX	word\-delete
\eekx	word\-delete
\ee\eb	word\-backspace
\ee0	home
\ekh	home
\ee$	end
\eke	end
\eek	up
\eku	up
\eej	down
^G	abort
.TE
.RE
.sp
.
.SH "LESS ENVIRONMENT VARIABLES"
环境变量部分以行开头
.sp
#env
.sp
此行之后是环境变量分配列表。 每行由一个环境变量名称、一个等号 (=) 和要分配给环境变量的值组成。 忽略等号前后的空白。 以这种方式分配的变量仅对
\fIless\fP 可见。 如果在系统环境和 lesskey 文件中指定了变量，则 lesskey 文件中的值优先。
.
.sp
如果变量名称后跟 += 而不是 =，则字符串将追加到变量的现有值。 这目前仅在任何 += 行紧跟同一变量的原始定义 (带有 = 行)
而没有其他变量的任何干预定义时才有效。 它只能追加到文件中先前定义的变量; 它不能追加到系统环境中的变量。
.
.SH "CONDITIONAL CONFIGURATION"
如果一行以 #version 开头，后跟一个关系运算符和一个版本号，则当且仅当 \fIless\fP (或 \fIlesskey\fP))
的运行版本与运算符匹配时，才会解析该行的其余部分。 如果不同版本的 \fIless\fP 使用 lesskey 文件，这会很有帮助。
.sp
例如，假设在 \fIless\fP 版本 777 中添加了一个名为 'sideways\-search' 的新命令。 然后下一行会将命令分配给 Q
键，但仅限于支持它的 \fIless\fP 版本。早于 777 的版本将忽略该行。
.sp
.nf
	#version >= 777 Q 侧身搜索
.fi
.sp
支持这六个运算符:
.RS 5m
.TS
l l.
 >	Greater than
 <	Less than
 >=	Greater than or equal to
 <=	Less than or equal to
 =	Equal to
 !=	Not equal to
.TE
.RE
.sp
594 之前的 \fIless\fP 和 \fIlesskey\fP 不支持 #version 特性。 在那些旧版本中，所有 #version 行都被忽略。
.
.SH EXAMPLE
以下输入文件设置 \-i 和 \-S 选项
.less
运行并在 595 及更高版本上添加了 \-\-color 选项。
.sp
.nf
	#env
	更少 =\-i\-S
	#version\ >=\ 595\ \ LESS\ +=\ \-\-color=Hkc
.fi
.
.SH "SEE ALSO"
\fBless\fP(1)
.
.SH WARNINGS
在 MS\-DOS 和 OS/2 系统上，某些键发送以 NUL 字符 (0) 开头的字符序列。 此 NUL 字符应在 lesskey 文件中表示为
\e340。
.
.SH COPYRIGHT
Copyright (C) 1984\-2022 Mark Nudelman
.PP
less 是 GNU 项目的一部分，是免费软件。 您可以根据以下任一条款重新分发或者修改它: (1) 自由软件基金会发布的 GNU 通用公共许可证; 或
(2) 较少许可证。 有关重新分发的更多详细信息，请参见 less 分发中的文件 README。 您应该以更少的价格收到 GNU
通用公共许可证的副本以及源代码; 请参见文件复制。 如果没有，请写信给自由软件基金会，59 Temple Place, Suite 330,
Boston, MA 02111\-1307, USA。 您还应该收到 Less License 的副本; 请参见文件许可证。
.PP
less 的分发是希望它有用，但不提供任何保证; 甚至没有针对特定用途的适销性或适用性的默示保证。 有关详细信息，请参见 GNU 通用公共许可证。
.
.SH AUTHOR
.
Mark Nudelman
.br
在 https://github.com/gwsw/less/issues 报告错误。
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
