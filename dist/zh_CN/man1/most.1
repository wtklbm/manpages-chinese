.\" -*- coding: UTF-8 -*-
.\" This manpage has been automatically generated by docbook2man 
.\" from a DocBook document.  This tool can be found at:
.\" <http://shell.ipoline.com/~elmert/comp/docbook2X/> 
.\" Please send any bug reports, improvements, comments, patches, 
.\" etc. to Steve Cheng <steve@ggi-project.org>.
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH MOST 1 "30 July 2022" "" ""

.SH NAME
大多数 \- 浏览或翻阅文本文件
.SH SYNOPSIS

\fBmost\fP [ \fB\-1\fP ] [ \fB\-b\fP ] [ \fB\-C\fP ] [ \fB\-c\fP ] [ \fB\-d\fP ] [ \fB\-M\fP ] [ \fB\-r\fP
] [ \fB\-s\fP ] [ \fB\-t\fP ] [ \fB\-u\fP ] [ \fB\-v\fP ] [ \fB\-w\fP ] [ \fB\-z\fP ] [
\fB+/\fP\fIstring\fP ] [ \fB+\fP\fIline\-number\fP ] [ \fB+d\fP ] [ \fB+s\fP ] [ \fB+u\fP ] [
\fIfile...\fP ]

.SH DESCRIPTION
.PP
\fBmost\fP 是一个分页程序，一次显示一个窗口，最终显示文件的内容。
它在每个窗口后暂停，并在屏幕的窗口状态行上打印文件名、当前行号和到目前为止显示的文件百分比。
.PP
与其他分页程序不同，\fBmost\fP 能够显示任意数量的 windows，只要每个窗口至少占据两行屏幕即可。 每个窗口可能包含相同的文件或不同的文件。
此外，每个窗口都有自己的模式。 例如，一个窗口可能显示一个文件，其行被换行，而另一个窗口可能正在截断这些行。Windows 可能被 `锁定`
在一起，因为如果其中一个锁定的 windows 滚动，则所有锁定的 windows 都将滚动。\fBmost\fP
还能够忽略缩进超出用户指定值的行。这在查看计算机程序以挑选代码的粗略特性时很有用。有关此特性的描述，请参见 `:o' 命令。
.PP
\fBmost\fP 除了可以显示普通的文本文件外，还可以显示二进制文件以及任意 ascii 字符的文件。 将文件读入缓冲区时，\fBmost\fP 检查文件的前
32 个字节以确定文件是否为二进制文件，然后切换到适当的模式。 但是，可以使用 \-k 选项禁用此，特性。 有关详细信息，请参见 \-b、\-k、\-v 和
\-t 选项的说明。
.PP
文本文件可能包含下划线和退格字符的组合，导致打印机出现下划线或重写。 当 \fBmost\fP 识别到这一点时，它会插入适当的转义序列以达到预期的效果。
此外，某些文件通过在行中间嵌入回车符导致打印机重写某些字符。 发生这种情况时，\fBmost\fP 会显示带有粗体属性的重写字符。 此特性有助于阅读 UNIX
手册页或由 runoff 生成的文档。 特别是，如果没有去除下划线字符，使用 \fBmost\fP 查看此文档应该可以说明此行为。 这可以用 \-v 选项关闭。
.PP
默认情况下，字符数超过最终宽度的行不会换行，而是会被截断。当截断发生时，这由终端屏幕最右侧列中的 `$`
指示。向右和向左箭头键可用于查看超出屏幕边缘的线条。\-w 选项可用于覆盖此，特性。当窗口被换行时，字符 `\e` 将出现在窗口的右侧 edge。
.PP
下面列出了命令。
.SH "COLOR SUPPORT"
.PP
\fBmost\fP 从 5.2 版本开始支持 256 色和 24 位真彩色终端。 并非所有终端都能生成任意 24 位颜色。如果您的终端支持 24 位色，但是
\fBmost\fP 没有检测到，那就设置环境变量

.nf
     COLORTERM=truecolor
.fi
.PP
强制使用 24 位真彩色。
.PP
.SH OPTIONS
.TP 
\fB\-1\fP
VT100 模式。 这仅在 VMS 系统上有意义。 如果终端严格是 VT100，则应使用此选项。 这意味着最终端没有删除和插入多行的能力。 VT102s
及更高版本具有此功能。
.TP 
\fB\-b\fP
二进制模式。 当您要查看包含 8 位字符的文件时使用此开关。 \fBmost\fP 将以十六进制表示法每行显示文件 16 个字节。典型的行如下所示:

.nf
   01000000 40001575 9C23A020 4000168D     ....@..u.#. @...
.fi

当与 \-v 选项一起使用时，同一行如下所示:

.nf
   ^A^@^@^@  @^@^U u 9C #A0    @^@^V8D     ....@..u.#. @...
.fi
.TP 
\fB\-C\fP
禁用颜色支持。
.TP 
\fB\-c\fP
使搜索区分大小写
.TP 
\fB\-d\fP
省略用于表示换行的反斜杠标记。
.TP 
\fB\-M\fP
禁止使用 mmap。
.TP 
\fB\-r\fP
默认使用正则表达式搜索
.TP 
\fB\-s\fP
挤压模式。用一个空行替换多个空行。
.TP 
\fB\-t\fP
将选项卡显示为 ^I。 如果此选项后紧跟一个整数，则该整数设置制表符宽度，例如 \-t4
.TP 
\fB\-u\fP
即使区域设置要求禁用 UTF\-8 模式
.TP 
\fB+u\fP
强制 UTF\-8 模式。 默认情况下，\fBmost\fP 将使用当前语言环境来确定是否应使用 UTF\-8 模式。 +u 和 \-u 开关允许覆盖行为
.TP 
\fB\-v\fP
显示控制字符，如 `^A` 中的控制 A。 通常 \fBmost\fP 不解释控制字符。
.TP 
\fB\-w\fP
换行
.TP 
\fB\-z\fP
禁用 gunzip\-on\-the\-fly
.TP 
\fB+/\fP\fIstring\fP
从包含第一次出现的字符串的行开始
.TP 
\fB+\fP\fIlineno\fP
从指定的行号开始
.TP 
\fB+d\fP
仅当您希望在查看文件时选择删除文件时才应使用此开关。 这使得从目录中清除不需要的文件变得更加容易。使用交互式键序列 `:D` 删除文件，然后使用 `y`
确认。
.TP 
\fB+s\fP
安全模式 \-\- 禁止编辑、cd、shell 和读取命令行中未列出的文件。
.SH "COMMAND USAGE"
.PP
命令立即生效; 无需键入回车。 在以下命令中，\fBi\fP 是一个数字参数 (默认为 1)。
.TP 
\fBSPACE, CTRL\-D, NEXT_SCREEN\fP
显示另一个窗口，如果指定了 \fBi\fP，则跳转 \fBi\fP 个窗口。
.TP 
\fBRETURN, DOWN_ARROW, V, CTRL\-N\fP
显示另一行，或 \fBi\fP 更多行 (如果指定)。
.TP 
\fBUP_ARROW, ^, CTRL\-P\fP
如果指定，则显示前一行或 \fBi\fP 前几行。
.TP 
\fBT, ESCAPE<\fP
移动到缓冲区的顶部。
.TP 
\fBB, ESCAPE>\fP
移动到缓冲区底部。
.TP 
\fBRIGHT_ARROW, TAB, >\fP
向左滚动窗口 60\fBi\fP 列以查看超出窗口右边界的行。
.TP 
\fBLEFT_ARROW, CTRL\-B, <\fP
向右滚动窗口 60\fBi\fP 列以查看超出窗口左边距的行。
.TP 
\fBU, CTRL\-U, DELETE, PREV_SCREEN\fP
跳回 \fBi\fP windowfuls，然后打印一个 windowful。
.TP 
\fBR, CTRL\-R\fP
重新绘制窗口。
.TP 
\fBJ, G\fP
如果未指定 \fBi\fP，则提示输入行号然后跳转到该行，否则直接跳转到该行 i.
.TP 
\fB%\fP
如果未指定 \fBi\fP，则提示输入百分比数字，然后跳转到该文件的百分比，否则仅跳转到文件的 \fBi\fP 百分比。
.TP 
\fBW, w\fP
如果当前屏幕宽度为 80，则将其设置为 132，反之亦然。 对于其他值，此命令将被忽略。
.TP 
\fBQ, CTRL\-X CTRL\-C, CTRL\-K E\fP
从 \fBmost\fP\& 退出。在 VMS 上，^Z 也退出。
.TP 
\fBh, CTRL\-H, HELP, PF2\fP
帮助。给出所有 \fBmost\fP 命令的描述。 必须设置 \fBmost\fP 环境变量 MOST_HELP 才能使其有意义。
.TP 
\fBf, /, CTRL\-F, FIND, GOLD PF3\fP
提示输入一个字符串并从当前行向前搜索包含该字符串的不同行。 CTRL\-G 中止。
.TP 
\fB?\fP
提示输入一个字符串并向后搜索包含该字符串的第 i 个不同的行。 CTRL\-G 中止。
.TP 
\fBn\fP
在上一次搜索的方向上搜索下一个 \fBi\fP 行，其中包含最后一个搜索字符串的出现。
.TP 
\fBm, SELECT, CTRL\-@, CTRL\-K M, PERIOD\fP
在当前行上设置一个标记以供以后引用。
.TP 
\fBINSERT_HERE, CTRL\-X CTRL\-X, COMMA, CTRL\-K RETURN, GOLD PERIOD\fP
在当前行上设置一个标记，但返回到上一个标记。 这允许用户在文件中的两个位置之间来回切换。
.TP 
\fBl, L\fP
切换此窗口的锁定。 如果状态行的左侧 edge 处有一个 `*`，则窗口被锁定。 Windows 锁在一起，一起滚动。
.TP 
\fBCTRL\-X 2, CTRL\-W 2, GOLD X\fP
将此窗口分成两半。
.TP 
\fBCTRL\-X o, CTRL\-W o, o, GOLDUP, GOLDDOWN\fP
移动到其他窗口。
.TP 
\fBCTRL\-X 0, CTRL\-W 0, GOLD V\fP
删除此窗口。
.TP 
\fBCTRL\-X 1, CTRL\-W 1, GOLD O\fP
删除所有其他 windows，只留下一个窗口。
.TP 
\fBE, e\fP
编辑此文件。
.TP 
\fB$, ESC $\fP
这是系统相关的。 在 VMS 上，这会导致 \fBmost\fP 到 spawn 一个子进程。 当用户退出进程时，\fBmost\fP 被恢复。 在 UNIX
系统上，\fBmost\fP 只是将自身挂起。
.TP 
\fB:n\fP
跳到命令行中给出的下一个文件名。 使用箭头键向前或向后滚动文件列表。 `Q' 退出 \fBmost\fP 和任何其他键选择给定的文件。
.TP 
\fB:c\fP
切换区分大小写的搜索。
.TP 
\fB:D\fP
删除当前文件。 此命令仅对 + d 开关有意义。
.TP 
\fB:o, :O\fP
切换各种选项。 使用此键序列，\fBmost\fP 会显示一个提示，要求用户点击以下之一: bdtvw。 `b`、`t`、`v` 和 `w`
选项与命令行开关的含义相同。例如，`w` 选项将打开和关闭当前窗口的换行。

`d' 选项必须与前缀整数 i 一起使用。 所有缩进超出 \fBi\fP 列的行都不会显示。 例如，考虑片段:
.TP 
\fB\fR

.nf
   int main(int argc, char **argv)
   {
     int i;
     for (i = 0; i < argc, i++)
       {
         fprintf(stdout,"%i: %s\en",i,argv[i]);
       }
     return 0;
   }
.fi
键序列 `1:od` 将导致 \fBmost\fP 显示文件，忽略缩进超过第一列的所有行。 所以对于上面的例子，\fBmost\fP 会显示:

.nf
   int main(int argc, char **argv)...
   }
.fi
其中 `...` 表示不显示后面的行。
.SH HINTS
.PP
CTRL\-G 中止要求用户在提示符下输入内容的命令。 反引号键在这里有特殊的含义。 它用于引用某些字符。
这在搜索带有控制字符的字符串或行首的字符串时很有用。 在后一种情况下，要查找行首出现的 `The`，请输入 `^JThe where ` 并引用
CTRL\-J。
.SH ENVIRONMENT
.PP
\fBmost\fP 使用以下环境变量:
.TP 
\fBMOST_SWITCHES\fP
此变量设置常用开关。 例如，有些人喜欢将 \fBmost\fP 与 \-s 选项一起使用，这样就不会显示多余的空行。 在 VMS 上，这通常通过以下行在
login.com 中完成:
.TP 
\fB\fR

.nf
   $ 定义 MOST_SWITCHES "\-s"
.fi
.TP 
\fBMOST_EDITOR, SLANG_EDITOR\fP
这些环境变量中的任何一个都为 \fBmost\fP 指定一个编辑器来调用以编辑文件。该值可以包含分别表示文件名和行号的 %s 和 %d 格式化描述符。
例如，如果 JED 是您的编辑器，则将 MOST_EDITOR 设置为 `jed %s \-g %d`。
.TP 
\fBMOST_HELP\fP
此变量可用于指定备用帮助文件。
.TP 
\fBMOST_INITFILE\fP
设置此变量以指定在启动期间加载的初始化文件。 默认操作是加载系统配置文件，然后在 Unix 上加载名为 .mostrc 的个人配置文件，在其他系统上加载
most.rc。
.SH "CONFIGURATION FILE SYNTAX"
.PP
当 \fBmost\fP 启动时，它会尝试读取系统配置文件，然后是个人配置文件。这些文件可用于指定键绑定和颜色。
.PP
要将键绑定到特定的号码，请使用以下语法:

.nf
    setkey 函数 \- name key\-sequence
.fi
.PP
setkey 命令需要两个参数。 函数 \- name 参数指定要执行的函数，作为对按下键序列参数指定的键的响应。 例如，

.nf
    设置键 "up" "^P"
.fi
.PP
表示当按下 Ctrl\-P 时，将执行函数 up。
.PP
有时，有必要先解除绑定一个键序列，然后再通过 unsetkey 函数按顺序重新绑定它:

.nf
    取消设置密钥 "^F"
.fi
.PP
颜色可以通过使用语法在配置文件中使用 color 关键字来定义:

.nf
    颜色对象名称前景颜色背景颜色
.fi
.PP
这里，OBJECT\-NAME 可以是以下任意一项:

.nf
     状态 \-\- 状态行
     下划线 \-\- 带下划线的文本
     overstrike\-\-overstrike 文本
     正常 \- 其他
.fi
.PP
有关详细信息，请参见示例配置文件。
.SH BUGS
.PP
\fBmost\fP 的几乎所有已知错误或限制都是由于需要读取和解释文件中的控制字符。 一个问题涉及使用退格字符来强调或重写其他字符。 \fBmost\fP
尝试使用最终转义序列来模拟此行为。 一个副作用是在文件中左右滚动时并不总能得到预期的结果。 如有疑问，请使用 \fBmost\fP\& 的 \-v 和 \-b
选项。
.PP
正则表达式搜索可能无法找到涉及用于突出显示的 backspace/underscore 的字符串。 S\-Lang 库文档中描述了正则表达式语法。
.SH AUTHOR
.PP
约翰・E。戴维斯 <jed@jedsoft.org>
.SH ACKNOWLEDGEMENTS
.PP
多年来，许多人以某种方式为 \fBmost\fP 做出了贡献，例如，通过代码补丁、错误修复、评论或批评。
我特别感谢该程序的早期采用者，他们抓住了一个由学习底层语言的人领导的初出茅庐的软件项目的机会。 这些包括:
.PP
马茨・阿克伯格 (Mats Akerberg)、亨克・D. 戴维斯，雷克斯 O. Livingston 和 Mark Pizzolato 为
\fBmost\fP\& 的早期 VMS 版本做出了贡献。特别是，Mark 致力于为 DECUS 做好准备。
.PP
Foteos Macrides 将 \fBmost\fP 改编用于 cswing 和 gopher。 当前版本的 \fBmost\fP
的一些特性是从他的作品中获得灵感的。
.PP
我感谢 Robert Mills 重写搜索例程以使用正则表达式。
.PP
Sven Oliver Moll 提出了自动检测压缩文件的想法。
.PP
还要感谢 Shinichi Hama 对 \fBmost\fP\& 的宝贵批评。
.PP
Javier Kohen 在支持 UTF\-8 方面发挥了重要作用。
.PP
感谢大卫 W。Sanderson 将早期文档改编为 nroff 手册页源格式。
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
