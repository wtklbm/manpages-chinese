.\" -*- coding: UTF-8 -*-
.de  Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de  Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de  Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie  n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.ie  \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.de  IX
..
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.nr rF 0
.if  \n(.g .if rF .nr rF 1
.if  (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" fudge factors for nroff and troff
.    
.if  n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.if  t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.\" simple accents for nroff and troff
.    
.if  n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if  t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.\" troff and (daisy-wheel) nroff accents
.    
.ds : \k:\h'-(\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \k:\h'-(\n(.wu+\w'\(de'u\-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\fI\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.\" corrections for vroff
.    
.if  v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if  v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.\" for low resolution devices (crt and lpr)
.    
.if  \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "NM 1"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH NM 1 2023\-02\-03 binutils\-2.40 "GNU Development Tools"
.if  n .ad l
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.nh
.SH NAME
nm \- 列出目标文件中的符号
.SH SYNOPSIS
.IX Header SYNOPSIS
纳米 [\fB\-A\fP|\fB\-o\fP|\fB\-\-print\-file\-name\fP]
   [\fB\-a\fP|\fB\-\-debug\-syms\fP]
   [\fB\-B\fP|\fB\-\-format=bsd\fP]
   [\fB\-C\fP|\fB\-\-demangle\fP[=\fIstyle\fP]]
   [\fB\-D\fP|\fB\-\-dynamic\fP]
   [\fB\-f\fP\fIformat\fP|\fB\-\-format=\fP\fIformat\fP]
   [\fB\-g\fP|\fB\-\-extern\-only\fP]
   [\fB\-h\fP|\fB\-\-help\fP]
   [\fB\-\-ifunc\-chars=\fP\fI\s-1CHARS\s0\fP]
   [\fB\-j\fP|\fB\-\-format=just\-symbols\fP]
   [\fB\-l\fP|\fB\-\-line\-numbers\fP] [\fB\-\-inlines\fP]
   [\fB\-n\fP|\fB\-v\fP|\fB\-\-numeric\-sort\fP]
   [\fB\-P\fP|\fB\-\-portability\fP]
   [\fB\-p\fP|\fB\-\-no\-sort\fP]
   [\fB\-r\fP|\fB\-\-reverse\-sort\fP]
   [\fB\-S\fP|\fB\-\-print\-size\fP]
   [\fB\-s\fP|\fB\-\-print\-armap\fP]
   [\fB\-t\fP \fIradix\fP|\fB\-\-radix=\fP\fIradix\fP]
   [\fB\-u\fP|\fB\-\-undefined\-only\fP]
   [\fB\-U\fP|\fB\-\-defined\-only\fP]
   [\fB\-V\fP|\fB\-\-version\fP]
   [\fB\-W\fP|\fB\-\-no\-weak\fP]
   [\fB\-X 32_64\fP]
   [\fB\-\-no\-demangle\fP]
   [\fB\-\-no\-recurse\-limit\fP|\fB\-\-recurse\-limit\fP]]
   [\fB\-\-plugin\fP \fIname\fP]
   [\fB\-\-size\-sort\fP]
   [\fB\-\-special\-syms\fP]
   [\fB\-\-synthetic\fP]
   [\fB\-\-target=\fP\fIbfdname\fP]
   [\fB\-\-unicode=\fP\fImethod\fP]
   [\fB\-\-with\-symbol\-versions\fP]
   [\fB\-\-without\-symbol\-versions\fP]
   [\fIobjfile\fP...]
.SH DESCRIPTION
.IX Header DESCRIPTION
\&\s-1GNU\s0 \fBnm\fP lists the symbols from object files \fIobjfile\fP....
如果没有对象文件被列为参数，则 \fBnm\fP 假定该文件 \&\fIa.out\fP.
.PP
对于每个符号，\fBnm\fP 显示:
.IP \(bu 4
符号值，由选项选择的基数 (见下文)，或默认为十六进制。
.IP \(bu 4
符号类型。 至少使用了以下类型; 其他的也取决于目标文件格式。 如果是小写，符号通常是局部的; 如果大写，则符号为全局 (external)。
但是，对于特殊的全局符号 (\f(CW\*(C`u\*(C'\fP、\f(CW\*(C`v\*(C'\fP 和 \f(CW\*(C`w\*(C'\fP)，显示了一些小写符号。
.RS 4
.ie  n .IP """A""" 4
.el .IP "\f(CWA\fR" 4
.IX Item A
符号的值是绝对的，不会因进一步链接而改变。
.ie  n .IP """B""" 4
.el .IP "\f(CWB\fR" 4
.IX Item B
.PD 0
.ie  n .IP """b""" 4
.el .IP "\f(CWb\fR" 4
.IX Item b
.PD
该符号位于 \s-1BSS\s0 数据部分。 此部分通常包含零初始化或未初始化的数据，尽管确切的行为取决于系统。
.ie  n .IP """C""" 4
.el .IP "\f(CWC\fR" 4
.IX Item C
.PD 0
.ie  n .IP """c""" 4
.el .IP "\f(CWc\fR" 4
.IX Item c
.PD
符号很常见。 公共符号是未初始化的数据。 链接时，可能会出现多个同名的常用符号。 如果符号在任何地方定义，公共符号将被视为未定义引用。
当符号位于小公共区的特殊部分时，使用小写 \fIc\fP 字符。
.ie  n .IP """D""" 4
.el .IP "\f(CWD\fR" 4
.IX Item D
.PD 0
.ie  n .IP """d""" 4
.el .IP "\f(CWd\fR" 4
.IX Item d
.PD
该符号位于初始化数据部分。
.ie  n .IP """G""" 4
.el .IP "\f(CWG\fR" 4
.IX Item G
.PD 0
.ie  n .IP """g""" 4
.el .IP "\f(CWg\fR" 4
.IX Item g
.PD
该符号位于小对象的初始化数据部分中。 一些目标文件格式允许更有效地访问小数据对象，例如全局 int 变量而不是大全局数组。
.ie  n .IP """i""" 4
.el .IP "\f(CWi\fR" 4
.IX Item i
对于 \s-1PE\s0 格式文件，这表示该符号位于特定于 DLL 实现的部分中。
.Sp
对于 \s-1ELF\s0 格式文件，这表示该符号是一个间接函数。 这是对标准 \s-1ELF\s0 符号类型集的 \s-1GNU\s0 扩展。
它指示一个符号，如果重定位引用该符号，则该符号不会计算为其地址，而是必须在运行时调用。 然后运行时执行将返回要在重定位中使用的值。
.Sp
注意 \- \s-1GNU\s0 间接符号的实际符号显示由 \fB\-\-ifunc\-chars\fP 命令行选项控制。
如果已提供此选项，则字符串中的第一个字符将用于全局间接函数符号。 如果字符串包含第二个字符，则该字符将用于本地间接函数符号。
.ie  n .IP """I""" 4
.el .IP "\f(CWI\fR" 4
.IX Item I
该符号是对另一个符号的间接引用。
.ie  n .IP """N""" 4
.el .IP "\f(CWN\fR" 4
.IX Item N
该符号是调试符号。
.ie  n .IP """n""" 4
.el .IP "\f(CWn\fR" 4
.IX Item n
该符号位于只读数据部分。
.ie  n .IP """p""" 4
.el .IP "\f(CWp\fR" 4
.IX Item p
该符号位于栈展开部分。
.ie  n .IP """R""" 4
.el .IP "\f(CWR\fR" 4
.IX Item R
.PD 0
.ie  n .IP """r""" 4
.el .IP "\f(CWr\fR" 4
.IX Item r
.PD
该符号位于只读数据部分。
.ie  n .IP """S""" 4
.el .IP "\f(CWS\fR" 4
.IX Item S
.PD 0
.ie  n .IP """s""" 4
.el .IP "\f(CWs\fR" 4
.IX Item s
.PD
该符号位于小对象的未初始化或零初始化数据部分中。
.ie  n .IP """T""" 4
.el .IP "\f(CWT\fR" 4
.IX Item T
.PD 0
.ie  n .IP """t""" 4
.el .IP "\f(CWt\fR" 4
.IX Item t
.PD
该符号位于文本 (code) 部分。
.ie  n .IP """U""" 4
.el .IP "\f(CWU\fR" 4
.IX Item U
该符号未定义。
.ie  n .IP """u""" 4
.el .IP "\f(CWu\fR" 4
.IX Item u
该符号是一个独特的全局符号。 这是对标准 \s-1ELF\s0 符号绑定集的 \s-1GNU\s0 扩展。
对于这样一个符号，动态链接器将确保在整个过程中只有一个具有该名称和类型的符号在使用中。
.ie  n .IP """V""" 4
.el .IP "\f(CWV\fR" 4
.IX Item V
.PD 0
.ie  n .IP """v""" 4
.el .IP "\f(CWv\fR" 4
.IX Item v
.PD
该符号是一个弱对象。 当弱定义符号与普通定义符号链接时，正常定义符号将被正确使用。
当一个未定义的弱符号被链接并且该符号未被定义时，弱符号的值变为零而没有错误。 在某些系统上，大写表示已指定默认值。
.ie  n .IP """W""" 4
.el .IP "\f(CWW\fR" 4
.IX Item W
.PD 0
.ie  n .IP """w""" 4
.el .IP "\f(CWw\fR" 4
.IX Item w
.PD
该符号是一个弱符号，没有被特别标记为弱对象符号。 当弱定义符号与普通定义符号链接时，正常定义符号将被正确使用。
当弱未定义符号被链接且符号未定义时，符号的值以系统特定的方式确定而不会出错。 在某些系统上，大写表示已指定默认值。
.ie  n .IP """\-""" 4
.el .IP "\f(CW\-\fR" 4
.IX Item \-
该符号是 a.out 目标文件中的一个 stabs 符号。 在这种情况下，打印的下一个值是 stabs other 字段、stabs desc 字段和
stab 类型。 Stabs 符号用于保存调试信息。
.ie  n .IP """?""" 4
.el .IP "\f(CW?\fR" 4
.IX Item ?
符号类型未知，或目标文件格式特定。
.RE
.RS 4
.RE
.IP \(bu 4
符号名称。 如果符号具有与其相关联的版本信息，那么也会显示版本信息。 如果版本化符号未定义或对链接器隐藏，则版本字符串显示为符号名称的后缀，前面有一个
@字符。 例如 \&\fBfoo@VER_1\fP。 如果版本是将未版本化的引用解析为符号时使用的默认版本，则它显示为前面有两个 @字符的后缀。 例如
\fBfoo@@VER_2\fP。
.SH OPTIONS
.IX Header OPTIONS
选项的长格式和短格式，在这里显示为可选项，是等价的。
.IP \fB\-A\fP 4
.IX Item \-A
.PD 0
.IP \fB\-o\fP 4
.IX Item \-o
.IP \fB\-\-print\-file\-name\fP 4
.IX Item \-\-print\-file\-name
.PD
在每个符号之前加上在其中找到它的输入文件 (或存档成员) 的名称，而不是在所有符号之前仅标识一次输入文件。
.IP \fB\-a\fP 4
.IX Item \-a
.PD 0
.IP \fB\-\-debug\-syms\fP 4
.IX Item \-\-debug\-syms
.PD
显示所有符号，甚至是调试器专用符号; 通常这些都没有列出。
.IP \fB\-B\fP 4
.IX Item \-B
与 \fB\-\-format=bsd\fP 相同 (为了与 \s-1MIPS\s0 \fBnm\fP) 兼容。
.IP \fB\-C\fP 4
.IX Item \-C
.PD 0
.IP \fB\-\-demangle[=\fP\fIstyle\fP\fB]\fP 4
.IX Item \-\-demangle[=style]
.PD
将 (\fIdemangle\fP) 底层符号名称解码为用户级名称。 除了删除系统前置的任何初始下划线外，这还使 \*(C +
函数名称可读。不同的编译器有不同的修饰风格。可选的 demangling style 参数可用于为您的编译器选择合适的 demangling 样式。
.IP \fB\-\-no\-demangle\fP 4
.IX Item \-\-no\-demangle
不要破坏底层符号名称。 这是默认设置。
.IP \fB\-\-recurse\-limit\fP 4
.IX Item \-\-recurse\-limit
.PD 0
.IP \fB\-\-no\-recurse\-limit\fP 4
.IX Item \-\-no\-recurse\-limit
.IP \fB\-\-recursion\-limit\fP 4
.IX Item \-\-recursion\-limit
.IP \fB\-\-no\-recursion\-limit\fP 4
.IX Item \-\-no\-recursion\-limit
.PD
启用或禁用对 demangling 字符串时执行的递归数量的限制。
由于名称修改格式允许无限级别的递归，因此可以创建字符串，其解码将耗尽主机上可用的栈空间量，从而触发内存错误。 该限制试图通过将递归限制为 2048
层嵌套来防止这种情况发生。
.Sp
默认情况下启用此限制，但可能需要禁用它才能分解真正复杂的名称。 但是请注意，如果禁用递归限制，则可能会耗尽栈，并且将拒绝有关此类事件的任何错误报告。
.IP \fB\-D\fP 4
.IX Item \-D
.PD 0
.IP \fB\-\-dynamic\fP 4
.IX Item \-\-dynamic
.PD
显示动态符号而不是普通符号。 这仅对动态对象有意义，例如某些类型的共享库。
.IP "\fB\-f\fP \fIformat\fP" 4
.IX Item "\-f format"
.PD 0
.IP \fB\-\-format=\fP\fIformat\fP 4
.IX Item \-\-format=format
.PD
使用输出格式 \fIformat\fP，可以是
\f(CW\*(C`bsd\*(C'\fP、\&\f(CW\*(C`sysv\*(C'\fP、\f(CW\*(C`posix\*(C'\fP 或
\f(CW\*(C`just\-symbols\*(C'\fP。 默认为 \f(CW\*(C`bsd\*(C'\fP。 只有 \fIformat\fP 的第一个字符是有意义的;
它可以是大写或小写。
.IP \fB\-g\fP 4
.IX Item \-g
.PD 0
.IP \fB\-\-extern\-only\fP 4
.IX Item \-\-extern\-only
.PD
仅显示外部符号。
.IP \fB\-h\fP 4
.IX Item \-h
.PD 0
.IP \fB\-\-help\fP 4
.IX Item \-\-help
.PD
显示 \fBnm\fP 选项的总结并退出。
.IP \fB\-\-ifunc\-chars=\fP\fI\s-1CHARS\s0\fP 4
.IX Item \-\-ifunc\-chars=CHARS
当显示 \s-1GNU\s0 间接函数符号时，\fBnm\fP 将默认使用 \f(CW\*(C`i\*(C'\fP 字符作为局部间接函数和全局间接函数。
\fB\-\-ifunc\-chars\fP 选项允许用户指定包含一个或两个字符的字符串。第一个字符将用于全局间接函数符号，第二个字符 (如果存在)
将用于局部间接函数符号。
.IP \fBj\fP 4
.IX Item j
与 \fB\-\-format=just\-symbols\fP 相同。
.IP \fB\-l\fP 4
.IX Item \-l
.PD 0
.IP \fB\-\-line\-numbers\fP 4
.IX Item \-\-line\-numbers
.PD
对于每个符号，使用调试信息尝试找到文件名和行号。 对于定义的符号，查找符号地址的行号。 对于未定义的符号，查找引用该符号的重定位条目的行号。
如果可以找到行号信息，则在其他符号信息之后打印。
.IP \fB\-\-inlines\fP 4
.IX Item \-\-inlines
When option \fB\-l\fP is active, if the address belongs to a 函数 that was
inlined, then this option causes the source information for all enclosing
作用域 back to the first non\-inlined 函数 to be printed as well.  例如，如果
\f(CW\*(C`main\*(C'\fP 内联 \&\f(CW\*(C`callee1\*(C'\fP，\&\f(CW\*(C`callee1\*(C'\fP 内联
\f(CW\*(C`callee2\*(C'\fP，地址来自 \&\f(CW\*(C`callee2\*(C'\fP，则 \f(CW\*(C`callee1\*(C'\fP 和
\f(CW\*(C`main\*(C'\fP 的源信息也会被打印出来。
.IP \fB\-n\fP 4
.IX Item \-n
.PD 0
.IP \fB\-v\fP 4
.IX Item \-v
.IP \fB\-\-numeric\-sort\fP 4
.IX Item \-\-numeric\-sort
.PD
按地址对符号进行数字排序，而不是按名称字母顺序排序。
.IP \fB\-p\fP 4
.IX Item \-p
.PD 0
.IP \fB\-\-no\-sort\fP 4
.IX Item \-\-no\-sort
.PD
不要费心按任何顺序对符号进行排序; 按遇到的顺序打印它们。
.IP \fB\-P\fP 4
.IX Item \-P
.PD 0
.IP \fB\-\-portability\fP 4
.IX Item \-\-portability
.PD
使用 \s-1POSIX.2\s0 标准输出格式而不是默认格式。 相当于 \fB\-f posix\fP。
.IP \fB\-r\fP 4
.IX Item \-r
.PD 0
.IP \fB\-\-reverse\-sort\fP 4
.IX Item \-\-reverse\-sort
.PD
颠倒排序顺序 (无论是数字还是字母) ; 让最后的先来。
.IP \fB\-S\fP 4
.IX Item \-S
.PD 0
.IP \fB\-\-print\-size\fP 4
.IX Item \-\-print\-size
.PD
为 \f(CW\*(C`bsd\*(C'\fP 输出样式打印已定义符号的值和大小。 此选项对不记录符号大小的对象格式没有影响，除非同时使用
\fB\-\-size\-sort\fP，在这种情况下会显示计算的大小。
.IP \fB\-s\fP 4
.IX Item \-s
.PD 0
.IP \fB\-\-print\-armap\fP 4
.IX Item \-\-print\-armap
.PD
当列出档案成员的符号时，包括索引: 一个映射 (按 \fBar\fP 或 \fBranlib\fP) 存储在档案中，其中模块包含哪些名称的定义。
.IP "\fB\-t\fP \fIradix\fP" 4
.IX Item "\-t radix"
.PD 0
.IP \fB\-\-radix=\fP\fIradix\fP 4
.IX Item \-\-radix=radix
.PD
使用 \fIradix\fP 作为打印符号值的基数。 十进制必须是 \&\fBd\fP，八进制必须是 \fBo\fP，十六进制必须是 \fBx\fP。
.IP \fB\-u\fP 4
.IX Item \-u
.PD 0
.IP \fB\-\-undefined\-only\fP 4
.IX Item \-\-undefined\-only
.PD
仅显示未定义的符号 (每个目标文件外部的符号)。 默认情况下，会显示已定义和未定义的符号。
.IP \fB\-U\fP 4
.IX Item \-U
.PD 0
.IP \fB\-\-defined\-only\fP 4
.IX Item \-\-defined\-only
.PD
仅显示每个目标文件的已定义符号。 默认情况下，会显示已定义和未定义的符号。
.IP \fB\-V\fP 4
.IX Item \-V
.PD 0
.IP \fB\-\-version\fP 4
.IX Item \-\-version
.PD
显示 \fBnm\fP 的版本号并退出。
.IP \fB\-X\fP 4
.IX Item \-X
为了与 \&\fBnm\fP 的 \s-1AIX\s0 版本兼容，忽略此选项。 它有一个参数，必须是字符串 \&\fB32_64\fP。 \s-1AIX\s0
\fBnm\fP 默认模式对应 \fB\-X 32\fP，\s-1GNU\s0 \fBnm\fP 不支持。
.IP "\fB\-\-plugin\fP \fIname\fP" 4
.IX Item "\-\-plugin name"
加载名为 \fIname\fP 的插件以添加对额外目标类型的支持。 只有在启用插件支持的情况下构建工具链时，此选项才可用。
.Sp
如果未提供 \fB\-\-plugin\fP，但已启用插件支持，则 \fBnm\fP 将按字母顺序遍历 \&\fI${libdir}/bfd\-plugins\fP
中的文件，并使用声明相关对象的第一个插件。
.Sp
请注意，此插件搜索目录是 \fInot\fP，\fBld\fP's \fB\-plugin\fP 选项使用的目录。 为了使 \&\fBnm\fP 使用链接器插件，必须将其复制到
\&\fI${libdir}/bfd\-plugins\fP 目录中。 对于基于 \s-1GCC\s0 的编译，链接器插件称为
\fIliblto_plugin.so.0.0.0\fP。 对于基于 Clang 的编译，它被称为 \fILLVMgold.so\fP。 \s-1GCC\s0
插件始终向后兼容早期版本，因此只需复制最新版本即可。
.IP \fB\-\-size\-sort\fP 4
.IX Item \-\-size\-sort
按大小对符号进行排序。 对于 \s-1ELF\s0 对象，符号大小从 \&\s-1ELF 读取，对于其他对象类型，\s0
符号大小计算为符号值与具有下一个较高值的符号值之间的差值。 如果使用 \f(CW\*(C`bsd\*(C'\fP
输出格式，则打印符号的大小而不是值，并且必须使用 \&\fB\-S\fP 才能打印大小和值。
.Sp
注意 \- 如果 \fB\-\-undefined\-only\fP 已启用，则此选项不起作用，因为未定义的符号没有大小。
.IP \fB\-\-special\-syms\fP 4
.IX Item \-\-special\-syms
显示具有目标特定特殊含义的符号。 这些符号通常由目标用于某些特殊处理，并且在包含在正常符号列表中时通常没有帮助。 例如，对于 \s-1ARM\s0
目标，此选项将跳过用于标记 \s-1ARM\s0 代码、\s-1THUMB\s0 代码和数据之间转换的映射符号。
.IP \fB\-\-synthetic\fP 4
.IX Item \-\-synthetic
在输出中包含合成符号。 这些是链接器为各种目的创建的特殊符号。 默认情况下不显示它们，因为它们不是二进制文件原始源代码的一部分。
.IP \fB\-\-unicode=\fP\fI[default|invalid|locale|escape|hex|highlight]\fP 4
.IX Item \-\-unicode=[default|invalid|locale|escape|hex|highlight]
控制 \s-1UTF\-8\s0 编码的多字节字符在字符串中的显示。 默认的 (\fB\-\-unicode=default\fP) 是不对它们进行特殊处理。
\fB\-\-unicode=locale\fP 选项在当前语言环境中显示序列，该语言环境可能支持也可能不支持它们。 选项 \&\fB\-\-unicode=hex\fP
和 \fB\-\-unicode=invalid\fP 将它们显示为用尖括号或花括号括起来的十六进制字节序列。
.Sp
\fB\-\-unicode=escape\fP 选项将它们显示为转义序列 (\fI\euxxxx\fP)，\fB\-\-unicode=highlight\fP
选项将它们显示为以红色突出显示的转义序列 (如果输出设备支持)。 着色旨在引起人们注意可能不希望出现的 unicode 序列。
.IP \fB\-W\fP 4
.IX Item \-W
.PD 0
.IP \fB\-\-no\-weak\fP 4
.IX Item \-\-no\-weak
.PD
不要显示弱符号。
.IP \fB\-\-with\-symbol\-versions\fP 4
.IX Item \-\-with\-symbol\-versions
.PD 0
.IP \fB\-\-without\-symbol\-versions\fP 4
.IX Item \-\-without\-symbol\-versions
.PD
启用或禁用符号版本信息的显示。 版本字符串显示为符号名称的后缀，前面有一个 @字符。 例如 \fBfoo@VER_1\fP。
如果该版本是在将未版本化的引用解析为符号时使用的默认版本，则它显示为前面有两个 @字符的后缀。 例如 \fBfoo@@VER_2\fP。
默认情况下，显示符号版本信息。
.IP \fB\-\-target=\fP\fIbfdname\fP 4
.IX Item \-\-target=bfdname
指定一种目标代码格式，而不是您系统的默认格式。
.IP \fB@\fP\fIfile\fP 4
.IX Item @file
从 \fIfile\fP 读取命令行选项。 读取的选项插入到原始 @\fIfile\fP 选项的位置。 如果 \fIfile\fP
不存在或无法读取，则该选项将按字面意思处理，而不是删除。
.Sp
\fIfile\fP 中的选项由空格分隔。 通过用单引号或双引号将整个选项括起来，可以将空白字符包含在选项中。 任何字符 (包括反斜杠)
都可以通过在要包含的字符前加上反斜杠来包含。 \fIfile\fP 本身可能包含额外的 @\fIfile\fP 选项; 任何此类选项都将递归处理。
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBar\fP\|(1)、\fBobjdump\fP\|(1)、\fBranlib\fP\|(1) 和信息条目 \fIbinutils\fP.
.SH COPYRIGHT
.IX Header COPYRIGHT
Copyright (c) 1991\-2023 Free Software Foundation, Inc.
.PP
根据 \s-1GNU\s0 自由文档许可证版本 1.3 或自由软件基金会发布的任何更高版本的条款，授予复制、分发或者修改本文档的权限;
没有不变的部分，没有封面文本，也没有封底文本。 该许可证的副本包含在标题为 \*(L"\s-1GNU\s0 Free Documentation
License\*(R") 的部分中。
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
