.\" -*- coding: UTF-8 -*-
'\" t
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH SYSTEMD\-ID128 1 "" "systemd 253" systemd\-id128
.ie  \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH NAME
systemd\-id128 \- 生成并打印 sd\-128 标识符
.SH SYNOPSIS
.HP \w'\fBsystemd\-id128\fR\ 'u
\fBsystemd\-id128\fP [OPTIONS...] 全新
.HP \w'\fBsystemd\-id128\fR\ 'u
\fBsystemd\-id128\fP [OPTIONS...] 机器 ID
.HP \w'\fBsystemd\-id128\fR\ 'u
\fBsystemd\-id128\fP [OPTIONS...] 引导标识
.HP \w'\fBsystemd\-id128\fR\ 'u
\fBsystemd\-id128\fP [OPTIONS...] 调用 \- id
.SH DESCRIPTION
.PP
\fBid128\fP 可用于方便地打印 \fBsd\-id128\fP(3) UUID\&。打印什么标识符取决于特定的动词 \&。
.PP
使用 \fBnew\fP，将生成一个新的随机标识符 \&。
.PP
使用 \fBmachine\-id\fP，将打印当前机器的标识符 \&。请参见 \fBmachine\-id\fP(5)\&。
.PP
使用 \fBboot\-id\fP，将打印当前引导的标识符 \&。
.PP
\fBmachine\-id\fP 和 \fBboot\-id\fP 都可以与 \fB\-\-app\-specific=\fP\fIapp\-id\fP 开关组合以生成特定于应用程序的
ID\&。请参见 \fBsd_id128_get_machine\fP(3) 以了解何时有用 \& 的讨论。
.PP
使用 \fBinvocation\-id\fP，将打印当前服务调用的标识符 \&。这在 systemd 服务 \& 中可用。请参见
\fBsystemd.exec\fP(5)\&。
.PP
使用 \fBshow\fP，打印出众所周知的 ID (目前，仅 GPT 分区类型 UUID)，以及简短的标识符字符串 \&。当没有指定参数时，显示所有已知的
ID\&。当指定参数时，它们必须是一个或多个已知 ID 的标识符或 ID 值，然后打印 \&。结合 \fB\-\-uuid\fP 以 UUID 样式列出
ID，i\&.e\&。GPT 分区类型 UUID 通常显示的方式 \&。
.SH OPTIONS
.PP
理解以下选项:
.PP
\fB\-p\fP, \fB\-\-pretty\fP
.RS 4
将输出生成为编程语言片段 \&。
.RE
.PP
\fB\-a \fP\fIapp\-id\fP, \fB\-\-app\-specific=\fP\fIapp\-id\fP
.RS 4
使用此选项，将打印应用程序标识符 \fIapp\-id\fP 和机器标识符的散列结果标识符 \&。\fIapp\-id\fP 参数必须是识别应用程序 \& 的有效
sd\-id128 字符串。
.RE
.PP
\fB\-u\fP, \fB\-\-uuid\fP
.RS 4
将输出生成为 "canonical representation" 格式的 UUID，其中五组数字由连字符 \& 分隔。有关更多讨论，请参见
\m[blue]\fBwikipedia\fP\m[]\&\s-2\u[1]\d\s+2\&。
.RE
.PP
\fB\-h\fP, \fB\-\-help\fP
.RS 4
打印一个简短的帮助文本并退出 \&。
.RE
.PP
\fB\-\-version\fP
.RS 4
打印一个短版本字符串并退出 \&。
.RE
.SH "EXIT STATUS"
.PP
成功时返回 0，否则返回非零失败代码 \&。
.SH "SEE ALSO"
.PP
\fBsystemd\fP(1), \fBsd\-id128\fP(3), \fBsd_id128_get_machine\fP(3)
.SH NOTES
.IP " 1." 4
wikipedia
.RS 4
\%https://en.wikipedia.org/wiki/Universally_unique_identifier#Format
.RE
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
