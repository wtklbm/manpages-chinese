.\" -*- coding: UTF-8 -*-
'\" t
.\"     Title: hexdump
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.15
.\"      Date: 2022-05-11
.\"    Manual: User Commands
.\"    Source: util-linux 2.38.1
.\"  Language: English
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH HEXDUMP 1 2022\-05\-11 "util\-linux 2.38.1" "User Commands"
.ie  \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de  URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if  \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH NAME
hexdump \- 以十六进制、十进制、八进制或 ascii 显示文件内容
.sp
\fBhexdump\fP \fIoptions file\fP  ...
.sp
\fBhd\fP \fIoptions file\fP  ...
.SH DESCRIPTION
.sp
\fBhexdump\fP 实用程序是一个过滤器，它以用户指定的格式显示指定的文件或标准输入 (如果未指定文件)。
.SH OPTIONS
.sp
下面，\fIlength\fP 和 \fIoffset\fP 参数后面可以跟乘数后缀 KiB (=1024)，MiB (=1024*1024)，依此类推
GiB，TiB，PiB，EiB，ZiB 和 YiB ("iB" 是可选的，例如，"K" 与 "KiB" 具有相同的含义)，或
GB、TB、PB、EB、ZB 和 YB 的后缀 KB (=1000)、MB (=1000*1000) 等。
.sp
\fB\-b\fP, \fB\-\-one\-byte\-octal\fP
.RS 4
\fIOne\-byte octal display\fP.  以十六进制显示输入偏移量，后跟十六个空格分隔的三列零填充字节的输入数据，以八进制显示，每行。
.RE
.sp
\fB\-c\fP, \fB\-\-one\-byte\-char\fP
.RS 4
\fIOne\-byte character display\fP.  以十六进制显示输入偏移量，后跟每行输入数据的十六个空格分隔的三列空格填充字符。
.RE
.sp
\fB\-C\fP, \fB\-\-canonical\fP
.RS 4
\fICanonical hex+ASCII display\fP.  以十六进制显示输入偏移量，后跟十六个空格分隔的两列十六进制字节，再后跟 \fB|\fP
字符中包含的 \fB%_p\fP 格式的相同十六个字节。将程序作为 \fBhd\fP 调用意味着此选项。
.RE
.sp
\fB\-d\fP, \fB\-\-two\-bytes\-decimal\fP
.RS 4
\fITwo\-byte decimal display\fP.
以十六进制显示输入偏移量，后跟每行八个空格分隔、五列、零填充、两字节输入数据单元，以无符号十进制表示。
.RE
.sp
\fB\-e\fP, \fB\-\-format\fP \fIformat_string\fP
.RS 4
指定用于显示数据的格式字符串。
.RE
.sp
\fB\-f\fP, \fB\-\-format\-file\fP \fIfile\fP
.RS 4
指定包含一个或多个换行符分隔的格式字符串的文件。空行和第一个非空白字符是哈希标记 (#) 的行将被忽略。
.RE
.sp
\fB\-L\fP, \fB\-\-color\fP[=\fIwhen\fP]
.RS 4
接受输出的颜色单位。可选参数 \fIwhen\fP 可以是 \fBauto\fP、\fBnever\fP 或 \fBalways\fP。如果省略 \fIwhen\fP 参数，则默认为
\fBauto\fP。可以禁用颜色; 对于当前的内置默认值，请参见 \fB\-\-help\fP 输出。另请参见下面的 \fBColors\fP 小节和 \fBCOLORS\fP
小节。
.RE
.sp
\fB\-n\fP, \fB\-\-length\fP \fIlength\fP
.RS 4
仅解释 \fIlength\fP 字节的输入。
.RE
.sp
\fB\-o\fP, \fB\-\-two\-bytes\-octal\fP
.RS 4
\fITwo\-byte octal display\fP.  以十六进制显示输入偏移量，后跟每行以八进制显示八个空格分隔、六列、零填充、两字节的输入数据量。
.RE
.sp
\fB\-s\fP, \fB\-\-skip\fP \fIoffset\fP
.RS 4
从输入的开头跳过 \fIoffset\fP 个字节。
.RE
.sp
\fB\-v\fP, \fB\-\-no\-squeezing\fP
.RS 4
\fB\-v\fP 选项使 \fBhexdump\fP 显示所有输入数据。如果没有 \fB\-v\fP 选项，任何数量的与前一组输出行相同的输出行组 (输入偏移除外)
将被替换为由单个星号组成的行。
.RE
.sp
\fB\-x\fP, \fB\-\-two\-bytes\-hex\fP
.RS 4
\fITwo\-byte hexadecimal display\fP.
以十六进制显示输入偏移量，后跟每行八个以空格分隔、四列、零填充、两字节的输入数据量，以十六进制显示。
.RE
.sp
\fB\-h\fP, \fB\-\-help\fP
.RS 4
显示帮助文本并退出。
.RE
.sp
\fB\-V\fP, \fB\-\-version\fP
.RS 4
打印版本并退出。
.RE
.sp
对于每个输入文件，\fBhexdump\fP 按顺序将输入复制到标准输出，根据 \fB\-e\fP 和 \fB\-f\fP 选项指定的格式字符串按指定的顺序转换数据。
.SH FORMATS
.sp
格式字符串包含任意数量的格式单元，以空格分隔。一个格式元最多包含三个项: 迭代次数、字节数和格式。
.sp
迭代计数是一个可选的正整数，默认为 1。每种格式被应用迭代计数次。
.sp
字节数是一个可选的正整数。如果指定，它定义格式的每次迭代要解释的字节数。
.sp
如果指定了迭代计数或者字节计数，则必须在迭代计数之后或者字节计数之前放置一个斜杠以消除它们的歧义。忽略斜杠前后的任何空格。
.sp
格式是必需的，并且必须用双引号 (" ") 括起来。它被解释为 fprintf 样式的格式字符串 (请参见
\fBfprintf\fP(3))，但有以下例外情况:
.sp
1.
.RS 4
星号 (*) 不能用作字段宽度或精度。
.RE
.sp
2.
.RS 4
每个 \fBs\fP 转换字符所需的字节数或字段精度 \fIis\fP (与 \fBfprintf\fP(3) 默认值不同，如果未指定精度，则打印整个字符串)。
.RE
.sp
3.
.RS 4
不支持转换字符 \fBh\fP、\fBl\fP、\fBn\fP、\fBp\fP 和 \fBq\fP。
.RE
.sp
4.
.RS 4
支持 C 标准中描述的单字符转义序列:
.RE
.RS 3
.ll -.6i
.TS
allbox tab(:);
lt lt.
T{
.sp
NULL
T}:T{
.sp
\(rs0
T}
T{
.sp
<alert character>
T}:T{
.sp
\(rsa
T}
T{
.sp
<backspace>
T}:T{
.sp
\(rsb
T}
T{
.sp
<form\-feed>
T}:T{
.sp
\(rsf
T}
T{
.sp
<newline>
T}:T{
.sp
\(rsn
T}
T{
.sp
<carriage return>
T}:T{
.sp
\(rsr
T}
T{
.sp
<tab>
T}:T{
.sp
\(rst
T}
T{
.sp
<vertical tab>
T}:T{
.sp
\(rsv
T}
.TE
.sp
.br
.RE
.ll
.SS "Conversion strings"
.sp
\fBhexdump\fP 实用程序还支持以下附加转换字符串。
.sp
\fB_a[dox]\fP
.RS 4
显示要显示的下一个字节的输入偏移量，跨输入文件累积。追加，字符 \fBd\fP、\fBo\fP 和 \fBx\fP 分别指定显示基数为十进制、八进制或十六进制。
.RE
.sp
\fB_A[dox]\fP
.RS 4
几乎与 \fB_a\fP 转换字符串相同，只是它仅在处理完所有输入数据时执行一次。
.RE
.sp
\fB_c\fP
.RS 4
输出默认字符集中的字符。非打印字符以三个字符、零填充的八进制显示，除了那些可以用标准转义符号 (见上文) 表示的字符外，它们显示为两个字符的字符串。
.RE
.sp
\fB_p\fP
.RS 4
输出默认字符集中的字符。非打印字符显示为单个 \(aq\fB.\fP\(aq。
.RE
.sp
\fB_u\fP
.RS 4
输出 US ASCII 字符，但使用以下小写名称显示的控制字符除外。大于 0xff，十六进制的字符，显示为十六进制字符串。
.RE
.RS 3
.ll -.6i
.TS
allbox tab(:);
lt lt lt lt lt lt.
T{
.sp
000 nul
T}:T{
.sp
001 soh
T}:T{
.sp
002 stx
T}:T{
.sp
003 etx
T}:T{
.sp
004 eot
T}:T{
.sp
005 enq
T}
T{
.sp
006 ack
T}:T{
.sp
007 bel
T}:T{
.sp
008 bs
T}:T{
.sp
009 ht
T}:T{
.sp
00A lf
T}:T{
.sp
00B vt
T}
T{
.sp
00C ff
T}:T{
.sp
00D cr
T}:T{
.sp
00E so
T}:T{
.sp
00F si
T}:T{
.sp
010 dle
T}:T{
.sp
011 dc1
T}
T{
.sp
012 dc2
T}:T{
.sp
013 dc3
T}:T{
.sp
014 dc4
T}:T{
.sp
015 nak
T}:T{
.sp
016 syn
T}:T{
.sp
017 etb
T}
T{
.sp
018 can
T}:T{
.sp
019 em
T}:T{
.sp
01A sub
T}:T{
.sp
01B esc
T}:T{
.sp
01C fs
T}:T{
.sp
01D gs
T}
T{
.sp
01E rs
T}:T{
.sp
01F us
T}:T{
.sp
0FF del
T}:T{
.sp

T}:T{
.sp

T}:T{
.sp

T}
.TE
.sp
.br
.RE
.ll
.SS Colors
.sp
当放在格式说明符的末尾时，\fBhexdump\fP 使用指定的颜色突出显示相应的字符串。条件 (如果存在) 在突出显示之前进行评估。
.sp
\fB_L[color_unit_1,color_unit_2,...,color_unit_n]\fP
.sp
颜色元的完整语法如下:
.sp
\fB[!]COLOR[:VALUE][@OFFSET_START[\-END]]\fP
.sp
\fB!\fP
.RS 4
否定条件。请注意，如果同时指定了 value/string 和偏移量，则否定元才有意义。在这种情况下，当且仅当 value/string
与偏移量不匹配时，相应的输出字符串才会突出显示。
.RE
.sp
\fBCOLOR\fP
.RS 4
8 种基本 shell 颜色之一。
.RE
.sp
\fBVALUE\fP
.RS 4
以十六进制、八进制为基数或作为字符串指定的要匹配的值。请注意，通常的 C 转义序列不会被 color_units 中的 \fBhexdump\fP 解释。
.RE
.sp
\fBOFFSET\fP
.RS 4
检查匹配的偏移量或偏移量范围。请注意，单独的 OFFSET_START 使用与 END 偏移量相同的值。
.RE
.SS Counters
.sp
转换字符的默认和支持的字节数如下:
.sp
\fB%_c\fP, \fB%_p\fP, \fB%_u\fP, \fB%c\fP
.RS 4
仅一个字节计数。
.RE
.sp
\fB%d\fP, \fB%i\fP, \fB%o\fP, \fB%u\fP, \fB%X\fP, \fB%x\fP
.RS 4
默认为四字节，支持一、二和四字节计数。
.RE
.sp
\fB%E\fP, \fB%e\fP, \fB%f\fP, \fB%G\fP, \fB%g\fP
.RS 4
默认八字节，支持四字节计数。
.RE
.sp
每个格式字符串解释的数据量是每个格式所需数据的总和元，它是迭代次数乘以字节数，如果字节数不是，则迭代次数乘以格式所需的字节数指定的。
.sp
输入在 \fIblocks\fP 中进行操作，其中块定义为任何格式字符串指定的最大数据量。格式字符串解释小于输入块 \(cqs
数据，其最后格式元都解释一些字节数并且没有指定的迭代计数，迭代计数递增直到整个输入块被处理或者有块中没有足够的数据来满足格式字符串。
.sp
如果作为用户指定或 \fBhexdump\fP 如上所述修改迭代计数的结果，迭代计数大于 1，则在最后一次迭代期间不会输出尾随空白字符。
.sp
指定字节计数以及多个转换字符或字符串是错误的，除非除了一个转换字符或字符串之外的所有转换字符或字符串都是 \fB_a\fP 或 \fB_A\fP。
.sp
如果由于指定 \fB\-n\fP 选项或到达文件末尾，输入数据仅部分满足格式字符串，则输入块将被充分零填充以显示所有可用数据
(即，任何格式单元重叠数据的末尾将显示一些零字节)。
.sp
此类格式字符串的进一步输出将替换为等效数量的空格。等效的空格数定义为与原始转换字符或转换字符串具有相同字段宽度和精度但删除了任何
\(aq\fB+\fP\(aq、\(aq\(aq、\(aq\fB#\fP\(aq 转换标志字符的 \fBs\fP 转换字符输出的空格数，并引用 NULL 字符串。
.sp
如果未指定格式字符串，则默认显示与 \fB\-x\fP 输出格式非常相似 (\fB\-x\fP 选项导致格式单元之间使用的空间比默认输出中多)。
.SH "EXIT STATUS"
.sp
\fBhexdump\fP 在成功时退出 0，如果发生错误则 > 0。
.SH "CONFORMING TO"
.sp
\fBhexdump\fP 实用程序预计与 IEEE Std 1003.2 ("POSIX.2") 兼容。
.SH EXAMPLES
.sp
以阅读格式显示输入:
.sp
.if  n .RS 4
.nf
.fam C
   "%06.6_ao "  12/1 "%3_u "
   "\(rst" "%_p "
   "\(rsn"
.fam
.fi
.if  n .RE
.sp
实现 \fB\-x\fP 选项:
.sp
.if  n .RS 4
.nf
.fam C
   "%07.7_Ax\(rsn"
   "%07.7_ax  " 8/2 "%04x " "\(rsn"
.fam
.fi
.if  n .RE
.sp
MBR 引导签名示例: 如果值为 0xAA55，则将地址青色和偏移量 510 和 511 处的字节突出显示为绿色，否则为红色。
.sp
.if  n .RS 4
.nf
.fam C
   "%07.7_Ax_L[cyan]\(rsn"
   "%07.7_ax_L[cyan]  " 8/2 "   %04x_L[green:0xAA55@510\-511,!red:0xAA55@510\-511] " "\(rsn"
.fam
.fi
.if  n .RE
.SH COLORS
.sp
输出着色由 \fBterminal\-colors.d\fP(5) 功能实现。 空文件可以禁用隐式着色
.RS 3
.ll -.6i
.sp
\fI/etc/terminal\-colors.d/hexdump.disable\fP
.br
.RE
.ll
.sp
对于 \fBhexdump\fP 命令或对于所有工具
.RS 3
.ll -.6i
.sp
\fI/etc/terminal\-colors.d/disable\fP
.br
.RE
.ll
.sp
用户特定的 \fI$XDG_CONFIG_HOME/terminal\-colors.d\fP 或
\fI$HOME/.config/terminal\-colors.d\fP 覆盖全局设置。
.sp
请注意，输出着色可能默认启用，在这种情况下，\fIterminal\-colors.d\fP 目录还不必存在。
.SH "REPORTING BUGS"
.sp
对于错误报告，请使用问题跟踪器
.URL https://github.com/util\-linux/util\-linux/issues "" .
.SH AVAILABILITY
.sp
\fBhexdump\fP 命令是 util\-linux 包的一部分，可以从
.URL https://www.kernel.org/pub/linux/utils/util\-linux/ "Linux Kernel Archive" .
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
