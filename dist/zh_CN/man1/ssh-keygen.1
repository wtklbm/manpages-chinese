.\" -*- coding: UTF-8 -*-
.\"	$OpenBSD: ssh-keygen.1,v 1.226 2022/09/10 08:50:53 jsg Exp $
.\"
.\" Author: Tatu Ylonen <ylo@cs.hut.fi>
.\" Copyright (c) 1995 Tatu Ylonen <ylo@cs.hut.fi>, Espoo, Finland
.\"                    All rights reserved
.\"
.\" As far as I am concerned, the code I have written for this software
.\" can be used freely for any purpose.  Any derived versions of this
.\" software must be clearly marked as such, and if the derived work is
.\" incompatible with the protocol description in the RFC file, it must be
.\" called by a name other than "ssh" or "Secure Shell".
.\"
.\"
.\" Copyright (c) 1999,2000 Markus Friedl.  All rights reserved.
.\" Copyright (c) 1999 Aaron Campbell.  All rights reserved.
.\" Copyright (c) 1999 Theo de Raadt.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.Dd $Mdocdate: September 10 2022 $
.Dt SSH-KEYGEN 1
.Os
.Sh NAME
.Nm ssh-keygen
.Nd OpenSSH authentication key utility
.Sh SYNOPSIS
.Nm ssh-keygen
.Op Fl q
.Op Fl a Ar rounds
.Op Fl b Ar bits
.Op Fl C Ar comment
.Op Fl f Ar output_keyfile
.Op Fl m Ar format
.Op Fl N Ar new_passphrase
.Op Fl O Ar option
.Op Fl t Cm dsa | ecdsa | ecdsa-sk | ed25519 | ed25519-sk | rsa
.Op Fl w Ar provider
.Op Fl Z Ar cipher
.Nm ssh-keygen
.Fl p
.Op Fl a Ar rounds
.Op Fl f Ar keyfile
.Op Fl m Ar format
.Op Fl N Ar new_passphrase
.Op Fl P Ar old_passphrase
.Op Fl Z Ar cipher
.Nm ssh-keygen
.Fl i
.Op Fl f Ar input_keyfile
.Op Fl m Ar key_format
.Nm ssh-keygen
.Fl e
.Op Fl f Ar input_keyfile
.Op Fl m Ar key_format
.Nm ssh-keygen
.Fl y
.Op Fl f Ar input_keyfile
.Nm ssh-keygen
.Fl c
.Op Fl a Ar rounds
.Op Fl C Ar comment
.Op Fl f Ar keyfile
.Op Fl P Ar passphrase
.Nm ssh-keygen
.Fl l
.Op Fl v
.Op Fl E Ar fingerprint_hash
.Op Fl f Ar input_keyfile
.Nm ssh-keygen
.Fl B
.Op Fl f Ar input_keyfile
.Nm ssh-keygen
.Fl D Ar pkcs11
.Nm ssh-keygen
.Fl F Ar hostname
.Op Fl lv
.Op Fl f Ar known_hosts_file
.Nm ssh-keygen
.Fl H
.Op Fl f Ar known_hosts_file
.Nm ssh-keygen
.Fl K
.Op Fl a Ar rounds
.Op Fl w Ar provider
.Nm ssh-keygen
.Fl R Ar hostname
.Op Fl f Ar known_hosts_file
.Nm ssh-keygen
.Fl r Ar hostname
.Op Fl g
.Op Fl f Ar input_keyfile
.Nm ssh-keygen
.Fl M Cm generate
.Op Fl O Ar option
.Ar output_file
.Nm ssh-keygen
.Fl M Cm screen
.Op Fl f Ar input_file
.Op Fl O Ar option
.Ar output_file
.Nm ssh-keygen
.Fl I Ar certificate_identity
.Fl s Ar ca_key
.Op Fl hU
.Op Fl D Ar pkcs11_provider
.Op Fl n Ar principals
.Op Fl O Ar option
.Op Fl V Ar validity_interval
.Op Fl z Ar serial_number
.Ar
.Nm ssh-keygen
.Fl L
.Op Fl f Ar input_keyfile
.Nm ssh-keygen
.Fl A
.Op Fl a Ar rounds
.Op Fl f Ar prefix_path
.Nm ssh-keygen
.Fl k
.Fl f Ar krl_file
.Op Fl u
.Op Fl s Ar ca_public
.Op Fl z Ar version_number
.Ar
.Nm ssh-keygen
.Fl Q
.Op Fl l
.Fl f Ar krl_file
.Ar
.Nm ssh-keygen
.Fl Y Cm find-principals
.Op Fl O Ar option
.Fl s Ar signature_file
.Fl f Ar allowed_signers_file
.Nm ssh-keygen
.Fl Y Cm match-principals
.Fl I Ar signer_identity
.Fl f Ar allowed_signers_file
.Nm ssh-keygen
.Fl Y Cm check-novalidate
.Op Fl O Ar option
.Fl n Ar namespace
.Fl s Ar signature_file
.Nm ssh-keygen
.Fl Y Cm sign
.Op Fl O Ar option
.Fl f Ar key_file
.Fl n Ar namespace
.Ar
.Nm ssh-keygen
.Fl Y Cm verify
.Op Fl O Ar option
.Fl f Ar allowed_signers_file
.Fl I Ar signer_identity
.Fl n Ar namespace
.Fl s Ar signature_file
.Op Fl r Ar revocation_file
.Sh DESCRIPTION
.Nm
为
.Xr ssh 1
生成、管理和转换身份验证密钥。
.Nm
可以创建密钥供 SSH 协议版本使用 2.
.Pp
要生成的密钥类型由
.Fl t
选项指定。 如果在没有任何参数的情况下调用，
.Nm
将生成一个 RSA 密钥。
.Pp
.Nm
还用于生成用于 Diffie-Hellman 组交换 (DH-GEX) 的组。 有关详细信息，请参见
.Sx MODULI GENERATION
部分。
.Pp
最后，
.Nm
可用于生成和更新密钥撤销列表，并测试给定的密钥是否已被一个人撤销。 有关详细信息，请参见
.Sx KEY REVOCATION LISTS
部分。
.Pp
通常每个希望使用带有公钥身份验证的 SSH 的用户都会运行一次以在
.Pa ~/.ssh/id_dsa
、
.Pa ~/.ssh/id_ecdsa
、
.Pa ~/.ssh/id_ecdsa_sk
、
.Pa ~/.ssh/id_ed25519
、
.Pa ~/.ssh/id_ed25519_sk
或
.Pa ~/.ssh/id_rsa
中创建身份验证密钥。
此外，系统管理员可以使用它来生成主机密钥，如
.Pa /etc/rc
所示。
.Pp
通常，此程序会生成密钥并要求提供一个文件来存储私钥。 公钥存储在同名但，追加，了
.Dq .pub
的文件中。 该程序还要求输入密码。
密码可以为空以指示没有密码 (主机密钥必须有一个空密码)，或者它可以是任意长度的字符串。
通行短语类似于密码，不同之处在于它可以是包含一系列单词、标点符号、数字、空格或任何您想要的字符串的短语。 好的密码短语是 10-30
个字符长，不是简单的句子或容易猜到的 (英语散文每个字符只有 1-2
位的熵，并且提供非常糟糕的密码短语)，并且包含大小写字母、数字和非字母数字的混合人物。 稍后可以使用
.Fl p
选项更改密码。
.Pp
无法恢复丢失的密码。 如果密码短语丢失或忘记，则必须生成新密钥并将相应的公钥复制到其他机器。
.Pp
.Nm
将默认以特定于 OpenSSH 的格式写入密钥。 这种格式是首选，因为它为静态密钥提供更好的保护，并允许在私钥文件本身中存储密钥注释。
密钥注释可能有助于识别密钥。 创建密钥时，注释被初始化为
.Dq user@host
，但可以使用
.Fl c
选项进行更改。
.Pp
.Nm
仍然可以使用
.Fl m
标志写入以前使用的 PEM 格式私钥。 这可以在生成新密钥时使用，并且可以使用此选项与
.Fl p
(更改密码) 标志一起转换现有的新格式密钥。
.Pp
生成密钥后，
.Nm
将询问密钥应放置在何处才能激活。
.Pp
选项如下:
.Bl -tag -width Ds
.It Fl A
生成所有默认密钥类型 (rsa、ecdsa 和 ed25519) 的主机密钥 (如果它们尚不存在)。
主机密钥是使用默认密钥文件路径、空密码、密钥类型的默认位和默认注释生成的。 如果还指定了
.Fl f
，则其参数用作生成的主机密钥文件的默认路径的前缀。
.Pa /etc/rc
使用它来生成新的主机密钥。
.It Fl a Ar rounds
保存私钥时，此选项指定 KDF (密钥推导函数，目前使用
.Xr bcrypt_pbkdf 3 )
轮次。
较高的数字会导致密码短语验证速度变慢，并增加对暴力密码破解的抵抗力 (如果密钥被盗)。 默认为 16 轮。
.It Fl B
显示指定私钥或公钥文件的 bubblebabble 摘要。
.It Fl b Ar bits
指定要创建的密钥中的位数。 对于 RSA 密钥，最小大小为 1024 位，默认为 3072 位。 通常，3072 位被认为是足够的。 DSA
密钥必须恰好是 FIPS 186-2 指定的 1024 位。 对于 ECDSA 密钥，
.Fl b
标志通过选择三种椭圆曲线大小之一来确定密钥长度:
256、384 或 521 位。 尝试使用 ECDSA 密钥的这三个值以外的位长度将失败。 ECDSA-SK、Ed25519 和 Ed25519-SK
密钥具有固定长度，
.Fl b
标志将被忽略。
.It Fl C Ar comment
提供新评论。
.It Fl c
请求更改私钥和公钥文件中的注释。 该程序将提示输入包含私钥的文件，如果密钥有密码，则提示输入密码，并提示输入新注释。
.It Fl D Ar pkcs11
下载 PKCS#11 共享库
.Ar pkcs11
提供的公钥。 当与
.Fl s
结合使用时，此选项表示 CA 密钥驻留在 PKCS#11
token 中 (有关详细信息，请参见
.Sx CERTIFICATES
部分)。
.It Fl E Ar fingerprint_hash
指定显示密钥指纹时使用的哈希算法。 有效选项是:
.Dq md5
和
.Dq sha256
。 默认为
.Dq sha256
。
.It Fl e
此选项将读取私有或公共 OpenSSH 密钥文件，并以
.Fl m
选项指定的格式之一将公钥打印到 stdout。 默认导出格式为
.Dq RFC4716
。 此选项允许导出 OpenSSH 密钥以供其他程序使用，包括几个商业 SSH 实现。
.It Fl F Ar hostname | [hostname]:port
在
.Pa known_hosts
文件中搜索指定的
.Ar hostname
(带有可选端口号)，列出找到的所有匹配项。
此选项可用于查找散列主机名或地址，也可与
.Fl H
选项结合使用以散列格式打印找到的键。
.It Fl f Ar filename
指定密钥文件的文件名。
.It Fl g
使用
.Fl r
命令打印指纹资源记录时使用泛型 DNS 格式。
.It Fl H
散列
.Pa known_hosts
文件。 这会用指定文件中的散列表示替换所有主机名和地址; 原始内容被移动到后缀为 .old 的文件中。
.Nm ssh
和
.Nm sshd
可以正常使用这些哈希值，但如果文件内容被泄露，它们不会泄露识别信息。
此选项不会修改现有的散列主机名，因此可以安全地用于混合散列名称和非散列名称的文件。
.It Fl h
签署密钥时，创建主机证书而不是用户证书。 有关详细信息，请参见
.Sx CERTIFICATES
部分。
.It Fl I Ar certificate_identity
签署公钥时指定密钥标识。 有关详细信息，请参见
.Sx CERTIFICATES
部分。
.It Fl i
该选项将以
.Fl m
选项指定的格式读取未加密的私钥 (或公钥) 文件，并将 OpenSSH 兼容的私钥 (或公钥) 打印到 stdout。
此选项允许从其他软件导入密钥，包括几个商业 SSH 实现。 默认导入格式为
.Dq RFC4716
。
.It Fl K
从 FIDO 验证器下载常驻密钥。 公钥和私钥文件将写入每个下载密钥的当前目录。 如果附加了多个 FIDO 验证器，将从第一个接触的验证器下载密钥。
有关详细信息，请参见
.Sx FIDO AUTHENTICATOR
部分。
.It Fl k
生成 KRL 文件。 在此模式下，
.Nm
将在通过
.Fl f
标志指定的位置生成一个 KRL
文件，该标志会撤销命令行上显示的每个密钥或证书。 要撤销的 Keys/certificates 可以通过公钥文件指定或使用
.Sx KEY REVOCATION LISTS
部分中描述的格式指定。
.It Fl L
打印一个或多个证书的内容。
.It Fl l
显示指定公钥文件的指纹。 对于 RSA 和 DSA 密钥，
.Nm
尝试找到匹配的公钥文件并打印其指纹。 如果与
.Fl v
组合，则密钥的视觉 ASCII 艺术表示与指纹一起提供。
.It Fl M Cm generate
生成候选 Diffie-Hellman Group Exchange (DH-GEX) 参数，供
.Sq diffie-hellman-group-exchange-*
密钥交换方法最终使用。 此操作生成的号码在使用前必须进一步筛选。 有关详细信息，请参见
.Sx MODULI GENERATION
部分。
.It Fl M Cm screen
Diffie-Hellman Group Exchange 的屏幕候选参数。 这将接受一个候选数字列表并测试它们是否是安全的 (Sophie
Germain) 具有可接受组生成器的素数。 此操作的结果可能会添加到
.Pa /etc/ssh/moduli
文件中。 有关详细信息，请参见
.Sx MODULI GENERATION
部分。
.It Fl m Ar key_format
指定密钥生成的密钥格式、
.Fl i
(import)、
.Fl e
(export) 转换选项和
.Fl p
更改密码操作。
后者可用于在 OpenSSH 私钥和 PEM 私钥格式之间进行转换。 支持的密钥格式有:
.Dq RFC4716
(RFC 4716/SSH2
公钥或私钥)、
.Dq PKCS8
(PKCS8 公钥或私钥) 或
.Dq PEM
(PEM 公钥)。 默认情况下，OpenSSH
将以自己的格式写入新生成的私钥，但在转换公钥以进行导出时，默认格式为
.Dq RFC4716
。 在生成或更新受支持的私钥类型时设置
.Dq PEM
格式将导致密钥以旧版 PEM 私钥格式存储。
.It Fl N Ar new_passphrase
提供新密码。
.It Fl n Ar principals
指定一个或多个委托人 (用户名或主机名) 在签署密钥时包含在证书中。 可以指定多个主体，以逗号分隔。 有关详细信息，请参见
.Sx CERTIFICATES
部分。
.It Fl O Ar option
指定 key/value 选项。 这些特定于已请求
.Nm
执行的操作。
.Pp
签署证书时，可以在此处指定
.Sx CERTIFICATES
部分中列出的选项之一。
.Pp
执行模数生成或筛选时，可以指定
.Sx MODULI GENERATION
部分中列出的选项之一。
.Pp
生成 FIDO 验证器支持的密钥时，可以指定
.Sx FIDO AUTHENTICATOR
部分中列出的选项。
.Pp
使用
.Fl Y
标志执行与签名相关的选项时，接受以下选项:
.Bl -tag -width Ds
.It Cm hashalg Ns = Ns Ar algorithm
选择用于散列要签名的消息的散列算法。 有效算法为
.Dq sha256
和
.Dq sha512.
默认为
.Dq sha512.
.It Cm print-pubkey
签名验证后将完整的公钥打印到标准输出。
.It Cm verify-time Ns = Ns Ar timestamp
指定验证签名时使用的时间而不是当前时间。 时间可以指定为 YYYYMMDD[Z] 或 YYYYMMDDHHMM [SS][Z] 格式的日期或时间。
日期和时间将在当前系统时区中解释，除非以 Z 字符为后缀，这会导致它们在 UTC 时区中解释。
.El
.Pp
.Fl O
选项可以指定多次。
.It Fl P Ar passphrase
提供 (old) 密码。
.It Fl p
请求更改私钥文件的密码而不是创建新的私钥。 该程序将提示输入包含私钥的文件、旧密码和两次新密码。
.It Fl Q
测试 KRL 中的密钥是否已被撤销。 如果还指定了
.Fl l
选项，则将打印 KRL 的内容。
.It Fl q
沉默
.Nm ssh-keygen
。
.It Fl R Ar hostname | [hostname]:port
从
.Pa known_hosts
文件中删除属于指定
.Ar hostname
(带有可选端口号) 的所有密钥。
此选项对于删除散列主机很有用 (请参见上面的
.Fl H
选项)。
.It Fl r Ar hostname
打印指定公钥文件名为
.Ar hostname
的 SSHFP 指纹资源记录。
.It Fl s Ar ca_key
使用指定的 CA 密钥证明 (sign) 为公钥。 有关详细信息，请参见
.Sx CERTIFICATES
部分。
.Pp
生成 KRL 时，
.Fl s
指定 CA 公钥文件的路径，用于直接通过密钥 ID 或序列号吊销证书。 有关详细信息，请参见
.Sx KEY REVOCATION LISTS
部分。
.It Fl t Cm dsa | ecdsa | ecdsa-sk | ed25519 | ed25519-sk | rsa
指定要创建的密钥类型。 可能的值为
.Dq dsa
、
.Dq ecdsa
、
.Dq ecdsa-sk
、
.Dq ed25519
、
.Dq ed25519-sk
或
.Dq rsa
。
.Pp
在使用 RSA CA 密钥签署证书时，此标志还可用于指定所需的签名类型。 可用的 RSA 签名变体是
.Dq ssh-rsa
(SHA1
签名，不推荐)、
.Dq rsa-sha2-256
和
.Dq rsa-sha2-512
(默认)。
.It Fl U
当与
.Fl s
或
.Fl Y Cm sign
结合使用时，此选项表示 CA 密钥驻留在
.Xr ssh-agent 1
中。
有关详细信息，请参见
.Sx CERTIFICATES
部分。
.It Fl u
更新 KRL。 当使用
.Fl k
指定时，通过命令行列出的密钥将添加到现有 KRL，而不是创建新的 KRL。
.It Fl V Ar validity_interval
签署证书时指定有效期。 有效期可以由一个时间组成，表示证书从现在开始有效，到那时到期，或者可以由两个用冒号分隔的时间组成，以表示明确的时间间隔。
.Pp
开始时间可以指定为:
.Bl -bullet -compact
.It 
字符串
.Dq always
表示证书没有指定的开始时间。
.It 
系统时区中的日期或时间，格式为 YYYYMMDD 或 YYYYMMDDHHMM [SS]。
.It 
UTC 时区中的日期或时间，如 YYYYMMDDZ 或 YYYYMMDDHHMM [SS] Z。
.It 
当前系统时间之前的相对时间，由一个减号后跟一个时间间隔组成，格式在
.Xr sshd_config 5
的时间格式部分中描述。
.It 
自纪元 (1970 年 1 月 1 日 00:00:00 UTC) 以来的原始秒数，以
.Dq 0x
开头的十六进制数。
.El
.Pp
可以像开始时间一样指定结束时间:
.Bl -bullet -compact
.It 
表示证书没有指定结束时间的字符串
.Dq forever
。
.It 
系统时区中的日期或时间，格式为 YYYYMMDD 或 YYYYMMDDHHMM [SS]。
.It 
UTC 时区中的日期或时间，如 YYYYMMDDZ 或 YYYYMMDDHHMM [SS] Z。
.It 
当前系统时间之后的相对时间，由一个加号和一个时间间隔组成，格式在
.Xr sshd_config 5
的时间格式部分中描述。
.It 
自纪元 (1970 年 1 月 1 日 00:00:00 UTC) 以来的原始秒数，以
.Dq 0x
开头的十六进制数。
.El
.Pp
例如:
.Bl -tag -width Ds
.It +52w1d
从现在起有效期为 52 周零一天。
.It -4w:+4w
从四个星期前到现在四个星期后有效。
.It 20100101123000:20110101123000
有效期为 2010 年 1 月 1 日中午 12:30 至 2011 年 1 月 1 日中午 12:30。
.It 20100101123000Z:20110101123000Z
类似，但在 UTC 时区而不是系统时区中解释。
.It -1d:20110101
从昨天到 2011 年 1 月 1 日午夜有效。
.It 0x1:0x2000000000
大约从 1970 年初到 2033 年 5 月有效。
.It -1m:forever
从一分钟前开始有效，永不过期。
.El
.It Fl v
详细模式。 导致
.Nm
打印有关其进度的调试消息。 这有助于调试模数生成。 多个
.Fl v
选项会增加冗长程度。 最大值是 3.
.It Fl w Ar provider
指定创建 FIDO 身份验证器托管密钥时将使用的库的路径，覆盖使用内部 USB HID 支持的默认值。
.It Fl Y Cm find-principals
在使用
.Fl f
标志提供的授权签名者文件中使用
.Fl s
标志找到与签名公钥关联的 principal(s)。
允许的签名者文件的格式记录在下面的
.Sx ALLOWED SIGNERS
部分中。 如果找到一个或多个匹配主体，它们将在标准输出中返回。
.It Fl Y Cm match-principals
在使用
.Fl f
标志指定的授权签名者文件中查找与使用
.Fl I
标志提供的主体名称匹配的主体。
如果找到一个或多个匹配主体，它们将在标准输出中返回。
.It Fl Y Cm check-novalidate
检查使用
.Nm
.Fl Y Cm sign
生成的签名是否具有有效结构体。 这不会验证签名是否来自授权签名者。 当测试签名时，
.Nm
接受标准输入上的消息和使用
.Fl n
的签名命名空间。 还必须使用
.Fl s
标志提供包含相应签名的文件。
.Nm
返回零退出状态表示签名测试成功。
.It Fl Y Cm sign
使用 SSH 密钥对文件或某些数据进行加密签名。 签名时，
.Nm
接受零个或多个文件在命令行上签名 - 如果未指定文件，则
.Nm
将对标准输入上显示的数据进行签名。 签名将写入输入文件的路径并，追加
.Dq .sig
，或者如果要签名的消息是从标准输入读取的，则签名将写入标准输出。
.Pp
用于签名的密钥使用
.Fl f
选项指定，可以指私钥或公钥，私钥的一半可通过
.Xr ssh-agent 1
获得。 必须通过
.Fl n
标志提供额外的签名命名空间，用于防止不同使用域之间的签名混淆 (例如文件签名与电子邮件签名)。 命名空间是任意字符串，可能包括:
.Dq file
用于文件签名，
.Dq email
用于电子邮件签名。 对于自定义用途，建议使用遵循 NAMESPACE@YOUR.DOMAIN
模式的名称来生成明确的命名空间。
.It Fl Y Cm verify
请求验证使用
.Nm
.Fl Y Cm sign
生成的签名，如上所述。 验证签名时，
.Nm
接受标准输入上的消息和使用
.Fl n
的签名命名空间。 还必须使用
.Fl s
标志提供包含相应签名的文件，以及使用
.Fl I
的签名者身份和通过
.Fl f
标志提供的允许签名者列表。 允许的签名者文件的格式记录在下面的
.Sx ALLOWED SIGNERS
部分中。 可以使用
.Fl r
标志传递包含已撤销密钥的文件。 撤销文件可以是 KRL 或每行一个公钥列表。
.Nm
返回零退出状态表示授权签名者的成功验证。
.It Fl y
此选项将读取私有 OpenSSH 格式文件并将 OpenSSH 公钥打印到 stdout。
.It Fl Z Ar cipher
指定在编写 OpenSSH 格式的私钥文件时用于加密的密码。 可以使用
.Qq ssh -Q cipher
获得可用密码列表。 默认为
.Dq aes256-ctr
。
.It Fl z Ar serial_number
指定要嵌入证书中的序列号，以将此证书与来自同一 CA 的其他证书区分开来。如果
.Ar serial_number
以
.Sq +
字符为前缀，则序列号将针对在单个命令行上签名的每个证书递增。 默认序列号为零。
.Pp
生成 KRL 时，
.Fl z
标志用于指定 KRL 版本号。
.El
.Sh MODULI GENERATION
.Nm
可用于为 Diffie-Hellman Group Exchange (DH-GEX) 协议生成组。 生成这些组是一个两步过程:
首先，使用快速但内存密集型过程生成候选素数。 然后测试这些候选素数的适用性 (CPU 密集型过程)。
.Pp
使用
.Fl M Cm generate
选项生成素数。 所需的素数长度可由
.Fl O Cm bits
选项指定。 例如:
.Pp
.Dl # ssh-keygen -M generate -O bits=2048 moduli-2048.candidates
.Pp
默认情况下，素数搜索从所需长度范围内的随机点开始。 这可以使用
.Fl O Cm start
选项覆盖，该选项指定不同的起点 (十六进制)。
.Pp
一旦生成了一组候选者，就必须筛选他们的适用性。 这可以使用
.Fl M Cm screen
选项执行。 在这种模式下，
.Nm
将从标准输入
(或使用
.Fl f
选项指定的文件) 中读取候选项。 例如:
.Pp
.Dl # ssh-keygen -M screen -f moduli-2048.candidates moduli-2048
.Pp
默认情况下，每个候选人将接受 100 次素数测试。 这可以使用
.Fl O Cm prime-tests
选项覆盖。 DH
生成器值将自动为所考虑的素数选择。 如果需要特定的生成器，可以使用
.Fl O Cm generator
选项请求。 有效的生成器值为 2、3 和
5.
.Pp
屏蔽的 DH 组可以安装在
.Pa /etc/ssh/moduli
中。 重要的是该文件包含一系列位长度的模数。
.Pp
通过
.Fl O
标志，有许多选项可用于模数生成和筛选:
.Bl -tag -width Ds
.It Ic lines Ns = Ns Ar number
在进行 DH 候选筛选的同时筛选指定行数后退出。
.It Ic start-line Ns = Ns Ar line-number
在执行 DH 候选人筛选时，从指定的行号开始筛选。
.It Ic checkpoint Ns = Ns Ar filename
在执行 DH 候选筛选时，将最后处理的行写入指定文件。 如果作业重新启动，这将用于跳过输入文件中已处理的行。
.It Ic memory Ns = Ns Ar mbytes
指定为 DH-GEX 生成候选模数时要使用的内存量 (以兆字节为单位)。
.It Ic start Ns = Ns Ar hex-value
为 DH-GEX 生成候选模数时指定起点 (十六进制)。
.It Ic generator Ns = Ns Ar value
测试 DH-GEX 的候选模数时指定所需的生成器 (十进制)。
.El
.Sh CERTIFICATES
.Nm
支持密钥签名以生成可用于用户或主机身份验证的证书。 证书由公钥、一些身份信息、零个或多个主体 (用户或主机) 名称以及一组由证书颁发机构
(CA) 密钥签名的选项组成。 然后，客户端或服务器可能只信任 CA 密钥并验证其在证书上的签名，而不是信任许多 user/host 密钥。 请注意，与
.Xr ssl 8
中使用的 X.509 证书相比，OpenSSH 证书格式不同且简单得多。
.Pp
.Nm
支持两种类型的证书: 用户和主机。 用户证书向服务器验证用户，而主机证书向用户验证服务器主机。 要生成用户证书:
.Pp
.Dl $ ssh-keygen -s /path/to/ca_key -I key_id /path/to/user_key.pub
.Pp
生成的证书将放在
.Pa /path/to/user_key-cert.pub
中。 主机证书需要
.Fl h
选项:
.Pp
.Dl $ ssh-keygen -s /path/to/ca_key -I key_id -h /path/to/host_key.pub
.Pp
主机证书将输出到
.Pa /path/to/host_key-cert.pub
。
.Pp
可以使用存储在 PKCS#11 token 中的 CA 密钥进行签名，方法是使用
.Fl D
提供 token
库，并通过将其公共部分作为参数提供给
.Fl s :
来识别 CA 密钥
.Pp
.Dl $ ssh-keygen -s ca_key.pub -D libpkcs11.so -I key_id user_key.pub
.Pp
同样，CA 密钥也可以托管在
.Xr ssh-agent 1
中。 这由
.Fl U
标志指示，并且 CA 密钥必须由其公共部分再次标识。
.Pp
.Dl $ ssh-keygen -Us ca_key.pub -I key_id user_key.pub
.Pp
在所有情况下，
.Ar key_id
都是在使用证书进行身份验证时由服务器记录的 "key identifier"。
.Pp
证书可能仅限于对一组主体 (user/host) 名称有效。 默认情况下，生成的证书对所有用户或主机都有效。 为指定的一组主体生成证书:
.Pp
.Dl $ ssh-keygen -s ca_key -I key_id -n user1,user2 user_key.pub
.Dl "$ ssh-keygen -s ca_key -I key_id -h -n host.domain host_key.pub"
.Pp
可以通过证书选项指定对用户证书的有效性和使用的附加限制。 证书选项可能会禁用 SSH
会话的特性可能仅在从特定源地址出现时才有效，或者可能会强制使用特定命令。
.Pp
对用户证书有效的选项是:
.Pp
.Bl -tag -width Ds -compact
.It Ic clear
清除所有启用的权限。 这对于清除默认权限集很有用，因此可以单独添加权限。
.Pp
.It Ic critical : Ns Ar name Ns Op Ns = Ns Ar contents
.It Ic extension : Ns Ar name Ns Op Ns = Ns Ar contents
包括任意证书关键选项或扩展。 指定的
.Ar name
应包括域后缀，例如 \&
.Dq name@example.com
。 如果指定
.Ar contents
，则将其包含为编码为字符串的 extension/option 的内容，否则将创建没有内容的
extension/option (通常表示标志)。 扩展可能会被不识别它们的客户端或服务器忽略，而未知的关键选项将导致证书被拒绝。
.Pp
.It Ic force-command Ns = Ns Ar command
当证书用于身份验证时，强制执行
.Ar command
而不是任何 shell 或用户指定的命令。
.Pp
.It Ic no-agent-forwarding
禁用
.Xr ssh-agent 1
转发 (默认允许)。
.Pp
.It Ic no-port-forwarding
禁用端口转发 (默认允许)。
.Pp
.It Ic no-pty
禁用 PTY 分配 (默认允许)。
.Pp
.It Ic no-user-rc
禁止
.Xr sshd 8
执行
.Pa ~/.ssh/rc
(默认允许)。
.Pp
.It Ic no-x11-forwarding
禁用 X11 转发 (默认允许)。
.Pp
.It Ic permit-agent-forwarding
允许
.Xr ssh-agent 1
转发。
.Pp
.It Ic permit-port-forwarding
允许端口转发。
.Pp
.It Ic permit-pty
允许 PTY 分配。
.Pp
.It Ic permit-user-rc
允许
.Xr sshd 8
执行
.Pa ~/.ssh/rc
。
.Pp
.It Ic permit-X11-forwarding
允许 X11 转发。
.Pp
.It Ic no-touch-required
不要求使用此密钥进行的签名包括用户存在的证明 (例如，让用户触摸验证器)。 此选项仅对 FIDO 验证器算法
.Cm ecdsa-sk
和
.Cm ed25519-sk
有意义。
.Pp
.It Ic source-address Ns = Ns Ar address_list
限制证书被认为有效的源地址。
.Ar address_list
是一个或多个 CIDR 格式的 address/netmask 对的逗号分隔列表。
.Pp
.It Ic verify-required
Require signatures made using this key 表明用户首先被验证。 此选项仅对 FIDO 验证器算法
.Cm ecdsa-sk
和
.Cm ed25519-sk
有意义。 目前 PIN 身份验证是唯一支持的验证方法，但 future 可能会支持其他方法。
.El
.Pp
目前，没有标准选项对主机密钥有效。
.Pp
最后，证书可以定义为有效期生命周期。
.Fl V
选项允许指定证书开始和结束时间。 在此范围之外的时间出示的证书将被视为无效。 默认情况下，证书从
.Ux
Epoch 到遥远的 future 有效。
.Pp
对于用于用户或主机身份验证的证书，CA 公钥必须受
.Xr sshd 8
或
.Xr ssh 1
信任。 有关详细信息，请参见这些手册页。
.Sh FIDO AUTHENTICATOR
.Nm
能够生成 FIDO 验证器支持的密钥，之后它们可以像 OpenSSH 支持的任何其他密钥类型一样使用，只要在使用密钥时附加硬件验证器即可。
FIDO 验证器通常要求用户通过触摸或点击来明确授权操作。 FIDO 密钥由两部分组成:
存储在磁盘上的私钥文件中的密钥句柄部分，以及每个设备的私钥，该私钥对于每个 FIDO 验证器都是唯一的，并且不能从验证器硬件中导出。
这些在身份验证时由硬件组合以派生用于签署身份验证挑战的真实密钥。 支持的密钥类型是
.Cm ecdsa-sk
和
.Cm ed25519-sk
。
.Pp
对 FIDO 密钥有效的选项是:
.Bl -tag -width Ds
.It Cm application
覆盖
.Dq ssh:
的默认 FIDO application/origin 字符串。 这在生成主机或域特定的驻留密钥时可能很有用。
指定的应用程序字符串必须以
.Dq ssh:
开头。
.It Cm challenge Ns = Ns Ar path
指定将在密钥生成期间传递给 FIDO 身份验证器的质询字符串的路径。 挑战字符串可以用作密钥注册的带外协议的一部分 (默认情况下使用随机挑战)。
.It Cm device
明确指定要使用的
.Xr fido 4
设备，而不是让验证器中间件选择一个。
.It Cm no-touch-required
指示生成的私钥在进行签名时不应要求触摸事件 (用户存在)。 请注意，
.Xr sshd 8
将默认拒绝此类签名，除非通过
authorized_keys 选项覆盖。
.It Cm resident
指示密钥句柄应存储在 FIDO 身份验证器本身上。 这使得在多台计算机上使用身份验证器变得更加容易。 FIDO2
验证器可能支持驻留密钥，并且通常需要在生成之前在验证器上设置 PIN。 可以使用
.Xr ssh-add 1
从身份验证器加载驻留密钥。
将密钥的两个部分都存储在 FIDO 身份验证器上会增加攻击者使用被盗身份验证器设备的可能性。
.It Cm user
与常驻密钥相关联的用户名，覆盖空的默认用户名。 为同一应用程序名称生成多个驻留密钥时，指定用户名可能很有用。
.It Cm verify-required
指示此私钥应要求用户对每个签名进行验证。 并非所有 FIDO 身份验证器都支持此选项。 目前 PIN 身份验证是唯一支持的验证方法，但 future
可能会支持其他方法。
.It Cm write-attestation Ns = Ns Ar path
可在密钥生成时使用，以记录在密钥生成期间从 FIDO 身份验证器返回的证明数据。 此信息可能很敏感。 默认情况下，该信息被丢弃。
.El
.Sh KEY REVOCATION LISTS
.Nm
能够管理 OpenSSH 格式的密钥撤销列表 (KRLs)。
这些二进制文件使用紧凑格式指定要吊销的密钥或证书，如果它们是通过序列号吊销的，则每个证书只需占用一位。
.Pp
可以使用
.Fl k
标志生成 KRL。 该选项从命令行读取一个或多个文件并生成一个新的 KRL。 这些文件可能包含 KRL 规范 (见下文)
或公钥，每行列出一个。 通过在 KRL 中列出其散列或内容来撤销普通公钥，并通过序列号或密钥 ID (如果序列号为零或不可用) 撤销证书。
.Pp
使用 KRL 规范的撤销密钥提供了对用于撤销密钥的记录类型的明确控制，并且可用于通过序列号或密钥 ID 直接撤销证书，而无需手头有完整的原始证书。
KRL 规范由包含以下指令之一的行组成，后跟冒号和一些特定于指令的信息。
.Bl -tag -width Ds
.It Cm serial : Ar serial_number Ns Op - Ns Ar serial_number
吊销具有指定序列号的证书。 序列号是 64 位值，不包括零，可以用十进制、十六进制或八进制表示。
如果指定的两个序列号之间用连字符分隔，则取消包括每个序列号和每个序列号之间的序列号范围。 必须使用
.Fl s
选项在
.Nm
命令行上指定
CA 密钥。
.It Cm id : Ar key_id
吊销具有指定密钥 ID 字符串的证书。 必须使用
.Fl s
选项在
.Nm
命令行上指定 CA 密钥。
.It Cm key : Ar public_key
撤销指定的密钥。 如果列出了证书，则将其作为普通公钥撤销。
.It Cm sha1 : Ar public_key
通过在 KRL 中包含其 SHA1 散列来撤销指定的密钥。
.It Cm sha256 : Ar public_key
通过在 KRL 中包含其 SHA256 哈希来撤销指定的密钥。 7.9 之前的 OpenSSH 版本不支持通过 SHA256 散列撤销密钥的 KRL。
.It Cm hash : Ar fingerprint
使用从
.Xr sshd 8
身份验证日志消息或
.Nm
.Fl l
标志中获得的指纹哈希来撤销密钥。 此处仅支持 SHA256
指纹，7.9 之前的 OpenSSH 版本不支持由此产生的 KRL。
.El
.Pp
除了
.Fl k
之外，还可以使用
.Fl u
标志更新 KRL。 指定此选项后，通过命令行列出的键将合并到 KRL
中，添加到已经存在的键中。
.Pp
给定一个 KRL，也可以测试它是否撤销了一个 (或多个) 特定密钥。
.Fl Q
标志将查询现有的 KRL，测试命令行上指定的每个键。
如果命令行上列出的任何键已被撤销 (或遇到错误)，则
.Nm
将以非零退出状态退出。 只有在没有密钥被撤销的情况下才会返回零退出状态。
.Sh ALLOWED SIGNERS
在验证签名时，
.Nm
使用一个简单的身份和密钥列表来确定签名是否来自授权来源。 此 "allowed signers" 文件使用的格式仿照
.Xr sshd 8
中描述的 AUTHORIZED_KEYS 文件格式。 文件的每一行都包含以下以空格分隔的字段:
principals、options、keytype、base64-encoded key。 空行和以
.Ql #
开头的行将被忽略为注释。
.Pp
principals 字段是一个模式列表 (请参见
.Xr ssh_config 5 )
中的 PATTERNS，由一个或多个逗号分隔的
USER@DOMAIN 身份模式组成，这些模式被接受用于签名。 验证时，通过
.Fl I
选项提供的身份必须匹配主体模式，以便相应的密钥被认为可以接受验证。
.Pp
选项 (如果存在) 由逗号分隔的选项规范组成。 不允许有空格，双引号内除外。 支持以下选项规范 (请注意选项关键字不区分大小写) :
.Bl -tag -width Ds
.It Cm cert-authority
表示此密钥已被接受为证书颁发机构 (CA)，并且可以接受此 CA 签名的证书以进行验证。
.It Cm namespaces Ns = Ns namespace-list
指定为此键接受的名称空间的模式列表。
如果存在此选项，则嵌入在签名对象中并出现在验证命令行中的签名命名空间必须与指定的列表匹配，然后密钥才会被认为是可接受的。
.It Cm valid-after Ns = Ns timestamp
指示密钥在指定时间戳或之后有效使用，该时间戳可以是 YYYYMMDD[Z] 或 YYYYMMDDHHMM [SS][Z] 格式的日期或时间。
日期和时间将在当前系统时区中解释，除非以 Z 字符为后缀，这会导致它们在 UTC 时区中解释。
.It Cm valid-before Ns = Ns timestamp
指示密钥在指定时间戳或之前有效使用。
.El
.Pp
验证证书签名时，预期的委托人名称必须与允许的签名者文件中的委托人模式和证书本身中嵌入的委托人相匹配。
.Pp
允许的签名者文件示例:
.Bd -literal -offset 3n
# 行首允许注释
user1@example.com,user2@example.com ssh-rsa AAAAX1...
# 证书颁发机构，受域中所有主体的信任。
*@example.com 证书颁发机构 ssh-ed25519 AAAB4...
# 仅用于文件签名的密钥。
user2@example.com 命名空间 =`文件`ssh-ed25519 AAA41...
.Ed
.Sh ENVIRONMENT
.Bl -tag -width Ds
.It Ev SSH_SK_PROVIDER
指定加载任何 FIDO 身份验证器托管密钥时将使用的库的路径，覆盖使用内置 USB HID 支持的默认值。
.El
.Sh FILES
.Bl -tag -width Ds -compact
.It Pa ~/.ssh/id_dsa
.It Pa ~/.ssh/id_ecdsa
.It Pa ~/.ssh/id_ecdsa_sk
.It Pa ~/.ssh/id_ed25519
.It Pa ~/.ssh/id_ed25519_sk
.It Pa ~/.ssh/id_rsa
包含用户的 DSA、ECDSA、身份验证器托管的 ECDSA、Ed25519、身份验证器托管的 Ed25519 或 RSA 身份验证身份。
除用户外，任何人都不应读取此文件。 生成密钥时可以指定密码; 该密码将用于使用 128 位 AES 加密此文件的私有部分。
.Nm
不会自动访问此文件，但它作为私钥的默认文件提供。 当尝试登录时，
.Xr ssh 1
将读取此文件。
.Pp
.It Pa ~/.ssh/id_dsa.pub
.It Pa ~/.ssh/id_ecdsa.pub
.It Pa ~/.ssh/id_ecdsa_sk.pub
.It Pa ~/.ssh/id_ed25519.pub
.It Pa ~/.ssh/id_ed25519_sk.pub
.It Pa ~/.ssh/id_rsa.pub
包含用于身份验证的 DSA、ECDSA、身份验证器托管的 ECDSA、Ed25519、身份验证器托管的 Ed25519 或 RSA 公钥。
该文件的内容应添加到用户希望使用公钥身份验证登录的所有计算机上的
.Pa ~/.ssh/authorized_keys
。
没有必要对这个文件的内容保密。
.Pp
.It Pa /etc/ssh/moduli
包含用于 DH-GEX 的 Diffie-Hellman 组。 文件格式在
.Xr moduli 5
中描述。
.El
.Sh SEE ALSO
.Xr ssh 1 ,
.Xr ssh-add 1 ,
.Xr ssh-agent 1 ,
.Xr moduli 5 ,
.Xr sshd 8
.Rs
.%R RFC 4716
.%T "The Secure Shell (SSH) Public Key File Format"
.%D 2006
.Re
.Sh AUTHORS
OpenSSH 是 Tatu Ylonen 发布的原始免费 ssh 1.2.12 的衍生版本。 Aaron Campbell、Bob
Beck、Markus Friedl、Niels Provos、Theo de Raadt 和 Dug Song
删除了许多错误，重新添加了更新的特性并创建了 OpenSSH。 Markus Friedl 贡献了对 SSH 协议版本 1.5 和 2.0 的支持。
.Pp
.Sh [手册页中文版]
.Pp
本翻译为免费文档；阅读
.Lk https://www.gnu.org/licenses/gpl-3.0.html GNU 通用公共许可证第 3 版
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.Pp
该中文翻译由 wtklbm 根据个人学习需要制作
.Mt wtklbm<wtklbm@gmail.com>
.Pp
项目地址:
.Mt https://github.com/wtklbm/manpages-chinese
.Me 。
