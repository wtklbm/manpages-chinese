.\" -*- coding: UTF-8 -*-
.\"
.\" Author: Tatu Ylonen <ylo@cs.hut.fi>
.\" Copyright (c) 1995 Tatu Ylonen <ylo@cs.hut.fi>, Espoo, Finland
.\"                    All rights reserved
.\"
.\" As far as I am concerned, the code I have written for this software
.\" can be used freely for any purpose.  Any derived versions of this
.\" software must be clearly marked as such, and if the derived work is
.\" incompatible with the protocol description in the RFC file, it must be
.\" called by a name other than "ssh" or "Secure Shell".
.\"
.\" Copyright (c) 1999,2000 Markus Friedl.  All rights reserved.
.\" Copyright (c) 1999 Aaron Campbell.  All rights reserved.
.\" Copyright (c) 1999 Theo de Raadt.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" $OpenBSD: ssh.1,v 1.433 2022/11/28 01:37:36 djm Exp $
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.Dd $Mdocdate: November 28 2022 $
.Dt SSH 1
.Os
.Sh NAME
.Nm ssh
.Nd OpenSSH remote login client
.Sh SYNOPSIS
.Nm ssh
.Op Fl 46AaCfGgKkMNnqsTtVvXxYy
.Op Fl B Ar bind_interface
.Op Fl b Ar bind_address
.Op Fl c Ar cipher_spec
.Op Fl D Oo Ar bind_address : Oc Ns Ar port
.Op Fl E Ar log_file
.Op Fl e Ar escape_char
.Op Fl F Ar configfile
.Op Fl I Ar pkcs11
.Op Fl i Ar identity_file
.Op Fl J Ar destination
.Op Fl L Ar address
.Op Fl l Ar login_name
.Op Fl m Ar mac_spec
.Op Fl O Ar ctl_cmd
.Op Fl o Ar option
.Op Fl p Ar port
.Op Fl Q Ar query_option
.Op Fl R Ar address
.Op Fl S Ar ctl_path
.Op Fl W Ar host : Ns Ar port
.Op Fl w Ar local_tun Ns Op : Ns Ar remote_tun
.Ar destination
.Op Ar command Op Ar argument ...
.Sh DESCRIPTION
.Nm
(SSH 客户端) 是一个用于登录远程机器并在远程机器上执行命令的程序。
它旨在通过不安全的网络在两个不受信任的主机之间提供安全的加密通信。 X11 连接、任意 TCP 端口和
.Ux Ns -domain
套接字也可以通过安全通道转发。
.Pp
.Nm
连接并登录到指定的
.Ar destination
，该
.Ar destination
可以指定为
.Sm off
.Oo user @ Oc hostname
.Sm on
或
.Sm off
.No ssh:// Oo user @ Oc hostname Op : port
形式的 URI。
.Sm on
用户必须使用几种方法之一向远程机器证明他们的身份 (见下文)。
.Pp
如果指定了
.Ar command
，它将在远程主机上执行，而不是登录 shell。 一个完整的命令行可以指定为
.Ar command
，也可以有额外的参数。 如果提供，参数将追加到命令，由空格分隔，然后发送到要执行的服务器。
.Pp
选项如下:
.Pp
.Bl -tag -width Ds -compact
.It Fl 4
强制
.Nm
仅使用 IPv4 地址。
.Pp
.It Fl 6
强制
.Nm
仅使用 IPv6 地址。
.Pp
.It Fl A
启用从身份验证代理 (例如
.Xr ssh-agent 1 )
转发连接。 这也可以在配置文件中基于每个主机指定。
.Pp
应谨慎启用代理转发。 能够绕过远程主机上的文件权限的用户 (对于代理的
.Ux Ns -domain
套接字) 可以通过转发的连接访问本地代理。
攻击者无法从代理获取密钥材料，但是他们可以对密钥执行操作，使他们能够使用加载到代理中的身份进行身份验证。 更安全的替代方法可能是使用跳转主机 (请参见
.Fl J ) .
.Pp
.It Fl a
禁用身份验证代理连接的转发。
.Pp
.It Fl B Ar bind_interface
在尝试连接到目标主机之前绑定到
.Ar bind_interface
的地址。 这仅在具有多个地址的系统上有用。
.Pp
.It Fl b Ar bind_address
使用本地机器上的
.Ar bind_address
作为连接的源地址。 仅在具有多个地址的系统上有用。
.Pp
.It Fl C
请求压缩所有数据 (包括 stdin、stdout、标准错误，以及转发的 X11、TCP 和
.Ux Ns -domain
连接的数据)。
压缩算法与
.Xr gzip 1
使用的相同。 调制解调器线路和其他慢速连接需要压缩，但只会降低快速网络的速度。
可以在配置文件中逐个主机地设置默认值; 请参见
.Xr ssh_config 5
中的
.Cm Compression
选项。
.Pp
.It Fl c Ar cipher_spec
选择用于加密会话的密码规范。
.Ar cipher_spec
是按优先顺序列出的以逗号分隔的密码列表。 有关详细信息，请参见
.Xr ssh_config 5
中的
.Cm Ciphers
关键字。
.Pp
.It Fl D Xo
.Sm off
.Oo Ar bind_address : Oc
.Ar port
.Sm on
.Xc
指定本地
.Dq dynamic
应用级端口转发。 这是通过分配一个套接字来侦听本地的
.Ar port
来实现的，可以选择绑定到指定的
.Ar bind_address
。 每当与此端口建立连接时，连接都会通过安全通道转发，然后使用应用程序协议确定从远程计算机连接到何处。 目前支持 SOCKS4
和 SOCKS5 协议，
.Nm
将作为 SOCKS 服务器。 只有 root 可以转发特权端口。 也可以在配置文件中指定动态端口转发。
.Pp
可以通过将地址括在方括号中来指定 IPv6 地址。 只有超级用户可以转发特权端口。 默认情况下，本地端口是按照
.Cm GatewayPorts
设置绑定的。 但是，可以使用显式
.Ar bind_address
将连接绑定到特定地址。
.Dq localhost
的
.Ar bind_address
表示侦听端口绑定为仅供本地使用，而空地址或
.Sq *
表示该端口应可用于所有接口。
.Pp
.It Fl E Ar log_file
将调试日志追加到
.Ar log_file
而不是标准错误。
.Pp
.It Fl e Ar escape_char
为带有 pty 的会话设置转义字符 (默认值:
.Ql ~ ) .
转义字符仅在一行的开头被识别。 转义字符后跟一个点
.Pq Ql \&.
关闭连接; 接着按 control-Z 暂停连接; 然后它自己发送一次转义字符。 将字符设置为
.Dq none
会禁用任何转义并使会话完全透明。
.Pp
.It Fl F Ar configfile
指定一个替代的每用户配置文件。 如果在命令行上给出配置文件，则系统范围的配置文件
.Pq Pa /etc/ssh/ssh_config
将被忽略。
每个用户配置文件的默认值是
.Pa ~/.ssh/config
。 如果设置为
.Dq none
，则不会读取任何配置文件。
.Pp
.It Fl f
请求
.Nm
在命令执行之前进入后台。 如果
.Nm
将询问密码或口令短语，但用户希望在后台进行，这将很有用。 这意味着
.Fl n
。
在远程站点启动 X11 程序的推荐方法是使用
.Ic ssh -f host xterm
之类的东西。
.Pp
如果
.Cm ExitOnForwardFailure
配置选项设置为
.Dq yes
，则以
.Fl f
启动的客户端将等待所有远程端口转发成功建立，然后再将其自身置于后台。 详见
.Xr ssh_config 5
中
.Cm ForkAfterAuthentication
的说明。
.Pp
.It Fl G
导致
.Nm
在评估
.Cm Host
和
.Cm Match
块并退出后打印其配置。
.Pp
.It Fl g
允许远程主机连接到本地转发端口。 如果在多路复用连接上使用，则必须在主进程上指定此选项。
.Pp
.It Fl I Ar pkcs11
指定 PKCS#11 共享库
.Nm
应该用来与 PKCS#11 token 通信，为用户身份验证提供密钥。
.Pp
.It Fl i Ar identity_file
选择一个文件，从中读取用于公钥验证的标识 (私钥)。 您还可以指定一个公钥文件，以便在本地不存在私钥文件时使用
.Xr ssh-agent 1
中加载的相应私钥。 默认值为
.Pa ~/.ssh/id_rsa
、
.Pa ~/.ssh/id_ecdsa
、
.Pa ~/.ssh/id_ecdsa_sk
、
.Pa ~/.ssh/id_ed25519
、
.Pa ~/.ssh/id_ed25519_sk
和
.Pa ~/.ssh/id_dsa
。 身份文件也可以在配置文件中以每个主机为基础指定。 可以有多个
.Fl i
选项
(以及在配置文件中指定的多个标识)。 如果
.Cm CertificateFile
指令没有明确指定证书，
.Nm
也会尝试从通过将
.Pa -cert.pub
追加到标识文件名获得的文件名中加载证书信息。
.Pp
.It Fl J Ar destination
通过首先与
.Ar destination
描述的跳转主机建立
.Nm
连接，然后从那里建立到最终目的地的 TCP 转发来连接到目标主机。
可以用逗号字符分隔指定多个跳转。 这是指定
.Cm ProxyJump
配置指令的快捷方式。
请注意，命令行上提供的配置指令通常适用于目标主机，而不适用于任何指定的跳转主机。 使用
.Pa ~/.ssh/config
指定跳转主机的配置。
.Pp
.It Fl K
启用基于 GSSAPI 的身份验证并将 GSSAPI 凭据的 (delegation) 转发到服务器。
.Pp
.It Fl k
禁用将 GSSAPI 凭据的 (delegation) 转发到服务器。
.Pp
.It Fl L Xo
.Sm off
.Oo Ar bind_address : Oc
.Ar port : host : hostport
.Sm on
.Xc
.It Fl L Xo
.Sm off
.Oo Ar bind_address : Oc
.Ar port : remote_socket
.Sm on
.Xc
.It Fl L Xo
.Sm off
.Ar local_socket : host : hostport
.Sm on
.Xc
.It Fl L Xo
.Sm off
.Ar local_socket : remote_socket
.Sm on
.Xc
指定到本地
(client) 主机上的给定 TCP 端口或 Unix 套接字的连接将被转发到远程端的给定主机和端口或 Unix 套接字。
这是通过分配一个套接字来侦听本地端的 TCP
.Ar port
(可选地绑定到指定的
.Ar bind_address )
或 Unix
套接字来实现的。 每当与本地端口或套接字建立连接时，都会通过安全通道转发连接，并从远程计算机与
.Ar host
端口
.Ar hostport
或 Unix 套接字
.Ar remote_socket
建立连接。
.Pp
也可以在配置文件中指定端口转发。 只有超级用户可以转发特权端口。 可以通过将地址括在方括号中来指定 IPv6 地址。
.Pp
默认情况下，本地端口是按照
.Cm GatewayPorts
设置绑定的。 但是，可以使用显式
.Ar bind_address
将连接绑定到特定地址。
.Dq localhost
的
.Ar bind_address
表示侦听端口绑定为仅供本地使用，而空地址或
.Sq *
表示该端口应可用于所有接口。
.Pp
.It Fl l Ar login_name
指定在远程计算机上登录的用户。 这也可以在配置文件中基于每个主机指定。
.Pp
.It Fl M
将
.Nm
客户端置于
.Dq master
模式以进行连接共享。 多个
.Fl M
选项将
.Nm
置于
.Dq master
模式，但在每个更改多路复用状态的操作 (例如打开新会话) 之前需要使用
.Xr ssh-askpass 1
进行确认。 详见
.Xr ssh_config 5
中
.Cm ControlMaster
的说明。
.Pp
.It Fl m Ar mac_spec
以逗号分隔的 MAC (消息验证代码) 算法列表，按优先顺序指定。 有关详细信息，请参见
.Xr ssh_config 5
中的
.Cm MACs
关键字。
.Pp
.It Fl N
不要执行远程命令。 这对于仅转发端口很有用。 详见
.Xr ssh_config 5
中
.Cm SessionType
的说明。
.Pp
.It Fl n
从
.Pa /dev/null
重定向 stdin (实际上，防止从 stdin 读取)。 当
.Nm
在后台运行时必须使用它。
一个常见的技巧是使用它在远程机器上运行 X11 程序。 例如，
.Ic ssh -n shadows.cs.hut.fi emacs &
将在
shadows.cs.hut.fi 上启动一个 emacs，X11 连接将自动通过加密的通道转发。
.Nm
程序将置于后台。 (如果
.Nm
需要询问密码或口令，这将不起作用; 另请参见
.Fl f
选项。) 有关详细信息，请参见
.Xr ssh_config 5
中对
.Cm StdinNull
的描述。
.Pp
.It Fl O Ar ctl_cmd
控制一个主动连接多路复用主进程。 当指定
.Fl O
选项时，
.Ar ctl_cmd
参数被解释并传递给主进程。 有效命令有:
.Dq check
(检查 master 进程是否运行)，
.Dq forward
(请求转发，不执行命令)，
.Dq cancel
(取消转发)，
.Dq exit
(请求 master 退出)，
.Dq stop
(请求 master 停止接受进一步多路复用要求)。
.Pp
.It Fl o Ar option
可用于以配置文件中使用的格式提供选项。 这对于指定没有单独命令行标志的选项很有用。 有关下面列出的选项及其可能值的完整详细信息，请参见
.Xr ssh_config 5
。
.Pp
.Bl -tag -width Ds -offset indent -compact
.It AddKeysToAgent
.It AddressFamily
.It BatchMode
.It BindAddress
.It CanonicalDomains
.It CanonicalizeFallbackLocal
.It CanonicalizeHostname
.It CanonicalizeMaxDots
.It CanonicalizePermittedCNAMEs
.It CASignatureAlgorithms
.It CertificateFile
.It CheckHostIP
.It Ciphers
.It ClearAllForwardings
.It Compression
.It ConnectionAttempts
.It ConnectTimeout
.It ControlMaster
.It ControlPath
.It ControlPersist
.It DynamicForward
.It EnableEscapeCommandline
.It EscapeChar
.It ExitOnForwardFailure
.It FingerprintHash
.It ForkAfterAuthentication
.It ForwardAgent
.It ForwardX11
.It ForwardX11Timeout
.It ForwardX11Trusted
.It GatewayPorts
.It GlobalKnownHostsFile
.It GSSAPIAuthentication
.It GSSAPIDelegateCredentials
.It HashKnownHosts
.It Host
.It HostbasedAcceptedAlgorithms
.It HostbasedAuthentication
.It HostKeyAlgorithms
.It HostKeyAlias
.It Hostname
.It IdentitiesOnly
.It IdentityAgent
.It IdentityFile
.It IPQoS
.It KbdInteractiveAuthentication
.It KbdInteractiveDevices
.It KexAlgorithms
.It KnownHostsCommand
.It LocalCommand
.It LocalForward
.It LogLevel
.It MACs
.It Match
.It NoHostAuthenticationForLocalhost
.It NumberOfPasswordPrompts
.It PasswordAuthentication
.It PermitLocalCommand
.It PermitRemoteOpen
.It PKCS11Provider
.It Port
.It PreferredAuthentications
.It ProxyCommand
.It ProxyJump
.It ProxyUseFdpass
.It PubkeyAcceptedAlgorithms
.It PubkeyAuthentication
.It RekeyLimit
.It RemoteCommand
.It RemoteForward
.It RequestTTY
.It RequiredRSASize
.It SendEnv
.It ServerAliveInterval
.It ServerAliveCountMax
.It SessionType
.It SetEnv
.It StdinNull
.It StreamLocalBindMask
.It StreamLocalBindUnlink
.It StrictHostKeyChecking
.It TCPKeepAlive
.It Tunnel
.It TunnelDevice
.It UpdateHostKeys
.It User
.It UserKnownHostsFile
.It VerifyHostKeyDNS
.It VisualHostKey
.It XAuthLocation
.El
.Pp
.It Fl p Ar port
连接到远程主机上的端口。 这可以在配置文件中基于每个主机指定。
.Pp
.It Fl Q Ar query_option
查询以下特性之一支持的算法:
.Ar cipher
(支持的对称密码)、
.Ar cipher-auth
(支持经过身份验证的加密的对称密码)、
.Ar help
(支持与
.Fl Q
标志一起使用的查询术语)、
.Ar mac
(支持的消息完整性代码)、
.Ar kex
(密钥交换算法)、
.Ar key
(密钥类型)、
.Ar key-cert
(证书密钥类型)、
.Ar key-plain
(非证书密钥类型)、
.Ar key-sig
(所有密钥类型和签名算法)、
.Ar protocol-version
(支持的 SSH 协议版本) 和
.Ar sig
(支持的签名算法)。 或者，
.Xr ssh_config 5
或
.Xr sshd_config 5
中采用算法列表的任何关键字都可以用作相应 query_option 的别名。
.Pp
.It Fl q
静音模式。 导致大多数警告和诊断消息被抑制。
.Pp
.It Fl R Xo
.Sm off
.Oo Ar bind_address : Oc
.Ar port : host : hostport
.Sm on
.Xc
.It Fl R Xo
.Sm off
.Oo Ar bind_address : Oc
.Ar port : local_socket
.Sm on
.Xc
.It Fl R Xo
.Sm off
.Ar remote_socket : host : hostport
.Sm on
.Xc
.It Fl R Xo
.Sm off
.Ar remote_socket : local_socket
.Sm on
.Xc
.It Fl R Xo
.Sm off
.Oo Ar bind_address : Oc
.Ar port
.Sm on
.Xc
指定到远程
(server) 主机上的给定 TCP 端口或 Unix 套接字的连接将被转发到本地端。
.Pp
这是通过分配一个套接字来侦听远程端的 TCP
.Ar port
或 Unix 套接字来实现的。 每当与此端口或 Unix
套接字建立连接时，都会通过安全通道转发连接，并从本地计算机建立连接到
.Ar host
端口
.Ar hostport
或
.Ar local_socket
指定的显式目标，或者，如果没有显式目标指定后，
.Nm
将充当 SOCKS 4/5 代理并将连接转发到远程 SOCKS
客户端请求的目的地。
.Pp
也可以在配置文件中指定端口转发。 只有在远程计算机上以 root 身份登录时才能转发特权端口。 可以通过将地址括在方括号中来指定 IPv6 地址。
.Pp
默认情况下，服务器上的 TCP 侦听套接字将仅绑定到回环接口。 这可以通过指定
.Ar bind_address
来覆盖。 空的
.Ar bind_address
或地址
.Ql *
表示远程套接字应侦听所有接口。 仅当启用服务器的
.Cm GatewayPorts
选项时指定远程
.Ar bind_address
才会成功 (请参见
.Xr sshd_config 5 ) .
.Pp
如果
.Ar port
参数为
.Ql 0
，监听端口会在服务器端动态分配，并在运行时上报给客户端。 当与
.Ic -O forward
一起使用时，分配的端口将被打印到标准输出。
.Pp
.It Fl S Ar ctl_path
指定用于连接共享的控制套接字的位置，或指定字符串
.Dq none
以禁用连接共享。 详见
.Xr ssh_config 5
中
.Cm ControlPath
和
.Cm ControlMaster
的说明。
.Pp
.It Fl s
可用于请求调用远程系统上的子系统。 子系统有助于将 SSH 用作其他应用程序的安全传输 (例如 \&
.Xr sftp 1 ) .
子系统被指定为远程命令。 详见
.Xr ssh_config 5
中
.Cm SessionType
的说明。
.Pp
.It Fl T
禁用伪终端分配。
.Pp
.It Fl t
强制伪终端分配。 这可用于在远程机器上执行任意基于屏幕的程序，这非常有用，例如，在实现菜单服务时。 多个
.Fl t
选项强制分配 tty，即使
.Nm
没有本地 tty。
.Pp
.It Fl V
显示版本号并退出。
.Pp
.It Fl v
详细模式。 导致
.Nm
打印有关其进度的调试消息。 这有助于调试连接、身份验证和配置问题。 多个
.Fl v
选项会增加冗长程度。
最大值是 3.
.Pp
.It Fl W Ar host : Ns Ar port
请求将客户端上的标准输入和输出通过安全通道转发到
.Ar port
上的
.Ar host
。 暗示
.Fl N
、
.Fl T
、
.Cm ExitOnForwardFailure
和
.Cm ClearAllForwardings
，尽管可以在配置文件中或使用
.Fl o
命令行选项覆盖这些。
.Pp
.It Fl w Xo
.Ar local_tun Ns Op : Ns Ar remote_tun
.Xc
请求在客户端
.Pq Ar local_tun
和服务器
.Pq Ar remote_tun
之间使用指定的
.Xr tun 4
设备进行隧道设备转发。
.Pp
这些设备可以由数字 ID 或关键字
.Dq any
指定，它使用下一个可用的隧道设备。 如果不指定
.Ar remote_tun
，则默认为
.Dq any
。 另请参见
.Xr ssh_config 5
中的
.Cm Tunnel
和
.Cm TunnelDevice
指令。
.Pp
如果未设置
.Cm Tunnel
指令，它将设置为默认隧道模式，即
.Dq point-to-point
。 如果需要不同的
.Cm Tunnel
转发模式，则应在
.Fl w
之前指定。
.Pp
.It Fl X
启用 X11 转发。 这也可以在配置文件中基于每个主机指定。
.Pp
应谨慎启用 X11 转发。 具有绕过远程主机文件权限的用户 (针对用户的 X 授权数据库) 可以通过转发连接访问本地 X11 显示。
然后，攻击者可能能够执行诸如击键监视之类的活动。
.Pp
为此，X11 转发默认受 X11 SECURITY 扩展限制。 有关详细信息，请参见
.Nm
.Fl Y
选项和
.Xr ssh_config 5
中的
.Cm ForwardX11Trusted
指令。
.Pp
.It Fl x
禁用 X11 转发。
.Pp
.It Fl Y
启用受信任的 X11 转发。 受信任的 X11 转发不受 X11 SECURITY 扩展控制。
.Pp
.It Fl y
使用
.Xr syslog 3
系统模块发送日志信息。 默认情况下，此信息会发送到标准错误。
.El
.Pp
.Nm
还可以从每个用户的配置文件和系统范围的配置文件中获取配置数据。
.Xr ssh_config 5
中描述了文件格式和配置选项。
.Sh AUTHENTICATION
OpenSSH SSH 客户端支持 SSH 协议 2.
.Pp
可用于验证的方法有: 基于 GSSAPI 的验证、基于主机的验证、公钥验证、键盘交互验证和密码验证。 按照上面指定的顺序尝试身份验证方法，但可以使用
.Cm PreferredAuthentications
更改默认顺序。
.Pp
基于主机的身份验证的工作原理如下: 如果用户登录的机器在远程机器上的
.Pa /etc/hosts.equiv
或
.Pa /etc/ssh/shosts.equiv
中列出，则该用户不是 root 并且双方的用户名相同，或者如果文件
.Pa ~/.rhosts
或
.Pa ~/.shosts
存在于远程机器上用户的主目录中，并且包含一行包含客户端机器的名称和该机器上的用户名，该用户被认为可以登录。
此外，服务器
.Em must
能够验证客户端的主机密钥 (请参见下面对
.Pa /etc/ssh/ssh_known_hosts
和
.Pa ~/.ssh/known_hosts
的描述) 以允许登录。 这种身份验证方法弥补了 IP 欺骗、DNS 欺骗和路由欺骗造成的安全漏洞。
[Note to the administrator:
.Pa /etc/hosts.equiv ,
.Pa ~/.rhosts ,
and
the rlogin/rsh protocol in general, are inherently insecure and should be
disabled if security is desired.]
.Pp
公钥认证的工作原理如下: 该方案基于公钥密码学，使用加密和解密使用单独密钥完成的密码系统，并且无法从加密密钥中推导出解密密钥。
这个想法是每个用户创建一个 public/private 密钥对用于身份验证。 服务器知道公钥，只有用户知道私钥。
.Nm
使用
DSA、ECDSA、Ed25519 或 RSA 算法之一自动实现公钥认证协议。
.Xr ssl 8
的 HISTORY 部分包含对 DSA 和
RSA 算法的简要讨论。
.Pp
文件
.Pa ~/.ssh/authorized_keys
列出了允许登录的公钥。 当用户登录时，
.Nm
程序告诉服务器它想使用哪个密钥对进行身份验证。 客户端证明它有权访问私钥，服务器检查相应的公钥是否有权接受该帐户。
.Pp
在使用不同方法完成身份验证后，服务器可能会通知客户端阻止公钥身份验证成功的错误。 这些可以通过将
.Cm LogLevel
增加到
.Cm DEBUG
或更高 (例如，通过使用
.Fl v
标志) 来查看。
.Pp
用户通过运行
.Xr ssh-keygen 1
创建他们的密钥对。 这会将私钥存储在
.Pa ~/.ssh/id_dsa
(DSA)、
.Pa ~/.ssh/id_ecdsa
(ECDSA)、
.Pa ~/.ssh/id_ecdsa_sk
(验证器托管的
ECDSA)、
.Pa ~/.ssh/id_ed25519
(Ed25519)、
.Pa ~/.ssh/id_ed25519_sk
(验证器托管的 Ed25519) 或
.Pa ~/.ssh/id_rsa
(RSA) 中，并将公钥存储在
.Pa ~/.ssh/id_dsa.pub
(DSA)、
.Pa ~/.ssh/id_ecdsa.pub
(ECDSA)、
.Pa ~/.ssh/id_ecdsa_sk.pub
(验证器托管的 ECDSA) 中托管 ECDSA)、
.Pa ~/.ssh/id_ed25519.pub
(Ed25519)、
.Pa ~/.ssh/id_ed25519_sk.pub
(验证器托管的
Ed25519) 或用户主目录中的
.Pa ~/.ssh/id_rsa.pub
(RSA)。 然后，用户应将公钥复制到远程计算机上其主目录中的
.Pa ~/.ssh/authorized_keys
。
.Pa authorized_keys
文件对应于传统的
.Pa ~/.rhosts
文件，每行一个键，尽管行可能很长。 此后，用户无需提供密码即可登录。
.Pp
公钥身份验证的一种变体以证书身份验证的形式提供: 使用签名证书代替一组 public/private 密钥。
这样做的好处是可以使用单个受信任的证书颁发机构来代替许多 public/private 密钥。 有关详细信息，请参见
.Xr ssh-keygen 1
的证书部分。
.Pp
使用公钥或证书身份验证最方便的方法可能是使用身份验证代理。 有关详细信息，请参见
.Xr ssh-agent 1
和 (optionally)
以及
.Xr ssh_config 5
中的
.Cm AddKeysToAgent
指令。
.Pp
键盘交互式身份验证的工作方式如下: 服务器发送任意
.Qq challenge
文本并提示响应，可能多次。 键盘交互式身份验证的示例包括
.Bx
身份验证 (请参见
.Xr login.conf 5 )
和 PAM (某些
.Pf non- Ox
系统) )。
.Pp
最后，如果其他身份验证方法失败，
.Nm
会提示用户输入密码。 密码发送到远程主机进行校验;
然而，由于所有通信都是加密的，因此在网络上监听的人无法看到密码。
.Pp
.Nm
自动维护和检查一个数据库，其中包含所有曾经使用过的主机的标识。 主机密钥存储在用户主目录的
.Pa ~/.ssh/known_hosts
中。 此外，还会自动检查文件
.Pa /etc/ssh/ssh_known_hosts
中的已知主机。
任何新主机都会自动添加到用户的文件中。 如果主机的身份发生变化，
.Nm
会发出警告并禁用密码身份验证以防止服务器欺骗或中间人攻击，否则这些攻击可能会被用来规避加密。
.Cm StrictHostKeyChecking
选项可用于控制主机密钥未知或已更改的计算机的登录。
.Pp
当用户的身份被服务器接受时，服务器要么在非交互式会话中执行给定的命令，要么如果没有指定命令，则登录到机器并为用户提供一个正常的 shell
作为交互式会话。 所有与远程命令或 shell 的通信都将自动加密。
.Pp
如果请求交互式会话，默认情况下
.Nm
只会在客户端有一个交互式会话时请求一个伪终端 (pty)。 标志
.Fl T
和
.Fl t
可用于覆盖此行为。
.Pp
如果分配了一个伪终端，用户可以使用下面提到的转义字符。
.Pp
如果没有分配伪终端，则会话是透明的，可用于可靠地传输二进制数据。 在大多数系统上，将转义字符设置为
.Dq none
也会使会话透明，即使使用了
tty。
.Pp
当远程机器上的命令或 shell 退出并且所有 X11 和 TCP 连接已关闭时，会话终止。
.Sh ESCAPE CHARACTERS
当请求伪终端时，
.Nm
通过使用转义字符支持多个终端。
.Pp
单个波浪号字符可以作为
.Ic ~~
发送，也可以通过在波浪号后跟一个不同于下面描述的字符来发送。
转义字符必须始终跟在换行符之后才能被解释为特殊字符。 可以使用
.Cm EscapeChar
配置指令在配置文件中或在命令行上通过
.Fl e
选项更改转义符。
.Pp
支持的转义符 (假设默认
.Ql ~ )
是:
.Bl -tag -width Ds
.It Cm ~.
Disconnect.
.It Cm ~^Z
背景
.Nm
。
.It Cm ~#
列出转发的连接。
.It Cm ~&
等待转发连接 /X11 会话终止时注销时的后台
.Nm
。
.It Cm ~?
显示转义字符列表。
.It Cm ~B
向远程系统发送 BREAK (仅当对等方支持时才有用)。
.It Cm ~C
打开命令行。 目前，这允许使用
.Fl L
、
.Fl R
和
.Fl D
选项 (见上文) 添加端口转发。
它还允许取消现有端口转发，
.Sm off
.Fl KL Oo Ar bind_address : Oc Ar port
.Sm on
用于本地，
.Sm off
.Fl KR Oo Ar bind_address : Oc Ar port
.Sm on
用于远程，
.Sm off
.Fl KD Oo Ar bind_address : Oc Ar port
.Sm on
用于动态端口转发。 如果在
.Xr ssh_config 5
中启用了
.Ic PermitLocalCommand
选项，则
.Ic !\& Ns Ar command
允许用户执行本地命令。 使用
.Fl h
选项可获得基本帮助。
.It Cm ~R
请求重新生成连接密钥 (仅当对等方支持时才有用)。
.It Cm ~V
将错误写入标准错误时，降低详细程度
.Pq Ic LogLevel
。
.It Cm ~v
将错误写入标准错误时，增加详细程度
.Pq Ic LogLevel
。
.El
.Sh TCP FORWARDING
可以在命令行或配置文件中指定通过安全通道转发任意 TCP 连接。 TCP 转发的一种可能应用是与邮件服务器的安全连接; 另一个正在通过防火墙。
.Pp
在下面的示例中，我们查看了 IRC 客户端的加密通信，即使它连接到的 IRC 服务器不直接支持加密通信。 其工作方式如下: 用户使用
.Nm
连接到远程主机，指定用于转发连接的端口。 之后就可以在本地启动程序，
.Nm
将加密并将连接转发到远程服务器。
.Pp
以下示例将 IRC 会话从客户端隧道传输到位于
.Dq server.example.com
的 IRC 服务器，加入通道
.Dq #users
，昵称
.Dq pinky
，使用标准 IRC 端口 6667:
.Bd -literal -offset 4n
$ ssh -f -L 6667:localhost:6667 server.example.com 睡眠 10
$ irc -c '#users' 小指 IRC/127.0.0.1
.Ed
.Pp
.Fl f
选项背景
.Nm
和远程命令
.Dq sleep 10
被指定允许一定的时间 (在示例中为 10 秒)
来启动将要使用隧道的程序。 如果在指定时间内没有建立连接，
.Nm
将退出。
.Sh X11 FORWARDING
如果
.Cm ForwardX11
变量设置为
.Dq yes
(或参见上面
.Fl X
、
.Fl x
和
.Fl Y
选项的说明) 并且用户正在使用 X11 (设置了
.Ev DISPLAY
环境变量)，则与 X11 显示器的连接将自动转发到远程端，任何从
shell (或命令) 启动的 X11 程序都将通过加密的通道，并且将从本地机器连接到真正的 X 服务器。 用户不应手动设置
.Ev DISPLAY
。 可以在命令行或配置文件中配置 X11 连接的转发。
.Pp
.Nm
设置的
.Ev DISPLAY
值将指向服务器计算机，但显示编号大于零。 这是正常的，并且会发生，因为
.Nm
在服务器计算机上创建了一个
.Dq proxy
X 服务器，用于通过加密的通道转发连接。
.Pp
.Nm
还会自动在服务器机器上设置 Xauthority 数据。 为此，它会生成一个随机授权 cookie，将其存储在服务器上的
Xauthority 中，并验证任何转发的连接是否携带此 cookie，并在连接打开时将其替换为真实的 cookie。 真正的身份验证 cookie
永远不会发送到服务器机器 (并且不会以普通方式发送 cookie)。
.Pp
如果
.Cm ForwardAgent
变量设置为
.Dq yes
(或参见上面
.Fl A
和
.Fl a
选项的描述)
并且用户正在使用身份验证代理，则与代理的连接会自动转发到远程端。
.Sh VERIFYING HOST KEYS
首次连接到服务器时，会向用户提供服务器公钥的指纹 (除非已禁用选项
.Cm StrictHostKeyChecking )
。 可以使用
.Xr ssh-keygen 1 :
确定指纹
.Pp
.Dl $ ssh-keygen -l -f /etc/ssh/ssh_host_rsa_key
.Pp
如果指纹已知，则可以匹配并接受或拒绝密钥。 如果只有服务器的遗留 (MD5) 指纹可用，
.Xr ssh-keygen 1
.Fl E
选项可用于降级指纹算法以匹配。
.Pp
由于仅通过查看指纹字符串比较主机密钥很困难，因此还支持使用
.Em random art
直观地比较主机密钥。 通过将
.Cm VisualHostKey
选项设置为
.Dq yes
，无论会话本身是否交互，每次登录服务器时都会显示一个小的 ASCII 图形。
通过了解已知服务器产生的模式，用户可以很容易地发现当显示完全不同的模式时主机密钥已更改。
然而，因为这些模式不是明确的，所以看起来与记忆模式相似的模式只能提供主机密钥相同的良好概率，而不是保证证据。
.Pp
要获取所有已知主机的指纹列表及其随机艺术，可以使用以下命令行:
.Pp
.Dl $ ssh-keygen -lv -f ~/.ssh/known_hosts
.Pp
如果指纹未知，可以使用另一种验证方法: 通过 DNS 验证的 SSH 指纹。 一个额外的资源记录
(RR)，SSHFP，被添加到一个区域文件中，并且连接的客户端能够将指纹与所提供的密钥的指纹相匹配。
.Pp
在此示例中，我们将客户端连接到服务器
.Dq host.example.com
。 SSHFP 资源记录应首先添加到
host.example.com 的区域文件中:
.Bd -literal -offset indent
$ ssh-keygen -r host.example.com.
.Ed
.Pp
必须将输出行添加到区域文件中。 要检查区域是否正在回答指纹查询:
.Pp
.Dl $ dig -t SSHFP host.example.com
.Pp
最后客户端连接:
.Bd -literal -offset indent
$ ssh -o "VerifyHostKeyDNS ask" host.example.com
[...]
在 DNS 中找到匹配的主机密钥指纹。
您确定要继续连接 (yes/no) 吗?
.Ed
.Pp
有关详细信息，请参见
.Xr ssh_config 5
中的
.Cm VerifyHostKeyDNS
选项。
.Sh SSH-BASED VIRTUAL PRIVATE NETWORKS
.Nm
包含对使用
.Xr tun 4
网络伪设备的虚拟专用网络 (VPN) 隧道的支持，允许安全地连接两个网络。
.Xr sshd_config 5
配置选项
.Cm PermitTunnel
控制服务器是否支持它，以及在什么级别 (第 2 层或第 3 层流量)。
.Pp
以下示例将使用从 10.1.1.1 到 10.1.1.2 的点对点连接将客户端网络 10.0.50.0/24 与远程网络 10.0.99.0/24
连接起来，前提是运行在远程网络网关 192.168.1.15 上的 SSH 服务器允许这样做。
.Pp
在客户端:
.Bd -literal -offset indent
# ssh -f -w 0:1 192.168.1.15 真
# ifconfig tun0 10.1.1.1 10.1.1.2 网络掩码 255.255.255.252
# 路由添加 10.0.99.0/24 10.1.1.2
.Ed
.Pp
在服务器上:
.Bd -literal -offset indent
# ifconfig tun1 10.1.1.2 10.1.1.1 网络掩码 255.255.255.252
# 路由添加 10.0.50.0/24 10.1.1.1
.Ed
.Pp
可以通过
.Pa /root/.ssh/authorized_keys
文件 (见下文) 和
.Cm PermitRootLogin
服务器选项更精细地调整客户端访问。 如果
.Cm PermitRootLogin
设置为
.Dq forced-commands-only :
，则以下条目将允许用户
.Dq jane
在
.Xr tun 4
设备 1 上的连接以及用户
.Dq john
在 tun 设备 2 上的连接
.Bd -literal -offset 2n
tunnel="1",command="sh /etc/netstart tun1" ssh-rsa ... jane
tunnel="2",command="sh /etc/netstart tun2" ssh-rsa ... john
.Ed
.Pp
由于基于 SSH 的设置需要大量开销，因此它可能更适合临时设置，例如无线 VPN。
.Xr ipsecctl 8
和
.Xr isakmpd 8
等工具可以更好地提供更多永久性 VPN。
.Sh ENVIRONMENT
.Nm
通常会设置如下环境变量:
.Bl -tag -width SSH_ORIGINAL_COMMAND
.It Ev DISPLAY
.Ev DISPLAY
变量指示 X11 服务器的位置。 它由
.Nm
自动设置为指向
.Dq hostname:n
形式的值，其中
.Dq hostname
表示 shell 运行的主机，
.Sq n
是一个整数 \*(Ge 1.
.Nm
使用此特殊值通过安全通道转发 X11 连接。 用户通常不应明确设置
.Ev DISPLAY
，因为这会导致 X11 连接不安全
(并且需要用户手动复制任何所需的授权 cookie)。
.It Ev HOME
设置为用户主目录的路径。
.It Ev LOGNAME
.Ev USER
的同义词; 设置为与使用此变量的系统兼容。
.It Ev MAIL
设置为用户邮箱的路径。
.It Ev PATH
设置为默认
.Ev PATH
，如编译
.Nm
时指定的那样。
.It Ev SSH_ASKPASS
如果
.Nm
需要密码，如果它是从最终端运行的，它将从当前最终端读取密码。 如果
.Nm
没有终端关联，但设置了
.Ev DISPLAY
和
.Ev SSH_ASKPASS
，它将执行
.Ev SSH_ASKPASS
指定的程序，并打开 X11 窗口读取密码。
这在从
.Pa .xsession
或相关脚本调用
.Nm
时特别有用。 (请注意，在某些机器上，可能需要重定向来自
.Pa /dev/null
的输入才能使其工作。)
.It Ev SSH_ASKPASS_REQUIRE
允许进一步控制 askpass 程序的使用。 如果此变量设置为
.Dq never
，则
.Nm
将永远不会尝试使用一个。 如果设置为
.Dq prefer
，则
.Nm
在请求密码时将优先使用 askpass 程序而不是 TTY。 最后，如果变量设置为
.Dq force
，则无论是否设置
.Ev DISPLAY
，askpass 程序都将用于所有密码短语输入。
.It Ev SSH_AUTH_SOCK
标识用于与代理通信的
.Ux Ns -domain
套接字的路径。
.It Ev SSH_CONNECTION
标识连接的客户端和服务器端。 该变量包含四个以空格分隔的值: 客户端 IP 地址、客户端端口号、服务器 IP 地址和服务器端口号。
.It Ev SSH_ORIGINAL_COMMAND
如果执行强制命令，此变量包含原始命令行。 它可以用来提取原始参数。
.It Ev SSH_TTY
这被设置为与当前 shell 或命令关联的 tty (设备路径) 的名称。 如果当前会话没有 tty，则不设置此变量。
.It Ev SSH_TUNNEL
可选地由
.Xr sshd 8
设置以包含在客户端请求隧道转发时分配的接口名称。
.It Ev SSH_USER_AUTH
可选地由
.Xr sshd 8
设置，此变量可能包含文件的路径名，该文件列出了在建立会话时成功使用的身份验证方法，包括使用的任何公钥。
.It Ev TZ
如果这个变量是在守护程序启动时设置的 (即守护程序将值传递给新连接)，则它被设置为指示当前时区。
.It Ev USER
设置为登录用户的名称。
.El
.Pp
此外，
.Nm
读取
.Pa ~/.ssh/environment
，并在文件存在且允许用户更改其环境的情况下将
.Dq VARNAME=value
格式的行添加到环境中。 有关详细信息，请参见
.Xr sshd_config 5
中的
.Cm PermitUserEnvironment
选项。
.Sh FILES
.Bl -tag -width Ds -compact
.It Pa ~/.rhosts
该文件用于基于主机的身份验证 (见上文)。 在某些机器上，如果用户的主目录位于 NFS 分区上，则此文件可能需要是全局可读的，因为
.Xr sshd 8
以根用户身份读取它。 此外，此文件必须归用户所有，并且不得具有其他任何人的写入权限。 大多数机器的推荐权限是用户的
read/write，其他人无法访问。
.Pp
.It Pa ~/.shosts
该文件的使用方式与
.Pa .rhosts
完全相同，但允许基于主机的身份验证而不允许使用 rlogin/rsh 登录。
.Pp
.It Pa ~/.ssh/
此目录是所有特定于用户的配置和身份验证信息的默认位置。 一般没有要求将此目录的全部内容保密，但建议用户权限为
read/write/execute，其他人无法访问。
.Pp
.It Pa ~/.ssh/authorized_keys
列出可用于以该用户身份登录的公钥 (DSA、ECDSA、Ed25519、RSA)。
.Xr sshd 8
手册页中描述了该文件的格式。
该文件不是高度敏感，但建议用户权限为 read/write，其他人不可访问。
.Pp
.It Pa ~/.ssh/config
这是每个用户的配置文件。
.Xr ssh_config 5
中描述了文件格式和配置选项。 由于存在滥用的可能性，此文件必须具有严格的权限: 用户的
read/write，且其他人不可写。
.Pp
.It Pa ~/.ssh/environment
包含环境变量的附加定义; 请参见上面的
.Sx ENVIRONMENT
。
.Pp
.It Pa ~/.ssh/id_dsa
.It Pa ~/.ssh/id_ecdsa
.It Pa ~/.ssh/id_ecdsa_sk
.It Pa ~/.ssh/id_ed25519
.It Pa ~/.ssh/id_ed25519_sk
.It Pa ~/.ssh/id_rsa
包含用于身份验证的私钥。 这些文件包含敏感数据，用户应该可以读取，但其他人无法访问 (read/write/execute)。
如果其他人可以访问，
.Nm
将简单地忽略私钥文件。 生成密钥时可以指定密码，该密钥将用于使用 AES-128 加密此文件的敏感部分。
.Pp
.It Pa ~/.ssh/id_dsa.pub
.It Pa ~/.ssh/id_ecdsa.pub
.It Pa ~/.ssh/id_ecdsa_sk.pub
.It Pa ~/.ssh/id_ed25519.pub
.It Pa ~/.ssh/id_ed25519_sk.pub
.It Pa ~/.ssh/id_rsa.pub
包含用于身份验证的公钥。 这些文件不敏感，任何人都可以 (但不需要) 读取。
.Pp
.It Pa ~/.ssh/known_hosts
包含用户登录的所有主机的主机密钥列表，这些主机不在系统范围的已知主机密钥列表中。 有关此文件格式的更多详细信息，请参见
.Xr sshd 8
。
.Pp
.It Pa ~/.ssh/rc
该文件中的命令在用户登录时由
.Nm
执行，就在用户的 shell (或命令) 启动之前。 有关详细信息，请参见
.Xr sshd 8
手册页。
.Pp
.It Pa /etc/hosts.equiv
该文件用于基于主机的身份验证 (见上文)。 它应该只能由 root 写入。
.Pp
.It Pa /etc/ssh/shosts.equiv
该文件的使用方式与
.Pa hosts.equiv
完全相同，但允许基于主机的身份验证而不允许使用 rlogin/rsh 登录。
.Pp
.It Pa /etc/ssh/ssh_config
系统范围的配置文件。
.Xr ssh_config 5
中描述了文件格式和配置选项。
.Pp
.It Pa /etc/ssh/ssh_host_key
.It Pa /etc/ssh/ssh_host_dsa_key
.It Pa /etc/ssh/ssh_host_ecdsa_key
.It Pa /etc/ssh/ssh_host_ed25519_key
.It Pa /etc/ssh/ssh_host_rsa_key
这些文件包含主机密钥的私有部分，用于基于主机的身份验证。
.Pp
.It Pa /etc/ssh/ssh_known_hosts
系统范围内的已知主机密钥列表。 该文件应由系统管理员准备，以包含组织中所有机器的公共主机密钥。 它应该是世界可读的。
有关此文件格式的更多详细信息，请参见
.Xr sshd 8
。
.Pp
.It Pa /etc/ssh/sshrc
该文件中的命令在用户登录时由
.Nm
执行，就在用户的 shell (或命令) 启动之前。 有关详细信息，请参见
.Xr sshd 8
手册页。
.El
.Sh EXIT STATUS
.Nm
以远程命令的退出状态退出，如果发生错误则以 255 退出。
.Sh SEE ALSO
.Xr scp 1 ,
.Xr sftp 1 ,
.Xr ssh-add 1 ,
.Xr ssh-agent 1 ,
.Xr ssh-keygen 1 ,
.Xr ssh-keyscan 1 ,
.Xr tun 4 ,
.Xr ssh_config 5 ,
.Xr ssh-keysign 8 ,
.Xr sshd 8
.Sh STANDARDS
.Rs
.%A S. Lehtinen
.%A C. Lonvick
.%D January 2006
.%R RFC 4250
.%T The Secure Shell (SSH) Protocol Assigned Numbers
.Re
.Pp
.Rs
.%A T. Ylonen
.%A C. Lonvick
.%D January 2006
.%R RFC 4251
.%T The Secure Shell (SSH) Protocol Architecture
.Re
.Pp
.Rs
.%A T. Ylonen
.%A C. Lonvick
.%D January 2006
.%R RFC 4252
.%T The Secure Shell (SSH) Authentication Protocol
.Re
.Pp
.Rs
.%A T. Ylonen
.%A C. Lonvick
.%D January 2006
.%R RFC 4253
.%T The Secure Shell (SSH) Transport Layer Protocol
.Re
.Pp
.Rs
.%A T. Ylonen
.%A C. Lonvick
.%D January 2006
.%R RFC 4254
.%T The Secure Shell (SSH) Connection Protocol
.Re
.Pp
.Rs
.%A J. Schlyter
.%A W. Griffin
.%D January 2006
.%R RFC 4255
.%T Using DNS to Securely Publish Secure Shell (SSH) Key Fingerprints
.Re
.Pp
.Rs
.%A F. Cusack
.%A M. Forssen
.%D January 2006
.%R RFC 4256
.%T Generic Message Exchange Authentication for the Secure Shell Protocol (SSH)
.Re
.Pp
.Rs
.%A J. Galbraith
.%A P. Remaker
.%D January 2006
.%R RFC 4335
.%T The Secure Shell (SSH) Session Channel Break Extension
.Re
.Pp
.Rs
.%A M. Bellare
.%A T. Kohno
.%A C. Namprempre
.%D January 2006
.%R RFC 4344
.%T The Secure Shell (SSH) Transport Layer Encryption Modes
.Re
.Pp
.Rs
.%A B. Harris
.%D January 2006
.%R RFC 4345
.%T Improved Arcfour Modes for the Secure Shell (SSH) Transport Layer Protocol
.Re
.Pp
.Rs
.%A M. Friedl
.%A N. Provos
.%A W. Simpson
.%D March 2006
.%R RFC 4419
.%T Diffie-Hellman Group Exchange for the Secure Shell (SSH) Transport Layer Protocol
.Re
.Pp
.Rs
.%A J. Galbraith
.%A R. Thayer
.%D November 2006
.%R RFC 4716
.%T The Secure Shell (SSH) Public Key File Format
.Re
.Pp
.Rs
.%A D. Stebila
.%A J. Green
.%D December 2009
.%R RFC 5656
.%T Elliptic Curve Algorithm Integration in the Secure Shell Transport Layer
.Re
.Pp
.Rs
.%A A. Perrig
.%A D. Song
.%D 1999
.%O International Workshop on Cryptographic Techniques and E-Commerce (CrypTEC '99)
.%T Hash Visualization: a New Technique to improve Real-World Security
.Re
.Sh AUTHORS
OpenSSH 是 Tatu Ylonen 发布的原始免费 ssh 1.2.12 的衍生版本。 Aaron Campbell、Bob
Beck、Markus Friedl、Niels Provos、Theo de Raadt 和 Dug Song
删除了许多错误，重新添加了更新的特性并创建了 OpenSSH。 Markus Friedl 贡献了对 SSH 协议版本 1.5 和 2.0 的支持。
.Pp
.Sh [手册页中文版]
.Pp
本翻译为免费文档；阅读
.Lk https://www.gnu.org/licenses/gpl-3.0.html GNU 通用公共许可证第 3 版
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.Pp
该中文翻译由 wtklbm 根据个人学习需要制作
.Mt wtklbm<wtklbm@gmail.com>
.Pp
项目地址:
.Mt https://github.com/wtklbm/manpages-chinese
.Me 。
