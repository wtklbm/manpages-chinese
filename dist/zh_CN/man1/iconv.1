.\" -*- coding: UTF-8 -*-
.\" Copyright (C) 2014 Marko Myllynen <myllynen@redhat.com>
.\"
.\" SPDX-License-Identifier: GPL-2.0-or-later
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH iconv 1 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
iconv \- 将文本从一种字符编码转换为另一种字符编码
.SH SYNOPSIS
\fBiconv\fP [\fIoptions\fP] [\-f \fIfrom\-encoding\fP] [\-t \fIto\-encoding\fP]
[\fIinputfile\fP] ...
.SH DESCRIPTION
\fBiconv\fP 程序以一种编码读取文本并以另一种编码输出文本。 如果没有给出输入文件，或者如果它作为破折号 (\-) 给出，则 \fBiconv\fP
从标准输入读取。 如果没有给出输出文件，\fBiconv\fP 写入标准输出。
.PP
如果没有给出 \fIfrom\-encoding\fP，默认值是从当前语言环境的字符编码派生的。 如果没有给出
\fIto\-encoding\fP，默认值是从当前语言环境的字符编码派生的。
.SH OPTIONS
.TP 
\fB\-f\fP\fI from\-encoding\fP, \fB\-\-from\-code=\fP\fIfrom\-encoding\fP
使用 \fIfrom\-encoding\fP 输入字符。
.TP 
\fB\-t\fP\fI to\-encoding\fP, \fB\-\-to\-code=\fP\fIto\-encoding\fP
使用 \fIto\-encoding\fP 作为输出字符。
.IP
如果将字符串 \fB//IGNORE\fP 追加到 \fIto\-encoding\fP，则无法转换的字符将被丢弃，并在转换后打印错误。
.IP
如果将字符串 \fB//TRANSLIT\fP 追加到 \fIto\-encoding\fP，则在需要和可能的情况下会音译正在转换的字符。
这意味着当一个字符不能在目标字符集中表示时，可以通过一个或几个看起来相似的字符来近似。 目标字符集之外且无法音译的字符在输出中替换为问号 (?)。
.TP 
\fB\-l\fP, \fB\-\-list\fP
列出所有已知的字符集编码。
.TP 
\fB\-c\fP
静静地丢弃无法转换的字符，而不是在遇到此类字符时终止。
.TP 
\fB\-o\fP\fI outputfile\fP, \fB\-\-output=\fP\fIoutputfile\fP
使用 \fIoutputfile\fP 进行输出。
.TP 
\fB\-s\fP, \fB\-\-silent\fP
这个选项被忽略; 它只是为了兼容性而提供的。
.TP 
\fB\-\-verbose\fP
处理多个文件时打印关于标准错误的进度信息。
.TP 
\fB\-?\fP, \fB\-\-help\fP
打印用法总结并退出。
.TP 
\fB\-\-usage\fP
打印一个简短的用法总结并退出。
.TP 
\fB\-V\fP, \fB\-\-version\fP
打印 \fBiconv\fP 的版本号、许可证和免责声明。
.SH "EXIT STATUS"
成功为零，错误为非零。
.SH ENVIRONMENT
在内部，\fBiconv\fP 程序使用 \fBiconv\fP(3) 函数，后者又使用 \fIgconv\fP 模块 (动态加载的共享库) 在字符集之间进行转换。
在调用 \fBiconv\fP(3) 之前，\fBiconv\fP 程序必须先使用 \fBiconv_open\fP(3) 分配一个转换描述符。 后面的函数的运行受
\fBGCONV_PATH\fP 环境变量设置的影响:
.IP \[bu] 3
如果没有设置 \fBGCONV_PATH\fP，\fBiconv_open\fP(3) 加载 \fBiconvconfig\fP(8) 创建的系统 gconv
模块配置缓存文件，然后根据配置加载执行转换所需的 gconv 模块。 如果系统 gconv 模块配置缓存文件不可用，则使用系统 gconv
模块配置文件。
.IP \[bu]
如果定义了 \fBGCONV_PATH\fP (作为以冒号分隔的路径名列表)，则不使用系统 gconv 模块配置缓存。 相反，\fBiconv_open\fP(3)
首先尝试通过按顺序搜索 \fBGCONV_PATH\fP 中的目录来加载配置文件，然后是系统默认的 gconv 模块配置文件。 如果目录不包含 gconv
模块配置文件，则忽略它可能包含的任何 gconv 模块。 如果一个目录包含一个 gconv
模块配置文件，并且确定该转换所需的模块在该目录中可用，则从该目录加载所需的模块，顺序是使用在 \fBGCONV_PATH\fP 中找到的第一个合适的模块.
这允许用户使用自定义模块，甚至通过在 \fBGCONV_PATH\fP 目录中提供此类模块来替换系统提供的模块。
.SH FILES
.TP 
\fI/usr/lib/gconv\fP
通常默认的 gconv 模块路径。
.TP 
\fI/usr/lib/gconv/gconv\-modules\fP
通常系统默认的 gconv 模块配置文件。
.TP 
\fI/usr/lib/gconv/gconv\-modules.cache\fP
通常的系统 gconv 模块配置缓存。
.PP
根据体系结构，上述文件可能位于路径前缀为 \fI/usr/lib64\fP 的目录中。
.SH STANDARDS
POSIX.1\-2001.
.SH EXAMPLES
将文本从 ISO 8859\-15 字符编码转换为 UTF\-8:
.PP
.in +4n
.EX
$ \fBiconv \-f ISO\-8859\-15 \-t UTF\-8 < input.txt > output.txt\fP
.EE
.in
.PP
下一个示例将 UTF\-8 转换为 ASCII，并尽可能音译:
.PP
.in +4n
.EX
$ \fBecho abc ß α € àḃç | iconv \-f UTF\-8 \-t ASCII//TRANSLIT\fP
abc ss ? 欧元 abc
.EE
.in
.SH "SEE ALSO"
\fBlocale\fP(1), \fBuconv\fP(1), \fBiconv\fP(3), \fBnl_langinfo\fP(3), \fBcharsets\fP(7),
\fBiconvconfig\fP(8)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
