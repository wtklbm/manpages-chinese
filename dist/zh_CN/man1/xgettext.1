.\" -*- coding: UTF-8 -*-
.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.47.6.
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH XGETTEXT 1 "October 2022" "GNU gettext\-tools 0.21.1" "User Commands"
.SH NAME
xgettext \- 从源中提取 gettext 字符串
.SH SYNOPSIS
\fBxgettext\fP [\fI\,OPTION\/\fP] [\fI\,INPUTFILE\/\fP] ...
.SH DESCRIPTION
.\" Add any additional description here
.PP
从给定的输入文件中提取可翻译的字符串。
.PP
长选项的强制参数对于短选项也是强制性的。 同样对于可选的参数。
.SS "Input file location:"
.TP 
INPUTFILE ...
输入文件
.TP 
\fB\-f\fP, \fB\-\-files\-from\fP=\fI\,FILE\/\fP
从 FILE 获取输入文件列表
.TP 
\fB\-D\fP, \fB\-\-directory\fP=\fI\,DIRECTORY\/\fP
将 DIRECTORY 添加到输入文件搜索列表
.PP
如果输入文件是 \-，则读取标准输入。
.SS "Output file location:"
.TP 
\fB\-d\fP, \fB\-\-default\-domain\fP=\fI\,NAME\/\fP
使用 NAME.po 进行输出 (而不是 messages.po)
.TP 
\fB\-o\fP, \fB\-\-output\fP=\fI\,FILE\/\fP
将输出写入指定文件
.TP 
\fB\-p\fP, \fB\-\-output\-dir\fP=\fI\,DIR\/\fP
输出文件将放在目录 DIR 中
.PP
如果输出文件是 \-，则输出将写入标准输出。
.SS "Choice of input file language:"
.TP 
\fB\-L\fP, \fB\-\-language\fP=\fI\,NAME\/\fP
识别指定语言 (C, C++, ObjectiveC, PO, Shell, Python, Lisp, EmacsLisp, librep,
Scheme, Smalltalk, Java, JavaProperties, C#, awk, YCP, Tcl, Perl, PHP, Ruby,
GCC\-source, NXStringTable, RST, RSJ, Glade, Lua, JavaScript, Vala, 桌面)
.TP 
\fB\-C\fP, \fB\-\-c\fP++
\fB\-\-language\fP=\fI\,C\/\fP++ 的简写
.PP
默认情况下，根据输入文件扩展名猜测语言。
.SS "Input file interpretation:"
.TP 
\fB\-\-from\-code\fP=\fI\,NAME\/\fP
输入文件的编码 (Python、Tcl、Glade 除外)
.PP
默认情况下，输入文件被假定为 ASCII 格式。
.SS "Operation mode:"
.TP 
\fB\-j\fP, \fB\-\-join\-existing\fP
加入现有文件的消息
.TP 
\fB\-x\fP, \fB\-\-exclude\-file\fP=\fI\,FILE\/\fP.po
来自 FILE.po 的条目未被提取
.TP 
\fB\-cTAG\fP, \fB\-\-add\-comments\fP=\fI\,TAG\/\fP
在输出文件中放置以 TAG 开头和前面关键字行的注释块
.TP 
\fB\-c\fP, \fB\-\-add\-comments\fP
将所有注释块放在输出文件中的关键字行之前
.TP 
\fB\-\-check\fP=\fI\,NAME\/\fP
对消息执行语法检查 (省略号 \- unicode、空格 \- 省略号、
.IP
引用 unicode，子弹 unicode)
.TP 
\fB\-\-sentence\-end\fP=\fI\,TYPE\/\fP
描述句子结尾的类型 (单个空格，这是默认的，
.IP
或双空格)
.SS "Language specific options:"
.TP 
\fB\-a\fP, \fB\-\-extract\-all\fP
提取所有字符串 (仅语言
C、C++、ObjectiveC、Shell、Python、Lisp、EmacsLisp、librep、Scheme、Java、C#、awk、Tcl、Perl、PHP、GCC\-source、Glade、Lua、JavaScript、Vala)
.TP 
\fB\-kWORD\fP, \fB\-\-keyword\fP=\fI\,WORD\/\fP
寻找 WORD 作为附加关键字
.TP 
\fB\-k\fP, \fB\-\-keyword\fP
不要使用默认关键字 (仅语言
C、C++、ObjectiveC、Shell、Python、Lisp、EmacsLisp、librep、Scheme、Java、C#、awk、Tcl、Perl、PHP、GCC\-source、Glade、Lua、JavaScript、Vala，桌面)
.TP 
\fB\-\-flag\fP=\fI\,WORD\/\fP:ARG:FLAG
关键字 WORD 的参数 ARG 内字符串的附加标志
.TP 
(only languages C, C++, ObjectiveC, Shell,
Python, Lisp, EmacsLisp, librep, Scheme, Java, C#, awk, YCP, Tcl, Perl, PHP,
GCC\-source, Lua, JavaScript, Vala)
.TP 
\fB\-T\fP, \fB\-\-trigraphs\fP
理解输入的 ANSI C 三字母表 (仅限 C、C++、ObjectiveC 语言)
.TP 
\fB\-\-its\fP=\fI\,FILE\/\fP
从 FILE 应用 ITS 规则 (仅基于 XML 的语言)
.TP 
\fB\-\-qt\fP
识别 Qt 格式字符串 (仅限 C++ 语言)
.TP 
\fB\-\-kde\fP
识别 KDE 4 格式字符串 (仅限 C++ 语言)
.TP 
\fB\-\-boost\fP
识别 Boost 格式字符串 (仅限 C++ 语言)
.TP 
\fB\-\-debug\fP
更详细的格式字符串识别结果
.SS "Output details:"
.TP 
\fB\-\-color\fP
始终使用颜色和其他文本属性
.TP 
\fB\-\-color\fP=\fI\,WHEN\/\fP
如果 WHEN，则使用颜色和其他文本属性。 WHEN 可能是 'always'、'never'、'auto' 或 'html'。
.TP 
\fB\-\-style\fP=\fI\,STYLEFILE\/\fP
为 \fB\-\-color\fP 指定 CSS 样式规则文件
.TP 
\fB\-e\fP, \fB\-\-no\-escape\fP
不要在输出 (default) 中使用 C 转义符
.TP 
\fB\-E\fP, \fB\-\-escape\fP
在输出中使用 C 转义符，没有扩展字符
.TP 
\fB\-\-force\-po\fP
即使为空也写入 PO 文件
.TP 
\fB\-i\fP, \fB\-\-indent\fP
使用缩进样式编写 .po 文件
.TP 
\fB\-\-no\-location\fP
不要写 '#: filename:line' 行
.TP 
\fB\-n\fP, \fB\-\-add\-location\fP
生成 '#: filename:line' 行 (default)
.TP 
\fB\-\-strict\fP
写出严格符合 Uniforum 的 .po 文件
.TP 
\fB\-\-properties\-output\fP
写出一个 Java .properties 文件
.TP 
\fB\-\-stringtable\-output\fP
写出一个 NeXTstep/GNUstep .strings 文件
.TP 
\fB\-\-itstool\fP
写出它的工具评论
.TP 
\fB\-w\fP, \fB\-\-width\fP=\fI\,NUMBER\/\fP
设置输出页面宽度
.TP 
\fB\-\-no\-wrap\fP
不要将长于输出页面宽度的长消息行分成几行
.TP 
\fB\-s\fP, \fB\-\-sort\-output\fP
生成排序输出
.TP 
\fB\-F\fP, \fB\-\-sort\-by\-file\fP
按文件位置排序输出
.TP 
\fB\-\-omit\-header\fP
不要用 'msgid ""' 条目写标题
.TP 
\fB\-\-copyright\-holder\fP=\fI\,STRING\/\fP
在输出中设置版权所有者
.TP 
\fB\-\-foreign\-user\fP
为外国用户在输出中省略 FSF 版权
.TP 
\fB\-\-package\-name\fP=\fI\,PACKAGE\/\fP
在输出中设置包名称
.TP 
\fB\-\-package\-version\fP=\fI\,VERSION\/\fP
在输出中设置包版本
.TP 
\fB\-\-msgid\-bugs\-address\fP=\fI\,EMAIL\/\fP@ADDRESS
为 msgid 错误设置报告地址
.TP 
\fB\-m[STRING]\fP, \fB\-\-msgstr\-prefix\fP[=\fI\,STRING\/\fP]
使用 STRING 或 "" 作为 msgstr 值的前缀
.TP 
\fB\-M[STRING]\fP, \fB\-\-msgstr\-suffix\fP[=\fI\,STRING\/\fP]
使用 STRING 或 "" 作为 msgstr 值的后缀
.SS 信息输出:
.TP 
\fB\-h\fP, \fB\-\-help\fP
显示此帮助并退出
.TP 
\fB\-V\fP, \fB\-\-version\fP
输出版本信息并退出
.TP 
\fB\-v\fP, \fB\-\-verbose\fP
增加详细程度
.SH AUTHOR
由乌尔里希・德雷珀 (Ulrich Drepper) 撰写。
.SH "REPORTING BUGS"
通过 <https://savannah.gnu.org/projects/gettext> 或通过电子邮件向
<bug\-gettext@gnu.org> 报告错误跟踪器中的错误。
.SH COPYRIGHT
Copyright \(co 1995\-2022 Free Software Foundation, Inc.   License GPLv3+:
GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>
.br
这是免费软件: 您可以自由更改和重新分发它。 在法律允许的范围内，不提供任何保证。
.SH "SEE ALSO"
\fBxgettext\fP 的完整文档作为 Texinfo 手册进行维护。 如果 \fBinfo\fP 和 \fBxgettext\fP
程序在您的站点上正确安装，则命令
.IP
\fBinfo xgettext\fP
.PP
应该可以让您访问完整的手册。
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
