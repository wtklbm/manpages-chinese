.\" -*- coding: UTF-8 -*-
.\" -*- nroff -*-
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH GS 1 "21 September 2022" 10.00.0 Ghostscript
.SH NAME
gs\-Ghostscript (PostScript 和 PDF 语言解释器和预览器)
.SH SYNOPSIS
\fBgs\fP [ \fIoptions\fP ] [ \fIfiles\fP ] ...  \fB(Unix, VMS)\fP
.br
\fBgswin32c\fP [ \fIoptions\fP ] [ \fIfiles\fP ] ...  \fB(MS Windows)\fP
.br
\fBgswin32\fP [ \fIoptions\fP ] [ \fIfiles\fP ] ...  \fB(MS Windows 3.1)\fP
.br
\fBgsos2\fP [ \fIoptions\fP ] [ \fIfiles\fP ] ...  \fB(OS/2)\fP
.de  TQ
.br
.ns
.TP \\$1
..
.SH DESCRIPTION
\fBgs\fP (\fBgswin32c\fP、\fBgswin32\fP、\fBgsos2\fP) 命令调用 \fBGhostscript\fP，它是 Adobe Systems
的 \fBPostScript\fP(tm) 和 \fBPortable Document Format\fP (PDF) 语言的解释器。 \fBgs\fP 依次读取
"files" 并将它们作为 Ghostscript 程序执行。这样做之后，它从标准输入流 (通常是键盘)
读取进一步的输入，分别解释每一行并输出到输出设备 (可能是文件或 X11 窗口预览，见下文)。当解释器遇到 "quit" 命令
(在文件中或来自键盘)、文件末尾或中断信号 (例如键盘上的 Control\-C) 时，它会正常退出。
.PP
解释器识别许多选项开关，其中一些在下面描述。请参见使用文档以获取完整信息。开关可能出现在命令行中的任何位置，并应用于此后的所有文件。 使用 \fB\-h\fP
或 \fB\-?\fP 开关调用 Ghostscript 会产生一条消息，其中显示几个有用的开关、该可执行文件已知的所有设备以及字体的搜索路径; 在 Unix
上，它还显示了详细文档的位置。
.PP
Ghostscript 可以构建为使用许多不同的输出设备。 要查看您的可执行文件包含哪些设备，请运行 "\fBgs \-h\fP"。
.PP
除非您指定特定设备，否则 Ghostscript 通常会打开其中的第一个设备并将输出定向到它。
.PP
如果使用 X11 支持构建，通常默认设备是 X11 窗口 (previewer)，否则 ghostscript 通常会使用 bbox 设备并在
stdout 上打印 postscript 文件的尺寸。
.PP
因此，如果列表中的第一个是您要使用的，只需发出命令
.PP
.nf
	gs myfile.ps
.fi
.PP
您还可以从 Ghostscript 中检查可用设备集: 调用 Ghostscript 并键入
.PP
.nf
	devicenames ==
.fi
.PP
但结果列表中的第一个设备可能不是您使用 "\fBgs \-h\fP" 确定的默认设备。 要将 "AbcXyz" 指定为初始输出设备，请包含开关
.PP
.nf
	\-sDEVICE=AbcXyz
.fi
.PP
例如，要输出到 Epson 打印机，您可以使用命令
.PP
.nf
	gs \-sDEVICE=epson myfile.ps
.fi
.PP
"\-sDEVICE=" 开关必须在第一次提到要打印的文件之前，并且只有第一次使用开关才有效果。
.PP
最后，您可以在环境变量 \fBGS_DEVICE\fP 中指定一个默认设备。 这些备选方案的优先顺序从最高到最低 (Ghostscript
使用列表中定义最高的设备) 是:
.PP
一些设备可以支持不同的分辨率 (densities)。 要在此类打印机上指定分辨率，请使用 "\-r" 开关:
.PP
.nf
	gs \-sDEVICE=<device> \-r<xres>x<yres>
.fi
.PP
例如，在 9 针 Epson 兼容打印机上，您可以获得最低密度的 (fastest) 模式
.PP
.nf
	gs \-sDEVICE=epson \-r60x72
.fi
.PP
和最高密度 (最佳输出质量) 模式
.PP
.nf
	gs\-sDEVICE = 爱普生 \-r240x72。
.fi
.PP
如果您选择一台打印机作为输出设备，Ghostscript 还允许您选择 Ghostscript 将输出发送到哪里 \-\- 在 Unix
系统上，通常是一个临时文件。 要将输出发送到文件 "foo.xyz"，请使用开关
.PP
.nf
	\-sOutputFile=foo.xyz
.fi
.PP
您可能希望单独打印每一页。 为此，在文件名模板中使用 "\-sOutputFile=" 开关和 "%d" 将输出发送到一系列文件 "foo1.xyz,
foo2.xyz, ...":
.PP
.nf
	\-sOutputFile=foo%d.xyz
.fi
.PP
每个生成的文件都会收到一页输出，并且文件按顺序编号。 "%d" 是 printf 格式规范; 您还可以使用像 "%02d" 这样的变体。
.PP
在 Unix 和 MS Windows 系统上，您还可以将输出发送到管道。 例如，要将输出通过管道传递给 "\fBlpr\fP" 命令 (在许多 Unix
系统上，它会将其定向到打印机)，请使用选项
.PP
.nf
	\-sOutputFile=%pipe%lpr
.fi
.PP
请注意，'%' 字符需要在 MS Windows 上加倍以避免被命令解释器破坏。
.PP
您还可以将输出发送到标准输出:
.PP
.nf
	\-sOutputFile=\-
.fi
or
.nf
	\-sOutputFile=%stdout%
.fi
.PP
在这种情况下，您还必须使用 \fB\-q\fP 开关，以防止 Ghostscript 将消息写入标准输出。
.PP
要选择特定的纸张尺寸，请使用命令行开关
.PP
.nf
	\-sPAPERSIZE=<paper_size>
.fi
.PP
例如
.PP
.nf
	\-sPAPERSIZE=a4
.fi
or
.nf
	\-sPAPERSIZE=legal
.fi
.PP
可以识别大多数 ISO 和 US 纸张尺寸。有关完整列表或初始化文件 "gs_statd.ps" 中的定义，请参见使用文档。
.PP
除了打印或查看 PostScript 和 PDF 文件外，Ghostscript 还可以做很多事情。 例如，如果您想知道 PostScript (或
EPS) 文件的边界 box，Ghostscript 提供了一个特殊的 "device"，它只打印出此信息。
.PP
例如，使用随 Ghostscript 分发的示例文件之一，
.PP
.nf
	gs \-sDEVICE=bbox golfer.ps
.fi
.PP
打印出来
.PP
.nf
	%% 边界框: 0 25 583 732
	%%HiResBoundingBox: 0.808497 25.009496 582.994503 731.809445
.fi
.SH OPTIONS
.TP 
\fB\-\-\fP\fI filename arg1 ...\fP
像往常一样将下一个参数作为文件名，但将所有剩余的参数 (即使它们具有开关的语法形式) 并在 "userdict" (不是 "systemdict")
中定义名称 "ARGUMENTS" 作为这些字符串的数组，\fBbefore\fP 运行文件。 当 Ghostscript 执行完文件后，它会退回到
shell。
.TP 
\fB\-D\fP\fIname\fP\fB=\fP\fItoken\fP
.TQ
\fB\-d\fP\fIname\fP\fB=\fP\fItoken\fP
使用给定的定义在 "systemdict" 中定义一个名称。 token 必须恰好是一个 token (由 "token" 运算符定义)
并且可能不包含空格。
.TP 
\fB\-D\fP\fIname\fP
.TQ
\fB\-d\fP\fIname\fP
在 "systemdict" 中定义一个名称，值为 null。
.TP 
\fB\-S\fP\fIname\fP\fB=\fP\fIstring\fP
.TQ
\fB\-s\fP\fIname\fP\fB=\fP\fIstring\fP
使用给定字符串作为值在 "systemdict" 中定义名称。 这与 \fB\-d\fP 不同。 例如 \fB\-dname=35\fP 相当于程序片段
.br
  / 名称 35 防御
.br
而 \fB\-sname=35\fP 相当于
.br
  / 名称 (35) def
.TP 
\fB\-P\fP
使 Ghostscript 首先在当前目录中查找库文件。 默认情况下，Ghostscript 不再在当前目录中查找，当然，除非第一个明确提供的目录是
\fB\-I\fP 中的 "."。 另请参见下面的 \fBINITIALIZATION FILES\fP 部分和捆绑的 \fBUse.htm\fP，以详细讨论搜索路径和
Ghostcript 如何查找文件。
.TP 
\fB\-q\fP
Quiet startup: 抑制正常的启动信息，也相当于 \fB\-dQUIET\fP。
.TP 
\fB\-g\fP\fInumber1\fP\fBx\fP\fInumber2\fP
相当于 \fB\-dDEVICEWIDTH=\fP\fInumber1\fP 和 \fB\-dDEVICEHEIGHT=\fP\fInumber2\fP。 这是为了需要 (或允许)
指定宽度和高度的设备 (例如 X11 windows)。
.TP 
\fB\-r\fP\fInumber\fP
.TQ
\fB\-r\fP\fInumber1\fP\fBx\fP\fInumber2\fP
相当于 \fB\-dDEVICEXRESOLUTION=\fP\fInumber1\fP 和 \fB\-dDEVICEYRESOLUTION=\fP\fInumber2\fP。
这是为了支持多种 X 和 Y 分辨率的设备 (例如打印机)。 如果只给出一个数字，则它用于 X 和 Y 分辨率。
.TP 
\fB\-I\fP\fIdirectories\fP
在库文件的搜索路径的开头添加指定的目录列表。
.TP 
\fB\-\fP
这并不是一个真正的开关，而是向 Ghostscript 表明标准输入来自文件或管道，而不是交互式地来自命令行。 Ghostscript
从标准输入读取直到到达文件末尾，像执行任何其他文件一样执行它，然后继续处理命令行。 当命令行被完全处理后，Ghostscript
退出而不是进入交互模式。
.PP
请注意，正常的初始化文件 "gs_init.ps" 将 "systemdict" 设为只读，因此无法更改用 \fB\-D\fP、\fB\-d\fP、\fB\-S\fP 或
\fB\-s\fP 定义的名称的值 (当然，它们可以被 "userdict" 或其他词典中的定义所取代。)
.SH "SPECIAL NAMES"
.TP 
\fB\-dNOCACHE\fP
禁用字符缓存。 仅对调试有用。
.TP 
\fB\-dNOBIND\fP
禁用 "bind" 运算符。 仅对调试有用。
.TP 
\fB\-dNODISPLAY\fP
禁止输出设备的正常初始化。 这在调试时可能很有用。
.TP 
\fB\-dNOPAUSE\fP
禁用每页末尾的提示和暂停。 这对于另一个程序正在驱动 Ghostscript 的应用程序可能是可取的。
.TP 
\fB\-dNOPLATFONTS\fP
禁止使用底层平台提供的字体 (例如 X Windows)。如果平台字体看起来与可缩放字体有明显不同，则可能需要这样做。
.TP 
\fB\-dSAFER\fP
限制作业可以执行的文件操作。现在默认的操作方式。
.TP 
\fB\-dWRITESYSTEMDICT\fP
使 "systemdict" 可写。 这在运行特殊实用程序时是必需的，但强烈建议不要这样做，因为它会绕过正常的 Postscript 安全措施。
.TP 
\fB\-sDEVICE=\fP\fIdevice\fP
如上所述，选择备用初始输出设备。
.TP 
\fB\-sOutputFile=\fP\fIfilename\fP
如上所述，为初始输出设备选择备用输出文件 (或管道)。
.SH "SAFER MODE"
.PP
\fB\-dSAFER\fP 选项限制文件系统访问相关环境变量 (如 GS_LIB) 或命令行参数 (详见
https://ghostscript.com/doc/current/Use.htm) 允许的那些文件和目录。
.PP
SAFER 模式现在是默认操作模式。因此，当运行需要打开文件或设置受限参数的程序时，您应该传递 \fB\-dNOSAFER\fP 命令行选项或其同义词
\fB\-dDELAYSAFER\fP。
.PP
使用 NOSAFER/DELAYSAFER 运行 (同样建议)
会降低安全性，因此仅建议用于调试或在非常受控的工作流程中，强烈不建议在任何其他情况下使用。
.SH FILES
.PP
许多 Ghostscript 运行时文件的位置在构建时被编译到可执行文件中。 在 Unix 上，这些通常基于
\fB/usr/local\fP，但这在您的系统上可能有所不同。 在 DOS 下，它们通常基于 \fBC:\eGS\fP，但也可能位于其他位置，特别是如果您使用
\fBGSview\fP 安装 Ghostscript。 运行 "\fBgs \-h\fP" 以查找 Ghostscript
文档在您的系统上的位置，您可以从中获取更多详细信息。
.TP 
\fB/usr/local/share/ghostscript/#.##/*\fP
启动文件、实用工具和基本字体定义
.TP 
\fB/usr/local/share/ghostscript/fonts/*\fP
更多字体定义
.TP 
\fB/usr/local/share/ghostscript/#.##/examples/*\fP
Ghostscript 演示文件
.TP 
\fB/usr/local/share/ghostscript/#.##/doc/*\fP
多样化的文档文件
.SH "INITIALIZATION FILES"
在查找初始化文件 "gs_*.ps"、与字体相关的文件或 "run" 运算符的文件时，Ghostscript
首先尝试使用给定名称打开文件，如果未指定目录，则使用当前工作目录。 如果失败，并且文件名没有指定明确的目录或驱动器 (例如，不包含 Unix 系统上的
"/" 或 MS Windows 系统上的 "\e")，Ghostscript 会按以下顺序尝试目录:
.TP  4
1.
命令行中 \fB\-I\fP 开关指定的目录 (见下文)，如果有的话;
.TP 
2.
\fBGS_LIB\fP 环境变量指定的目录 (如果有) ;
.TP 
3.
生成可执行文件时由 Ghostscript 生成文件中的 \fBGS_LIB_DEFAULT\fP 宏指定的目录。 当 \fBgs\fP 建立在 Unix
上时，\fBGS_LIB_DEFAULT\fP 通常是
"/usr/local/share/ghostscript/#.##:/usr/local/share/ghostscript/fonts"，其中
"#.##" 代表 Ghostscript 版本号。
.PP
这些 (\fBGS_LIB_DEFAULT\fP、\fBGS_LIB\fP 和 \fB\-I\fP 参数中的每一个都可以是单个目录或由 ":" 分隔的目录列表。
.SH ENVIRONMENT
.TP 
\fBGS_OPTIONS\fP
在命令行选项之前要处理的选项字符串
.TP 
\fBGS_DEVICE\fP
用于指定输出设备
.TP 
\fBGS_FONTPATH\fP
用于搜索字体的路径名
.TP 
\fBGS_LIB\fP
初始化文件和字体的路径名
.TP 
\fBTEMP\fP
制作临时文件的地方
.SH "X RESOURCES"
Ghostscript，或更准确地说是 X11 显示设备，在程序名称 "Ghostscript" 下查找以下资源:
.TP 
\fBborderWidth\fP
以像素为单位的边框宽度 (默认值 = 1)。
.TP 
\fBborderColor\fP
边框颜色的名称 (默认 = 黑色)。
.TP 
\fBgeometry\fP
窗口大小和位置，WxH+X+Y (默认为 NULL)。
.TP 
\fBxResolution\fP
每英寸 x 像素数 (默认值是根据 \fBWidthOfScreen\fP 和 \fBWidthMMOfScreen\fP) 计算的。
.TP 
\fByResolution\fP
每英寸 y 像素数 (默认值是根据 \fBHeightOfScreen\fP 和 \fBHeightMMOfScreen\fP) 计算的。
.TP 
\fBuseBackingPixmap\fP
确定后备存储是否用于保存显示窗口 (默认值 = true)。
.PP
有关更完整的资源列表，请参见使用文档。 要在 Unix 上设置这些资源，将它们以如下形式放在一个文件中，例如 "~/.Xresources":
.PP
.nf
	Ghostscript* 几何: 612x792\-0+0
	Ghostscript*x 分辨率: 72
	Ghostscript*y 分辨率: 72
.fi
.PP
然后将这些资源合并到 X 服务器的资源数据库中:
.PP
.nf
	% xrdb \-merge ~/.Xresources
.fi
.SH "SEE ALSO"
各种 Ghostscript 文档文件 (above)，尤其是 \fBUse.htm\fP。
.SH BUGS
See http://bugs.ghostscript.com/ 和 Usenet 新闻组 comp.lang.postscript。
.SH VERSION
本文档最后针对 Ghostscript 版本 10.00.0 进行了修订。
.SH AUTHOR
Artifex 软件公司 是 Ghostscript 的主要维护者。 拉塞尔・J。Lang，ghostgum.com.au 的 gsview，是
Ghostscript 中大部分 MS Windows 代码的作者。
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
