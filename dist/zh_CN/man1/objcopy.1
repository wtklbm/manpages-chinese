.\" -*- coding: UTF-8 -*-
.de  Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.\" Automatically generated by Pod::Man 4.14 (Pod::Simple 3.43)
.\"
.\" Standard preamble:
.\" ========================================================================
.de  Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de  Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie  n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
.    ds C`
.    ds C'
'br\}
.ie  \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.de  IX
..
.\"
.\" If the F register is >0, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.\"
.\" Avoid warning from groff about undefined register 'F'.
.nr rF 0
.if  \n(.g .if rF .nr rF 1
.if  (\n(rF:(\n(.g==0)) \{\
.    if \nF \{\
.        de IX
.        tm Index:\\$1\t\\n%\t"\\$2"
..
.        if !\nF==2 \{\
.            nr % 0
.            nr F 2
.        \}
.    \}
.\}
.rr rF
.\" fudge factors for nroff and troff
.    
.if  n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.if  t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.\" simple accents for nroff and troff
.    
.if  n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if  t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.\" troff and (daisy-wheel) nroff accents
.    
.ds : \k:\h'-(\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \k:\h'-(\n(.wu+\w'\(de'u\-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\fI\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.\" corrections for vroff
.    
.if  v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if  v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.\" for low resolution devices (crt and lpr)
.    
.if  \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "OBJCOPY 1"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH OBJCOPY 1 2023\-02\-03 binutils\-2.40 "GNU Development Tools"
.if  n .ad l
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.nh
.SH NAME
objcopy \- 复制和翻译目标文件
.SH SYNOPSIS
.IX Header SYNOPSIS
对象复制 [\fB\-F\fP \fIbfdname\fP|\fB\-\-target=\fP\fIbfdname\fP]
        [\fB\-I\fP \fIbfdname\fP|\fB\-\-input\-target=\fP\fIbfdname\fP]
        [\fB\-O\fP \fIbfdname\fP|\fB\-\-output\-target=\fP\fIbfdname\fP]
        [\fB\-B\fP \fIbfdarch\fP|\fB\-\-binary\-architecture=\fP\fIbfdarch\fP]
        [\fB\-S\fP|\fB\-\-strip\-all\fP]
        [\fB\-g\fP|\fB\-\-strip\-debug\fP]
        [\fB\-\-strip\-unneeded\fP]
        [\fB\-K\fP \fIsymbolname\fP|\fB\-\-keep\-symbol=\fP\fIsymbolname\fP]
        [\fB\-\-keep\-file\-symbols\fP]
        [\fB\-\-keep\-section\-symbols\fP]
        [\fB\-N\fP \fIsymbolname\fP|\fB\-\-strip\-symbol=\fP\fIsymbolname\fP]
        [\fB\-\-strip\-unneeded\-symbol=\fP\fIsymbolname\fP]
        [\fB\-G\fP \fIsymbolname\fP|\fB\-\-keep\-global\-symbol=\fP\fIsymbolname\fP]
        [\fB\-\-localize\-hidden\fP]
        [\fB\-L\fP \fIsymbolname\fP|\fB\-\-localize\-symbol=\fP\fIsymbolname\fP]
        [\fB\-\-globalize\-symbol=\fP\fIsymbolname\fP]
        [\fB\-\-globalize\-symbols=\fP\fIfilename\fP]
        [\fB\-W\fP \fIsymbolname\fP|\fB\-\-weaken\-symbol=\fP\fIsymbolname\fP]
        [\fB\-w\fP|\fB\-\-wildcard\fP]
        [\fB\-x\fP|\fB\-\-discard\-all\fP]
        [\fB\-X\fP|\fB\-\-discard\-locals\fP]
        [\fB\-b\fP \fIbyte\fP|\fB\-\-byte=\fP\fIbyte\fP]
        [\fB\-i\fP [\fIbreadth\fP]|\fB\-\-interleave\fP[=\fIbreadth\fP]]
        [\fB\-\-interleave\-width=\fP\fIwidth\fP]
        [\fB\-j\fP \fIsectionpattern\fP|\fB\-\-only\-section=\fP\fIsectionpattern\fP]
        [\fB\-R\fP \fIsectionpattern\fP|\fB\-\-remove\-section=\fP\fIsectionpattern\fP]
        [\fB\-\-keep\-section=\fP\fIsectionpattern\fP]
        [\fB\-\-remove\-relocations=\fP\fIsectionpattern\fP]
        [\fB\-p\fP|\fB\-\-preserve\-dates\fP]
        [\fB\-D\fP|\fB\-\-enable\-deterministic\-archives\fP]
        [\fB\-U\fP|\fB\-\-disable\-deterministic\-archives\fP]
        [\fB\-\-debugging\fP]
        [\fB\-\-gap\-fill=\fP\fIval\fP]
        [\fB\-\-pad\-to=\fP\fIaddress\fP]
        [\fB\-\-set\-start=\fP\fIval\fP]
        [\fB\-\-adjust\-start=\fP\fIincr\fP]
        [\fB\-\-change\-addresses=\fP\fIincr\fP]
        [\fB\-\-change\-section\-address\fP \fIsectionpattern\fP{=,+,\-}\fIval\fP]
        [\fB\-\-change\-section\-lma\fP \fIsectionpattern\fP{=,+,\-}\fIval\fP]
        [\fB\-\-change\-section\-vma\fP \fIsectionpattern\fP{=,+,\-}\fIval\fP]
        [\fB\-\-change\-warnings\fP] [\fB\-\-no\-change\-warnings\fP]
        [\fB\-\-set\-section\-flags\fP \fIsectionpattern\fP=\fIflags\fP]
        [\fB\-\-set\-section\-alignment\fP \fIsectionpattern\fP=\fIalign\fP]
        [\fB\-\-add\-section\fP \fIsectionname\fP=\fIfilename\fP]
        [\fB\-\-dump\-section\fP \fIsectionname\fP=\fIfilename\fP]
        [\fB\-\-update\-section\fP \fIsectionname\fP=\fIfilename\fP]
        [\fB\-\-rename\-section\fP \fIoldname\fP=\fInewname\fP[,\fIflags\fP]]
        [\fB\-\-long\-section\-names\fP {enable,disable,keep}]
        [\fB\-\-change\-leading\-char\fP] [\fB\-\-remove\-leading\-char\fP]
        [\fB\-\-reverse\-bytes=\fP\fInum\fP]
        [\fB\-\-srec\-len=\fP\fIival\fP] [\fB\-\-srec\-forceS3\fP]
        [\fB\-\-redefine\-sym\fP \fIold\fP=\fInew\fP]
        [\fB\-\-redefine\-syms=\fP\fIfilename\fP]
        [\fB\-\-weaken\fP]
        [\fB\-\-keep\-symbols=\fP\fIfilename\fP]
        [\fB\-\-strip\-symbols=\fP\fIfilename\fP]
        [\fB\-\-strip\-unneeded\-symbols=\fP\fIfilename\fP]
        [\fB\-\-keep\-global\-symbols=\fP\fIfilename\fP]
        [\fB\-\-localize\-symbols=\fP\fIfilename\fP]
        [\fB\-\-weaken\-symbols=\fP\fIfilename\fP]
        [\fB\-\-add\-symbol\fP \fIname\fP=[\fIsection\fP:]\fIvalue\fP[,\fIflags\fP]]
        [\fB\-\-alt\-machine\-code=\fP\fIindex\fP]
        [\fB\-\-prefix\-symbols=\fP\fIstring\fP]
        [\fB\-\-prefix\-sections=\fP\fIstring\fP]
        [\fB\-\-prefix\-alloc\-sections=\fP\fIstring\fP]
        [\fB\-\-add\-gnu\-debuglink=\fP\fIpath\-to\-file\fP]
        [\fB\-\-only\-keep\-debug\fP]
        [\fB\-\-strip\-dwo\fP]
        [\fB\-\-extract\-dwo\fP]
        [\fB\-\-extract\-symbol\fP]
        [\fB\-\-writable\-text\fP]
        [\fB\-\-readonly\-text\fP]
        [\fB\-\-pure\fP]
        [\fB\-\-impure\fP]
        [\fB\-\-file\-alignment=\fP\fInum\fP]
        [\fB\-\-heap=\fP\fIsize\fP]
        [\fB\-\-image\-base=\fP\fIaddress\fP]
        [\fB\-\-section\-alignment=\fP\fInum\fP]
        [\fB\-\-stack=\fP\fIsize\fP]
        [\fB\-\-subsystem=\fP\fIwhich\fP:\fImajor\fP.\fIminor\fP]
        [\fB\-\-compress\-debug\-sections\fP]
        [\fB\-\-decompress\-debug\-sections\fP]
        [\fB\-\-elf\-stt\-common=\fP\fIval\fP]
        [\fB\-\-merge\-notes\fP]
        [\fB\-\-no\-merge\-notes\fP]
        [\fB\-\-verilog\-data\-width=\fP\fIval\fP]
        [\fB\-v\fP|\fB\-\-verbose\fP]
        [\fB\-V\fP|\fB\-\-version\fP]
        [\fB\-\-help\fP] [\fB\-\-info\fP]
        [\fB\-\-add\-symbol\fP \fIname\fP=[\fIsection\fP:]\fIvalue\fP[,\fIflags\fP]]
.SH DESCRIPTION
.IX Header DESCRIPTION
\s-1GNU\s0 \fBobjcopy\fP 实用程序将目标文件的内容复制到另一个。 \fBobjcopy\fP 使用 \s-1GNU BFD\s0
库来读写目标文件。 它可以用不同于源目标文件的格式写入目标目标文件。 \fBobjcopy\fP 的确切行为由命令行选项控制。 请注意，\fBobjcopy\fP
应该能够在任何两种格式之间复制完全链接的文件。但是，在任何两种格式之间复制可重定位目标文件可能无法按预期工作。
.PP
\&\fBobjcopy\fP 创建临时文件来进行翻译，然后将其删除。 \fBobjcopy\fP 使用 \s-1BFD\s0 完成所有翻译工作; 它可以访问
\s-1BFD\s0 中描述的所有格式，因此无需明确告知即可识别大多数格式。
.PP
\&\fBobjcopy\fP 可用于通过使用 \fBsrec\fP 的输出目标 (例如，使用 \fB\-O srec\fP).
.PP
\&\fBobjcopy\fP 可用于通过使用 \fBbinary\fP 的输出目标生成原始二进制文件 (例如，使用 \fB\-O binary\fP).  当
\&\fBobjcopy\fP 生成原始二进制文件时，它实际上会生成输入目标文件内容的内存转储。 所有符号和重定位信息都将被丢弃。
内存转储将从复制到输出文件的最低部分的加载地址开始。
.PP
生成 S\-record 或原始二进制文件时，使用 \fB\-S\fP 删除包含调试信息的部分可能会有所帮助。 在某些情况下，\fB\-R\fP
将有助于删除包含二进制文件不需要的信息的部分。
.PP
Note\-\-\-\fBobjcopy\fP 无法更改其输入文件的字节顺序。 如果输入格式具有字节序 (有些格式没有)，\&\fBobjcopy\fP
只能将输入复制到具有相同字节序或没有字节序的文件格式 (例如，\fBsrec\fP).  (但是，请参见 \fB\-\-reverse\-bytes\fP 选项。)
.SH OPTIONS
.IX Header OPTIONS
.IP \fIinfile\fP 4
.IX Item infile
.PD 0
.IP \fIoutfile\fP 4
.IX Item outfile
.PD
分别是输入和输出文件。 如果您不指定 \fIoutfile\fP，\fBobjcopy\fP 会创建一个临时文件，并破坏性地将结果重命名为 \fIinfile\fP。
.IP "\fB\-I\fP \fIbfdname\fP" 4
.IX Item "\-I bfdname"
.PD 0
.IP \fB\-\-input\-target=\fP\fIbfdname\fP 4
.IX Item \-\-input\-target=bfdname
.PD
将源文件的目标格式视为 \fIbfdname\fP，而不是试图推断它。
.IP "\fB\-O\fP \fIbfdname\fP" 4
.IX Item "\-O bfdname"
.PD 0
.IP \fB\-\-output\-target=\fP\fIbfdname\fP 4
.IX Item \-\-output\-target=bfdname
.PD
使用对象格式 \fIbfdname\fP 写入输出文件。
.IP "\fB\-F\fP \fIbfdname\fP" 4
.IX Item "\-F bfdname"
.PD 0
.IP \fB\-\-target=\fP\fIbfdname\fP 4
.IX Item \-\-target=bfdname
.PD
使用 \fIbfdname\fP 作为输入和输出文件的对象格式; 即，只需将数据从源传输到目标，无需转换。
.IP "\fB\-B\fP \fIbfdarch\fP" 4
.IX Item "\-B bfdarch"
.PD 0
.IP \fB\-\-binary\-architecture=\fP\fIbfdarch\fP 4
.IX Item \-\-binary\-architecture=bfdarch
.PD
在将无体系结构的输入文件转换为目标文件时很有用。 在这种情况下，输出架构可以设置为 \fIbfdarch\fP。 如果输入文件有一个已知的
\fIbfdarch\fP，这个选项将被忽略。 您可以通过引用由转换过程创建的特殊符号来访问程序内部的二进制数据。 这些符号称为
_binary_\fIobjfile\fP_start、_binary_\fIobjfile\fP_end 和
_binary_\fIobjfile\fP_size。例如，您可以将图片文件转换为目标文件，然后使用这些符号在您的代码中访问它。
.IP "\fB\-j\fP \fIsectionpattern\fP" 4
.IX Item "\-j sectionpattern"
.PD 0
.IP \fB\-\-only\-section=\fP\fIsectionpattern\fP 4
.IX Item \-\-only\-section=sectionpattern
.PD
仅将指定的部分从输入文件复制到输出文件。 可以多次给出此选项。 请注意，不恰当地使用此选项可能会导致输出文件无法使用。
\fIsectionpattern\fP 接受通配符。
.Sp
如果 \fIsectionpattern\fP 的第一个字符是感叹号 (!)，则不会复制匹配的部分，即使之前在同一命令行上使用
\fB\-\-only\-section\fP 也会复制它。 例如:
.Sp
.Vb 1
\& \-\-only\-section=.text.* \-\-only\-section=!.text.foo
.Ve
.Sp
将复制所有与 '.text.*' 匹配的节，但不复制 \&'.text.foo' 部分。
.IP "\fB\-R\fP \fIsectionpattern\fP" 4
.IX Item "\-R sectionpattern"
.PD 0
.IP \fB\-\-remove\-section=\fP\fIsectionpattern\fP 4
.IX Item \-\-remove\-section=sectionpattern
.PD
从输出文件中删除与 \fIsectionpattern\fP 匹配的任何部分。 可以多次给出此选项。 请注意，不恰当地使用此选项可能会导致输出文件无法使用。
\fIsectionpattern\fP 接受通配符。 同时使用 \&\fB\-j\fP 和 \fB\-R\fP 选项会导致未定义的行为。
.Sp
如果 \fIsectionpattern\fP 的第一个字符是感叹号 (!)，那么匹配的部分将不会被删除，即使之前在同一命令行上使用
\fB\-\-remove\-section\fP 会以其他方式删除它。 例如:
.Sp
.Vb 1
\& \-\-remove\-section=.text.* \-\-remove\-section=!.text.foo
.Ve
.Sp
将删除与模式 '.text.*' 匹配的所有部分，但不会删除部分 '.text.foo'。
.IP \fB\-\-keep\-section=\fP\fIsectionpattern\fP 4
.IX Item \-\-keep\-section=sectionpattern
从输出文件中删除部分时，保留与 \&\fIsectionpattern\fP 匹配的部分。
.IP \fB\-\-remove\-relocations=\fP\fIsectionpattern\fP 4
.IX Item \-\-remove\-relocations=sectionpattern
从输出文件中删除与 \fIsectionpattern\fP 匹配的任何部分的非动态重定位。 可以多次给出此选项。
请注意，不恰当地使用此选项可能会使输出文件无法使用，并且尝试从具有 \&\fB\-\-remove\-relocations=.plt\fP
的可执行文件或共享库中删除动态重定位部分 (例如 \fB.rela.plt\fP) 将不起作用。 \fIsectionpattern\fP 接受通配符。 例如:
.Sp
.Vb 1
\& \-\-remove\-relocations=.text.*
.Ve
.Sp
将删除与模式 \&'.text.*' 匹配的所有部分的重定位。
.Sp
如果 \fIsectionpattern\fP 的第一个字符是感叹号 (!)，则匹配的部分将不会删除其重定位，即使之前在同一命令行上使用
\fB\-\-remove\-relocations\fP 会导致重定位被删除。 例如:
.Sp
.Vb 1
\& \-\-remove\-relocations=.text.* \-\-remove\-relocations=!.text.foo
.Ve
.Sp
将删除与模式 \&'.text.*' 匹配的部分的所有重定位，但不会删除部分 \&'.text.foo' 的重定位。
.IP \fB\-S\fP 4
.IX Item \-S
.PD 0
.IP \fB\-\-strip\-all\fP 4
.IX Item \-\-strip\-all
.PD
不要从源文件中复制重定位和符号信息。 还删除调试部分。
.IP \fB\-g\fP 4
.IX Item \-g
.PD 0
.IP \fB\-\-strip\-debug\fP 4
.IX Item \-\-strip\-debug
.PD
不要从源文件中复制调试符号或部分。
.IP \fB\-\-strip\-unneeded\fP 4
.IX Item \-\-strip\-unneeded
除了调试符号和 \&\fB\-\-strip\-debug\fP 剥离的部分之外，删除所有重定位处理不需要的符号。
.IP "\fB\-K\fP \fIsymbolname\fP" 4
.IX Item "\-K symbolname"
.PD 0
.IP \fB\-\-keep\-symbol=\fP\fIsymbolname\fP 4
.IX Item \-\-keep\-symbol=symbolname
.PD
剥离符号时，保留符号 \fIsymbolname\fP，即使它通常会被剥离。 可以多次给出此选项。
.IP "\fB\-N\fP \fIsymbolname\fP" 4
.IX Item "\-N symbolname"
.PD 0
.IP \fB\-\-strip\-symbol=\fP\fIsymbolname\fP 4
.IX Item \-\-strip\-symbol=symbolname
.PD
不要从源文件中复制符号 \fIsymbolname\fP。 可以多次给出此选项。
.IP \fB\-\-strip\-unneeded\-symbol=\fP\fIsymbolname\fP 4
.IX Item \-\-strip\-unneeded\-symbol=symbolname
除非重定位需要，否则不要从源文件中复制符号 \fIsymbolname\fP。 可以多次给出此选项。
.IP "\fB\-G\fP \fIsymbolname\fP" 4
.IX Item "\-G symbolname"
.PD 0
.IP \fB\-\-keep\-global\-symbol=\fP\fIsymbolname\fP 4
.IX Item \-\-keep\-global\-symbol=symbolname
.PD
只保留符号 \fIsymbolname\fP 全局。 将所有其他符号置于文件本地，以便它们在外部不可见。 可以多次给出此选项。 注意: 此选项不能与
\fB\-\-globalize\-symbol\fP 或 \&\fB\-\-globalize\-symbols\fP 选项一起使用。
.IP \fB\-\-localize\-hidden\fP 4
.IX Item \-\-localize\-hidden
在 \s-1ELF\s0 对象中，将所有具有隐藏或内部可见性的符号标记为本地。 此选项适用于特定于符号的本地化选项，例如 \fB\-L\fP。
.IP "\fB\-L\fP \fIsymbolname\fP" 4
.IX Item "\-L symbolname"
.PD 0
.IP \fB\-\-localize\-symbol=\fP\fIsymbolname\fP 4
.IX Item \-\-localize\-symbol=symbolname
.PD
将名为 \fIsymbolname\fP 的全局或弱符号转换为局部符号，使其在外部不可见。 可以多次给出此选项。 注意 \- 不转换唯一符号。
.IP "\fB\-W\fP \fIsymbolname\fP" 4
.IX Item "\-W symbolname"
.PD 0
.IP \fB\-\-weaken\-symbol=\fP\fIsymbolname\fP 4
.IX Item \-\-weaken\-symbol=symbolname
.PD
使符号 \fIsymbolname\fP 变弱。可以多次给出此选项。
.IP \fB\-\-globalize\-symbol=\fP\fIsymbolname\fP 4
.IX Item \-\-globalize\-symbol=symbolname
赋予符号 \fIsymbolname\fP 全局范围，使其在定义它的文件之外可见。 可以多次给出此选项。 注意: 此选项不能与 \fB\-G\fP 或
\fB\-\-keep\-global\-symbol\fP 选项一起使用。
.IP \fB\-w\fP 4
.IX Item \-w
.PD 0
.IP \fB\-\-wildcard\fP 4
.IX Item \-\-wildcard
.PD
允许在其他命令行选项中使用 \fIsymbolname\fPs 中的正则表达式。 问号 (?)、星号 (*)、反斜杠 (\e) 和方括号 ([])
运算符可用于符号名称中的任何位置。 如果符号名称的第一个字符是感叹号 (!)，则该符号的开关意义相反。 例如:
.Sp
.Vb 1
\& \-w \-W !foo \-W fo*
.Ve
.Sp
会导致 objcopy 削弱所有以 \*(L"fo\*(R" 开头的符号，除了符号 \*(L"foo\*(R".
.IP \fB\-x\fP 4
.IX Item \-x
.PD 0
.IP \fB\-\-discard\-all\fP 4
.IX Item \-\-discard\-all
.PD
不要从源文件中复制非全局符号。
.IP \fB\-X\fP 4
.IX Item \-X
.PD 0
.IP \fB\-\-discard\-locals\fP 4
.IX Item \-\-discard\-locals
.PD
不要复制编译器生成的局部符号。 (这些通常以 \fBL\fP 或 \fB.\fP.) 开头
.IP "\fB\-b\fP \fIbyte\fP" 4
.IX Item "\-b byte"
.PD 0
.IP \fB\-\-byte=\fP\fIbyte\fP 4
.IX Item \-\-byte=byte
.PD
如果已通过 \fB\-\-interleave\fP 选项启用交错，则开始字节范围以保持在 \fIbyte\fPth 字节。 \&\fIbyte\fP 可以在 0 到
\fIbreadth\fP\-1 的范围内，其中 \&\fIbreadth\fP 是由 \fB\-\-interleave\fP 选项给出的值。
.IP "\fB\-i [\fP\fIbreadth\fP\fB]\fP" 4
.IX Item "\-i [breadth]"
.PD 0
.IP \fB\-\-interleave[=\fP\fIbreadth\fP\fB]\fP 4
.IX Item \-\-interleave[=breadth]
.PD
仅复制每 \fIbreadth\fP 字节的范围。 (标题数据不受影响)。 使用 \fB\-\-byte\fP 选项选择范围中的哪个字节开始复制。 使用
\&\fB\-\-interleave\-width\fP 选项选择范围的宽度。
.Sp
此选项对于创建文件以编程 \s-1ROM 很有用。\s0 它通常与 \f(CW\*(C`srec\*(C'\fP 输出目标一起使用。 请注意，如果您不指定
\&\fB\-\-byte\fP 选项，\&\fBobjcopy\fP 也会报错。
.Sp
默认交错宽度为 4，因此当 \fB\-\-byte\fP 设置为 0 时，\&\fBobjcopy\fP 会将输入中每四个字节中的第一个字节复制到输出中。
.IP \fB\-\-interleave\-width=\fP\fIwidth\fP 4
.IX Item \-\-interleave\-width=width
当与 \fB\-\-interleave\fP 选项一起使用时，一次复制 \fIwidth\fP 个字节。 要复制的字节范围的开始由 \fB\-\-byte\fP
选项设置，范围的范围由 \fB\-\-interleave\fP 选项设置。
.Sp
此选项的默认值为 1。 \fIwidth\fP 的值加上 \fB\-\-byte\fP 选项设置的 \fIbyte\fP 值不得超过 \fB\-\-interleave\fP
选项设置的交织宽度。
.Sp
通过将 \fB\-b 0 \-i 4 \-\-interleave\-width=2\fP 和 \fB\-b 2 \-i 4 \-\-interleave\-width=2\fP
传递给两个 \fBobjcopy\fP 命令，此选项可用于为交错在 32 位总线中的两个 16 位闪存创建映像。 如果输入是
\&'12345678'，那么输出将分别是 \&'1256' 和 '3478'。
.IP \fB\-p\fP 4
.IX Item \-p
.PD 0
.IP \fB\-\-preserve\-dates\fP 4
.IX Item \-\-preserve\-dates
.PD
将输出文件的访问和修改日期设置为与输入文件相同。
.IP \fB\-D\fP 4
.IX Item \-D
.PD 0
.IP \fB\-\-enable\-deterministic\-archives\fP 4
.IX Item \-\-enable\-deterministic\-archives
.PD
在 \fIdeterministic\fP 模式下运行。 在复制存档成员和写入存档索引时，对 UID、GID、时间戳使用零，并对所有文件使用一致的文件模式。
.Sp
如果 \fIbinutils\fP 配置为 \&\fB\-\-enable\-deterministic\-archives\fP，则此模式默认打开。 可以使用下面的
\fB\-U\fP 选项禁用它。
.IP \fB\-U\fP 4
.IX Item \-U
.PD 0
.IP \fB\-\-disable\-deterministic\-archives\fP 4
.IX Item \-\-disable\-deterministic\-archives
.PD
\fInot\fP 是否工作在 \fIdeterministic\fP 模式。 这与上面的 \fB\-D\fP 选项相反: 复制存档成员和写入存档索引时，使用它们的实际
\s-1UID、GID、\s0 时间戳和文件模式值。
.Sp
这是默认值，除非 \fIbinutils\fP 配置为 \&\fB\-\-enable\-deterministic\-archives\fP。
.IP \fB\-\-debugging\fP 4
.IX Item \-\-debugging
如果可能，转换调试信息。 这不是默认设置，因为仅支持某些调试格式，并且转换过程可能很耗时。
.IP "\fB\-\-gap\-fill\fP \fIval\fP" 4
.IX Item "\-\-gap\-fill val"
用 \fIval\fP 填充部分之间的空隙。 此操作适用于 \fIload address\fP (\s-1LMA\s0) 的部分。
这是通过增加具有较低地址的部分的大小，并填充使用 \fIval\fP 创建的额外空间来完成的。
.IP "\fB\-\-pad\-to\fP \fIaddress\fP" 4
.IX Item "\-\-pad\-to address"
将输出文件填充到加载地址 \fIaddress\fP。 这是通过增加最后一部分的大小来完成的。 额外的空间用 \fB\-\-gap\-fill\fP (默认为零)
指定的值填充。
.IP "\fB\-\-set\-start\fP \fIval\fP" 4
.IX Item "\-\-set\-start val"
将新文件的起始地址 (也称为入口地址) 设置为 \fIval\fP。 并非所有目标文件格式都支持设置起始地址。
.IP "\fB\-\-change\-start\fP \fIincr\fP" 4
.IX Item "\-\-change\-start incr"
.PD 0
.IP "\fB\-\-adjust\-start\fP \fIincr\fP" 4
.IX Item "\-\-adjust\-start incr"
.PD
通过添加 \&\fIincr\fP 更改起始地址 (也称为入口地址)。 并非所有目标文件格式都支持设置起始地址。
.IP "\fB\-\-change\-addresses\fP \fIincr\fP" 4
.IX Item "\-\-change\-addresses incr"
.PD 0
.IP "\fB\-\-adjust\-vma\fP \fIincr\fP" 4
.IX Item "\-\-adjust\-vma incr"
.PD
通过添加 \fIincr\fP 更改所有部分的 \s-1VMA\s0 和 \s-1LMA\s0 地址以及起始地址。 某些目标文件格式不允许任意更改段地址。
请注意，这不会重新定位这些部分; 如果程序希望在特定地址加载节，并且使用此选项更改节以便将它们加载到不同的地址，则程序可能会失败。
.IP "\fB\-\-change\-section\-address\fP \fIsectionpattern\fP\fB{=,+,\-}\fP\fIval\fP" 4
.IX Item "\-\-change\-section\-address sectionpattern{=,+,\-}val"
.PD 0
.IP "\fB\-\-adjust\-section\-vma\fP \fIsectionpattern\fP\fB{=,+,\-}\fP\fIval\fP" 4
.IX Item "\-\-adjust\-section\-vma sectionpattern{=,+,\-}val"
.PD
设置或更改与 \fIsectionpattern\fP 匹配的任何部分的 \s-1VMA\s0 地址和 \s-1LMA\s0 地址。 如果使用
\fB=\fP，则段地址设置为 \fIval\fP。 否则，将 \fIval\fP 添加到节地址或从节地址中减去。 请参见上面
\&\fB\-\-change\-addresses\fP 下的注释。如果 \fIsectionpattern\fP 不匹配输入文件中的任何部分，将发出警告，除非使用
\&\fB\-\-no\-change\-warnings\fP。
.IP "\fB\-\-change\-section\-lma\fP \fIsectionpattern\fP\fB{=,+,\-}\fP\fIval\fP" 4
.IX Item "\-\-change\-section\-lma sectionpattern{=,+,\-}val"
设置或更改与 \&\fIsectionpattern\fP 匹配的任何部分的 \s-1LMA\s0 地址。 \s-1LMA\s0
地址是程序加载时将段加载到内存中的地址。 通常这与 \s-1VMA\s0 地址相同，后者是程序运行时段的地址，但在某些系统上，尤其是程序保存在
\s-1ROM 中的系统，\s0 两者可能不同。 如果使用 \fB=\fP，则段地址设置为 \fIval\fP。 否则，将 \&\fIval\fP
添加到节地址或从节地址中减去。 请参见上面 \fB\-\-change\-addresses\fP 下的注释。 如果 \&\fIsectionpattern\fP
不匹配输入文件中的任何部分，将发出警告，除非使用 \fB\-\-no\-change\-warnings\fP。
.IP "\fB\-\-change\-section\-vma\fP \fIsectionpattern\fP\fB{=,+,\-}\fP\fIval\fP" 4
.IX Item "\-\-change\-section\-vma sectionpattern{=,+,\-}val"
设置或更改与 \&\fIsectionpattern\fP 匹配的任何部分的 \s-1VMA\s0 地址。 \s-1VMA\s0
地址是程序开始执行后该部分所在的地址。 通常这与 \s-1LMA\s0 地址相同，这是将节加载到内存中的地址，但在某些系统上，尤其是程序保存在
\s-1ROM 中的系统上，\s0 两者可能不同。 如果使用 \fB=\fP，则段地址设置为 \&\fIval\fP。 否则，将 \fIval\fP
添加到节地址或从节地址中减去。 请参见上面 \fB\-\-change\-addresses\fP 下的注释。 如果 \fIsectionpattern\fP
不匹配输入文件中的任何部分，将发出警告，除非使用 \&\fB\-\-no\-change\-warnings\fP。
.IP \fB\-\-change\-warnings\fP 4
.IX Item \-\-change\-warnings
.PD 0
.IP \fB\-\-adjust\-warnings\fP 4
.IX Item \-\-adjust\-warnings
.PD
如果使用 \fB\-\-change\-section\-address\fP 或 \fB\-\-change\-section\-lma\fP 或
\&\fB\-\-change\-section\-vma\fP，并且节模式与任何节都不匹配，则发出警告。 这是默认设置。
.IP \fB\-\-no\-change\-warnings\fP 4
.IX Item \-\-no\-change\-warnings
.PD 0
.IP \fB\-\-no\-adjust\-warnings\fP 4
.IX Item \-\-no\-adjust\-warnings
.PD
如果使用 \fB\-\-change\-section\-address\fP 或 \&\fB\-\-adjust\-section\-lma\fP 或
\fB\-\-adjust\-section\-vma\fP，即使节模式与任何节都不匹配，也不要发出警告。
.IP "\fB\-\-set\-section\-flags\fP \fIsectionpattern\fP\fB=\fP\fIflags\fP" 4
.IX Item "\-\-set\-section\-flags sectionpattern=flags"
为匹配 \fIsectionpattern\fP 的任何部分设置标志。 \&\fIflags\fP 参数是逗号分隔的标志名称字符串。 识别的名称是
\fBalloc\fP、\fBcontents\fP、\fBload\fP、\&\fBnoload\fP、\fBreadonly\fP、\fBcode\fP、\fBdata\fP、\fBrom\fP、\&\fBexclude\fP、\fBshare\fP
和 \fBdebug\fP。 您可以为没有内容的部分设置 \&\fBcontents\fP 标志，但是清除有内容的部分的 \fBcontents\fP 标志没有意义
\*(-- 只需删除该部分即可。 并非所有标志对所有目标文件格式都有意义。 特别是 \&\fBshare\fP 标志仅对 \s-1COFF\s0
格式文件有意义，对 \&\s-1ELF\s0 格式文件没有意义。
.IP "\fB\-\-set\-section\-alignment\fP \fIsectionpattern\fP\fB=\fP\fIalign\fP" 4
.IX Item "\-\-set\-section\-alignment sectionpattern=align"
为匹配 \fIsectionpattern\fP 的任何部分设置对齐方式。 \&\fIalign\fP 指定对齐方式，以字节为单位，必须是 2 的幂，即
1、2、4、8....
.IP "\fB\-\-add\-section\fP \fIsectionname\fP\fB=\fP\fIfilename\fP" 4
.IX Item "\-\-add\-section sectionname=filename"
复制文件时添加一个名为 \fIsectionname\fP 的新部分。 新部分的内容取自文件 \fIfilename\fP。 该部分的大小将是文件的大小。
此选项仅适用于可以支持具有任意名称的部分的文件格式。 注意 \- 可能需要使用 \fB\-\-set\-section\-flags\fP
选项来设置新创建的部分的属性。
.IP "\fB\-\-dump\-section\fP \fIsectionname\fP\fB=\fP\fIfilename\fP" 4
.IX Item "\-\-dump\-section sectionname=filename"
将名为 \fIsectionname\fP 的部分的内容放入文件 \&\fIfilename\fP，覆盖之前可能存在的任何内容。 该选项与
\fB\-\-add\-section\fP 相反。 此选项类似于 \fB\-\-only\-section\fP
选项，只是它不创建格式化文件，它只是将内容转储为原始二进制数据，而不应用任何重定位。 可以多次指定该选项。
.IP "\fB\-\-update\-section\fP \fIsectionname\fP\fB=\fP\fIfilename\fP" 4
.IX Item "\-\-update\-section sectionname=filename"
用文件 \fIfilename\fP 的内容替换名为 \fIsectionname\fP 的部分的现有内容。 该部分的大小将根据文件的大小进行调整。
\&\fIsectionname\fP 的节标志将保持不变。 对于 \s-1ELF\s0 格式文件，节到段的映射也将保持不变，这是使用
\fB\-\-remove\-section\fP 后接 \&\fB\-\-add\-section\fP 无法实现的。 可以多次指定该选项。
.Sp
注意 \- 可以使用 \fB\-\-rename\-section\fP 和 \&\fB\-\-update\-section\fP 从一个命令行更新和重命名一个部分。
在这种情况下，将原始节名称传递给 \&\fB\-\-update\-section\fP，将原始节名称和新节名称传递给 \&\fB\-\-rename\-section\fP。
.IP "\fB\-\-add\-symbol\fP \fIname\fP\fB=[\fP\fIsection\fP\fB:]\fP\fIvalue\fP\fB[,\fP\fIflags\fP\fB]\fP" 4
.IX Item "\-\-add\-symbol name=[section:]value[,flags]"
复制文件时添加一个名为 \fIname\fP 的新符号。 该选项可以指定多次。 如果给出 \fIsection\fP，符号将与该部分关联并相对于该部分，否则它将是
\s-1ABS\s0 符号。 指定未定义的部分将导致致命错误。 没有检查该值，它将按指定的方式使用。
可以指定符号标志，但并非所有标志对所有目标文件格式都有意义。 默认情况下，符号将是全局。 特殊标志 \&'before=\fIothersym\fP'
会将新符号插入到指定的 \&\fIothersym\fP 前面，否则 symbol(s) 将按照它们出现的顺序添加到符号表的末尾。
.IP "\fB\-\-rename\-section\fP \fIoldname\fP\fB=\fP\fInewname\fP\fB[,\fP\fIflags\fP\fB]\fP" 4
.IX Item "\-\-rename\-section oldname=newname[,flags]"
将一个部分从 \fIoldname\fP 重命名为 \fInewname\fP，在此过程中可选择将该部分的标志更改为 \fIflags\fP。
与使用链接器脚本执行重命名相比，这具有优势，因为输出保留为目标文件，不会成为链接的可执行文件。 此选项接受与
\&\fB\-\-sect\-section\-flags\fP 选项相同的一组标志。
.Sp
当输入格式为二进制时，此选项特别有用，因为这将始终创建一个名为 .data 的部分。 例如，如果您想创建一个名为 .rodata
的包含二进制数据的部分，您可以使用以下命令行来实现它:
.Sp
.Vb 3
\&objcopy \-I 二进制 \-O <output_format> \-B
<architecture>\e\&\-\-rename\-section
\&.data=.rodata,alloc,load,readonly,data,contents\e\&<input_binary_file>
<output_object_file>
.Ve
.IP "\fB\-\-long\-section\-names {enable,disable,keep}\fP" 4
.IX Item "\-\-long\-section\-names {enable,disable,keep}"
在处理 \f(CW\*(C`COFF\*(C'\fP 和 \f(CW\*(C`PE\-COFF\*(C'\fP 对象格式时控制长节名称的处理。 默认行为 \fBkeep\fP
是保留长节名称 (如果输入文件中存在)。 \fBenable\fP 和 \fBdisable\fP 选项强制启用或禁用输出对象中的长节名称; 当
\fBdisable\fP 生效时，输入对象中的任何长节名称都将被截断。 \fBenable\fP 选项将仅在输入中存在任何长节名称时发出; 这在很大程度上与
\fBkeep\fP 相同，但未定义 \fBenable\fP 选项是否会强制在输出文件中创建空字符串表。
.IP \fB\-\-change\-leading\-char\fP 4
.IX Item \-\-change\-leading\-char
一些目标文件格式在符号的开头使用特殊字符。 最常见的此类字符是下划线，编译器通常会在每个符号之前添加它。 此选项告诉 \fBobjcopy\fP
在目标文件格式之间转换时更改每个符号的前导字符。 如果目标文件格式使用相同的前导字符，则此选项无效。
否则，它将根据需要添加一个字符、删除一个字符或更改一个字符。
.IP \fB\-\-remove\-leading\-char\fP 4
.IX Item \-\-remove\-leading\-char
如果全局符号的第一个字符是目标文件格式使用的特殊符号前导字符，则删除该字符。 最常见的符号前导字符是下划线。 此选项将从所有全局符号中删除前导下划线。
如果您想将具有不同符号名称约定的不同文件格式的对象链接在一起，这将很有用。 这与 \&\fB\-\-change\-leading\-char\fP
不同，因为它总是在适当的时候更改符号名称，而不管输出文件的目标文件格式如何。
.IP \fB\-\-reverse\-bytes=\fP\fInum\fP 4
.IX Item \-\-reverse\-bytes=num
使用输出内容反转部分中的字节。 部分长度必须能被给定的值整除，以便能够进行交换。反转发生在交错执行之前。
.Sp
此选项通常用于为有问题的目标系统生成 \s-1ROM\s0 图像。 例如，在某些目标板上，无论 \s-1CPU\s0 字节顺序如何，从 8 位 ROM
获取的 32 位字都以小端字节顺序重新组装。 根据编程模型，可能需要修改 \s-1ROM\s0 的字节顺序。
.Sp
考虑一个简单文件，其中一个部分包含以下八个字节: \f(CW12345678\fP。
.Sp
在上面的示例中使用 \fB\-\-reverse\-bytes=2\fP，输出文件中的字节将被排序为 \f(CW21436587\fP。
.Sp
在上面的示例中使用 \fB\-\-reverse\-bytes=4\fP，输出文件中的字节将被排序为 \f(CW43218765\fP。
.Sp
通过在上面的示例中使用 \fB\-\-reverse\-bytes=2\fP，然后在输出文件中使用
\&\fB\-\-reverse\-bytes=4\fP，第二个输出文件中的字节将被排序为 \f(CW34127856\fP。
.IP \fB\-\-srec\-len=\fP\fIival\fP 4
.IX Item \-\-srec\-len=ival
仅对 srec 输出有意义。 将生成的 Srecords 的最大长度设置为 \fIival\fP。 此长度包括地址、数据和 crc 字段。
.IP \fB\-\-srec\-forceS3\fP 4
.IX Item \-\-srec\-forceS3
仅对 srec 输出有意义。 避免生成 S1/S2 记录，创建仅 S3 记录格式。
.IP "\fB\-\-redefine\-sym\fP \fIold\fP\fB=\fP\fInew\fP" 4
.IX Item "\-\-redefine\-sym old=new"
将符号 \fIold\fP 的名称更改为 \fInew\fP。 当您尝试将没有来源的两个事物链接在一起并且存在名称冲突时，这会很有用。
.IP \fB\-\-redefine\-syms=\fP\fIfilename\fP 4
.IX Item \-\-redefine\-syms=filename
将 \fB\-\-redefine\-sym\fP 应用于文件 \fIfilename\fP 中列出的每个符号对 "\fIold\fP \fInew\fP"。 \fIfilename\fP
只是一个平面文件，每行一个符号对。 行注释可以由散列字符引入。 可以多次给出此选项。
.IP \fB\-\-weaken\fP 4
.IX Item \-\-weaken
将文件中的所有全局符号更改为弱。 这在构建将使用链接器的 \fB\-R\fP 选项链接到其他对象的对象时很有用。 此选项仅在使用支持弱符号的目标文件格式时有效。
.IP \fB\-\-keep\-symbols=\fP\fIfilename\fP 4
.IX Item \-\-keep\-symbols=filename
将 \fB\-\-keep\-symbol\fP 选项应用于文件 \&\fIfilename\fP 中列出的每个符号。 \fIfilename\fP
只是一个平面文件，每行一个符号名称。 行注释可以由散列字符引入。 可以多次给出此选项。
.IP \fB\-\-strip\-symbols=\fP\fIfilename\fP 4
.IX Item \-\-strip\-symbols=filename
将 \fB\-\-strip\-symbol\fP 选项应用于文件 \&\fIfilename\fP 中列出的每个符号。 \fIfilename\fP
只是一个平面文件，每行一个符号名称。 行注释可以由散列字符引入。 可以多次给出此选项。
.IP \fB\-\-strip\-unneeded\-symbols=\fP\fIfilename\fP 4
.IX Item \-\-strip\-unneeded\-symbols=filename
将 \fB\-\-strip\-unneeded\-symbol\fP 选项应用于文件 \fIfilename\fP 中列出的每个符号。 \fIfilename\fP
只是一个平面文件，每行一个符号名称。 行注释可以由散列字符引入。 可以多次给出此选项。
.IP \fB\-\-keep\-global\-symbols=\fP\fIfilename\fP 4
.IX Item \-\-keep\-global\-symbols=filename
将 \fB\-\-keep\-global\-symbol\fP 选项应用于文件 \fIfilename\fP 中列出的每个符号。 \fIfilename\fP
只是一个平面文件，每行一个符号名称。 行注释可以由散列字符引入。 可以多次给出此选项。
.IP \fB\-\-localize\-symbols=\fP\fIfilename\fP 4
.IX Item \-\-localize\-symbols=filename
将 \fB\-\-localize\-symbol\fP 选项应用于文件 \&\fIfilename\fP 中列出的每个符号。 \fIfilename\fP
只是一个平面文件，每行一个符号名称。 行注释可以由散列字符引入。 可以多次给出此选项。
.IP \fB\-\-globalize\-symbols=\fP\fIfilename\fP 4
.IX Item \-\-globalize\-symbols=filename
将 \fB\-\-globalize\-symbol\fP 选项应用于文件 \&\fIfilename\fP 中列出的每个符号。 \fIfilename\fP
只是一个平面文件，每行一个符号名称。 行注释可以由散列字符引入。 可以多次给出此选项。 注意: 此选项不能与 \fB\-G\fP 或
\fB\-\-keep\-global\-symbol\fP 选项一起使用。
.IP \fB\-\-weaken\-symbols=\fP\fIfilename\fP 4
.IX Item \-\-weaken\-symbols=filename
将 \fB\-\-weaken\-symbol\fP 选项应用于文件 \&\fIfilename\fP 中列出的每个符号。 \fIfilename\fP
只是一个平面文件，每行一个符号名称。 行注释可以由散列字符引入。 可以多次给出此选项。
.IP \fB\-\-alt\-machine\-code=\fP\fIindex\fP 4
.IX Item \-\-alt\-machine\-code=index
如果输出体系结构具有备用机器代码，请使用 \&\fIindex\fPth 代码而不是默认代码。
这在机器分配了官方代码并且工具链采用新代码但其他应用程序仍依赖于使用的原始代码的情况下很有用。 对于基于 \s-1ELF\s0 的体系结构，如果
\fIindex\fP 替代方案不存在，则该值将被视为一个绝对数字，存储在 \s-1ELF\s0 标头的 e_machine 字段中。
.IP \fB\-\-writable\-text\fP 4
.IX Item \-\-writable\-text
将输出文本标记为可写。 此选项并非对所有目标文件格式都有意义。
.IP \fB\-\-readonly\-text\fP 4
.IX Item \-\-readonly\-text
使输出文本写保护。 此选项并非对所有目标文件格式都有意义。
.IP \fB\-\-pure\fP 4
.IX Item \-\-pure
将输出文件标记为按需分页。 此选项并非对所有目标文件格式都有意义。
.IP \fB\-\-impure\fP 4
.IX Item \-\-impure
将输出文件标记为不纯。 此选项并非对所有目标文件格式都有意义。
.IP \fB\-\-prefix\-symbols=\fP\fIstring\fP 4
.IX Item \-\-prefix\-symbols=string
使用 \fIstring\fP 为输出文件中的所有符号添加前缀。
.IP \fB\-\-prefix\-sections=\fP\fIstring\fP 4
.IX Item \-\-prefix\-sections=string
使用 \fIstring\fP 为输出文件中的所有节名称添加前缀。
.IP \fB\-\-prefix\-alloc\-sections=\fP\fIstring\fP 4
.IX Item \-\-prefix\-alloc\-sections=string
使用 \&\fIstring\fP 为输出文件中所有已分配部分的所有名称添加前缀。
.IP \fB\-\-add\-gnu\-debuglink=\fP\fIpath\-to\-file\fP 4
.IX Item \-\-add\-gnu\-debuglink=path\-to\-file
创建一个 .gnu_debuglink 部分，其中包含对 \&\fIpath\-to\-file\fP 的引用，并将其添加到输出文件中。 注意:
\&\fIpath\-to\-file\fP 处的文件必须存在。 添加 \&.gnu_debuglink
部分的部分过程涉及将调试信息文件内容的校验和嵌入到该部分。
.Sp
如果调试信息文件构建在一个位置，但稍后将安装到另一个位置，则不要使用安装位置的路径。 \fB\-\-add\-gnu\-debuglink\fP
选项将失败，因为安装的文件尚不存在。 而是将调试信息文件放在当前目录中，并使用不带任何目录组件的 \&\fB\-\-add\-gnu\-debuglink\fP
选项，如下所示:
.Sp
.Vb 1
\& objcopy \-\-add\-gnu\-debuglink=foo.debug
.Ve
.Sp
在调试时，调试器将尝试在一组已知位置中寻找单独的调试信息文件。 这些位置的确切集合因所使用的分布而异，但通常包括:
.RS 4
.ie  n .IP """* The same directory as the executable.""" 4
.el .IP "\f(CW* The same directory as the executable.\fR" 4
.IX Item "* The same directory as the executable."
.PD 0
.ie  n .IP """* A sub\-directory of the directory containing the executable""" 4
.el .IP "\f(CW* A sub\-directory of the directory containing the executable\fR" 4
.IX Item "* A sub\-directory of the directory containing the executable"
.PD
称为 .debug
.ie  n .IP """* A global debug directory such as /usr/lib/debug.""" 4
.el .IP "\f(CW* A global debug directory such as /usr/lib/debug.\fR" 4
.IX Item "* A global debug directory such as /usr/lib/debug."
.RE
.RS 4
.Sp
只要在运行调试器之前将调试信息文件安装到这些位置之一，一切都应该正常工作。
.RE
.IP \fB\-\-keep\-section\-symbils\fP 4
.IX Item \-\-keep\-section\-symbils
剥离文件时，可能使用 \fB\-\-strip\-debug\fP 或
\&\fB\-\-strip\-unneeded\fP，保留任何指定部分名称的符号，否则这些符号将被剥离。
.IP \fB\-\-keep\-file\-symbols\fP 4
.IX Item \-\-keep\-file\-symbols
剥离文件时，可能使用 \fB\-\-strip\-debug\fP 或
\&\fB\-\-strip\-unneeded\fP，保留任何指定源文件名的符号，否则这些符号将被剥离。
.IP \fB\-\-only\-keep\-debug\fP 4
.IX Item \-\-only\-keep\-debug
剥离一个文件，删除任何不会被 \fB\-\-strip\-debug\fP 剥离的部分的内容，并保持调试部分不变。 在 \s-1ELF\s0
文件中，这将保留输出中的所有音符部分。
.Sp
注意 \- 剥离部分的部分标题将被保留，包括它们的大小，但该部分的内容将被丢弃。 保留部分标头，以便其他工具可以将 debuginfo
文件与真正的可执行文件相匹配，即使该可执行文件已被重新定位到不同的地址空间。
.Sp
目的是此选项将与 \&\fB\-\-add\-gnu\-debuglink\fP 结合使用以创建两部分可执行文件。 一个是剥离的二进制文件，它将在
\s-1RAM\s0 和发行版中占用更少的空间，第二个是调试信息文件，只有在需要调试功能时才需要。 创建这些文件的建议过程如下:
.RS 4
.IP "1.<Link the executable as normal.  Assuming that it is called>" 4
.IX Item "1.<Link the executable as normal. Assuming that it is called>"
\&\f(CW\*(C`foo\*(C'\fP 然后...
.ie  n .IP "1.<Run ""objcopy \-\-only\-keep\-debug foo foo.dbg"" to>" 4
.el .IP "1.<Run \f(CWobjcopy \-\-only\-keep\-debug foo foo.dbg\fR to>" 4
.IX Item "1.<Run objcopy \-\-only\-keep\-debug foo foo.dbg to>"
创建一个包含调试信息的文件。
.ie  n .IP "1.<Run ""objcopy \-\-strip\-debug foo"" to create a>" 4
.el .IP "1.<Run \f(CWobjcopy \-\-strip\-debug foo\fR to create a>" 4
.IX Item "1.<Run objcopy \-\-strip\-debug foo to create a>"
剥离的可执行文件。
.ie  n .IP "1.<Run ""objcopy \-\-add\-gnu\-debuglink=foo.dbg foo"">" 4
.el .IP "1.<Run \f(CWobjcopy \-\-add\-gnu\-debuglink=foo.dbg foo\fR>" 4
.IX Item "1.<Run objcopy \-\-add\-gnu\-debuglink=foo.dbg foo>"
将指向调试信息的链接添加到剥离的可执行文件中。
.RE
.RS 4
.Sp
注意 \-\-\- 选择 \f(CW\*(C`.dbg\*(C'\fP 作为调试信息文件的扩展名是任意的。
\f(CW\*(C`\-\-only\-keep\-debug\*(C'\fP 步骤也是可选的。 您可以改为这样做:
.IP "1.<Link the executable as normal.>" 4
.IX Item "1.<Link the executable as normal.>"
.PD 0
.ie  n .IP "1.<Copy ""foo"" to  ""foo.full"">" 4
.el .IP "1.<Copy \f(CWfoo\fR to  \f(CWfoo.full\fR>" 4
.IX Item "1.<Copy foo to foo.full>"
.ie  n .IP "1.<Run ""objcopy \-\-strip\-debug foo"">" 4
.el .IP "1.<Run \f(CWobjcopy \-\-strip\-debug foo\fR>" 4
.IX Item "1.<Run objcopy \-\-strip\-debug foo>"
.ie  n .IP "1.<Run ""objcopy \-\-add\-gnu\-debuglink=foo.full foo"">" 4
.el .IP "1.<Run \f(CWobjcopy \-\-add\-gnu\-debuglink=foo.full foo\fR>" 4
.IX Item "1.<Run objcopy \-\-add\-gnu\-debuglink=foo.full foo>"
.RE
.RS 4
.PD
.Sp
即，\fB\-\-add\-gnu\-debuglink\fP 指向的文件可以是完整的可执行文件。 它不必是由 \&\fB\-\-only\-keep\-debug\fP
开关创建的文件。
.Sp
注意 \-\-\- 此开关仅适用于完全链接的文件。 在调试信息可能不完整的目标文件上使用它没有意义。 除了 gnu_debuglink
特性目前仅支持存在一个包含调试信息的文件名，而不是基于每个对象文件的多个文件名。
.RE
.IP \fB\-\-strip\-dwo\fP 4
.IX Item \-\-strip\-dwo
删除所有 \s-1DWARF\s0 .dwo 部分的内容，保留其余调试部分和所有符号。 此选项供编译器用作 \fB\-gsplit\-dwarf\fP
选项的一部分，该选项在 .o 文件和单独的 .dwo 文件之间拆分调试信息。 编译器在同一文件中生成所有调试信息，然后使用
\fB\-\-extract\-dwo\fP 选项将 .dwo 部分复制到 .dwo 文件，然后使用 \fB\-\-strip\-dwo\fP 选项从原始 .o
文件中删除这些部分。
.IP \fB\-\-extract\-dwo\fP 4
.IX Item \-\-extract\-dwo
提取所有 \s-1DWARF\s0 .dwo 部分的内容。 有关详细信息，请参见 \&\fB\-\-strip\-dwo\fP 选项。
.IP "\fB\-\-file\-alignment\fP \fInum\fP" 4
.IX Item "\-\-file\-alignment num"
指定文件对齐方式。 文件中的部分将始终从文件偏移量开始，该文件偏移量是该数字的倍数。 默认为 512。 [This option is specific
to \s-1PE\s0 targets.]
.IP "\fB\-\-heap\fP \fIreserve\fP" 4
.IX Item "\-\-heap reserve"
.PD 0
.IP "\fB\-\-heap\fP \fIreserve\fP\fB,\fP\fIcommit\fP" 4
.IX Item "\-\-heap reserve,commit"
.PD
指定要保留 (并可选地提交) 用作此程序堆的内存字节数。 [This option is specific to \s-1PE\s0 targets.]
.IP "\fB\-\-image\-base\fP \fIvalue\fP" 4
.IX Item "\-\-image\-base value"
使用 \fIvalue\fP 作为程序或 dll 的基地址。 这是加载程序或 dll 时将使用的最低内存位置。 为了减少重新定位和提高 dll
性能的需要，每个 dll 都应该有一个唯一的基址并且不与任何其他 dll 重叠。 可执行文件的默认值为 0x400000，dll 的默认值为
0x10000000。 [This option is specific to \s-1PE\s0 targets.]
.IP "\fB\-\-section\-alignment\fP \fInum\fP" 4
.IX Item "\-\-section\-alignment num"
设置 \s-1PE\s0 标头中的节对齐字段。 内存中的段总是从这个数字的倍数的地址开始。 默认为 0x1000。 [This option is
specific to \s-1PE\s0 targets.]
.IP "\fB\-\-stack\fP \fIreserve\fP" 4
.IX Item "\-\-stack reserve"
.PD 0
.IP "\fB\-\-stack\fP \fIreserve\fP\fB,\fP\fIcommit\fP" 4
.IX Item "\-\-stack reserve,commit"
.PD
指定要保留 (并可选地提交) 用作此程序栈的内存字节数。 [This option is specific to \s-1PE\s0 targets.]
.IP "\fB\-\-subsystem\fP \fIwhich\fP" 4
.IX Item "\-\-subsystem which"
.PD 0
.IP "\fB\-\-subsystem\fP \fIwhich\fP\fB:\fP\fImajor\fP" 4
.IX Item "\-\-subsystem which:major"
.IP "\fB\-\-subsystem\fP \fIwhich\fP\fB:\fP\fImajor\fP\fB.\fP\fIminor\fP" 4
.IX Item "\-\-subsystem which:major.minor"
.PD
指定您的程序将在其下执行的子系统。 \fIwhich\fP 的合法值为
\f(CW\*(C`native\*(C'\fP、\f(CW\*(C`windows\*(C'\fP、\&\f(CW\*(C`console\*(C'\fP、\f(CW\*(C`posix\*(C'\fP、\f(CW\*(C`efi\-app\*(C'\fP、\f(CW\*(C`efi\-bsd\*(C'\fP、\&\f(CW\*(C`efi\-rtd\*(C'\fP、\f(CW\*(C`sal\-rtd\*(C'\fP
和 \f(CW\*(C`xbox\*(C'\fP。 您也可以选择设置子系统版本。 \&\fIwhich\fP 也接受数值。 [This option is
specific to \s-1PE\s0 targets.]
.IP \fB\-\-extract\-symbol\fP 4
.IX Item \-\-extract\-symbol
保留文件的节标志和符号，但删除所有节数据。 具体来说，选项:
.RS 4
.IP "*<removes the contents of all sections;>" 4
.IX Item "*<removes the contents of all sections;>"
.PD 0
.IP "*<sets the size of every section to zero; and>" 4
.IX Item "*<sets the size of every section to zero; and>"
.IP "*<sets the file's start address to zero.>" 4
.IX Item "*<sets the file's start address to zero.>"
.RE
.RS 4
.PD
.Sp
此选项用于为 VxWorks 内核构建 \fI.sym\fP 文件。 它也是减小 \fB\-\-just\-symbols\fP 链接器输入文件大小的有用方法。
.RE
.IP \fB\-\-compress\-debug\-sections\fP 4
.IX Item \-\-compress\-debug\-sections
使用 zlib 和 \&\s-1ELF ABI.\s0 中的 \s-1SHF_COMPRESSED\s0 压缩 \s-1DWARF\s0 调试部分注意
\- 如果压缩实际上会使部分 \&\fIlarger\fP，则它不会被压缩。
.IP \fB\-\-compress\-debug\-sections=none\fP 4
.IX Item \-\-compress\-debug\-sections=none
.PD 0
.IP \fB\-\-compress\-debug\-sections=zlib\fP 4
.IX Item \-\-compress\-debug\-sections=zlib
.IP \fB\-\-compress\-debug\-sections=zlib\-gnu\fP 4
.IX Item \-\-compress\-debug\-sections=zlib\-gnu
.IP \fB\-\-compress\-debug\-sections=zlib\-gabi\fP 4
.IX Item \-\-compress\-debug\-sections=zlib\-gabi
.IP \fB\-\-compress\-debug\-sections=zstd\fP 4
.IX Item \-\-compress\-debug\-sections=zstd
.PD
对于 \s-1ELF\s0 文件，这些选项控制 \s-1DWARF\s0 调试部分的压缩方式。
\fB\-\-compress\-debug\-sections=none\fP 等同于 \fB\-\-decompress\-debug\-sections\fP。
\&\fB\-\-compress\-debug\-sections=zlib\fP 和
\&\fB\-\-compress\-debug\-sections=zlib\-gabi\fP 等同于 \&\fB\-\-compress\-debug\-sections\fP。
\&\fB\-\-compress\-debug\-sections=zlib\-gnu\fP 使用过时的 zlib\-gnu 格式压缩 \s-1DWARF\s0
调试部分。 调试部分重命名为以 \fB.zdebug\fP 开头。 \&\fB\-\-compress\-debug\-sections=zstd\fP 使用 zstd
压缩 \s-1DWARF\s0 调试部分。 注意 \- 如果压缩实际上会使一个部分成为 \&\fIlarger\fP，则它不会被压缩或重命名。
.IP \fB\-\-decompress\-debug\-sections\fP 4
.IX Item \-\-decompress\-debug\-sections
解压缩 \s-1DWARF\s0 调试部分。 对于 \fB.zdebug\fP 部分，将恢复原始名称。
.IP \fB\-\-elf\-stt\-common=yes\fP 4
.IX Item \-\-elf\-stt\-common=yes
.PD 0
.IP \fB\-\-elf\-stt\-common=no\fP 4
.IX Item \-\-elf\-stt\-common=no
.PD
对于 \s-1ELF\s0 文件，这些选项控制是否应将常用符号转换为 \f(CW\*(C`STT_COMMON\*(C'\fP 或
\f(CW\*(C`STT_OBJECT\*(C'\fP 类型。 \&\fB\-\-elf\-stt\-common=yes\fP 将普通符号类型转换为
\&\f(CW\*(C`STT_COMMON\*(C'\fP。\fB\-\-elf\-stt\-common=no\fP 将普通符号类型转换为
\f(CW\*(C`STT_OBJECT\*(C'\fP。
.IP \fB\-\-merge\-notes\fP 4
.IX Item \-\-merge\-notes
.PD 0
.IP \fB\-\-no\-merge\-notes\fP 4
.IX Item \-\-no\-merge\-notes
.PD
对于 \s-1ELF\s0 文件，尝试 (或不尝试) 通过删除重复注释来减小任何 \&\s-1SHT_NOTE\s0 类型部分的大小。
.IP \fB\-V\fP 4
.IX Item \-V
.PD 0
.IP \fB\-\-version\fP 4
.IX Item \-\-version
.PD
显示 \fBobjcopy\fP 的版本号。
.IP \fB\-\-verilog\-data\-width=\fP\fIbytes\fP 4
.IX Item \-\-verilog\-data\-width=bytes
对于 Verilog 输出，此选项控制为每个输出数据元素转换的字节数。 输入目标控制转换的字节顺序。
.IP \fB\-v\fP 4
.IX Item \-v
.PD 0
.IP \fB\-\-verbose\fP 4
.IX Item \-\-verbose
.PD
详细输出: 列出所有已修改的目标文件。 对于档案，\fBobjcopy \-V\fP 列出档案的所有成员。
.IP \fB\-\-help\fP 4
.IX Item \-\-help
显示 \fBobjcopy\fP 选项的总结。
.IP \fB\-\-info\fP 4
.IX Item \-\-info
显示一个列表，显示所有可用的体系结构和对象格式。
.IP \fB@\fP\fIfile\fP 4
.IX Item @file
从 \fIfile\fP 读取命令行选项。 读取的选项插入到原始 @\fIfile\fP 选项的位置。 如果 \fIfile\fP
不存在或无法读取，则该选项将按字面意思处理，而不是删除。
.Sp
\fIfile\fP 中的选项由空格分隔。 通过用单引号或双引号将整个选项括起来，可以将空白字符包含在选项中。 任何字符 (包括反斜杠)
都可以通过在要包含的字符前加上反斜杠来包含。 \fIfile\fP 本身可能包含额外的 @\fIfile\fP 选项; 任何此类选项都将递归处理。
.SH "SEE ALSO"
.IX Header "SEE ALSO"
\&\fBld\fP\|(1)、\fBobjdump\fP\|(1) 和信息条目 \fIbinutils\fP.
.SH COPYRIGHT
.IX Header COPYRIGHT
Copyright (c) 1991\-2023 Free Software Foundation, Inc.
.PP
根据 \s-1GNU\s0 自由文档许可证版本 1.3 或自由软件基金会发布的任何更高版本的条款，授予复制、分发或者修改本文档的权限;
没有不变的部分，没有封面文本，也没有封底文本。 该许可证的副本包含在标题为 \*(L"\s-1GNU\s0 Free Documentation
License\*(R") 的部分中。
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
