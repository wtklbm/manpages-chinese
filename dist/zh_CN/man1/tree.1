.\" -*- coding: UTF-8 -*-
.\" $Copyright: $
.\" Copyright (c) 1996 - 2022 by Steve Baker
.\" All Rights reserved
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2 of the License, or
.\" (at your option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program; if not, write to the Free Software
.\" Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
.\"
...
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH TREE 1 "" "Tree 2.1.0" 
.SH NAME
tree \- 以树状格式列出目录的内容。
.SH SYNOPSIS
\fBtree\fP [\fB\-acdfghilnpqrstuvxACDFJQNSUX\fP] [\fB\-L\fP \fIlevel\fP [\fB\-R\fP]] [\fB\-H\fP
\fIbaseHREF\fP] [\fB\-T\fP \fItitle\fP] [\fB\-o\fP \fIfilename\fP] [\fB\-P\fP \fIpattern\fP] [\fB\-I\fP
\fIpattern\fP] [\fB\-\-gitignore\fP] [\fB\-\-gitfile\fP[\fB=\fP]\fIfile\fP] [\fB\-\-matchdirs\fP]
[\fB\-\-metafirst\fP] [\fB\-\-ignore\-case\fP] [\fB\-\-nolinks\fP]
[\fB\-\-hintro\fP[\fB=\fP]\fIfile\fP] [\fB\-\-houtro\fP[\fB=\fP]\fIfile\fP] [\fB\-\-inodes\fP]
[\fB\-\-device\fP] [\fB\-\-sort\fP[\fB=\fP]\fIname\fP] [\fB\-\-dirsfirst\fP] [\fB\-\-filesfirst\fP]
[\fB\-\-filelimit\fP \fI#\fP] [\fB\-\-si\fP] [\fB\-\-du\fP] [\fB\-\-prune\fP] [\fB\-\-charset[=]X] [\-\-timefmt[=]\fP\fIformat\fP\fB] [\-\-fromfile] [\-\-fflinks] [\-\-info] [\-\-infofile[=]\fP\fIfile\fP\fB] [\-\-noreport] [\-\-version] [\-\-help] [\-\-] [\fP\fIdirectory\fP\fB ...]\fP

.br
.SH DESCRIPTION
\fITree\fP 是一个递归目录列表程序，它生成一个深度缩进的文件列表，如果设置了 \fBLS_COLORS\fP 环境变量并且输出到 tty，则它被着色为
\fIdircolors\fP。 如果没有参数，\fItree\fP 会列出当前目录中的文件。 当给出目录参数时，\fItree\fP
依次列出在给定目录中找到的所有文件或者目录。 完成列出所有找到的 files/directories 后，\fItree\fP 返回列出的文件或者目录的总数。

默认情况下，当遇到符号链接时，符号链接引用的路径以格式打印在链接名称之后:
.br

    名称 \-> 实路径
.br

如果给出了 `\fB\-l\fP' 选项并且符号链接引用了一个实际目录，那么 \fItree\fP 将遵循符号链接的路径，就好像它是一个真实目录一样。
.br

.SH OPTIONS
\fITree\fP 理解以下命令行开关:

.SH "LISTING OPTIONS"

.TP 
\fB\-a\fP
打印所有文件。 默认情况下，tree 不打印隐藏文件 (那些以点 `.` 开头的文件)。 在任何情况下，树都不会打印文件系统构造 `.`。(当前目录)
和 '..' (前一个目录)。
.PP
.TP 
\fB\-d\fP
仅列出目录。
.PP
.TP 
\fB\-l\fP
如果它们指向目录，则遵循符号链接，就好像它们是目录一样。检测到时会避免导致递归的符号链接。
.PP
.TP 
\fB\-f\fP
打印每个文件的完整路径前缀。
.PP
.TP 
\fB\-x\fP
仅留在当前文件系统上。 阿拉 \fBfind \fP\fI\-xdev\fP\fB.\fP
.PP
.TP 
\fB\-L \fP\fIlevel\fP
目录树的最大显示深度。
.PP
.TP 
\fB\-R\fP
递归地向下交叉树中的每个 \fIlevel\fP 目录 (参见 \fB\-L\fP 选项)，并在每个级别输出到名为 \fB00Tree.html\fP (ala
\fB\-o\fP).x) 的文件。
.PP
.TP 
\fB\-P \fP\fIpattern\fP
仅列出与通配符 \fIpattern\fP 匹配的文件。 您可能有多个 \-P 选项。注意: 您必须使用 \fI\-a\fP 选项来同时考虑那些以点 `.`
开头的文件。用于匹配。有效的通配符运算符是 `*` (任何零个或多个字符)、`**` (任何零个或多个字符以及空 /'s，即 /**/ 可能匹配单个
/)、'?' (任何单个字符)，`[...]' (括号中列出的任何单个字符 (可选 \- 可以使用字符范围的 (dash): 例如: [A\-Z]) 和
\&'[^...]' (任何不包含的单个字符列在括号中) 和`|` 分隔备用模式。模式末尾的 '/' 匹配目录，但不匹配文件。
.PP
.TP 
\fB\-I \fP\fIpattern\fP
不要列出那些匹配通配符 \fIpattern\fP 的文件。 您可能有多个 \-I 选项。 有关通配符模式的信息，请参见上面的 \fI\-P\fP。
.PP
.TP 
\fB\-\-gitignore\fP
使用 git \fB.gitignore\fP 文件过滤文件和目录。 如果存在，也使用 \fB$GIT_DIR/info/exclude\fP。
.PP
.TP 
\fB\-\-gitfile\fP[\fB=\fP]\fIfile\fP
明确使用 \fIfile\fP 作为 gitignore 文件。
.PP
.TP 
\fB\-\-ignore\-case\fP
如果匹配模式由 \fB\-P\fP 或 \fB\-I\fP 选项指定，这将导致模式匹配而不考虑每个字母的大小写。
.PP
.TP 
\fB\-\-matchdirs\fP
如果 \fB\-P\fP 选项指定了匹配模式，这将导致该模式应用于目录名称 (除了文件名之外)。 在目录名称匹配的情况下，将禁用目录内容的匹配。如果使用
\fB\-\-prune\fP 选项，则不会删除与模式匹配的空文件夹。
.PP
.TP 
\fB\-\-metafirst\fP
在行首而不是缩进行之后打印元数据信息。
.PP
.TP 
\fB\-\-prune\fP
使树从输出中修剪空目录，在与 \fB\-P\fP 或 \fB\-I\fP 结合使用时很有用。 有关此选项的更多信息，请参见下面的 \fBBUGS AND NOTES\fP。
.PP
.TP 
\fB\-\-info\fP
打印在 .info 文件中找到的文件注释。 有关 .info 文件格式的更多信息，请参见下面的 \fB.INFO FILES\fP。
.PP
.TP 
\fB\-\-infofile\fP[\fB=\fP]\fIfile\fP
明确使用 \fIfile\fP 作为信息文件。
.PP
.TP 
\fB\-\-noreport\fP
在树列表的末尾省略文件和目录报告的打印。
.PP
.TP 
\fB\-\-charset\fP[\fB=\fP]\fIcharset\fP
设置输出 HTML 和画线时要使用的字符集。
.PP
.TP 
\fB\-\-filelimit\fP[\fB=\fP]\fI#\fP
不要降低包含超过 \fI#\fP 条目的目录。
.PP
.TP 
\fB\-\-timefmt\fP[\fB=\fP]\fIformat\fP
根据使用 \fBstrftime\fP(3) 语法的格式字符串打印 (暗示 \-D) 和格式化日期。
.PP
.TP 
\fB\-o \fP\fIfilename\fP
将输出发送到 \fIfilename\fP。
.PP

.SH "FILE OPTIONS"

.TP 
\fB\-q\fP
将文件名中的不可打印字符打印为问号而不是默认字符。
.PP
.TP 
\fB\-N\fP
按原样打印不可打印的字符，而不是转义的八进制数字。
.PP
.TP 
\fB\-Q\fP
用双引号引用文件名。
.PP
.TP 
\fB\-p\fP
打印每个文件的文件类型和权限 (根据 ls \-l)。
.PP
.TP 
\fB\-u\fP
打印文件的用户名或 UID# (如果没有可用的用户名)。
.PP
.TP 
\fB\-g\fP
打印文件的组名或 GID# (如果没有可用的组名)。
.PP
.TP 
\fB\-s\fP
打印每个文件的大小 (以字节为单位) 以及名称。
.PP
.TP 
\fB\-h\fP
打印每个文件的大小，但以更易读的方式打印，例如，追加，千字节 (K)、兆字节 (M)、千兆字节 (G)、太字节 (T)、拍字节 (P) 和艾字节 (E)
的大小字母。
.PP
.TP 
\fB\-\-si\fP
与 \fB\-h\fP 类似，但改用 SI 单位 (1000 的幂)。
.PP
.TP 
\fB\-\-du\fP
对于每个目录，将其大小报告为其所有文件和子目录 (及其文件等) 的大小的累加。 已用空间总量也在最终报告中给出 (如 `du\-c` 命令。) 此选项要求
tree 在发出之前读取整个目录树，请参见下面的 \fBBUGS AND NOTES\fP。 表示 \fB\-s\fP。
.PP
.TP 
\fB\-D\fP
打印最后修改时间的日期，或者如果使用 \fB\-c\fP，则打印所列文件的最后状态更改时间。
.PP
.TP 
\fB\-F\fP
为目录，追加，一个 `/`，为套接字文件，追加，一个 `=`，为可执行文件，追加，一个 `*`，为门 (Solaris) 追加，一个 `>'
和一个 `|` 对于 FIFO，根据 ls \-F
.PP
.TP 
\fB\-\-inodes\fP
打印文件或目录的索引节点号
.PP
.TP 
\fB\-\-device\fP
打印文件或目录所属的设备号
.PP

.SH "SORTING OPTIONS"

.TP 
\fB\-v\fP
按版本对输出进行排序。
.PP
.TP 
\fB\-t\fP
按最后修改时间而不是字母顺序对输出进行排序。
.PP
.TP 
\fB\-c\fP
按上次状态更改而不是按字母顺序对输出进行排序。 修改 \fB\-D\fP 选项 (如果使用) 以打印上次状态更改而不是修改时间。
.PP
.TP 
\fB\-U\fP
不要排序。 按目录顺序列出文件。禁用 \fB\-\-dirsfirst\fP。
.PP
.TP 
\fB\-r\fP
以相反的顺序对输出进行排序。 这是一种改变上述排序的元排序。 使用 \fB\-U\fP 时禁用此选项。
.PP
.TP 
\fB\-\-dirsfirst\fP
在文件之前列出目录。这是一种改变上述排序的元排序。 使用 \fB\-U\fP 时禁用此选项。
.PP
.TP 
\fB\-\-filesfirst\fP
在目录之前列出文件。这是一种改变上述排序的元排序。 使用 \fB\-U\fP 时禁用此选项。
.PP
.TP 
\fB\-\-sort\fP[\fB=\fP]\fItype\fP
按 \fItype\fP 而不是名称对输出进行排序。可能的值为: \fBctime\fP (\fB\-c\fP)、\fBmtime\fP (\fB\-t), size\fP 或
\fBversion\fP (\fB\-v).\fP

.SH "GRAPHICS OPTIONS"

.TP 
\fB\-i\fP
使树不打印缩进线，与 \fB\-f\fP 选项结合使用时很有用。 当与 \fB\-J\fP 或 \fB\-X\fP 选项一起使用时，还会尽可能多地删除空格。
.PP
.TP 
\fB\-A\fP
打印缩进线时打开 ANSI 线条图形破解。
.PP
.TP 
\fB\-S\fP
打开 CP437 线条图形 (在使用 Linux 控制台模式字体时很有用)。此选项现在等同于 `\-\-charset=IBM437'
并且最终可能会被贬低。
.PP
.TP 
\fB\-n\fP
始终关闭着色，由 \fB\-C\fP 选项覆盖，但如果存在则覆盖 CLICOLOR_FORCE。
.PP
.TP 
\fB\-C\fP
如果未设置 LS_COLORS 或 TREE_COLORS 环境变量，则始终打开着色，使用内置颜色默认值。 对管道的输出着色很有用。
.PP

.SH "XML/JSON/HTML OPTIONS"

.TP 
\fB\-X\fP
打开 XML 输出。将目录树输出为 XML 格式的文件。
.PP
.TP 
\fB\-J\fP
打开 JSON 输出。将目录树输出为 JSON 格式的数组。
.PP
.TP 
\fB\-H \fP\fIbaseHREF\fP
打开 HTML 输出，包括 HTTP 引用。对 ftp 站点很有用。 \fIbaseHREF\fP 在使用 HTML 输出时给出基本的 ftp
位置。也就是说，本地目录可能是 `/local/ftp/pub'，但它必须被引用为
`ftp://hostname.organization.domain/pub' (\fIbaseHREF\fP
应该是`ftp://hostname.organization.domain')。提示: 不要将 ANSI
行与此选项一起使用，并且不要在目录列表中给出一个以上的目录。如果您希望通过 CSS 样式表使用颜色，请使用 \-C 选项以及此选项来强制输出颜色。
.PP
.TP 
\fB\-\-hintro\fP[\fB=\fP]\fIfile\fP
使用 \fIfile\fP 作为 HTML 介绍代替默认介绍。 使用空文件或 \fI/dev/null\fP 完全删除介绍。
.PP
.TP 
\fB\-\-houtro\fP[\fB=\fP]\fIfile\fP
使用 \fIfile\fP 作为 HTML outro 代替默认的。 使用空文件或 \fI/dev/null\fP 完全消除结尾。
.PP
.TP 
\fB\-T \fP\fItitle\fP
在 HTML 输出模式下设置标题和 H1 标头字符串。
.PP
.TP 
\fB\-\-nolinks\fP
关闭 HTML 输出中的超链接。
.PP

.SH "INPUT OPTIONS"

.TP 
\fB\-\-fromfile\fP
从文件而不是文件系统中读取目录列表。 命令行上提供的路径是要读取的文件而不是要搜索的目录。 点 (.) 目录指示树应该从标准输入读取路径。注意:
这仅适用于读取诸如 find 之类的程序的输出，而不适用于 `tree\-fi`，因为符号链接与仅包含 \->
作为文件名一部分的文件没有区别，除非使用 \fB\-\-fflinks\fP 选项。
.PP
.TP 
\fB\-\-fflinks\fP
处理在文件中找到的符号链接信息，如 \fB'tree \-fi \-\-noreport'\fP 的输出。 只有第一次出现的字符串 \fB' \-> '\fP
用于表示文件名与链接的分隔。
.PP

.SH "MISC OPTIONS"

.TP 
\fB\-\-help\fP
输出详细的用法列表。
.PP
.TP 
\fB\-\-version\fP
输出树的版本。
.PP
.TP 
\fB\-\-\fP
选项处理终止符。 此后将不再处理其他选项。
.PP

.SH ".INFO FILES"

\&\fB.info\fP 文件类似于 .gitignore 文件，如果在扫描目录时发现 .info 文件，则会读取该文件并将其添加到 .info
信息栈中。每个文件都由注释 (以井号 (#) 开头的行) 或通配符模式组成，这些模式可能与相对于 .info 文件所在目录的文件相匹配。
如果一个文件应该匹配一个模式，那么模式后面的制表符缩进注释被用作文件注释。 注释以非制表符缩进行结束。多个模式，每个模式占一行，可以共享相同的注释。

.br
.SH FILES
\fB/etc/DIR_COLORS\fP		System color database.
.br
\fB~/.dircolors\fP			Users 颜色数据库。
.br
\&\fB.gitignore\fP			Git 排除文件
.br
\fB$GIT_DIR/info/exclude\fP	Global git 文件排除列表
.br
\&\fB.info\fP				File 注释文件
.br
\fB/usr/share/finfo/global_info\fP	Global file comment file


.SH ENVIRONMENT
\fBLS_COLORS\fP		Color information created by dircolors
.br
\fBTREE_COLORS\fP	Uses this for color information over LS_COLORS if it is set.
.br
\fBTREE_CHARSET\fP	Character set for tree to use in HTML mode.
.br
\fBCLICOLOR\fP		Enables colorization even if TREE_COLORS or LS_COLORS is not
set.
.br
\fBCLICOLOR_FORCE\fP	Always enables colorization (effectively \-C)
.br
\fBNO_COLOR\fP		Disable colorization (effectively \-n) (see
\fBhttps://no\-color.org/\fP)
.br
\fBLC_CTYPE\fP		Locale for filename output.
.br
\fBLC_TIME\fP		Locale for timefmt output, see \fBstrftime\fP(3).
.br
\fBTZ\fP			Timezone for timefmt output, see \fBstrftime\fP(3).
.br
\fBSTDDATA_FD\fP	Enable the stddata feature, optionally set descriptor to use.

.SH AUTHOR
史蒂夫・贝克 (ice@mama.indstate.edu)
.br
被 Francesc Rocher (rocher@econ.udg.es) 破解的 HTML 输出
.br
Kyosuke Tokoro (NBG01720@nifty.ne.jp) 的字符集和 OS/2 支持

.SH "BUGS AND NOTES"
默认情况下使用 \-P 和 \-I 选项时，树不会修剪 "empty" 目录。使用 \-\-prune 选项。

\-h 和 \-\-si 选项四舍五入到最接近的整数，这与 ls 总是四舍五入的实现不同。

使用 \-I、\-P 和 \-\-filelimit 选项修剪文件和目录将导致不正确的 file/directory 计数报告。

\-\-prune 和 \-\-du 选项导致树在发出之前在内存中累积整个树。对于大型目录树，这可能会导致输出显着延迟和使用大量内存。

timefmt 扩展缓冲区被限制为大得离谱的 255 个字符。 超过此长度的时间字符串的输出将是未定义的，但保证不超过 255 个字符。

XML/JSON 树没有上色，有点可惜。

可能更多。

从版本 2.0.0 开始，在 Linux 中，树将尝试在文件描述符 3 (我调用的标准数据) 上自动输出紧凑的 JSON 树 (如果存在并且环境变量
STDDATA_FD 已定义或设置为正的非零文件描述符值) 用于输出。 希望有一天更好的 Linux/Unix shell 可以利用这个特性尽管
BSON 可能是一个更好的格式。

.SH "SEE ALSO"
\fBdircolors\fP(1), \fBls\fP(1), \fBfind\fP(1), \fBdu\fP(1), \fBstrftime\fP(3)
\fBgitignore\fP(5)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
