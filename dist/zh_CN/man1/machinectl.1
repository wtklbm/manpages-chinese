.\" -*- coding: UTF-8 -*-
'\" t
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH MACHINECTL 1 "" "systemd 253" machinectl
.ie  \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH NAME
machinectl \- 控制 systemd 机器管理器
.SH SYNOPSIS
.HP \w'\fBmachinectl\fR\ 'u
\fBmachinectl\fP [OPTIONS...] {COMMAND} [NAME...]
.SH DESCRIPTION
.PP
\fBmachinectl\fP 可用于自检和控制 \fBsystemd\fP(1) 虚拟机和容器注册管理器
\fBsystemd\-machined.service\fP(8)\& 的状态。
.PP
\fBmachinectl\fP 可用于在机器和图像上执行操作 \&。从这个意义上讲，机器被认为是运行以下实例的实例:
.sp
.RS 4
.ie  n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
虚拟机 (VMs)，将硬件虚拟化以在主机操作系统之上的虚拟化环境中运行完整的操作系统 (OS) 实例 (包括它们的内核)。
.RE
.sp
.RS 4
.ie  n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
与主机操作系统共享硬件和操作系统内核的容器，以便在主机操作系统之上运行操作系统用户空间实例。
.RE
.sp
.RS 4
.ie  n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
主机系统本身 \&。
.RE
.PP
机器由遵循与 UNIX 和 DNS 主机名 \& 相同规则的名称标识。详情见下文 \&。
.PP
机器是从磁盘或文件系统映像实例化的，这些映像经常 \\&\(em 但不一定 \\&\(em 与从它们运行的机器具有相同的名称
\&。这种意义上的图像可能是:
.sp
.RS 4
.ie  n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
包含操作系统的目录树，包括顶级目录 /usr/、/etc/ 等 \&。
.RE
.sp
.RS 4
.ie  n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
btrfs 包含操作系统树的子卷，类似于常规目录树 \&。
.RE
.sp
.RS 4
.ie  n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
包含 MBR 或 GPT 分区表和 Linux 文件系统的二进制 "raw" 磁盘映像文件 \&。
.RE
.sp
.RS 4
.ie  n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
同样，包含 MBR 或 GPT 分区表和文件系统的块设备。
.RE
.sp
.RS 4
.ie  n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
主机操作系统本身的文件系统树 \&。
.RE
.SH COMMANDS
.PP
理解以下命令:
.SS "Machine Commands"
.PP
\fBlist\fP
.RS 4
列出当前正在运行的 (online) 虚拟机和容器 \&。要枚举可以启动的机器映像，请使用 \fBlist\-images\fP (见下文)
\&。请注意，此命令默认隐藏特殊的 "\&.host" 机器 \&。使用 \fB\-\-all\fP 开关显示它 \&。
.RE
.PP
\fBstatus\fP \fINAME\fP\& ...
.RS 4
显示有关一个或多个虚拟机和容器的运行时状态信息，后跟日志中的最新日志数据。此函数旨在生成人类可读的输出 \&。如果您正在寻找计算机可解析的输出，请改用
\fBshow\fP\&。请注意，显示的日志数据是由虚拟机或容器管理器报告的，并且经常包含机器的控制台输出，但不一定包含机器本身的日志内容 \&。
.RE
.PP
\fBshow\fP [\fINAME\fP\&...]
.RS 4
显示一个或多个已注册虚拟机或容器或管理器本身的属性 \&。如果没有指定参数，将显示管理器的属性 \&。如果指定了名称，则会显示此虚拟机或容器的属性
\&。默认情况下，空属性被抑制 \&。也使用 \fB\-\-all\fP 来显示这些 \&。要选择要显示的特定属性，请使用
\fB\-\-property=\fP\&。此命令旨在在需要计算机可解析输出时使用，并且不会打印控制组树或日志条目 \&。如果您正在寻找格式化的人类可读输出
\&，请使用 \fBstatus\fP。
.RE
.PP
\fBstart\fP \fINAME\fP\& ...
.RS 4
使用 \fBsystemd\-nspawn\fP(1)\& 将容器作为系统服务启动。这将启动
systemd\-nspawn@\&.service，为指定的机器名称实例化，类似于 \fBsystemctl start\fP 对服务名称 \& 的影响。
\fBsystemd\-nspawn\fP 在 /var/lib/machines/ (和其他搜索路径，见下文) 中查找指定名称的容器镜像并运行它 \&。使用
\fBlist\-images\fP (见下文) 列出可用的容器镜像以启动 \&。
.sp
请注意，\fBsystemd\-machined.service\fP(8) 还与各种其他容器和 VM 管理器接口，\fBsystemd\-nspawn\fP
只是它的一种实现 \&。\fBmachinectl\fP 中可用的大多数命令都可以在其他管理器控制的容器或 VM 上使用，而不仅仅是
\fBsystemd\-nspawn\fP\&。在这些管理器上启动 VM 和容器映像需要特定于管理器的工具 \&。
.sp
要在命令行上以交互方式启动容器，并具有对容器的完全访问权限 \*(Aqs 控制台，请直接调用
\fBsystemd\-nspawn\fP\&。要停止正在运行的容器，请使用 \fBmachinectl poweroff\fP\&。
.RE
.PP
\fBlogin\fP [\fINAME\fP]
.RS 4
在容器或本地主机上打开交互式终端登录会话。如果提供了参数，它指的是要连接到 \&
的容器机器。如果未指定任何内容，或者容器名称指定为空字符串，或者指定了特殊机器名称 "\&.host" (见下文)，则改为连接到本地主机
\&。这将创建到特定容器或本地主机的 TTY 连接，并要求在其上执行 getty\&。请注意，这仅支持运行 \fBsystemd\fP(1) 作为初始系统
\& 的容器。
.sp
此命令将在容器或本地主机上打开一个完整的登录提示，然后要求输入用户名和密码 \&。将 \fBshell\fP (见下文) 或
\fBsystemd\-run\fP(1) 与 \fB\-\-machine=\fP 开关一起使用，以交互方式或在后台 \& 中直接调用单个命令。
.RE
.PP
\fBshell\fP [[\fINAME\fP@]\fINAME\fP [\fIPATH\fP [\fIARGUMENTS\fP\&...]]]
.RS 4
在容器或本地主机上打开交互式 shell 会话 \&。第一个参数指的是要连接的容器机器
\&。如果没有指定，或者机器名指定为空字符串，或者指定了特殊的机器名 "\&.host" (见下文)，则连接到本地主机而不是 \&。这与
\fBlogin\fP 的工作方式类似，但会立即调用用户进程 \&。此命令使用指定的参数运行指定的可执行文件，如果未指定，则运行用户的默认
shell，如果未找到默认 shell，则运行 /bin/sh\&。默认情况下，\fB\-\-uid=\fP，或者通过在机器名称前加上用户名和 "@"
字符，可以选择不同的用户 \&。使用 \fB\-\-setenv=\fP 为执行的进程设置环境变量 \&。
.sp
请注意，\fBmachinectl shell\fP 不会传播调用的 shell 进程的出口 code/status\&。如果需要该信息，请改用
\fBsystemd\-run\fP (见下文) \&。
.sp
使用不带参数的 \fBshell\fP 命令 (因此在本地主机上调用已执行的 shell 或命令) 在许多方面类似于 \fBsu\fP(1) 会话，但与 \fBsu\fP
不同的是，它将新会话与原始会话完全隔离，因此它不共享进程或会话属性，并且处于干净且定义明确的状态 \&。它将在新的
utmp、登录、审计、安全和密钥环会话中进行跟踪，并且不会继承任何环境变量或资源限制等属性。
.sp
请注意，\fBsystemd\-run\fP(1) 及其 \fB\-\-machine=\fP 开关可用于代替 \fBmachinectl shell\fP
命令，并允许非交互式操作，调用单元的更详细和底层配置，以及对调用 shell 进程的运行时和退出 code/status 信息的访问
\&. 特别是，使用 \fBsystemd\-run\fP\*(Aqs \fB\-\-wait\fP 开关传播被调用进程的退出状态信息 \&。使用
\fBsystemd\-run\fP\*(Aqs \fB\-\-pty\fP 开关获取交互式 shell，类似于 \fBmachinectl shell\fP\&。一般来说，\fBsystemd\-run\fP 更适合用于脚本目的 \&。但是，请注意 \fBsystemd\-run\fP 可能需要比
\fBmachinectl shell\fP\& 更高的权限。
.RE
.PP
\fBenable\fP \fINAME\fP\&..., \fBdisable\fP \fINAME\fP\& ...
.RS 4
使用 \fBsystemd\-nspawn\fP(1)\& 启用或禁用容器作为系统服务以在系统启动时启动。这将启用或禁用
systemd\-nspawn@\&.service，为指定的机器名称实例化，类似于 \fBsystemctl enable\fP 或 \fBsystemctl disable\fP 对服务名称 \& 的影响。
.sp
此命令在完成操作后隐式地重新加载系统管理器配置 \&。请注意，此命令不会隐式启动或关闭正在运行的容器。如果需要，请将命令与 \fB\-\-now\fP 开关 \&
结合使用。
.RE
.PP
\fBpoweroff\fP \fINAME\fP\& ...
.RS 4
关闭一个或多个容器 \&。这将通过向容器发送 SIGRTMIN+4 来触发重启 \*(Aqs init 进程，这会导致与 systemd 兼容的
init 系统干净地关闭 \&。使用 \fBstop\fP 作为 \fBpoweroff\fP\& 的别名。此操作不适用于不运行
\fBsystemd\fP(1)\-compatible init 系统的容器，例如 sysvinit\&。使用 \fBterminate\fP (见下文)
立即终止容器或 VM，而无需干净地关闭它 \&。
.RE
.PP
\fBreboot\fP \fINAME\fP\& ...
.RS 4
重启一个或多个容器 \&。这将通过向容器发送 SIGINT 来触发重启 \*(Aqs init 进程，这大致相当于在非容器化系统上按
Ctrl+Alt+Del，并且与运行任何系统管理器的容器兼容 \&。
.RE
.PP
\fBterminate\fP \fINAME\fP\& ...
.RS 4
立即终止虚拟机或容器，而不是干净地关闭它 \&。这会终止虚拟机或容器的所有进程，并释放所有附加到该实例的资源。使用 \fBpoweroff\fP
发出干净关闭请求 \&。
.RE
.PP
\fBkill\fP \fINAME\fP\& ...
.RS 4
向虚拟机或容器的一个或多个进程发送信号 \&。这意味着主机看到的进程，而不是虚拟机或容器内的进程 \&。使用 \fB\-\-kill\-whom=\fP
选择杀死哪个进程 \&。使用 \fB\-\-signal=\fP 选择要发送的信号 \&。
.RE
.PP
\fBbind\fP \fINAME\fP \fIPATH\fP [\fIPATH\fP]
.RS 4
Bind 将主机中的文件或目录挂载到指定的容器中。第一个路径参数是宿主机上的源文件或目录，第二个路径参数是容器中的目标文件或目录
\&。当省略后者时，容器中的目标路径与主机上的源路径相同 \&。当与 \fB\-\-read\-only\fP 开关结合使用时，将创建一个只读绑定安装 \&。与
\fB\-\-mkdir\fP 开关结合使用时，首先会在应用挂载之前创建目标路径 \&。请注意，此选项当前仅支持 \fBsystemd\-nspawn\fP(1)
容器，并且仅在未使用用户命名空间 (\fB\-\-private\-users\fP) 时 \&。此命令支持绑定安装目录、常规文件、设备节点、\fBAF_UNIX\fP
套接字节点以及 FIFOs\&。
.RE
.PP
\fBcopy\-to\fP \fINAME\fP \fIPATH\fP [\fIPATH\fP] \fB\-\-force\fP
.RS 4
将文件或目录从主机系统复制到正在运行的容器中。采用容器名称，后跟主机上的源路径和容器中的目标路径 \&。如果省略目标路径，则使用与源路径相同的 \&。
.sp
如果主机和容器共享相同的用户和组命名空间，则为副本保留数字用户 ID 和组 ID 的文件所有权，否则副本中的所有文件和目录将归 root 用户和组所有
(UID/GID 0)\&.
.RE
.PP
\fBcopy\-from\fP \fINAME\fP \fIPATH\fP [\fIPATH\fP] \fB\-\-force\fP
.RS 4
将文件或目录从容器复制到主机系统 \&。采用容器名称，后跟容器中的源路径和主机上的目标路径 \&。如果省略目标路径，则使用与源路径相同的 \&。
.sp
如果主机和容器共享相同的用户和组命名空间，则为副本保留数字用户 ID 和组 ID 的文件所有权，否则副本中的所有文件和目录将归 root 用户和组所有
(UID/GID 0)\&.
.RE
.SS "Image Commands"
.PP
\fBlist\-images\fP
.RS 4
显示本地安装的容器和 VM 映像列表 \&。这将枚举 /var/lib/machines/ (和其他搜索路径，见下文) \&
中的所有原始磁盘映像和容器目录和子卷。使用 \fBstart\fP (见上文) 从列出的图像之一运行容器。请注意，默认情况下，名称以点 ("\&.")
开头的容器不会显示 \&。要也显示这些，请指定 \fB\-\-all\fP\&。请注意，特殊映像 "\&.host"
始终隐式存在，并且指的是主机本身从中启动的映像 \&。
.RE
.PP
\fBimage\-status\fP [\fINAME\fP\&...]
.RS 4
显示有关一个或多个容器或 VM 映像的简洁状态信息 \&。此函数旨在生成人类可读的输出 \&。使用 \fBshow\-image\fP (见下文)
来生成计算机可解析的输出 \&。
.RE
.PP
\fBshow\-image\fP [\fINAME\fP\&...]
.RS 4
显示一个或多个已注册虚拟机或容器映像的属性，或管理器本身 \&。如果没有指定参数，将显示管理器的属性
\&。如果指定了名称，则会显示此虚拟机或容器映像的属性 \&。默认情况下，空属性被抑制 \&。也使用 \fB\-\-all\fP 来显示这些
\&。要选择要显示的特定属性，请使用 \fB\-\-property=\fP\&。只要需要计算机可解析的输出
\&，就会使用此命令。如果您正在寻找格式化的人类可读输出 \&，请使用 \fBimage\-status\fP。
.RE
.PP
\fBclone\fP \fINAME\fP \fINAME\fP
.RS 4
克隆容器或 VM 映像 \&。参数指定要克隆的图像的名称和新克隆的图像的名称 \&。请注意，如果底层文件系统支持此
\&，则使用此命令将普通目录容器映像克隆到 btrfs 子卷映像中。请注意，克隆容器或 VM
映像针对支持写时复制的文件系统进行了优化，但由于文件系统限制 \&，在其他系统上可能效率不高。
.sp
请注意，此命令保留主机名、机器 ID 和所有其他可以识别未修改实例的设置。因此，原始图像和克隆副本将共享这些凭据，并且可能需要在副本中手动更改它们。
.sp
如果与 \fB\-\-read\-only\fP 开关结合使用，则会创建一个只读的克隆图像 \&。
.RE
.PP
\fBrename\fP \fINAME\fP \fINAME\fP
.RS 4
重命名容器或 VM 映像 \&。参数指定要重命名的图像的名称和图像的新名称 \&。
.RE
.PP
\fBread\-only\fP \fINAME\fP [\fIBOOL\fP]
.RS 4
将容器或 VM 映像标记或 (unmarks) 为只读 \&。采用 VM 或容器映像名称，后跟布尔值作为参数
\&。如果省略布尔值，则隐含正数，i\&.e\&。图像被标记为只读 \&。
.RE
.PP
\fBremove\fP \fINAME\fP\& ...
.RS 4
删除一个或多个容器或 VM 映像 \&。特殊图像 "\&.host"，指的是主机 \*(Aqs 自己的目录树，可能不会被删除 \&。
.RE
.PP
\fBset\-limit\fP [\fINAME\fP] \fIBYTES\fP
.RS 4
设置特定容器或 VM 映像或所有映像在磁盘上可能增长到的最大大小 (磁盘配额) \&。采用一个或两个参数 \&。第一个可选参数是指容器或 VM 映像名称
\&。如果指定，则更改指定图像的大小限制 \&。如果省略，则更改本地存储的所有图像总和的总大小限制
\&。最后的参数指定以字节为单位的大小限制，可能以通常的 K、M、G、T 单位 \& 为后缀。如果要禁用大小限制，请将 "\-" 指定为大小 \&。
.sp
请注意，每个容器的大小限制仅在 btrfs 文件系统上受支持 \&。
.RE
.PP
\fBclean\fP
.RS 4
删除隐藏的 VM 或容器映像 (或全部) \&。此命令从 /var/lib/machines/ 中删除所有隐藏的机器映像，i\&.e\&。那些名字以点
\& 开头的。使用 \fBmachinectl list\-images \-\-all\fP 查看所有机器映像的列表，包括隐藏的 \&。
.sp
当与 \fB\-\-all\fP 开关结合使用时，会删除所有图像，而不仅仅是隐藏的 \&。此命令有效地清空 /var/machines/\&。
.sp
请注意，\fBmachinectl pull\-tar\fP 或 \fBmachinectl pull\-raw\fP
等命令通常首先从下载的图像创建隐藏的、只读的、未修改的机器图像，然后再克隆它的可写工作副本，以避免在多次重复使用图像的情况下重复下载 \&. 使用
\fBmachinectl clean\fP 删除以这种方式创建的旧的、隐藏的图像 \&。
.RE
.SS "Image Transfer Commands"
.PP
\fBpull\-tar\fP \fIURL\fP [\fINAME\fP]
.RS 4
从指定的 URL 下载一个 \&.tar 容器镜像，并使其在指定的本地机器名下可用 \&。URL 必须是 "http://" 或 "https://"
类型，并且必须引用 \&.tar、\&.tar\&.gz、\&.tar\&.xz 或 \&.tar\&.bz2 存档文件
\&. 如果本地机器名被省略，它会自动从 URL 的最后一个部分派生，并删除其后缀 \&。
.sp
除非指定 \fB\-\-verify=no\fP\&，否则图像在可用之前会经过验证。验证是通过带有图像名称和后缀 \&.sha256 的内联签名文件或通过单独的
SHA256SUMS 和 SHA256SUMS\&.gpg 文件 \& 完成的。需要在与 \&.tar 文件 \& 相同的 URL 下，在同一 Web
服务器上提供签名文件。使用 \fB\-\-verify=checksum\fP，仅验证文件的 SHA256 校验和，基于 \&.sha256 后缀文件或
SHA256SUMS 文件 \&。使用 \fB\-\-verify=signature\fP，sha 校验和文件首先使用 \&.sha256
文件中的内联签名或分离的 GPG 签名文件 SHA256SUMS\&.gpg\& 进行验证。此验证步骤的公钥需要在
/usr/lib/systemd/import\-pubring\&.gpg 或 /etc/import\-pubring\&.gpg\& 中可用。
.sp
容器镜像将被下载并存储在 /var/lib/machines/ 中的只读子卷中，该子卷以指定的 URL 及其 HTTP etag\&
命名。然后从此子卷获取可写快照，并以指定的本地名称 \& 命名。此行为可确保高效地创建同一 URL 的多个容器实例，因为不需要多次下载
\&。为了只创建只读映像，并避免创建其可写快照，请将 "\-" 指定为本地机器名 \&。
.sp
请注意，只读子卷以 \&.tar \- 为前缀，因此不会由 \fBlist\-images\fP 显示，除非通过 \fB\-\-all\fP\&。
.sp
请注意，在执行此命令期间按 C\-c 不会终止下载 \&。使用 \fBcancel\-transfer\fP，如下所述 \&。
.RE
.PP
\fBpull\-raw\fP \fIURL\fP [\fINAME\fP]
.RS 4
从指定的 URL 下载 \&.raw 容器或 VM 磁盘映像，并使其在指定的本地计算机名称下可用 \&。URL 必须是 "http://" 或
`https://`\& 类型。容器映像必须是 \&.qcow2 或原始磁盘映像，可选择压缩为 \&.gz、\&.xz 或
\&.bz2\&。如果本地机器名被省略，它会自动从 URL 的最后一个部分派生，并删除其后缀 \&。
.sp
原始图像和 tar 图像的图像验证相同 (见上文) \&。
.sp
如果下载的图像是 \&.qcow2 格式，它会在可用之前转换为原始图像文件 \&。
.sp
下载的此类图像将作为只读 \&.raw 文件放置在 /var/machines/\& 中。然后在指定的本地机器名 \& 下创建本地可写
(reflinked) 副本。要省略本地可写副本的创建，请将 "\-" 作为本地机器名 \&。
.sp
与 \fBpull\-tar\fP 的行为类似，只读图像以 \&.raw \- 为前缀，因此不会被 \fBlist\-images\fP 显示，除非通过
\fB\-\-all\fP\&。
.sp
请注意，在执行此命令期间按 C\-c 不会终止下载 \&。使用 \fBcancel\-transfer\fP，如下所述 \&。
.RE
.PP
\fBimport\-tar\fP \fIFILE\fP [\fINAME\fP], \fBimport\-raw\fP \fIFILE\fP [\fINAME\fP]
.RS 4
导入 TAR 或 RAW 容器或 VM 映像，并将其放在 /var/machines/\& 中的指定名称下。当使用 \fBimport\-tar\fP
时，指定为第一个参数的文件应该是一个 tar 存档，可能用 xz、gzip 或 bzip2\& 压缩。然后它将被解压到 /var/machines/\&
中它自己的子卷中。当使用 \fBimport\-raw\fP 时，文件应该是 qcow2 或原始磁盘映像，可能使用 xz、gzip 或 bzip2\&
压缩。如果未指定第二个参数 (生成的图像名称)，则自动从文件名派生 \&。如果文件名作为 "\-"
传递，则图像从标准输入读取，在这种情况下第二个参数是必需的 \&。
.sp
或者，\fB\-\-read\-only\fP 开关可用于创建只读容器或 VM 映像 \&。导入图像时不进行加密验证 \&。
.sp
与图像下载非常相似，正在进行的导入可能会以 \fBlist\-transfers\fP 列出并以 \fBcancel\-transfer\fP\& 中止。
.RE
.PP
\fBimport\-fs\fP \fIDIRECTORY\fP [\fINAME\fP]
.RS 4
将本地目录下的容器镜像导入到 /var/lib/machines/ 中，操作类似 \fBimport\-tar\fP 或
\fBimport\-raw\fP，但第一个参数是源目录 \&。如果支持，此命令将为新映像创建一个 btrfs 快照或子卷。
.RE
.PP
\fBexport\-tar\fP \fINAME\fP [\fIFILE\fP], \fBexport\-raw\fP \fINAME\fP [\fIFILE\fP]
.RS 4
导出 TAR 或 RAW 容器或 VM 映像并将其存储在指定文件中 \&。第一个参数应该是 VM 或容器镜像名称 \&。第二个参数应该是 TAR 或
RAW 图像写入的文件路径 \&。如果路径以 "\&.gz" 结尾，则使用 gzip 压缩文件; 如果以 "\&.xz" 结尾，则使用 xz; 如果以
"\&.bz2" 结尾，则使用 bzip2\&。如果路径不以两者结尾，则文件保持未压缩状态 \&。如果缺少第二个参数，图像将写入标准输出
\&。也可以使用 \fB\-\-format=\fP 开关 \& 明确选择压缩。如果未指定第二个参数 \&，这将特别有用。
.sp
与图像下载和导入非常相似，正在进行的导出可能会以 \fBlist\-transfers\fP 列出并以 \fBcancel\-transfer\fP\& 中止。
.sp
请注意，目前，只有目录和子卷图像可以导出为 TAR 图像，并且只有原始磁盘图像可以导出为 RAW 图像 \&。
.RE
.PP
\fBlist\-transfers\fP
.RS 4
显示当前正在进行的容器或 VM 映像下载、导入和导出列表。
.RE
.PP
\fBcancel\-transfer\fP \fIID\fP\& ...
.RS 4
中止具有指定 ID\& 的容器或 VM 映像的下载、导入或导出。要列出正在进行的传输及其 ID，请使用 \fBlist\-transfers\fP\&。
.RE
.SH OPTIONS
.PP
理解以下选项:
.PP
\fB\-p\fP, \fB\-\-property=\fP
.RS 4
显示机器或图像属性时，将输出限制为由参数 \& 指定的某些属性。如果未指定，则显示所有设置的属性 \&。参数应该是一个属性名，比如
"Name"\&。如果多次指定，则显示具有指定名称的所有属性 \&。
.RE
.PP
\fB\-a\fP, \fB\-\-all\fP
.RS 4
显示机器或图像属性时，显示所有属性，无论它们是否已设置 \&。
.sp
列出 VM 或容器映像时，不要隐藏以点字符 (`\&.`) \& 开头的映像。
.sp
清理 VM 或容器映像时，删除所有映像，而不仅仅是隐藏的 \&。
.RE
.PP
\fB\-\-value\fP
.RS 4
用 \fBshow\fP 打印属性时，只打印值，跳过属性名和 `=`\&。
.RE
.PP
\fB\-l\fP, \fB\-\-full\fP
.RS 4
不要省略进程树条目或表 \&。这意味着 \fB\-\-max\-addresses=full\fP\&。
.RE
.PP
\fB\-\-kill\-whom=\fP
.RS 4
与 \fBkill\fP 一起使用时，选择要杀死哪些进程 \&。必须是 \fBleader\fP，或者 \fBall\fP 其中之一，选择是只杀掉原生的 leader
进程还是杀掉原生的所有进程 \&。如果省略，则默认为 \fBall\fP\&。
.RE
.PP
\fB\-s\fP, \fB\-\-signal=\fP
.RS 4
与 \fBkill\fP 一起使用时，选择要发送给选定进程的信号 \&。必须是众所周知的信号说明符之一，例如 \fBSIGTERM\fP、\fBSIGINT\fP 或
\fBSIGSTOP\fP\&。如果省略，则默认为 \fBSIGTERM\fP\&。
.sp
特殊值 "help" 将列出已知值，程序将立即退出，特殊值 "list" 将列出已知值和数字信号编号，程序将立即退出 \&。
.RE
.PP
\fB\-\-uid=\fP
.RS 4
当与 \fBshell\fP 命令一起使用时，选择用户 ID 以打开交互式 shell 会话作为 \&。如果 \fBshell\fP
命令的参数还指定了用户名，则忽略此选项 \&。如果未以任何方式指定名称，则默认使用 "root"\&。请注意，\fBlogin\fP 命令 (见下文) \&
不支持此开关。
.RE
.PP
\fB\-E \fP\fINAME\fP\fB[=\fP\fIVALUE\fP\fB]\fP, \fB\-\-setenv=\fP\fINAME\fP\fB[=\fP\fIVALUE\fP\fB]\fP
.RS 4
与 \fBshell\fP 命令一起使用时，为执行的 shell\& 设置环境变量。这个选项可以多次使用来设置多个变量 \&。当省略 "=" 和
\fIVALUE\fP 时，将使用程序环境中同名变量的值 \&。
.sp
请注意，\fBlogin\fP 命令 \& 不支持此选项。
.RE
.PP
\fB\-\-mkdir\fP
.RS 4
与 \fBbind\fP 一起使用时，在应用绑定挂载 \&
之前创建目标文件或目录。请注意，尽管此选项的名称表明它仅适用于目录，但如果要挂载的对象不是目录，而是常规文件、设备节点、套接字或
FIFO，则此选项还会创建要挂载的目标文件节点 \&。
.RE
.PP
\fB\-\-read\-only\fP
.RS 4
与 \fBbind\fP 一起使用时，创建只读绑定挂载 \&。
.sp
当与 \fBclone\fP、\fBimport\-raw\fP 或 \fBimport\-tar\fP 一起使用时，将创建一个只读容器或 VM 映像 \&。
.RE
.PP
\fB\-n\fP, \fB\-\-lines=\fP
.RS 4
与 \fBstatus\fP 一起使用时，控制要显示的日志行数，从最近的行开始计算 \&。取一个正整数参数 \&。默认为 10\&。
.RE
.PP
\fB\-o\fP, \fB\-\-output=\fP
.RS 4
与 \fBstatus\fP 一起使用时，控制显示的日记帐条目的格式 \&。有关可用选项，请参见 \fBjournalctl\fP(1)\&。默认为 `短`\&。
.RE
.PP
\fB\-\-verify=\fP
.RS 4
下载容器或 VM 映像时，指定是否应在映像可用之前对其进行验证 \&。采用 "no"、"checksum" 和 `签名`\& 之一。如果
"no"，则不进行任何验证 \&。如果指定 "checksum"，则在传输完成后检查下载的完整性，但不验证签名 \&。如果指定了
"signature"，则会验证校验和并根据可信供应商的本地密钥环检查图像 \*(Aqs 签名 \&。如果服务器和协议支持此
\&，强烈建议将此选项设置为 "signature"。默认为 `签名`\&。
.RE
.PP
\fB\-\-now\fP
.RS 4
当与 \fBenable\fP 或 \fBdisable\fP 一起使用时，容器也会启动或关闭 \&。只有在相应的启用或禁用操作已成功 \&
时，才会执行启动或关闭操作。
.RE
.PP
\fB\-\-force\fP
.RS 4
下载容器或虚拟机镜像时，指定本地机器名的本地副本已经存在，先将其删除，替换为新下载的镜像 \&。
.RE
.PP
\fB\-\-format=\fP
.RS 4
当与 \fBexport\-tar\fP 或 \fBexport\-raw\fP 命令一起使用时，指定用于生成的文件的压缩格式 \&。采用
"uncompressed"、"xz"、"gzip"、`bzip2`\& 之一。默认情况下，格式是根据传递的图像文件名自动确定的 \&。
.RE
.PP
\fB\-\-max\-addresses=\fP
.RS 4
当与 \fBlist\-machines\fP 命令一起使用时，限制为每台机器显示的 IP 地址数 \&。默认为 1\&。可以使用 `all`\&
请求所有地址。如果限制为 0，则不显示地址列 \&。否则，如果机器的地址多于显示的地址，则 "\&..." 跟在最后一个地址 \& 之后。
.RE
.PP
\fB\-q\fP, \fB\-\-quiet\fP
.RS 4
在运行 \& 时抑制额外的信息输出。
.RE
.PP
\fB\-H\fP, \fB\-\-host=\fP
.RS 4
远程执行操作 \&。指定主机名，或用 "@" 分隔的用户名和主机名，以连接到 \&。主机名可以选择以 ssh 正在侦听的端口为后缀，由 ":"
分隔，然后是容器名称，由 "/" 分隔，它直接连接到指定主机上的特定容器 \&。这将使用 SSH 与远程机器管理器实例对话。容器名称可以用
\fBmachinectl \-H \fP\fIHOST\fP\& 枚举。将 IPv6 地址放在括号 \& 中。
.RE
.PP
\fB\-M\fP, \fB\-\-machine=\fP
.RS 4
连接到运行在本地容器中的 \fBsystemd\-machined.service\fP(8)，在容器内执行指定的操作 \&。
.RE
.PP
\fB\-\-no\-pager\fP
.RS 4
不要将输出通过管道传输到寻呼机 \&。
.RE
.PP
\fB\-\-no\-legend\fP
.RS 4
不要打印图例，i\&.e\&。带有提示的列标题和页脚 \&。
.RE
.PP
\fB\-\-no\-ask\-password\fP
.RS 4
不要向用户查询特权操作的身份验证 \&。
.RE
.PP
\fB\-h\fP, \fB\-\-help\fP
.RS 4
打印一个简短的帮助文本并退出 \&。
.RE
.PP
\fB\-\-version\fP
.RS 4
打印一个短版本字符串并退出 \&。
.RE
.SH "MACHINE AND IMAGE NAMES"
.PP
\fBmachinectl\fP 工具在必须按照严格规则选择名称的机器和图像上运行 \&。机器名称必须适合用作遵循 DNS 和 UNIX/Linux
语义的保守子集的主机名 \&。具体来说，它们必须由一个或多个非空标签字符串组成，由点 \& 分隔。不允许有前导点或尾随点 \&。不允许多个点的序列
\&。标签字符串只能包含字母数字字符以及短划，字符串，和下划，字符串 \&。机器名称的最大长度为 64 个字符 \&。
.PP
名为 "\&.host" 的特殊机器是指运行的主机系统本身 \&。这对于执行操作或检查主机系统也很有用 \&。请注意，除非指定 \fB\-\-all\fP 开关
\&，否则 \fBmachinectl list\fP 不会显示此特殊机器。
.PP
对图像名称的要求不那么严格，但必须是有效的 UTF\-8，必须适合作为文件名 (因此不能是单点或双点，也不能包含斜杠)，并且不能包含控制字符
\&。由于许多操作通过所请求机器的名称搜索图像，因此建议以与机器 \& 相同的严格方式命名图像。
.PP
名为 "\&.host" 的特殊映像指的是运行主机系统的映像 \&。因此，它在概念上将 maps 映射到上面描述的特殊 "\&.host" 机器名称
\&。请注意，\fBmachinectl list\-images\fP 也不会显示此特殊图像，除非指定 \fB\-\-all\fP\&。
.SH "FILES AND DIRECTORIES"
.PP
机器映像最好存储在 /var/lib/machines/ 中，但也会在 /usr/local/lib/machines/ 和
/usr/machines/\& 中进行搜索。出于兼容性原因，目录 /var/lib/container/ 也被搜索 \&。请注意，存储在 /usr /
下的图像始终被视为只读 \&。可以将来自其他目录的机器图像符号链接到 /var/lib/machines/ 中，使它们可用于
\fBmachinectl\fP\& 的控制。
.PP
请注意，某些图像操作仅在 btrfs 文件系统上受支持、高效或原子操作 \&。
.PP
\fBsystemd\-nspawn\fP(1) 和 \fBmachinectl\fP 可以理解三种格式的磁盘映像:
.sp
.RS 4
.ie  n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
一个简单的目录树，包含要启动的容器的文件和目录。
.RE
.sp
.RS 4
.ie  n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
子卷 (在 btrfs 文件系统上)，类似于上面描述的简单目录 \&。但是，它们还有其他好处，例如高效克隆和配额报告 \&。
.RE
.sp
.RS 4
.ie  n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"Raw" 磁盘映像，i\&.e\&。具有 GPT 或 MBR 分区表的磁盘二进制映像 \&。这种类型的图像是后缀为 `\&.raw`\& 的常规文件。
.RE
.PP
有关图像格式的更多信息，尤其是其 \fB\-\-directory=\fP 和 \fB\-\-image=\fP 选项 \&，请参见
\fBsystemd\-nspawn\fP(1)。
.SH EXAMPLES
.PP
\fBExample\ \&1.\ \&Download an Ubuntu image and open a shell in it\fP
.sp
.if  n \{\
.RS 4
.\}
.nf
# machinectl pull\-tar https://cloud\-images\&.ubuntu\&.com/trusty/current/trusty\-server\-cloudimg\-amd64\-root\&.tar\&.gz
# systemd\-nspawn \-M trusty\-server\-cloudimg\-amd64\-root
.fi
.if  n \{\
.RE
.\}
.PP
这将下载并验证指定的 \&.tar 映像，然后使用 \fBsystemd\-nspawn\fP(1) 在其中打开一个 shell\&。
.PP
\fBExample\ \&2.\ \&Download a Fedora image, set a root password in it, start it as a service\fP
.sp
.if  n \{\
.RS 4
.\}
.nf
# machinectl pull\-raw \-\-verify=no \e
      https://download\&.fedoraproject\&.org/Fedora\-Cloud\-Base\-36\-1\&.5\&.x86_64\&。原始 \&.xz\e
      Fedora\-Cloud\-Base\-36\-1\&.5\&.x86\-64
# systemd\-nspawn \-M Fedora\-Cloud\-Base\-36\-1\&.5\&.x86\-64
# 密码
# 出口
# machinectl 启动 Fedora\-Cloud\-Base\-36\-1\&.5\&.x86\-64
# machinectl 登录 Fedora\-Cloud\-Base\-36\-1\&.5\&.x86\-64
.fi
.if  n \{\
.RE
.\}
.PP
这将下载指定的 \&.raw 图像并禁用验证 \&。然后在里面打开一个 shell，设置 root 密码 \&。之后留下 shell，机器以系统服务启动
\&。使用最后一个命令，请求登录到容器中 \&。
.PP
\fBExample\ \&3.\ \&Exports a container image as tar file\fP
.sp
.if  n \{\
.RS 4
.\}
.nf
# machinectl 导出 \- tar fedora myfedora\&.tar\&.xz
.fi
.if  n \{\
.RE
.\}
.PP
将容器 "fedora" 作为 xz 压缩的 tar 文件 myfedora\&.tar\&.xz 导出到当前目录 \&。
.PP
\fBExample\ \&4.\ \&Create a new shell session\fP
.sp
.if  n \{\
.RS 4
.\}
.nf
# machinectl shell \-\-uid=lennart
.fi
.if  n \{\
.RE
.\}
.PP
这将以 \fBsu\fP(1)\-like 方式在本地主机上为用户 ID "lennart" 创建一个新的 shell 会话 \&。
.SH "EXIT STATUS"
.PP
成功时返回 0，否则返回非零失败代码 \&。
.SH ENVIRONMENT
.PP
\fI$SYSTEMD_LOG_LEVEL\fP
.RS 4
发出消息的最大日志级别 (具有更高日志级别的消息，i\&.e\&。不太重要的消息将被抑制)
\&。\fBemerg\fP、\fBalert\fP、\fBcrit\fP、\fBerr\fP、\fBwarning\fP、\fBnotice\fP、\fBinfo\fP、\fBdebug\fP 之一
(按重要性递减顺序) 或 0\&...7\& 范围内的整数。有关详细信息，请参见 \fBsyslog\fP(3)\&。
.RE
.PP
\fI$SYSTEMD_LOG_COLOR\fP
.RS 4
一个布尔值 \&。如果为真，写入 tty 的消息将根据优先级着色。
.sp
这个设置只在消息直接写入终端时才有用，因为 \fBjournalctl\fP(1) 等显示日志的工具会自行根据日志级别给消息着色 \&。
.RE
.PP
\fI$SYSTEMD_LOG_TIME\fP
.RS 4
一个布尔值 \&。如果为 true，控制台日志消息将以时间戳 \& 为前缀。
.sp
这个设置只在消息直接写入终端或文件时才有用，因为 \fBjournalctl\fP(1) 等显示日志的工具会根据条目元数据自行附加时间戳 \&。
.RE
.PP
\fI$SYSTEMD_LOG_LOCATION\fP
.RS 4
一个布尔值 \&。如果为 true，消息将在源代码中以文件名和行号为前缀 \&。
.sp
请注意，日志位置通常作为元数据附加到日志条目中。尽管如此，在调试程序时将它直接包含在消息文本中还是很方便的 \&。
.RE
.PP
\fI$SYSTEMD_LOG_TID\fP
.RS 4
一个布尔值 \&。如果为真，消息将以当前数字线程 ID (TID)\& 为前缀。
.sp
请注意，此信息无论如何都作为元数据附加到日记条目 \&。尽管如此，在调试程序时将它直接包含在消息文本中还是很方便的 \&。
.RE
.PP
\fI$SYSTEMD_LOG_TARGET\fP
.RS 4
日志消息的目的地 \&。\fBconsole\fP (记录到附加的 tty)、\fBconsole\-prefixed\fP (记录到附加的
tty，但带有编码日志级别和 "facility" 的前缀，参见 \fBsyslog\fP(3)、\fBkmsg\fP
(记录到内核循环日志缓冲区)、\fBjournal\fP (记录到日志) 之一，\fBjournal\-or\-kmsg\fP (如果可用则记录到日志，否则记录到
kmsg)，\fBauto\fP (自动确定适当的日志目标，默认)，\fBnull\fP (禁用日志输出) \&。
.RE
.PP
\fI$SYSTEMD_PAGER\fP
.RS 4
未给出 \fB\-\-no\-pager\fP 时使用的寻呼机; 覆盖 \fI$PAGER\fP\&。如果 \fI$SYSTEMD_PAGER\fP 和 \fI$PAGER\fP
都没有设置，则依次尝试一组众所周知的寻呼机实现，包括 \fBless\fP(1) 和 \fBmore\fP(1)，直到找到一个
\&。如果没有发现寻呼机实现，则不调用寻呼机 \&。将此环境变量设置为空字符串或值 "cat" 等同于传递 \fB\-\-no\-pager\fP\&。
.sp
Note: 如果未设置 \fI$SYSTEMD_PAGERSECURE\fP，\fI$SYSTEMD_PAGER\fP (以及 \fI$PAGER\fP) 将被忽略
\&。
.RE
.PP
\fI$SYSTEMD_LESS\fP
.RS 4
覆盖传递给 \fBless\fP (默认 "FRSXMK") \& 的选项。
.sp
用户可能希望特别更改两个选项:
.PP
\fBK\fP
.RS 4
此选项指示寻呼机在按下 Ctrl+C 时立即退出 \&。要允许 \fBless\fP 自己处理 Ctrl+C 以切换回寻呼机命令提示符，请取消设置此选项
\&。
.sp
如果 \fI$SYSTEMD_LESS\fP 的值不包括 "K"，调用的分页器是 \fBless\fP，Ctrl+C 会被可执行文件忽略，需要分页器处理 \&。
.RE
.PP
\fBX\fP
.RS 4
此选项指示寻呼机不将 termcap 初始化和取消初始化字符串发送到终端 \&。它默认设置为允许命令输出在终端中保持可见，即使在寻呼机退出 \&
之后也是如此。然而，这会阻止某些寻呼机功能工作，特别是无法使用鼠标滚动分页输出。
.RE
.sp
有关更多讨论，请参见 \fBless\fP(1)\&。
.RE
.PP
\fI$SYSTEMD_LESSCHARSET\fP
.RS 4
覆盖传递给 \fBless\fP 的字符集 (默认为 "utf\-8"，如果调用终端被确定为与 UTF\-8 兼容) \&。
.RE
.PP
\fI$SYSTEMD_PAGERSECURE\fP
.RS 4
采用布尔型参数 \&。为真时，启用寻呼机的 "secure" 模式; 如果为假，则禁用 \&。如果根本未设置
\fI$SYSTEMD_PAGERSECURE\fP，则在有效 UID 与登录会话的所有者不同时启用安全模式，请参见 \fBgeteuid\fP(2) 和
\fBsd_pid_get_owner_uid\fP(3)\&。在安全模式下，调用寻呼机时将设置
\fBLESSSECURE=1\fP，寻呼机应禁用打开或创建新文件或启动新子进程的命令 \&。当根本没有设置 \fI$SYSTEMD_PAGERSECURE\fP
时，将不会使用未知实现安全模式的寻呼机 \&。(目前只有 \fBless\fP(1) 实现了安全模式 \&。)
.sp
Note: 当以提升的权限调用命令时，例如在 \fBsudo\fP(8) 或 \fBpkexec\fP(1) 下，必须小心确保未启用意外的交互，特性 \&。寻呼机的
"Secure" 模式可以如上所述自动启用 \&。设置 \fISYSTEMD_PAGERSECURE=0\fP 或不将其从继承环境中删除允许用户调用任意命令
\&。请注意，如果要兑现 \fI$SYSTEMD_PAGER\fP 或 \fI$PAGER\fP 变量，则必须同时设置
\fI$SYSTEMD_PAGERSECURE\fP\&。改为使用 \fB\-\-no\-pager\fP\& 完全禁用寻呼机可能是合理的。
.RE
.PP
\fI$SYSTEMD_COLORS\fP
.RS 4
采用布尔型参数 \&。当为真时，\fBsystemd\fP 和相关的实用工具将在其输出中使用颜色，否则输出将为单色 \&。此外，该变量可以采用以下特殊值之一:
"16"、"256"，分别将颜色的使用限制为基本 16 或 256 ANSI 颜色 \&。这可以被指定以覆盖基于 \fI$TERM\fP
和控制台连接到什么的自动决定 \&。
.RE
.PP
\fI$SYSTEMD_URLIFY\fP
.RS 4
该值必须是布尔值 \&。控制是否应在支持此 \& 的终端模拟器的输出中生成可点击链接。这可以被指定来覆盖 \fBsystemd\fP 基于 \fI$TERM\fP
和其他条件做出的决定 \&。
.RE
.SH "SEE ALSO"
.PP
\fBsystemd\fP(1), \fBsystemd\-machined.service\fP(8), \fBsystemd\-nspawn\fP(1),
\fBsystemd.special\fP(7), \fBtar\fP(1), \fBxz\fP(1), \fBgzip\fP(1), \fBbzip2\fP(1)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
