.\" -*- coding: UTF-8 -*-
.\" Automatically generated by Pandoc 2.7.2
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH sane\-hp5590 5 "13 Jul 2008" "" "SANE Scanner Access Now Easy"
.hy
.SH NAME
.PP
sane\-hp5590 \- 惠普 4500C/4570C/5500C/5550C/5590/7650 Workgroup/Document 扫描仪的
SANE 后端
.SH DESCRIPTION
.PP
\fBsane\-hp5590\fP 库实现了一个 SANE (现在可以轻松访问扫描仪) 后端，它提供对以下 Hewlett\-Packard
Workgroup/Document 扫描仪的访问:
.IP \[bu] 2
扫描仪 4500C
.IP \[bu] 2
扫描仪 4570C
.IP \[bu] 2
ScanJet 5500C
.IP \[bu] 2
ScanJet 5550C
.IP \[bu] 2
扫描仪 5590
.IP \[bu] 2
扫描仪 7650
.PP
如果您拥有所有权的扫描仪不是上面列出的可与此后端一起使用的扫描仪，请通过发送扫描仪 \[cq] 的确切型号名称和 USB 供应商和设备 ID
(例如，来自 \fI/sys/bus/usb/devices\fP、\fBsane\-find\-scanner\fP(1) 或系统日志) 让我们知道这一点) 给我们。
即使扫描仪的名称与上述型号略有不同，也请告知我们。
.SH OPTIONS
.PP
后端支持的选项可以通过 \fBscanimage\fP(1) 等程序的命令行选项来选择，也可以通过 \fBxscanimage\fP(1) 或
\fBxsane\fP(1) 中的 GUI 元素来选择。 可以使用以下命令列出有效的命令行选项及其语法:
.IP
.nf
\f[C]
scanimage \-\-help \-d hp5590:interface:device\fR

.fi
.PP
其中 \f [I] interface\f [R] 和 \f [I] device\f [R] 指定有问题的设备，如在配置文件中一样。 添加
\fB\-\-all\-options\fP 以同时列出硬件读出选项。 可以省略 \fB\-d\fP 参数及其参数以获取有关第一个识别的扫描仪的信息。
.PP
使用命令:
.IP
.nf
\f[C]
扫描图像 \-L\fR

.fi
.PP
列出您的 SANE 安装识别的所有设备。
.SH "DEVICE SPECIFIC OPTIONS"
.TP 
\fB\-l \fP\f[I]n\fR
\f [B] mm\f [R] 中扫描区域的左上角 X 位置。 允许范围: 0 ..  215.889.\fR
.TP 
\fB\-t \fP\f[I]n\fR
\f [B] mm\f [R] 中扫描区域的左上 Y 位置。 允许范围: 0 ..  297.699.\fR
.TP 
\fB\-x \fP\f[I]n\fR
扫描区域的 X 宽度，单位为 \f [B] mm\f [R]。 允许范围: 0 ..  215.889.\fR
.TP 
\fB\-y \fP\f[I]n\fR
扫描区域的 Y 高度，单位为 \f [B] mm\f [R]。 允许范围: 0 ..  297.699.\fR
.PP
默认情况下，将扫描最大尺寸。
.TP 
\fB\-\-mode \fP\f[I]mode\fR
选择色彩模式。 \f [I] mode\f [R] 必须是以下之一: \[lq] Color\[rq]、\[lq] Color (48 位)
\[rq]、\[lq] Gray\[rq]、\[lq] 线稿 \[rq].\fR
.RS
.IP \f[R]\[bu]\fR 2
\[lq] Color\[rq]\- 扫描是用每个像素的 3 * 8 位 RGB 颜色值完成的。
.IP \[bu] 2
\[lq] Color (48 位) \[rq]\- 每个像素使用 3 * 16 位 RGB 颜色值进行扫描。
.IP \[bu] 2
\[lq] Gray\[rq]\- 扫描是用每个像素 1 * 8 位灰度值完成的。
.IP \[bu] 2
\[lq] Lineart\[rq]\- 扫描是用每像素 1 位黑白值完成的。
.RE
.TP 
\fB\-\-source \fP\f[I]source\fR
选择扫描源。 \f [I] source\f [R] 必须是以下之一: \[lq] Flatbed\[rq]、\[lq] ADF\[rq]、\[lq]
ADF Duplex\[rq]、\[lq] TMA 幻灯片 \[rq]、\[lq] TMA 底片 \[rq].\fR
.RS
.IP \f[R]\[bu]\fR 2
\[lq] Flatbed\[rq]\- 在平面稿台玻璃上扫描文档。
.IP \[bu] 2
\[lq] ADF\[rq]\- 使用自动文档进纸器扫描文档的正面。
.IP \[bu] 2
\[lq] ADF Duplex\[rq]\- 使用自动文档进纸器扫描文档的正面和背面。 请注意，必须在单独的后期处理步骤中旋转背面图像。
.IP \[bu] 2
\[lq] TMA Slides\[rq]\- 使用透明媒体适配器扫描幻灯片。 (hp5590 后端不完全支持)。
.IP \[bu] 2
\[lq] TMA Negatives\[rq]\-Negative 使用透明媒体适配器进行胶片扫描。 (hp5590 后端不完全支持)。
.RE
.TP 
\fB\-\-resolution \fP\f[I]res\fR
在 \f [B] dpi\f [R] 中设置扫描图像的分辨率。 \f [I] res\f [R] 必须是以下之一:
100、200、300、600、1200、2400.\fR
.PP
默认设置: 线稿、平板、100dpi。
.TP 
\fB\-\-extend\-lamp\-timeout[=yes|no]\fP
延长灯泡超时时间。 no = 15 minutes, yes = 1 hour.   (默认: 否)
.TP 
\fB\-\-wait\-for\-button[=yes|no]\fP
在扫描开始之前等待按下按钮。 (默认: 否)
.TP 
\fB\-\-preview[=yes|no]\fP
请求预览质量扫描。 (默认: 否)
.TP 
\fB\-\-hide\-eop\-pixel[=yes|no]\fP
隐藏页尾指示器像素并用下一个相邻像素的颜色覆盖。 (默认: 是)
.br
扫描仪使用每条扫描线中的最后一个像素来存储页面结束状态。 当使用自动文档进纸器 (ADF) 时，需要检测文档页的末端。
不幸的是，页尾像素也在平板扫描中生成。 建议隐藏这些像素。
.TP 
\fB\-\-trailing\-lines\-mode \fP\f[I]mode\fR
使用自动输稿器 (ADF) 时页尾后尾行的填充方式。 \f [I] mode\f [R] 必须是以下之一: \[lq] last\[rq]、\[lq]
raw\[rq]、\[lq] raster\[rq]、\[lq] 白色 \[rq]、\[lq] 黑色 \[rq]、\[lq] 颜色 \[rq]。
(默认:\[lq] last\[rq])\fR
.RS
.IP \f[R]\[bu]\fR 2
\[lq] last\[rq]= 重复最后一个扫描线 (recommended),
.IP \[bu] 2
\[lq] raw\[rq]= 读取原始扫描数据 (不推荐)，
.IP \[bu] 2
\[lq] raster\[rq]= 生成黑白像素图案，
.IP \[bu] 2
\[lq] white\[rq]= 白色像素，
.IP \[bu] 2
\[lq] black\[rq]= 黑色像素，
.IP \[bu] 2
\[lq] color\[rq]=RGB 或灰色像素 (见下一个选项)。
.RE
.TP 
\fB\-\-trailing\-lines\-color \fP\f[I]n\fR
在拖尾线模式 \[lq] color\[rq] 中设置填充尾随扫描线的颜色值 (参见上一个选项)。 (默认颜色: 紫色)
.br
RGB 颜色值必须指定并计算为 65536 * r + 256 * g + b，其中 r、g、b 的值在 0 ..  255.
.SH "READ OUT OPTIONS"
.PP
以下选项允许读取 ADF 中的按钮状态、计数器值、颜色设置和文档状态。 这可用于以编程方式控制相应的扫描仪选项，例如在 \f [I] flatbed\f
[R] 和 \f [I] ADF\f [R] 模式之间切换，或在 scanning.\fR 之后触发后处理任务
.TP 
\fB\-\-button\-pressed\fP
获取最后按下的按钮的 ID。 Id is one of \[lq]none\[rq], \[lq]power\[rq], \[lq]scan\[rq],
\[lq]collect\[rq], \[lq]file\[rq], \[lq]email\[rq], \[lq]copy\[rq],
\[lq]up\[rq], \[lq]down\[rq], \[lq]mode\[rq], \[lq]cancel\[rq].
.br
扫描器存储最后按下的按钮的 ID，直到它被读取。 读出后，状态重置，后续读数将返回 \[lq] none\[rq]。

.TP 
\fB\-\-color\-led\fP
获取彩色 LED 指示灯的状态。 状态是 \[lq] color\[rq] 或 \[lq] black_white\[rq]。

.TP 
\fB\-\-counter\-value\fP
获取 LCD 上显示的计数器值。 该值在 1 ..  99.

.TP 
\fB\-\-doc\-in\-adf\fP
获取自动送稿器 (ADF) 的文档可用指示灯状态。 状态是 \[lq] yes\[rq] 或 \[lq] no\[rq]。

.SH "HINTS FOR USERS OF SCANBD"
.PP
\fBscanbd\fP(8) 是一个扫描仪按钮守护进程，它可以读取扫描仪按钮并触发扫描动作。
.PP
不要在 hp5590 上使用旧的 \fBscanbuttond\fP(8) 接口。 它已过时，不应再使用。 \f [I] hp5590\f [R]
backend.\fR 当前版本完全支持 \fBscanbd\fP(8) 的常规接口
.PP
此示例显示了 \fIscanbd.conf\fP 中包含的 \fBscanbd\fP(8) 的最小配置文件和相应的脚本文件。
.IP \[bu] 2
\fIhp5590.conf\fP
.IP
.nf
\f[C]
device hp5590 {
    # 设备匹配
    filter = \[dq]\[ha]hp5590.*\[dq]
    desc = \[dq]HP5590 Scanner Family\[dq]\fR

\f[C]    # Read out counter value and store in environment variable.
    function function_lcd_counter {
        filter = \[dq]\[ha]counter\-value.*\[dq]
        desc   = \[dq]hp5590: LCD counter\[dq]
        env    = \[dq]SCANBD_FUNCTION_LCD_COUNTER\[dq]
    }\fR

\f[C]    # Run scan script when button is pressed.
    action do\-scan {
        filter = \[dq]\[ha]button\-pressed.*\[dq]
        desc   = \[dq]hp5590: Scan button pressed\[dq]
        script = \[dq]scan_action.script\[dq]
        string\-trigger {
            from\-value  = \[dq]none\[dq]
            to\-value    = \[dq]scan\[dq]
        }
    }
}\fR

.fi
.IP \f[R]\[bu]\fR 2
\f[B]scan_action.script\fR
.IP
.nf
\f[C]
#!/bin/bash
echo device = $SCANBD_DEVICE
echo action = $SCANBD_ACTION
echo counter = $SCANBD_FUNCTION_LCD_COUNTER
scanfile=\[dq]$HOME/tmp/scans/scan\-$(date +%s).pnm\[dq]
case $SCANBD_ACTION in
do\-scan)
    scanimage \-d \[dq]$SCANBD_DEVICE\[dq] > \[dq]$scanfile\[dq]
    ;;
*)
    echo Warning: Unknown scanbd action: \[dq]$SCANBD_ACTION\[dq]
    ;;
esac\fR

.fi
.SH FILES
.TP 
\f[I]\[at]LIBDIR\[at]/libsane\-hp5590.a\fR
实现此后端的静态库。
.TP 
\f[I]\[at]LIBDIR\[at]/libsane\-hp5590.so\fR
实现此后端的共享库 (存在于支持动态加载的系统上)。
.SH ENVIRONMENT
.PP
如果库是在启用调试支持的情况下编译的，则此环境变量控制此后端的调试级别。
.PP
\f[B]SANE_DEBUG_HP5590\fR
.PP
Higher debug levels increase the verbosity of the output:
.IP
.nf
\f[C]
10 \- generic processing
20 \- verbose backend messages
40 \- HP5590 high\-level commands
50 \- HP5590 low\-level (USB\-in\-USB) commands\fR

.fi
.TP 
\fBExample:\fP
export SANE_DEBUG_HP5590=50
.SH "SEE ALSO"
.PP
\fBsane\fP(7), \fBsane\-usb\fP(5)  \fBscanbd\fP(8), \fBscanimage\fP(1), \fBxscanimage\fP(1),
\fBxsane\fP(1)

.SH AUTHORS
Ilia Sotnikov <\fIhostcc@gmail.com\fP>.
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
