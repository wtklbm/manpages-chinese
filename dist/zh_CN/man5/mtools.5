.\" -*- coding: UTF-8 -*-
'\" t
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH mtools 5 22Oct22 MTOOLS MTOOLS
.SH Name
mtools.conf\-mtools 配置文件
.de  TQ
.br
.ns
.TP \\$1
..

'\" t
.tr \(is'
.tr \(if`
.tr \(pd"

.ds St Mtools\ 4.0.42
.PP
.SH Description
.PP
本手册页描述了 mtools 的配置文件。它们被称为 \&\f(CW\(if/etc/mtools.conf\(is\fP 和
\&\f(CW\(if~/.mtoolsrc\(is\fP。如果设置了环境变量
\&\f(CWMTOOLSRC\fP，则其内容将用作第三个配置文件的文件名。这些配置文件描述了以下项目:
.TP 
* \ Global\ configuration\ flags\ and\ variables\ 
.TP 
* \ Per\ drive\ flags\ and\ variables\ 
.PP
.SS Location\ of\ the\ configuration\ files
.PP
.PP
\&\&\f(CW\(if/etc/mtools.conf\(is\fP 是系统范围的配置文件，\&\f(CW\(if~/.mtoolsrc\(is\fP
是用户私有的配置文件。
.PP
在某些系统上，系统范围的配置文件称为 \&\&\f(CW\(if/etc/default/mtools.conf\(is\fP。
.PP
.SS \ \ General\ configuration\ file\ syntax
.PP
配置文件由部分组成。每个部分都以标识该部分的关键字开头，后跟一个冒号。 然后遵循变量赋值和标志。变量赋值采用以下形式:
.nf
\fIname=value\fP
.fi
 
标志是单独的关键字，后面没有等号和值。 一个部分要么在文件末尾结束，要么在下一部分开始的地方结束。
.PP
以散列 (\&\f(CW#\fP) 开头的行是注释。换行符等同于空格 (结束注释的地方除外)。配置文件不区分大小写，但用引号括起来的项目除外 (例如文件名)。
.PP
.SS Default\ values
对于大多数平台，mtools 包含物理软盘驱动器的合理编译默认值。 因此，如果您想使用 mtools
做的只是访问您的软盘驱动器，您通常不需要为配置文件操心。另一方面，如果您还想使用 mtools 访问您的硬盘分区和 DOSEMU
图像文件，则需要配置文件。
.PP
.SS Global\ variables
.PP
全局标志可以设置为 1 或 0.
.PP
以下全局标志被识别:
.TP 
\&\&\f(CWMTOOLS_SKIP_CHECK\fP\ 
如果将其设置为 1，mtools 将跳过大部分完整性检查。这是读取一些用早期 ROM 制作的 Atari 磁盘所必需的，否则这些磁盘将无法识别。
.TP 
\&\&\f(CWMTOOLS_FAT_COMPATIBILITY\fP\ 
如果将其设置为 1，mtools 将跳过脂肪大小检查。有些磁盘的 FAT 比实际需要的要大。如果未设置此选项，这些将被拒绝。
.TP 
\&\&\f(CWMTOOLS_LOWER_CASE\fP\ 
如果设置为 1，mtools 将所有大写的短文件名显示为小写。这样做是为了允许与不知道大小写位的旧版本 mtools 一致的行为。
.TP 
\&\&\f(CWMTOOLS_NO_VFAT\fP\ 
如果将其设置为 1，则 mtools 不会为大小写混合的文件名生成 VFAT 条目，但否则会为合法的 dos 文件名生成 VFAT 条目。
这在使用无法理解 VFAT 长名称的 DOS 版本 (例如 FreeDOS) 时很有用。
.TP 
\&\&\f(CWMTOOLS_DOTTED_DIR\fP\ 
在宽目录中，用点而不是空格分隔基本名称和扩展名来打印短名称。
.TP 
\&\&\f(CWMTOOLS_NAME_NUMERIC_TAIL\fP\ 
如果设置为一个 (default)，则为所有长名称 (~1) 生成数字尾。 如果设置为零，则只生成数字尾部，否则会发生冲突。
.TP 
\&\&\f(CWMTOOLS_TWENTY_FOUR_HOUR_CLOCK\fP\ 
如果 1，使用欧洲记法表示时间 (二十四小时制)，否则使用 UK/US 记法 (am/pm)
.TP 
\&\&\f(CWMTOOLS_LOCK_TIMEOUT\fP\ 
等待锁定设备空闲的时间 (以秒为单位)。 默认为 30。
.PP
示例: 将以下行插入您的配置文件指示 mtools 跳过完整性检查:
 
.nf
.in +0.3i
\fB  MTOOLS_SKIP_CHECK=1\fP
.fi
.in -0.3i
.PP
 
\&\fR
.PP
全局变量也可以通过环境设置:
 
.nf
.in +0.3i
\fB  export MTOOLS_SKIP_CHECK=1\fP
.fi
.in -0.3i
.PP
 
\&\fR
.PP
全局字符串变量可以设置为任何值:
.TP 
\&\&\f(CWMTOOLS_DATE_STRING\fP\ 
用于打印文件日期的格式。 默认情况下，是 dd\-mm\-yyyy。
.PP
.SS Per\ drive\ flags\ and\ variables
.PP
.SS \ \ General\ information
.PP
每个驱动器标志和值可以在驱动器部分中描述。驱动部分以 \&\&\f(CWdrive\fP "\fIdriveletter\fP" 开头:
.PP
然后跟随变量值对和标志。
.PP
这是示例驱动器描述:
 
.nf
.in +0.3i
\fB  drive a:     file="/dev/fd0" use_xdf=1\fP
.fi
.in -0.3i
.PP
 
\&\fR
.PP
.SS \ \ Location\ information
.PP
对于每个驱动器，您需要描述其数据的物理存储位置 (映像文件、物理设备、分区、偏移量)。
.TP 
\&\&\f(CWfile\fP\ 
保存磁盘映像的文件或设备的名称。这是强制性的。文件名应该用引号引起来。
.TP 
\&\&\f(CWpartition\fP\ 
告诉 mtools 将驱动器视为分区设备，并使用给定的分区。使用此方法只能访问主分区，它们的编号为 1 到 4。对于逻辑分区，使用更通用的
\&\f(CWoffset\fP 变量。\&\f(CWpartition\fP 变量适用于可移动媒体，例如 Syquest 磁盘、ZIP 驱动器和磁光盘。虽然传统的
DOS 把 Syquest 磁盘和磁光盘看成 \&\f(CW\(ifgiant floppy disks\(is\fP 是未分区的，但是 OS/2 和
Windows NT 把它们看成是硬盘，即分区设备。\&\f(CWpartition\fP 标志对 DOSEMU hdimages
也很有用。对于可以通过挂载直接访问分区的硬盘，不推荐使用。
.TP 
\&\&\f(CWoffset\fP\ 
描述 MS\-DOS 文件系统在文件中的起始位置。这对于 DOSEMU hdimages 中的逻辑分区和 ATARI ram
磁盘很有用。默认情况下，这是零，这意味着文件系统从设备或文件的开头开始。
.PP
.SS \ \ Disk\ Geometry\ Configuration
.PP
几何信息描述了磁盘的物理特性。它有三个目的:
.TP 
formatting\ 
几何信息被写入新制作的磁盘的引导扇区。但是，您也可以在命令行中描述几何信息。有关详细信息，请参见 mformat 部分。
.TP 
filtering\ 
在某些 Unix
上，存在仅支持一种物理几何结构的设备节点。例如，您可能需要不同的节点来访问高密度或低密度的磁盘。将该几何图形与存储在引导扇区中的实际几何图形进行比较，以确保该设备节点能够正确读取磁盘。如果几何不匹配，则此驱动器条目失败，并尝试下一个具有相同驱动器号的驱动器条目。有关为一个驱动器号提供多个描述的更多详细信息，请参见多个描述部分。
.IP
如果配置文件中未提供几何信息，则接受所有磁盘。在 Linux (和 SPARC) 上，存在具有可配置几何结构
(\&\f(CW\(if/dev/fd0\(is\fP、\&\f(CW\(if/dev/fd1\(is\fP 等的设备节点)，因此磁盘驱动器不需要 (并忽略) 过滤。
(Mtools 仍然对 Linux 中的纯文件 (磁盘映像) 进行过滤: 这主要用于测试目的，因为我无法访问实际上需要过滤的 Unix)。
.IP
如果您不需要过滤，但仍希望使用默认几何图形进行格式设置，则可以使用 \&\f(CWmformat_only\fP 标志关闭过滤。
.IP
如果您想过滤，您应该提供 \&\f(CWfilter\fP 标志。 如果提供几何图形，则必须提供两个标志之一。
.TP 
initial\ geometry\ 
在支持它的设备 (通常是软盘设备) 上，几何信息也用于设置初始几何。在读取包含真实几何图形的引导扇区时应用此初始几何图形。
如果配置文件中没有提供几何信息，或者提供了 \&\f(CWmformat_only\fP 标志，则不会进行初始配置。
.IP
在 Linux 上，实际上并不需要初始几何结构，因为可配置设备能够足够准确地自动检测磁盘类型 (对于大多数常见格式) 以读取引导扇区。
.PP
错误的几何信息可能会导致非常奇怪的错误。这就是为什么我强烈建议您将 \&\f(CWmformat_only\fP
标志添加到您的驱动器描述中，除非您确实需要过滤或初始几何图形。
.PP
以下几何相关变量可用:
.TP 
\&\&\f(CWcylinders\fP\ 
.TQ
\&\&\f(CWtracks\fP
气缸数。(\&\f(CWcylinders\fP 是首选形式，\&\&\f(CWtracks\fP 被认为已过时)
.TP 
\&\&\f(CWheads\fP\ 
头数 (sides)。
.TP 
\&\&\f(CWsectors\fP\ 
每个磁道的扇区数。
.PP
示例: 以下驱动器部分描述了 1.44M 驱动器:
.PP
 
.nf
.in +0.3i
\fB  drive a:       file="/dev/fd0H1440"       fat_bits=12       cylinders=80 heads=2 sectors=18       mformat_only\fP
.fi
.in -0.3i
.PP
 
\&\fR
.PP
可以使用以下速记几何描述:
.TP 
\&\&\f(CW1.44m\fP\ 
高密度 3 1/2 磁盘。等同于: \&\&\f(CWfat_bits=12 cylinders=80 heads=2 sectors=18\fP
.TP 
\&\&\f(CW1.2m\fP\ 
高密度 5 1/4 盘。等同于: \&\&\f(CWfat_bits=12 cylinders=80 heads=2 sectors=15\fP
.TP 
\&\&\f(CW720k\fP\ 
双密度 3 1/2 磁盘。等同于: \&\&\f(CWfat_bits=12 cylinders=80 heads=2 sectors=9\fP
.TP 
\&\&\f(CW360k\fP\ 
双密度 5 1/4 磁盘。等同于: \&\&\f(CWfat_bits=12 cylinders=40 heads=2 sectors=9\fP
.PP
速记格式说明可能会被修改。例如，\&\&\f(CW360k sectors=8\fP 描述了一个 320k 的磁盘，相当于:
\&\&\f(CWfat_bits=12 cylinders=40 heads=2 sectors=8\fP
.PP
.SS \ \ Open\ Flags
.PP
此外，还可以使用以下标志:
.TP 
\&\&\f(CWsync\fP\ 
所有 i/o 操作同步完成
.TP 
\&\&\f(CWnodelay\fP\ 
使用 O_NDELAY 标志打开设备或文件。这在某些非 Linux 体系结构上是必需的。
.TP 
\&\&\f(CWexclusive\fP\ 
使用 O_EXCL 标志打开设备或文件。在 Linux 上，这确保了对软盘驱动器的独占访问。在大多数其他体系结构上，对于普通文件，它根本没有影响。
.PP
.SS \ \ General\ Purpose\ Drive\ Variables
.PP
以下通用驱动器变量可用。 根据它们的类型，这些变量可以设置为字符串 (precmd、postcmd) 或整数 (所有其他)
.TP 
\&\&\f(CWfat_bits\fP\ 
FAT 的位数。这可能是 12 或
16。这很少需要，因为它几乎总是可以从引导扇区中的信息中推断出来。相反，如果您弄错了，描述脂肪位的数量实际上可能是有害的。您应该只在 mtools
得到错误的 fat bits 的自动检测数量时使用它，或者如果您想用奇怪的 fat bits 数量格式化磁盘。
.TP 
\&\&\f(CWcodepage\fP\ 
描述用于短文件名的 DOS 代码页。这是一个介于 1 和 999 之间的数字。默认情况下，使用代码页 850。这是因为此代码页包含
ISO\-Latin\-1 中也可用的大部分字符。您还可以使用全局 \&\f(CWdefault_codepage\fP 参数 (在任何驱动器描述之外)
为所有驱动器指定全局代码页。此参数从版本 4.0.0 开始存在
.TP 
\&\&\f(CWdata_map\fP\ 
重新映射图像文件中的数据。这对于可能需要插入额外的零填充扇区的图像文件很有用。IBM 3174
软盘映像就是这种情况。这些图像表示第一个柱面上扇区较少的软盘。这些丢失的扇区不存储在映像中，但仍计算在文件系统布局中。data_map 允许为
mtools 的上层伪造这些缺失的扇区。data_map 是源类型和大小的逗号分隔序列。对于由 map 创建的零填充扇区，源类型可能是
\&\f(CWzero\fP，对于要忽略的原始图像中的数据，\&\f(CWskip\fP 可能是 (skipped)，对于要使用的数据，(copied)
来自原始图像。Datamap 由隐式的最后一个数据元素自动补充，从当前偏移量到文件末尾按原样使用。每个大小都是一个数字后跟一个元: \&\f(CWs\fP 表示
512 字节扇区，\&\f(CWK\fP 表示千字节，\&\f(CWM\fP 表示兆字节，\&\&\f(CWG\fP 表示千兆字节，单字节则没有任何内容。
.IP
Example:
.IP
\&\&\f(CWdata_map=1s,zero31s,28s,skip1s\fP 将是用于 IBM 3174 软盘映像的 map。第一个扇区
(\&\f(CW1s\fP，引导扇区) 按原样使用。然后跟随 31 个伪零填充扇区 (\&\f(CWzero31s\fP)，然后图像 (\&\f(CW28s\fP) 接下来的
28 个扇区按原样使用 (它们包含 FAT 和根目录)，然后图像中的一个扇区 (\&\f(CWskip1s\fP) 被跳过，最后图像的其余部分按原样使用
(implicit)
.IP
.TP 
\&\&\f(CWprecmd\fP\ 
在打开设备之前执行给定的命令。 在 Solaris 的某些变体上，需要在打开软盘设备之前调用
`volcheck\-v`，以便系统注意到驱动器中确实有磁盘。drive 子句中的 \&\f(CWprecmd="volcheck \-v"\fP
建立了所需的行为。
.TP 
\&\&\f(CWpostcmd\fP\ 
关闭设备后执行给定的命令。 如果 mtools 与其他应用程序共享图像文件，以便将图像文件发布到该应用程序，可能会有用。
.TP 
\&\&\f(CWblocksize\fP\ 
此参数表示始终在此设备上使用的默认块大小。 所有 I/O 都是用这个块大小的倍数完成的，与文件系统引导扇区中注册的扇区大小无关。 这对于扇区大小不是
512 的字符设备很有用，例如 Solaris 上的 CD\-ROM 驱动器。
.PP
只有 \&\f(CWfile\fP 变量是必需的。其他参数可以省略。在这种情况下，使用默认值或自动检测值。
.PP
.SS \ \ General\ Purpose\ Drive\ Flags
.PP
标志可以设置为 1 (enabled) 或 0 (disabled)。如果省略该值，则启用它。 例如，\&\f(CWscsi\fP 等同于
\&\&\f(CWscsi=1\fP
.TP 
\&\&\f(CWnolock\fP\ 
指示 mtools 不要在此驱动器上使用锁定。 这在具有 buggy 锁定语义的系统上是必需的。
但是，在多个用户可能同时访问同一驱动器的情况下，启用此功能会降低操作的安全性。
.TP 
\&\&\f(CWscsi\fP\ 
当设置为 1 时，此选项告诉 mtools 使用原始 SCSI I/O 而不是标准 read/write 调用来访问设备。目前，这在
HP\-UX、Solaris 和 SunOS 上受支持。 这是必需的，因为在某些体系结构 (例如 SunOS 或 Solaris) 上，无法使用
\&\f(CWread\fP 和 \&\f(CWwrite\fP 系统调用访问 PC 媒体，因为操作系统希望它们包含 Sun 特定的 "disk label"。
.IP
由于原始 SCSI 访问始终使用整个设备，因此您需要另外指定 "partition" 标志
.IP
在某些架构上，例如 Solaris，mtools 需要 root 权限才能使用 \&\f(CWscsi\fP 选项。 因此，如果您想访问 Zip/Jaz
驱动器，则应在 Solaris 上安装 mtools setuid root。 因此，如果给出 \&\f(CWscsi\fP 标志，则自动暗示
\&\f(CWprivileged\fP，除非被 \&\f(CWprivileged=0\fP 明确禁用
.IP
Mtools 使用其 root 权限打开设备，并发出实际的 SCSI I/O 调用。 此外，root 权限仅用于系统范围配置文件 (如
\&\&\f(CW\(if/etc/mtools.conf\(is\fP) 中描述的驱动器，而不用于 \&\&\f(CW\(if~/.mtoolsrc\(is\fP 或
\&\f(CW\(if$MTOOLSRC\(is\fP 中描述的驱动器。
.TP 
\&\&\f(CWprivileged\fP\ 
当设置为 1 时，这会指示 mtools 使用其 setuid 和 setgid 权限打开给定的驱动器。 此选项仅对系统范围配置文件中描述的驱动器有效
(例如 \&\&\f(CW\(if/etc/mtools.conf\(is\fP，而不是 \&\f(CW\(if~/.mtoolsrc\(is\fP 或
\&\&\f(CW\(if$MTOOLSRC\(is\fP)。 显然，如果 mtools 没有安装 setuid 或 setgid，这个选项也是无效的。
\&'scsi=1' 隐含了此选项，但同样仅适用于系统范围配置文件中定义的驱动器。 Privileged 也可以显式设置为 0，以便告诉 mtools
即使设置了 \&\f(CWscsi=1\fP 也不要对给定驱动器使用其权限。
.IP
如果使用 \&\&\f(CWprivileged\fP 或 \&\f(CWscsi\fP 驱动器变量，只需安装 mtools setuid。
如果不使用这些选项，即使未安装 setuid root，mtools 也能完美运行。
.TP 
\&\&\f(CWvold\fP\ 
.IP
指示 mtools 将设备名称解释为 vold 标识符而不是文件名。 使用 \&\f(CWvolmgt\fP 库的 \&\f(CWmedia_findname()\fP
和 \&\&\f(CWmedia_oldaliases()\fP 函数将 vold 标识符转换为真实文件名。 仅当您在编译前使用
\&\&\f(CW\-\-enable\-new\-vold\fP 选项配置 mtools 时，此标志才可用。
.TP 
\&\&\f(CWswap\fP\ 
.IP
将媒体视为一个字交换的 Atari 磁盘。
.TP 
\&\&\f(CWuse_xdf\fP\ 
如果将其设置为非零值，mtools 还会尝试将此磁盘作为 XDF 磁盘进行访问。XDF 是 OS/2
使用的一种高容量格式。这是默认关闭的。有关详细信息，请参见 XDF 部分。
.TP 
\&\&\f(CWmformat_only\fP\ 
告诉 mtools 将此驱动器的几何图形仅用于 mformatting 而不是用于过滤。
.TP 
\&\&\f(CWfilter\fP\ 
告诉 mtools 使用此驱动器的几何图形进行格式化和过滤。
.TP 
\&\&\f(CWremote\fP\ 
告诉 mtools 连接到 floppyd (参见 floppyd 部分)。
.PP
.SS \ \ Supplying\ multiple\ descriptions\ for\ a\ drive
.PP
可以为驱动器提供多个描述。在这种情况下，将按顺序尝试描述，直到找到合适的描述。描述可能因多种原因而失败:
.TP 
1.\ 
因为几何不合适，
.TP 
2.\ 
因为驱动器中没有磁盘，
.TP 
3.\ 
或者因为其他问题。
.PP
当使用只能支持一个磁盘几何结构的物理设备时，多个定义很有用。 Example:
 
.nf
.in +0.3i
\fB  drive a: file="/dev/fd0H1440" 1.44m   drive a: file="/dev/fd0H720" 720k\fP
.fi
.in -0.3i
.PP
 
\&\fR
.PP
这指示 mtools 将 /dev/fd0H1440 用于 1.44m (高密度) 磁盘，将 /dev/fd0H720 用于 720k (双密度)
磁盘。在 Linux 上，实际上并不需要此特性因为 /dev/fd0 设备能够处理任何几何形状。
.PP
您还可以使用多个驱动器描述通过一个驱动器号访问您的两个物理驱动器:
.PP
 
.nf
.in +0.3i
\fB  drive z: file="/dev/fd0"   drive z: file="/dev/fd1"\fP
.fi
.in -0.3i
.PP
 
\&\fR
.PP
通过此描述，如果 \&\f(CWmdir z:\fP 包含磁盘，则它会访问您的第一个物理驱动器。如果第一个驱动器不包含磁盘，则 mtools 检查第二个驱动器。
.PP
使用多个配置文件时，最后解析的文件中的驱动器描述会覆盖早期文件中同一驱动器的描述。为了避免这种情况，请使用 \&\f(CWdrive+\fP 或
\&\f(CW+drive\fP 关键字而不是 \&\f(CWdrive\fP。第一个将描述添加到列表的末尾 (即最后尝试)，第一个将其添加到列表的开头。
.PP
.SS Location\ of\ configuration\ files\ and\ parsing\ order
.PP
配置文件按以下顺序解析:
.TP 
1.\ 
编译默认值
.TP 
2.\ 
\&\&\f(CW\(if/etc/mtools.conf\(is\fP
.TP 
3.\ 
\&\&\f(CW\(if~/.mtoolsrc\(is\fP.
.TP 
4.\ 
\&\&\f(CW\(if$MTOOLSRC\(is\fP (\&\f(CWMTOOLSRC\fP 环境变量指向的文件)
.PP
后面文件中描述的选项会覆盖前面文件中描述的选项。如果早期文件中定义的驱动器未在以后的文件中被覆盖，则它们将继续存在。例如，驱动器 A 和 B 可能在
\&\f(CW\(if/etc/mtools.conf\(is\fP 中定义，驱动器 C 和 D 可能在 \&\f(CW\(if~/.mtoolsrc\(is\fP
中定义。但是，如果 \&\f(CW\(if~/.mtoolsrc\(is\fP 也定义了驱动器 A，则此新描述将覆盖
\&\f(CW\(if/etc/mtools.conf\(is\fP 中驱动器 A
的描述，而不是添加到它。如果要向先前文件中已描述的驱动器添加新描述，则需要使用 \&\f(CW+drive\fP 或 \&\f(CWdrive+\fP 关键字。
.PP
.SS Backwards\ compatibility\ with\ old\ configuration\ file\ syntax
.PP
此处描述的语法是 \&\f(CWmtools\-3.0\fP
版的新语法。仍然支持旧的面向行的语法。以单个字母开头的每一行都被认为是使用旧语法的驱动器描述。旧式和新式驱动器部分可以混合在同一个配置文件中，以使升级更容易。对旧语法的支持最终会被逐步淘汰，为了不鼓励使用它，我特意在这里省略了它的描述。
.PP
.SH 也可以看看
mtools
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
