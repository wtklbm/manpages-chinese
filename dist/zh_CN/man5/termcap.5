.\" -*- coding: UTF-8 -*-
.\" Copyright (c) 1993 Michael Haardt (michael@moria.de),
.\"     Fri Apr  2 11:32:09 MET DST 1993
.\"
.\" SPDX-License-Identifier: GPL-2.0-or-later
.\"
.\" Modified formatting Sat Jul 24 17:13:38 1993, Rik Faith (faith@cs.unc.edu)
.\" Modified (extensions and corrections)
.\"   Sun May  1 14:21:25 MET DST 1994 Michael Haardt
.\"   If mistakes in the capabilities are found, please send a bug report to:
.\"   michael@moria.de
.\" Modified Mon Oct 21 17:47:19 EDT 1996 by Eric S. Raymond (esr@thyrsus.com)
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH termcap 5 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
termcap \- 终端能力数据库
.SH DESCRIPTION
termcap 数据库是一个过时的工具，用于描述 character\-cell 终端和打印机的功能。 保留它只是为了与旧程序兼容; 新程序应使用
\fBterminfo\fP(5) 数据库和相关库。
.PP
\fI/etc/termcap\fP 是一个 ASCII 文件 (数据库主文件)，其中列出了许多不同类型终端的功能。 程序可以读取 termcap
来找到控制实际使用的最终端的视觉属性所需的特定转义码。 (终端的其他方面由 \fBstty\fP(1).) 处理。termcap 数据库在 \fBTERM\fP
环境变量上建立索引。
.PP
Termcap 条目必须在单个逻辑行上定义，使用 \[aq]\e\[aq] 来抑制换行。 字段由 \[aq]:\[aq] 分隔。
每个条目的第一个字段从左边距开始，包含终端的名称列表，由 \[aq]|\[aq] 分隔。
.PP
第一个子字段可能 (在 4.3BSD 和更早版本的 BSD termcap 条目中) 包含一个由两个字符组成的短名称。
这个简称可以由大写字母或小写字母组成。 在 4.4BSD 中，termcap 条目省略了该字段。
.PP
第二个子字段 (第一个，采用较新的 4.4BSD 格式) 包含环境变量 \fBTERM\fP 使用的名称。 它应该用小写字母拼写。
可选择的硬件功能应通过在此名称后，追加，连字符和后缀来标记。 请参见下面的示例。 通常的后缀是 w (超过 80 个字符宽)、am (自动边距)、nam
(无自动边距) 和 rv (反向视频显示)。 第三个子字段包含此 termcap 条目的长描述性名称。
.PP
后续字段包含最终功能; 任何连续的能力行必须从左边距缩进一个制表符。
.PP
虽然没有定义顺序，但建议先写布尔值，然后是数字，然后是字符串功能，每个都按字母顺序排序，而不看大写或小写。 类似函数的能力可以写在一行中。
.PP
例如:
.nf
.PP
标题行: vt|vt101|DEC VT 101 80 字符模式下的终端: \e
头行: Vt|vt101\-w|DEC VT 101 (wide) 132 字符模式下的终端: \e
布尔值: :bs:\e
数字: :co#80:\e
字符串: :sr=\eE [H:\e
.fi
.SS "Boolean capabilities"
.nf
5i 打印机不会在屏幕上回显
am Automatic margins 表示自动换行
bs Control\-H (12 月 8 日) 执行退格
bw 左边距上的退格换行到上一行和右边距
da 显示保留在屏幕上方
db 显示保留在屏幕下方
eo 空格擦除游标位置的所有字符
es 转义序列和特殊字符在状态行中起作用
gn 泛型装置
hc This is a hardcopy 终点
HC 游标不在底线时很难看到
hs 有一个状态行
hz Hazeltine bug，终端不能打印波浪字符
in 最终插入空字节，而不是空格，以填充空白
km 终点有一个元密钥
mi 游标移动在插入模式下工作
ms 游标移动在 standout/underline 模式下工作
NP 无填充字符
NR ti 不反转 te
nx 无填充，必须使用 XON/XOFF
os 终端可以重写
ul 终端下划线虽然不能重写
xb 蜂巢故障，f1 发送 ESCAPE，f2 发送 \fB\[ha]C\fP
xn 换行 / 环绕故障
xo 终端使用 xon/xoff 协议
xs 在突出文本上键入的文本将以突出显示
xt Teleray 故障、破坏性标签和奇怪的突出模式
.fi
.SS "Numeric capabilities"
.nf
列数
dB 硬拷贝终端上退格键的延迟 (以毫秒为单位)
dC 硬拷贝终端上回车的延迟 (以毫秒为单位)
dF 硬拷贝终端上换页的延迟 (以毫秒为单位)
dN 硬拷贝终端上新行的延迟 (以毫秒为单位)
dT 硬拷贝终端上制表符停止的延迟 (以毫秒为单位)
dV 垂直制表符停止的延迟 (以毫秒为单位)
	硬拷贝终端
标签位置之间的区别
lh 软标签高度
lm 内存行
lw 软标签宽度
li 行数
Nl 软标签数
pb 需要填充的最低波特率
sg 突出的故障
ug 下划线故障
vt 虚拟终端号码
ws 状态行的宽度，如果不同于屏幕宽度
.fi
.SS "String capabilities"
.nf
!1 移动保存键
!2 移动挂起键
!3 移动撤消键
#1 移动帮助键
#2 移动主页键
#3 移位输入键
#4 游标左移键
%0 重做键
%1 帮助键
%2 标记键
%3 消息键
%4 移动键
%5 下一个对象键
%6 打开密钥
%7 选项键
%8 前一个对象键
%9 打印键
%a 改变了消息键
%b 移动键
%c 移动了下一个键
%d 移动选项键
%e 移动了上一个键
%f 移动打印键
%g 转移重做键
%h 移位替换键
%i 移动游标右键
%j 转移了恢复键
&0 移位的取消键
&1 引用键
&2 刷新键
&3 替换键
&4 重启键
&5 恢复键
&6 保存密钥
&7 暂停键
&8 撤消键
&9 移位开始键
*0 移位查找键
*1 移动命令键
*2 移动复制键
*3 移位创建密钥
*4 移位删除字符
*5 移位删除行
*6 选择键
*7 移位结束键
*8 移位清线键
*9 移位退出键
@0 找到钥匙
@1 开始键
@2 取消键
@3 关闭键
@4 命令键
@5 复制键
@6 创建密钥
@7 结束键
@8 输入 / 发送键
@9 退出键
al 插入一行
AL 插入 %1 行
ac 成对的块图形字符到 map 备用字符集
ae 结束替代字符集
作为块图形字符的起始替代字符集
bc 退格键，如果不是 \fB\[ha]H\fP
bl 音频铃
bt 移动到上一个制表位
cb 清除行首到游标
cc 虚拟命令字符
cd 清除到屏幕末尾
ce 清除到行尾
ch 仅将游标水平移动到 %1 列
cl 清除屏幕和游标主页
cm 游标移动到 %1 行和 %2 列 (在屏幕上)
CM 将游标移动到 %1 行和 %2 列 (在内存中)
cr 回车
cs 滚动区域从 %1 行到 %2
ct 清除标签
cv 将游标垂直移动到 %1 行
dc 删除一个字符
DC 删除 %1 个字符
dl 删除一行
DL 删除 %1 行
dm 开始删除模式
将游标向下移动一行
DO 游标向下 #1 行
ds 禁用状态行
eA 启用备用字符集
ec 擦除从游标处开始的 %1 个字符
ed 结束删除模式
ei 结束插入模式
ff 硬拷贝终端上的换页字符
fs 将字符返回到状态行之前的位置
F1 函数键发送的字符串 f11
F2 函数键发送的字符串 f12
F3 函数键发送的字符串 f13
\&...	\&...
F9 函数键发送的字符串 f19
FA 函数键发送的字符串 f20
FB 函数键发送的字符串 f21
\&...	\&...
FZ 函数键发送的字符串 f45
Fa 函数键发送的字符串 f46
Fb 函数键发送的字符串 f47
\&...	\&...
Fr 函数键发送的字符串 f63
hd 将游标向下移动半行
ho 游标主页
hu 将游标向上移动半行
i1 登录时初始化字符串 1
i3 登录时初始化字符串 3
是登录时的初始化字符串 2
ic 插入一个字符
IC 插入 %1 个字符
如果初始化文件
im 开始插入模式
ip 插入填充时间和插入后需要的特殊字符
iP 初始化程序
K1 键盘左上键
键盘上的 K2 中心键
K3 键盘右上键
K4 键盘左下键
K5 键盘右下键
k0 函数键 0
k1 函数键 1
k2 函数键 2
k3 函数键 3
k4 函数键 4
k5 函数键 5
k6 函数键 6
k7 函数键 7
k8 函数键 8
k9 函数键 9
k; 函数键 10
ka 清除所有标签键
kA 插入线路键
kb 退格键
kB 后退制表位
kC 清屏键
kd 游标向下键
kD 删除游标下字符的键
ke 关闭键盘
kE 清除行尾的键
kF 滚动键 forward/down
kh 游标主页键
kH 游标向下键
kI 插入 character/Insert 模式键
kl 游标左键
kL 删除行键
kM 退出插入模式键
kN 下一页键
kP 上一页键
kr 游标右键
kR 滚动键 backward/up
ks 打开键盘
kS 清除屏幕结束键
kt 清除此选项卡键
kT 在此处设置标签键
ku 游标向上键
l0 第零个函数键的标签，如果不是 f0
l1 第一个函数键的标签，如果不是 f1
l2 第一个函数键的标签，如果不是 f2
\&...	\&...
la 第十个函数键的标签，如果不是 f10
le 游标左移一个字符
ll 移动游标到左下角
LE 游标左移 %1 个字符
LF 关闭软标签
LO 打开软标签
mb 开始闪烁
MC 清除软边距
md 开始粗体模式
像这样结束所有模式，us、mb、md 和 mr
mh 启动半亮模式
mk 深色模式 (角色不可见)
ML 设置左软边距
mm 将最终端置于元模式
mo 将最终端置于元模式之外
mp 开启保护属性
mr 启动反向模式
MR 设置右软边距
nd 游标右移一个字符
nw 回车命令
pc 填充字符
pf 关闭打印机
pk 程序键 %1 以发送字符串 %2，就像用户输入的一样
pl 编程键 %1 在本地模式下执行字符串 %2
pn 编程软标签 %1 以显示字符串 %2
po 打开打印机
pO 打开打印机 %1 (<256) 字节
ps 在打印机上打印屏幕内容
px 程序键 %1 将字符串 %2 发送到计算机
r1 重置字符串 1 以将最终端设置为正常模式
r2 重置字符串 2 以将最终端设置为正常模式
r3 重置字符串 3 以将最终端设置为正常模式
RA 禁用自动边距
rc 恢复保存的游标位置
rf 重置字符串文件名
RF 请求来自终端的输入
注册机游标右移 %1 个字符
rp 将字符 %1 重复 %2 次
rP 在替换模式下发送字符后填充
rs 重置字符串
RX 关闭 XON/XOFF 流控
sa 设置 %1 %2 %3 %4 %5 %6 %7 %8 %9 属性
SA 启用自动边距
sc 保存游标位置
se 结束突出模式
sf 正常滚动一行
SF 普通滚动 %1 线
所以开始突出模式
sr 反向滚动
SR 回滚 %1 行
st 在当前列的所有行中设置制表符停止
SX 开启 XON/XOFF 流控
ta 移动到下一个硬件选项卡
tc 从另一个条目中读取最终描述
te 结束使用游标移动的程序
ti 开始使用游标移动的程序
ts 将游标移动到状态行的 %1 列
uc 在游标下划线字符并向右移动游标
ue 结束下划线
up 游标向上一行
UP 游标向上 %1 行
我们开始下划线
vb 看得见的钟
ve 普通游标可见
vi 游标不可见
vs 突出游标
wi 将窗口从 %1 行设置为 %2，将 %3 列设置为 %4
XF XOFF 字符如果不是 \fB\[ha]S\fP
.fi
.PP
有几种方法可以定义字符串功能的控制代码:
.PP
除了 \[aq]\[ha]\[aq]、\[aq]\e\[aq] 和 \[aq]%\[aq]，每个普通字符都代表自己。
.PP
\fB\[ha]x\fP 表示 Control\-x。 Control\-A 等于 1 位小数。
.PP
\ex 表示特殊代码。 x 可以是以下字符之一:
.RS
E 逃生 (27)
.br
n 换行 (10)
.br
r 回车 (13)
.br
t 制表 (9)
.br
b 退格键 (8)
.br
f 换页 (12)
.br
0 空字符。 \exxx 指定八进制字符 xxx。
.RE
.TP 
i
将参数递增 1。
.TP 
r
单参数能力
.TP 
+
将下一个字符的值添加到此参数并进行二进制输出
.TP 
2
使用 2 的字段执行此参数的 ASCII 输出
.TP 
d
使用 3 的字段执行此参数的 ASCII 输出
.TP 
%
打印一个 \[aq]%\[aq]
.PP
如果使用二进制输出，则应避免使用空字符 (\[aq]\e0\[aq])，因为它会终止字符串。 如果制表符可以是参数的二进制输出，则应重置制表符扩展。
.TP 
Warning:
上面的参数元字符可能是错误的: 它们记录了可能与 Linux termcap 不兼容的 Minix termcap。
.PP
块图形字符可以由三个字符串功能指定:
.TP 
as
启动替代字符集
.TP 
ae
结束替代字符集
.TP 
ac
字符对。 第一个字符是块图形符号的名称，第二个字符是它的定义。
.PP
以下名称可用:
.PP
.nf
+ 右箭头 (>)
, 左箭头 (<)
\&。向下箭头 (v)
0 整方 (#)
我灯 (#)
\- 上箭头 (\[ha])
\&' 菱形 (+)
棋盘 (:)
f 度 (')
g 正负 (#)
h 方格 (#)
j 右下角 (+)
k 右上角 (+)
l 左上角 (+)
m 左下角 (+)
n 交叉 (+)
o 上水平线 (\-)
q 中间水平线 (\-)
s 底部水平线 (_)
t 左发球台 (+)
您对了 T 恤 (+)
V 底 T 恤 (+)
w 普通 T 恤 (+)
x 垂直线 (|)
\[ti] 段 (???)
.fi
.PP
如果功能缺失，括号中的值是 \fIcurses\fP 库使用的建议默认值。
.SH "SEE ALSO"
\fBncurses\fP(3), \fBtermcap\fP(3), \fBterminfo\fP(5)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
