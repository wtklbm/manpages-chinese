.\" -*- coding: UTF-8 -*-
.\" Copyright (C) 1994  Jochen Hein (Hein@Student.TU-Clausthal.de)
.\" Copyright (C) 2008  Petr Baudis (pasky@suse.cz)
.\" Copyright (C) 2014 Michael Kerrisk <mtk@manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: GPL-2.0-or-later
.\"
.\" 2008-06-17 Petr Baudis <pasky@suse.cz>
.\"     LC_TIME: Describe first_weekday and first_workday
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH locale 5 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
locale \- 描述一个语言环境定义文件
.SH DESCRIPTION
\fBlocale\fP 定义文件包含 \fBlocaledef\fP(1) 命令将其转换为二进制语言环境数据库所需的所有信息。
.PP
定义文件由多个部分组成，每个部分都详细描述了一个语言环境类别。 有关这些类别的更多详细信息，请参见 \fBlocale\fP(7)。
.SS Syntax
语言环境定义文件以可能包含以下关键字的标头开头:
.TP 
\fIescape_char\fP
后跟一个字符，该字符应用作文件其余部分的转义字符，以标记应以特殊方式解释的字符。 它默认为反斜杠 (\e)。
.TP 
\fIcomment_char\fP
后跟一个字符，该字符将用作文件其余部分的注释字符。 它默认为数字符号 (#)。
.PP
语言环境定义有一个部分用于每个语言环境类别。 每个部分都可以从另一个现有的语言环境中复制，也可以从头开始定义。
如果应该复制该类别，则定义中唯一有效的关键字是 \fIcopy\fP，后跟用双引号引起来的应该复制的语言环境名称。 此规则的例外情况是
\fBLC_COLLATE\fP 和 \fBLC_CTYPE\fP，其中 \fIcopy\fP 语句后可以跟有特定于区域设置的规则和选定的覆盖。
.PP
从头开始定义语言环境或类别时，应使用现有系统提供的语言环境定义文件作为引用以遵循通用的 glibc 约定。
.SS "Locale category sections"
以下类别部分由 POSIX 定义:
.IP \[bu] 3
\fBLC_CTYPE\fP
.IP \[bu]
\fBLC_COLLATE\fP
.IP \[bu]
\fBLC_MESSAGES\fP
.IP \[bu]
\fBLC_MONETARY\fP
.IP \[bu]
\fBLC_NUMERIC\fP
.IP \[bu]
\fBLC_TIME\fP
.PP
此外，从 glibc 2.2 开始，GNU C 库支持以下非标准类别:
.IP \[bu] 3
\fBLC_ADDRESS\fP
.IP \[bu]
\fBLC_IDENTIFICATION\fP
.IP \[bu]
\fBLC_MEASUREMENT\fP
.IP \[bu]
\fBLC_NAME\fP
.IP \[bu]
\fBLC_PAPER\fP
.IP \[bu]
\fBLC_TELEPHONE\fP
.PP
有关每个类别的更详细说明，请参见 \fBlocale\fP(7)。
.SS LC_ADDRESS
该定义以第一列中的字符串 \fILC_ADDRESS\fP 开头。
.PP
允许使用以下关键字:
.TP 
\fIpostal_fmt\fP
后跟一个包含字段描述符的字符串，这些描述符定义了该地区邮政地址使用的格式。 识别以下字段描述符:
.RS
.TP 
%n
人名，可能使用 \fBLC_NAME\fP \fIname_fmt\fP 关键字构造 (自 glibc 2.24 起)。
.TP  4
%a
照顾个人或组织。
.TP 
%f
公司名称。
.TP 
%d
部门名称。
.TP 
%b
建筑名称。
.TP 
%s
街道或街区 (例如，日语) 名称。
.TP 
%h
门牌号码或名称。
.TP 
%N
如果前一个描述符的值不是空字符串，则插入一个行尾; 否则忽略。
.TP 
%t
如果前一个描述符的值不是空字符串，则插入一个空格; 否则忽略。
.TP 
%r
房间号、门号。
.TP 
%e
楼层数。
.TP 
%C
国家名称，来自 \fIcountry_post\fP 关键字。
.TP 
%l
城镇或城市内的当地乡镇 (自 glibc 2.24 起)。
.TP 
%z
Zip 号码，邮政编码。
.TP 
%T
城镇，城市。
.TP 
%S
州、省或县。
.TP 
%c
国家，取自数据记录。
.PP
每个字段描述符在 \[aq]%\[aq] 之后可能有一个 \[aq] R\[aq] 以指定信息取自实体的罗马化版本字符串。
.RE
.TP 
\fIcountry_name\fP
后跟当前文档语言的国家 / 地区名称 (例如，\fBde_DE\fP 语言环境的 "Deutschland")。
.TP 
\fIcountry_post\fP
后跟国家的缩写 (参见 CERT_MAILCODES)。
.TP 
\fIcountry_ab2\fP
后跟国家的两个字母缩写 (ISO 3166)。
.TP 
\fIcountry_ab3\fP
后跟国家的三个字母缩写 (ISO 3166)。
.TP 
\fIcountry_num\fP
后跟数字国家代码 (ISO 3166)。
.TP 
\fIcountry_car\fP
其次是国际车牌国家代码。
.TP 
\fIcountry_isbn\fP
后跟 ISBN 代码 (书籍)。
.TP 
\fIlang_name\fP
后跟当前文档语言的语言名称。
.TP 
\fIlang_ab\fP
后跟语言的两个字母缩写 (ISO 639)。
.TP 
\fIlang_term\fP
后跟语言的三个字母缩写 (ISO 639\-2/T)。
.TP 
\fIlang_lib\fP
后跟，库 使用语言的三个字母缩写 (ISO 639\-2/B)。 应用程序通常应该更喜欢 \fIlang_term\fP 而不是 \fIlang_lib\fP。
.PP
\fBLC_ADDRESS\fP 定义以字符串 \fIEND LC_ADDRESS\fP 结尾。
.SS LC_CTYPE
该定义以第一列中的字符串 \fILC_CTYPE\fP 开头。
.PP
允许使用以下关键字:
.TP 
\fIupper\fP
后跟大写字母列表。 自动包含字母 \fBA\fP 到 \fBZ\fP。 不允许同时指定为 \fBcntrl\fP、\fBdigit\fP、\fBpunct\fP 或 \fBspace\fP
的字符。
.TP 
\fIlower\fP
后跟小写字母列表。 自动包含字母 \fBa\fP 到 \fBz\fP。 不允许同时指定为 \fBcntrl\fP、\fBdigit\fP、\fBpunct\fP 或 \fBspace\fP
的字符。
.TP 
\fIalpha\fP
后跟字母列表。 自动包括指定为 \fBupper\fP 或 \fBlower\fP 的所有字符。 不允许同时指定为
\fBcntrl\fP、\fBdigit\fP、\fBpunct\fP 或 \fBspace\fP 的字符。
.TP 
\fIdigit\fP
后跟分类为数字的字符。 只允许使用数字 \fB0\fP 到 \fB9\fP。 它们默认包含在此类中。
.TP 
\fIspace\fP
后跟定义为空白字符的字符列表。 不允许同时指定为 \fBupper\fP、\fBlower\fP、\fBalpha\fP、\fBdigit\fP、\fBgraph\fP 或
\fBxdigit\fP 的字符。 自动包含字符
\fB<space>\fP、\fB<form\-feed>\fP、\fB<newline>\fP、\fB<carriage\-return>\fP、\fB<tab>\fP
和 \fB<vertical\-tab>\fP。
.TP 
\fIcntrl\fP
后跟控制字符列表。 不允许同时指定为
\fBupper\fP、\fBlower\fP、\fBalpha\fP、\fBdigit\fP、\fBpunct\fP、\fBgraph\fP、\fBprint\fP 或 \fBxdigit\fP
的字符。
.TP 
\fIpunct\fP
后跟标点符号列表。 不允许使用还指定为 \fBupper\fP、\fBlower\fP、\fBalpha\fP、\fBdigit\fP、\fBcntrl\fP、\fBxdigit\fP 或
\fB<space>\fP 字符的字符。
.TP 
\fIgraph\fP
后跟可打印字符列表，不包括 \fB<space>\fP 字符。 自动包含定义为
\fBupper\fP、\fBlower\fP、\fBalpha\fP、\fBdigit\fP、\fBxdigit\fP 和 \fBpunct\fP 的字符。 不允许也指定为
\fBcntrl\fP 的字符。
.TP 
\fIprint\fP
后跟可打印字符列表，包括 \fB<space>\fP 字符。 自动包含定义为
\fBupper\fP、\fBlower\fP、\fBalpha\fP、\fBdigit\fP、\fBxdigit\fP、\fBpunct\fP 和 \fB<space>\fP
字符的字符。 不允许也指定为 \fBcntrl\fP 的字符。
.TP 
\fIxdigit\fP
后跟分类为十六进制数字的字符列表。 必须包含十进制数字，后跟按升序排列的一组或多组六个字符。 默认包含以下字符: \fB0\fP 到 \fB9\fP、\fBa\fP 到
\fBf\fP、\fBA\fP 到 \fBF\fP。
.TP 
\fIblank\fP
后跟分类为 \fBblank\fP 的字符列表。 自动包含字符 \fB<space>\fP 和 \fB<tab>\fP。
.TP 
\fIcharclass\fP
后跟特定于语言环境的字符类名称列表，这些名称随后将在语言环境中定义。
.TP 
\fItoupper\fP
后跟从小写字母到大写字母的映射列表。 每个映射都是一对用 \fB,\fP 分隔并括在括号中的小写和大写字母。
.TP 
\fItolower\fP
后跟从大写字母到小写字母的映射列表。 如果关键字 tolower 不存在，则使用 toupper 列表的反向。
.TP 
\fImap totitle\fP
后跟要在标题 (headings) 中使用的字符和字母映射对列表。
.TP 
\fIclass\fP
后跟特定于语言环境的字符类定义，以类名开头，后跟属于该类的字符。
.TP 
\fIcharconv\fP
后跟特定于语言环境的字符映射名称列表，这些名称随后将在语言环境中定义。
.TP 
\fIoutdigit\fP
后跟区域设置的备用输出数字列表。
.TP 
\fImap to_inpunct\fP
后跟一个映射对的列表，其中包含用于区域设置的输入数字的备用数字和分隔符。
.TP 
\fImap to_outpunct\fP
后跟用于语言环境输出的备用分隔符的映射对列表。
.TP 
\fItranslit_start\fP
标记音译规则部分的开始。 该部分可以在开头包含 \fIinclude\fP 关键字，后跟特定于区域设置的规则和覆盖。
语言环境文件中指定的任何规则都将覆盖从其他文件复制或包含的任何规则。 如果语言环境文件中有重复的规则定义，则仅使用第一条规则。
.IP
音译规则包含一个要音译的字符，后跟一系列以分号分隔的音译目标。 使用目标字符集中可以出现的第一个目标，如果没有一个可以使用，则使用
\fIdefault_missing\fP 字符代替。
.TP 
\fIinclude\fP
在音译规则部分中包含一个音译规则文件 (以及可选的曲目 map 文件)。
.TP 
\fIdefault_missing\fP
在音译规则部分中定义了用于音译的默认字符，其中没有目标不能在目标字符集中出现。
.TP 
\fItranslit_end\fP
标志着音译规则的结束。
.PP
\fBLC_CTYPE\fP 定义以字符串 \fIEND LC_CTYPE\fP 结尾。
.SS LC_COLLATE
请注意，glibc 不支持所有 POSIX 定义的选项，仅支持下面描述的选项 (从 glibc 2.23 开始)。
.PP
该定义以第一列中的字符串 \fILC_COLLATE\fP 开头。
.PP
允许使用以下关键字:
.TP 
\fIcoll_weight_max\fP
后跟表示使用的排序规则级别的数字。 glibc 识别但忽略此关键字。
.TP 
\fIcollating\-element\fP
后跟表示多字符整理元素的整理元素符号的定义。
.TP 
\fIcollating\-symbol\fP
后跟可用于整理顺序语句的整理符号的定义。
.TP 
\fIdefine\fP
接下来是 \fBstring\fP，在 \fIifdef\fP \fBstring\fP/\fIendif\fP 构造中进行评估。
.TP 
\fIreorder\-after\fP
然后重新定义归类规则。
.TP 
\fIreorder\-end\fP
标志着重新定义归类规则的结束。
.TP 
\fIreorde\r\-sections\-after\fP
后跟脚本名称以在之后重新排序列出的脚本。
.TP 
\fIreorder\-sections\-end\fP
标记部分重新排序的结束。
.TP 
\fIscript\fP
然后是脚本声明。
.TP 
\fIsymbol\-equivalence\fP
后跟一个 collating\-symbol 等同于另一个定义的 collating\-symbol。
.PP
归类规则定义以一行开头:
.TP 
\fIorder_start\fP
后跟从 \fBforward\fP、\fBbackward\fP 或 \fBposition\fP 中选择的关键字列表。 顺序定义由描述整理顺序的行组成，并以关键字
\fIorder_end\fP 结束。
.PP
\fBLC_COLLATE\fP 定义以字符串 \fIEND LC_COLLATE\fP 结尾。
.SS LC_IDENTIFICATION
该定义以第一列中的字符串 \fILC_IDENTIFICATION\fP 开头。
.PP
允许使用以下关键字:
.TP 
\fItitle\fP
后跟语言环境文档的标题 (例如，"Maori language locale for New Zealand")。
.TP 
\fIsource\fP
后跟维护此文档的组织的名称。
.TP 
\fIaddress\fP
后跟维护此文档的组织的地址。
.TP 
\fIcontact\fP
后跟维护此文档的组织的联系人姓名。
.TP 
\fIemail\fP
后跟维护此文档的个人或组织的电子邮件地址。
.TP 
\fItel\fP
后跟维护此文档的组织的电话号码 (国际格式)。 从 glibc 2.24 开始，此关键字已弃用，取而代之的是其他联系方式。
.TP 
\fIfax\fP
后跟维护此文档的组织的传真号码 (国际格式)。 从 glibc 2.24 开始，此关键字已弃用，取而代之的是其他联系方式。
.TP 
\fIlanguage\fP
后跟本文档适用的语言名称。
.TP 
\fIterritory\fP
后跟本文档适用的 country/geographic 范围的名称。
.TP 
\fIaudience\fP
随后是对本文档所针对的受众的描述。
.TP 
\fIapplication\fP
其次是对本文件适用的任何特殊应用的描述。
.TP 
\fIabbreviation\fP
后跟本文档来源提供者的简称。
.TP 
\fIrevision\fP
随后是本文档的修订号。
.TP 
\fIdate\fP
随后是本文档的修订日期。
.PP
此外，对于文档定义的每个类别，都应该有一行以关键字 \fIcategory\fP 开头，然后是:
.IP (1) 5
标识此语言环境类别定义的字符串，
.IP (2)
一个分号，和
.IP (3)
\fBLC_*\fP 标识符之一。
.PP
\fBLC_IDENTIFICATION\fP 定义以字符串 \fIEND LC_IDENTIFICATION\fP 结尾。
.SS LC_MESSAGES
该定义以第一列中的字符串 \fILC_MESSAGES\fP 开头。
.PP
允许使用以下关键字:
.TP 
\fIyesexpr\fP
后跟描述可能的是 \- 响应的正则表达式。
.TP 
\fInoexpr\fP
后跟描述可能的无响应的正则表达式。
.TP 
\fIyesstr\fP
后跟对应于 "yes" 的输出字符串。
.TP 
\fInostr\fP
后跟对应于 "no" 的输出字符串。
.PP
\fBLC_MESSAGES\fP 定义以字符串 \fIEND LC_MESSAGES\fP 结尾。
.SS LC_MEASUREMENT
该定义以第一列中的字符串 \fILC_MEASUREMENT\fP 开头。
.PP
允许使用以下关键字:
.TP 
\fImeasurement\fP
后跟标识用于测量的标准的数字。 识别以下值:
.RS
.TP  4
\fB1\fP
Metric.
.TP 
\fB2\fP
美国习惯测量。
.RE
.PP
\fBLC_MEASUREMENT\fP 定义以字符串 \fIEND LC_MEASUREMENT\fP 结尾。
.SS LC_MONETARY
该定义以第一列中的字符串 \fILC_MONETARY\fP 开头。
.PP
允许使用以下关键字:
.TP 
\fIint_curr_symbol\fP
其次是国际货币符号。 这必须是 4 个字符的字符串，其中包含 ISO 4217 标准定义的国际货币符号 (三个字符)，后跟一个分隔符。
.TP 
\fIcurrency_symbol\fP
后跟当地货币符号。
.TP 
\fImon_decimal_point\fP
后跟单字符字符串，在格式化货币数量时将用作十进制定界符。
.TP 
\fImon_thousands_sep\fP
后跟单字符字符串，在格式化货币数量时将用作组分隔符。
.TP 
\fImon_grouping\fP
后跟一系列用分号分隔的整数，描述货币数量的格式。 有关详细信息，请参见下面的 \fIgrouping\fP。
.TP 
\fIpositive_sign\fP
后跟一个字符串，用于指示货币数量的正号。
.TP 
\fInegative_sign\fP
后跟一个字符串，用于指示货币数量的 negative 符号。
.TP 
\fIint_frac_digits\fP
后跟使用 \fIint_curr_symbol\fP 格式化时应使用的小数位数。
.TP 
\fIfrac_digits\fP
后跟使用 \fIcurrency_symbol\fP 格式化时应使用的小数位数。
.TP 
\fIp_cs_precedes\fP
后跟一个整数，表示非负格式货币数量的 \fIcurrency_symbol\fP 位置:
.RS
.TP  4
\fB0\fP
符号在值之后。
.TP 
\fB1\fP
符号在值之前。
.RE
.TP 
\fIp_sep_by_space\fP
后跟一个整数，表示 \fIcurrency_symbol\fP、符号字符串和非负格式货币数量值的分隔。 识别以下值:
.RS
.TP  4
\fB0\fP
没有空格分隔货币符号和值。
.TP 
\fB1\fP
如果货币符号和符号字符串相邻，则用空格将它们与值隔开; 否则用空格分隔货币符号和值。
.TP 
\fB2\fP
如果货币符号和符号字符串相邻，则用空格将它们与值隔开; 否则一个空格分隔符号字符串和值。
.RE
.TP 
\fIn_cs_precedes\fP
后跟一个整数，表示 negative 格式货币数量的 \fIcurrency_symbol\fP 的位置。 识别与 \fIp_cs_precedes\fP
相同的值。
.TP 
\fIn_sep_by_space\fP
后跟一个整数，表示 \fIcurrency_symbol\fP、符号字符串和 negative 格式货币数量的值的分隔。 识别与
\fIp_sep_by_space\fP 相同的值。
.TP 
\fIp_sign_posn\fP
后跟一个整数，指示 \fIpositive_sign\fP 应放置在非负货币数量的位置:
.RS
.TP  4
\fB0\fP
括号括起数量和 \fIcurrency_symbol\fP 或 \fIint_curr_symbol\fP。
.TP 
\fB1\fP
符号字符串位于数量和 \fIcurrency_symbol\fP 或 \fIint_curr_symbol\fP 之前。
.TP 
\fB2\fP
符号字符串在数量和 \fIcurrency_symbol\fP 或 \fIint_curr_symbol\fP 之后。
.TP 
\fB3\fP
符号字符串位于 \fIcurrency_symbol\fP 或 \fIint_curr_symbol\fP 之前。
.TP 
\fB4\fP
符号字符串在 \fIcurrency_symbol\fP 或 \fIint_curr_symbol\fP 之后。
.RE
.TP 
\fIn_sign_posn\fP
后跟一个整数，指示 \fInegative_sign\fP 应放置在 negative 货币数量的位置。 识别与 \fIp_sign_posn\fP 相同的值。
.TP 
\fIint_p_cs_precedes\fP
后跟一个整数，指示 \fIint_curr_symbol\fP 的位置，用于非负国际格式的货币数量。 识别与 \fIp_cs_precedes\fP 相同的值。
.TP 
\fIint_n_cs_precedes\fP
后跟一个整数，表示 negative 国际格式货币数量的 \fIint_curr_symbol\fP 位置。 识别与 \fIp_cs_precedes\fP
相同的值。
.TP 
\fIint_p_sep_by_space\fP
后跟一个整数，表示 \fIint_curr_symbol\fP、符号字符串和非负国际格式货币数量值的分隔。 识别与 \fIp_sep_by_space\fP
相同的值。
.TP 
\fIint_n_sep_by_space\fP
后跟一个整数，表示 \fIint_curr_symbol\fP、符号字符串和 negative 国际格式货币数量的值的分隔。 识别与
\fIp_sep_by_space\fP 相同的值。
.TP 
\fIint_p_sign_posn\fP
后跟一个整数，指示 \fIpositive_sign\fP 应放置在非负国际格式货币数量的位置。 识别与 \fIp_sign_posn\fP 相同的值。
.TP 
\fIint_n_sign_posn\fP
后跟一个整数，指示 \fInegative_sign\fP 应放置在 negative 国际格式货币数量的位置。 识别与 \fIp_sign_posn\fP
相同的值。
.PP
\fBLC_MONETARY\fP 定义以字符串 \fIEND LC_MONETARY\fP 结尾。
.SS LC_NAME
该定义以第一列中的字符串 \fILC_NAME\fP 开头。
.PP
允许使用各种关键字，但只有 \fIname_fmt\fP 是必需的。 仅当在此语言环境中有使用相应称呼的通用约定时，才需要其他关键字。 允许的关键字如下:
.TP 
\fIname_fmt\fP
后跟一个包含字段描述符的字符串，这些字段描述符定义了在语言环境中用于名称的格式。 识别以下字段描述符:
.RS
.TP  4
%f
家庭 name(s)。
.TP 
%F
姓氏大写。
.TP 
%g
最初的名字。
.TP 
%G
先给首字母。
.TP 
%l
带有拉丁字母的名字。
.TP 
%o
其他更短的名字。
.TP 
%m
额外给出 name(s)。
.TP 
%M
附加给定 name(s) 的缩写。
.TP 
%p
Profession.
.TP 
%s
称呼，如 "Doctor"。
.TP 
%S
缩写称呼，例如 "Mr." 或 "Dr."。
.TP 
%d
.\"  1 for the name_gen
.\"	    In glibc 2.19, %d1 is used in only:
.\"	        /home/mtk/ARCHIVE/GLIBC/glibc-2.19/localedata/locales/bem_ZM
.\"	        /home/mtk/ARCHIVE/GLIBC/glibc-2.19/localedata/locales/zh_HK
.\"	    In glibc 2.19, %d[2-5] appear to be not used at all
.\"  2 for name_mr
.\"  3 for name_mrs
.\"  4 for name_miss
.\"  5 for name_ms
称呼，使用 FDCC 集约定。
.TP 
%t
如果前面的字段描述符导致空字符串，则为空字符串，否则为空格字符。
.RE
.TP 
\fIname_gen\fP
随后是对任何性别的一般称呼。
.TP 
\fIname_mr\fP
接着是对男士的称呼。
.TP 
\fIname_mrs\fP
其次是对已婚妇女的称呼。
.TP 
\fIname_miss\fP
其次是对未婚女性的称呼。
.TP 
\fIname_ms\fP
随后是适用于所有女性的称呼。
.PP
\fBLC_NAME\fP 定义以字符串 \fIEND LC_NAME\fP 结尾。
.SS LC_NUMERIC
该定义以第一列中的字符串 \fILC_NUMERIC\fP 开头。
.PP
允许使用以下关键字:
.TP 
\fIdecimal_point\fP
后跟单字符字符串，在格式化数字数量时将用作十进制定界符。
.TP 
\fIthousands_sep\fP
后跟单字符字符串，在格式化数字数量时将用作组分隔符。
.TP 
\fIgrouping\fP
后跟一系列用分号分隔的整数，描述数字量的格式。
.IP
每个整数指定组中的位数。 第一个整数定义紧邻小数分隔符左侧的组的大小。 后续整数定义前一组左侧的后续组。 如果最后一个整数不是 \-1，则前一组的大小
(如果有的话) 将重复用于其余数字。 如果最后一个整数是 \-1，则不再执行进一步的分组。
.PP
\fBLC_NUMERIC\fP 定义以字符串 \fIEND LC_NUMERIC\fP 结尾。
.SS LC_PAPER
该定义以第一列中的字符串 \fILC_PAPER\fP 开头。
.PP
允许使用以下关键字:
.TP 
\fIheight\fP
其次是标准纸张格式的高度，以毫米为单位。
.TP 
\fIwidth\fP
其次是标准纸张格式的宽度，以毫米为单位。
.PP
\fBLC_PAPER\fP 定义以字符串 \fIEND LC_PAPER\fP 结尾。
.SS LC_TELEPHONE
该定义以第一列中的字符串 \fILC_TELEPHONE\fP 开头。
.PP
允许使用以下关键字:
.TP 
\fItel_int_fmt\fP
后跟一个字符串，该字符串包含标识用于拨打国际号码的格式的字段描述符。 识别以下字段描述符:
.RS
.TP  4
%a
没有全国前缀的区号 (前缀通常是 "00")。
.TP 
%A
区号包括全国前缀。
.TP 
%l
本地号码 (在区号内)。
.TP 
%e
分机 (至本地号码)。
.TP 
%c
国家代码。
.TP 
%C
用于拨打国外电话的备用运营商服务代码。
.TP 
%t
如果前面的字段描述符导致空字符串，则为空字符串，否则为空格字符。
.RE
.TP 
\fItel_dom_fmt\fP
后跟一个字符串，其中包含标识用于拨打国内号码的格式的字段描述符。 识别的字段描述符与 \fItel_int_fmt\fP 相同。
.TP 
\fIint_select\fP
后跟用于调用国际电话号码的前缀。
.TP 
\fIint_prefix\fP
后面是其他国家用来拨这个国家的前缀。
.PP
\fBLC_TELEPHONE\fP 定义以字符串 \fIEND LC_TELEPHONE\fP 结尾。
.SS LC_TIME
该定义以第一列中的字符串 \fILC_TIME\fP 开头。
.PP
允许使用以下关键字:
.TP 
\fIabday\fP
随后是一周中各天的缩写名称列表。 该列表从 \fIweek\fP 指定的一周的第一天开始 (默认为星期日)。 见注释。
.TP 
\fIday\fP
随后是一周中的几天的名称列表。 该列表从 \fIweek\fP 指定的一周的第一天开始 (默认为星期日)。 见注释。
.TP 
\fIabmon\fP
后跟缩写月份名称的列表。
.TP 
\fImon\fP
后跟月份名称列表。
.TP 
\fId_t_fmt\fP
后跟适当的日期和时间格式 (有关语法，请参见 \fBstrftime\fP(3)).
.TP 
\fId_fmt\fP
后跟适当的日期格式 (有关语法，请参见 \fBstrftime\fP(3)).
.TP 
\fIt_fmt\fP
后跟适当的时间格式 (有关语法，请参见 \fBstrftime\fP(3)).
.TP 
\fIam_pm\fP
后跟 \fBam\fP 和 \fBpm\fP 字符串的适当表示。 对于不使用 AM/PM 约定的语言环境，这应该留空。
.TP 
\fIt_fmt_ampm\fP
后跟适当的时间格式 (有关语法，使用 12 小时时钟格式时请参见 \fBstrftime\fP(3))。 对于不使用 AM/PM 约定的语言环境，这应该留空。
.TP 
\fIera\fP
后跟以分号分隔的字符串，这些字符串定义了语言环境中每个时代的年份计算和显示方式。 每个字符串都具有以下格式:
.RS
.PP
\fIdirection\fP:\fIoffset\fP:\fIstart_date\fP:\fIend_date\fP:\fIera_name\fP:\fIera_format\fP
.PP
字段定义如下:
.TP  4
\fIdirection\fP
\fB+\fP 或 \fB\-\fP。 \fB+\fP 表示接近 \fIstart_date\fP 的年份比接近 \fIend_date\fP 的年份具有更少的数字。 \fB\-\fP
表示相反。
.TP 
\fIoffset\fP
纪元中最接近 \fIstart_date\fP 的年份编号，对应 \fI%Ey\fP 描述符 (见 \fBstrptime\fP(3)).
.TP 
\fIstart_date\fP
\fIyyyy/mm/dd\fP 时代的开始。 AD 1 之前的年份表示为 negative 数字。
.TP 
\fIend_date\fP
\fIyyyy/mm/dd\fP 形式的时代结束，或 \fB\-*\fP 或 \fB+*\fP 的两个特殊值之一。 \fB\-*\fP 表示结束日期是时间的开始。 \fB+*\fP
表示结束日期是时间的结束。
.TP 
\fIera_name\fP
\fI%EC\fP 描述符对应的纪元名称 (见 \fBstrptime\fP(3)).
.TP 
\fIera_format\fP
\fI%EY\fP 描述符对应的年代中年份的格式 (见 \fBstrptime\fP(3)).
.RE
.TP 
\fIera_d_fmt\fP
后跟以替代纪元表示法表示的日期格式，对应于 \fI%Ex\fP 描述符 (请参见 \fBstrptime\fP(3)).
.TP 
\fIera_t_fmt\fP
其次是替代时代符号的时间格式，对应于 \fI%EX\fP 描述符 (参见 \fBstrptime\fP(3)).
.TP 
\fIera_d_t_fmt\fP
后跟采用替代纪元表示法的日期和时间格式，对应于 \fI%Ec\fP 描述符 (参见 \fBstrptime\fP(3)).
.TP 
\fIalt_digits\fP
后跟在语言环境中用于日期和时间的替代数字。
.TP 
\fIweek\fP
后跟由分号分隔的三个值的列表: 一周中的天数 (默认为 7)、一周的开始日期 (默认对应于星期日) 和一年中第一周的最短长度 (默认情况下 4)。
关于一周的开始，星期日使用 \fB19971130\fP，星期一使用 \fB19971201\fP。 见注释。
.TP 
\fIfirst_weekday\fP (since glibc 2.2)
后跟 \fIday\fP 列表中的第几天在日历应用程序中显示为一周的第一天。 \fB1\fP 的默认值对应于星期日或星期一，具体取决于第二个 \fIweek\fP
列表项的值。 见注释。
.TP 
\fIfirst_workday\fP (since glibc 2.2)
后跟 \fIday\fP 列表中第一个工作日的编号。 默认值为 \fB2\fP。 见注释。
.TP 
\fIcal_direction\fP
后跟一个数字值，指示日历日期的显示方向，如下所示:
.RS
.TP  4
\fB1\fP
从顶部左右。
.TP 
\fB2\fP
从左上到下。
.TP 
\fB3\fP
从上到左。
.RE
.TP 
\fIdate_fmt\fP
后跟 \fBdate\fP(1) 的适当日期表示 (有关语法，请参见 \fBstrftime\fP(3)).
.PP
\fBLC_TIME\fP 定义以字符串 \fIEND LC_TIME\fP 结尾。
.SH FILES
.TP 
\fI/usr/lib/locale/locale\-archive\fP
通常的默认语言环境存档位置。
.TP 
\fI/usr/share/i18n/locales\fP
语言环境定义文件的常用默认路径。
.SH STANDARDS
POSIX.2.
.SH NOTES
关于 \fIabday\fP、\fIday\fP、\fIweek\fP、\fIfirst_weekday\fP 和 \fIfirst_workday\fP 的集体 GNU C
库社区智慧在 https://sourceware.org/glibc/wiki/Locales 陈述如下:
.IP \[bu] 3
第二个 \fIweek\fP 列表项的值指定了 \fIabday\fP 和 \fIday\fP 列表的基数。
.IP \[bu]
\fIfirst_weekday\fP 指定 \fIabday\fP 和 \fIday\fP 列表中第一个星期几的偏移量。
.IP \[bu]
.\" .SH AUTHOR
.\" Jochen Hein (Hein@Student.TU-Clausthal.de)
出于兼容性原因，所有 glibc 语言环境都应将第二个 \fIweek\fP 列表项的值设置为 \fB19971130\fP (Sunday) 并适当地设置
\fIabday\fP 和 \fIday\fP 列表，并将 \fIfirst_weekday\fP 和 \fIfirst_workday\fP 设置为 \fB1\fP 或
\fB2\fP，具体取决于星期和工作周是否实际开始于周日或周一的语言环境。
.SH "SEE ALSO"
\fBiconv\fP(1), \fBlocale\fP(1), \fBlocaledef\fP(1), \fBlocaleconv\fP(3),
\fBnewlocale\fP(3), \fBsetlocale\fP(3), \fBstrftime\fP(3), \fBstrptime\fP(3),
\fBuselocale\fP(3), \fBcharmap\fP(5), \fBcharsets\fP(7), \fBlocale\fP(7), \fBunicode\fP(7),
\fButf\-8\fP(7)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
