.\" -*- coding: UTF-8 -*-
.\" Copyright (C) 2003-2011, 2013-2023 Free Software Foundation, Inc.
.\"
.\" This document is dual-licensed.  You may distribute and/or modify it
.\" under the terms of either of the following licenses:
.\"
.\" * The GNU General Public License, as published by the Free Software
.\"   Foundation, version 3 or (at your option) any later version.  You
.\"   should have received a copy of the GNU General Public License
.\"   along with this program.  If not, see
.\"   <https://www.gnu.org/licenses/>.
.\"
.\" * The GNU Free Documentation License, as published by the Free
.\"   Software Foundation, version 1.2 or (at your option) any later
.\"   version, with no Invariant Sections, no Front-Cover Texts, and no
.\"   Back-Cover Texts.  You should have received a copy of the GNU Free
.\"   Documentation License along with this program.  If not, see
.\"   <https://www.gnu.org/licenses/>.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH NANORC 5 "version 7.2" "January 2023" 

.SH NAME
nanorc\-GNU nano 的配置文件

.SH DESCRIPTION
\fInanorc\fP 文件包含 \fBnano\fP 的默认设置，\fBnano\fP 是一个小而友好的编辑器。 在启动期间，如果未给出
\fB\-\-rcfile\fP，\fBnano\fP 将读取两个文件: 首先是系统范围的设置，来自 \fI/etc/nanorc\fP
(确切路径在您的系统上可能不同)，然后是用户特定的设置，来自 \fI~/.nanorc\fP 或
\fI$XDG_CONFIG_HOME/nano/nanorc\fP 或来自 \fI~/.config/nano/nanorc\fP，以先遇到者为准。 如果给出
\fB\-\-rcfile\fP，\fBnano\fP 将只读取指定的设置文件。

.SH OPTIONS
配置文件接受一系列 \fBset\fP 和 \fBunset\fP 命令，可用于在启动时配置 nano，而无需使用命令行选项。
此外，还有一些命令可以定义语法高亮显示和重新绑定键 \-\- 请参见有关这些的两个单独部分。 \fBnano\fP 每行读取一个命令。
所有命令和关键字都应以小写形式书写。
.sp
\fInanorc\fP 文件中的选项优先于 nano 的默认值，命令行选项覆盖 \fInanorc\fP 设置。 此外，默认情况下未设置不带参数的选项。
所以只有当您想在您自己的 \fInanorc\fP 中覆盖系统的 \fInanorc\fP 文件的设置时才需要使用 \fBunset\fP 命令。
不能取消设置带有参数的选项。
.sp
以下 \fIcharacters\fP 参数内的引号不应转义。 该行的最后一个双引号将被视为结束引号。
.sp
支持的命令和参数有:
.TP  3
\fBset afterends\fP
使 Ctrl+Right 和 Ctrl+Delete 停止在单词结尾而不是开头。
.TP 
\fBset allow_insecure_backup\fP
备份文件时，即使由于特殊操作系统考虑而无法 (重新) 设置其权限，也允许备份成功。 除非您确定您需要它，否则您不应该启用这个选项。
.TP 
\fBset atblanks\fP
启用软换行后，使其在空白字符 (制表符和空格) 处换行，而不是始终在屏幕的 edge 处换行。
.TP 
\fBset autoindent\fP
自动将新创建的行缩进到与上一行相同数量的制表符或者空格 (如果上一行是段落的开头，则缩进到下一行)。
.TP 
\fBset backup\fP
保存文件时，通过在文件名中添加波浪号 (\fB~\fP) 来创建备份文件。
.TP 
\fBset backupdir \fP\fIdirectory\fP
不仅制作并保留一个备份文件，而且在每次保存文件时制作并保留一个唯一编号的文件 \-\- 当使用 \fBset backup\fP 或 \fB\-\-backup\fP 或
\fB\-B\fP 启用备份时。 唯一编号的文件存储在指定的 \fIdirectory\fP 中。
.TP 
\fBset boldtext\fP
对标题栏、状态栏、组合键、函数标签、行号和选定文本使用粗体而不是反色。 这可以通过设置选项
\fBtitlecolor\fP、\fBstatuscolor\fP、\fBkeycolor\fP、\fBfunctioncolor\fP、\fBnumbercolor\fP 和
\fBselectedcolor\fP 来覆盖。
.TP 
\fBset bookstyle\fP
对齐时，将任何以空格开头的行视为段落的开头 (除非自动缩进已打开)。
.TP 
\fBset brackets "\fP\fIcharacters\fP\fB"\fP
设置段落对齐时视为右括号的字符。 这可能不包括空白字符。 只有结束标点符号 (见 \fBset punct\fP)，可选地后跟指定的结束括号) 才能结束句子。
默认值为 "\fB"')>]}\fP"。
.TP 
\fBset breaklonglines\fP
当当前行变得过长时自动硬换行。
.TP 
\fBset casesensitive\fP
默认情况下进行区分大小写的搜索。
.TP 
\fBset constantshow\fP
在状态栏中不断显示游标位置。 这会覆盖选项 \fBquickblank\fP。
.TP 
\fBset cutfromcursor\fP
默认情况下使用从游标到行尾的剪切，而不是剪切整行。
.TP 
\fBset emptyline\fP
不要使用标题栏下方的行，将其完全留空。
.TP 
\fBset errorcolor \fP[\fBbold,\fP][\fBitalic,\fP]\fIfgcolor\fP\fB,\fP\fIbgcolor\fP
显示错误消息时，将此颜色组合用于状态栏。 默认值为 \fBbold,white,red\fP。 有关有效的颜色名称，请参见 \fBset titlecolor\fP。
.TP 
\fBset fill \fP\fInumber\fP
在此 \fInumber\fP 列设置用于对齐和自动硬包装的目标宽度。 如果该值为 0 或更小，则换行将发生在屏幕宽度减去 \fInumber\fP
列的位置，如果调整屏幕大小时，换行点将随屏幕宽度而变化。 默认值为 \fB\-8\fP。
.TP 
\fBset functioncolor \fP[\fBbold,\fP][\fBitalic,\fP]\fIfgcolor\fP\fB,\fP\fIbgcolor\fP
使用此颜色组合可在屏幕底部的两条帮助行中进行简洁的函数说明。 有关详细信息，请参见 \fBset titlecolor\fP。
.TP 
\fBset guidestripe \fP\fInumber\fP
在给定的列上画一条垂直条纹，以帮助判断文本的宽度。 (条纹的颜色可以用 \fBset stripecolor\fP.) 改变
.TP 
\fBset historylog\fP
保存最后一百个搜索字符串和替换字符串以及执行的命令，以便在以后的会话中轻松重用它们。
.TP 
\fBset indicator\fP
在编辑窗口的右侧显示一个 "scrollbar"。 它显示视口在缓冲区中的位置以及视口覆盖了多少缓冲区。
.TP 
\fBset jumpyscrolling\fP
每半屏而不是每行滚动缓冲区内容。
.TP 
\fBset keycolor \fP[\fBbold,\fP][\fBitalic,\fP]\fIfgcolor\fP\fB,\fP\fIbgcolor\fP
将此颜色组合用于屏幕底部两条帮助行中的快捷键组合。 有关详细信息，请参见 \fBset titlecolor\fP。
.TP 
\fBset linenumbers\fP
在文本区域的左侧显示行号。 (任何带有锚点的行都会在页边空白处得到一个标记。)
.TP 
\fBset locking\fP
在编辑文件时启用 vim 样式的锁定文件。
.TP 
\fBset magic\fP
当文件名和第一行都没有提供线索时，请尝试使用 libmagic 来确定适用的语法。 (调用 libmagic 可能相对耗时。因此默认情况下不这样做。)
.TP 
\fBset matchbrackets "\fP\fIcharacters\fP\fB"\fP
指定可以通过括号搜索找到的左括号和右括号。 这可能不包括空白字符。 开盘必须在闭盘之前，而且两盘的顺序必须相同。 默认值为
"\fB(<[{)>]}\fP"。
.TP 
\fBset minibar\fP
取消标题栏，而是在屏幕底部的状态栏空间中显示有关当前缓冲区的信息。 在此 "minibar" 中，文件名显示在左侧，如果缓冲区已被修改，则后跟星号。
右侧显示当前行号和列号、游标下字符的代码 (Unicode 格式: U+xxxx)、与 \fBset stateflags\fP
相同的标志以及表示游标进入多远的百分比文件 (linewise)。 加载或保存文件时，以及在缓冲区之间切换时，缓冲区中的行数显示在文件名之后。
这个数字在下一次击键时被清除，或者当多个缓冲区打开时用 [i/n] 计数器替换。 行加列号和字符代码只有在使用 \fBset constantshow\fP
时才会显示，可以通过 \fBM\-C\fP 来切换。 只有在使用 \fBset stateflags\fP 时才会显示状态标志。
.TP 
\fBset minicolor \fP[\fBbold,\fP][\fBitalic,\fP]\fIfgcolor\fP\fB,\fP\fIbgcolor\fP
将这种颜色组合用于迷您吧。 (如果未指定此选项，则使用标题栏的颜色。) 有关详细信息，请参见 \fBset titlecolor\fP。
.TP 
\fBset mouse\fP
启用鼠标支持 (如果适用于您的系统)。 启用后，鼠标单击可用于放置游标、设置标记 (双击) 和执行快捷方式。 鼠标将在 X 窗口系统中工作，并在 gpm
运行时在控制台上工作。 仍然可以通过按住 Shift 键拖动来选择文本。
.TP 
\fBset multibuffer\fP
使用 \fB^R\fP 读取文件时，默认将其插入到新缓冲区中。
.TP 
\fBset noconvert\fP
不要从 DOS/Mac 格式转换文件。
.TP 
\fBset nohelp\fP
不要在屏幕底部显示两条帮助线。
.TP 
\fBset nonewlines\fP
当文本不以 one 结尾时，不要自动添加换行符。 (这会导致您保存非 POSIX 文本文件。)
.TP 
\fBset nowrap\fP
已弃用的选项，因为它已成为默认设置。 需要时，请改用 \fBunset breaklonglines\fP。
.TP 
\fBset numbercolor \fP[\fBbold,\fP][\fBitalic,\fP]\fIfgcolor\fP\fB,\fP\fIbgcolor\fP
将此颜色组合用于行号。 有关详细信息，请参见 \fBset titlecolor\fP。
.TP 
\fBset operatingdir \fP\fIdirectory\fP
\fBnano\fP 只会读写 \fIdirectory\fP 及其子目录中的文件。 此外，当前目录更改为此处，因此从该目录插入文件。
默认情况下，操作目录特性是关闭的。
.TP 
\fBset positionlog\fP
在编辑会话之间保存文件的游标位置。 为 200 个最近编辑的文件记住游标位置。
.TP 
\fBset preserve\fP
保留 XON 和 XOFF 键 (\fB^Q\fP 和 \fB^S\fP)。
.TP 
\fBset promptcolor \fP[\fBbold,\fP][\fBitalic,\fP]\fIfgcolor\fP\fB,\fP\fIbgcolor\fP
将此颜色组合用于提示栏。 (如果未指定此选项，则使用标题栏的颜色。) 有关详细信息，请参见 \fBset titlecolor\fP。
.TP 
\fBset punct "\fP\fIcharacters\fP\fB"\fP
设置段落对齐时视为结束标点符号的字符。 这可能不包括空白字符。 只有指定的结束标点符号，可选地后跟结束括号 (见
\fBbrackets\fP)，可以结束句子。 默认值为 "\fB!.?\fP"。
.TP 
\fBset quickblank\fP
使状态栏消息在 1 次击键后消失，而不是 20 次后消失。 请注意，选项 \fBconstantshow\fP 会覆盖它。 When option
\fBminibar\fP or \fBzero\fP is in effect, \fBquickblank\fP makes a message disappear
after 0.8 seconds instead of after the default 1.5 seconds.
.TP 
\fBset quotestr "\fP\fIregex\fP\fB"\fP
设置用于匹配行的引用部分的正则表达式。 默认值为 "\fB^([\ \et]*([!#%:;>|}]|//))+\fP"。 (请注意，\fB\et\fP
代表一个实际的制表符。) 这使得在撰写电子邮件时重新调整引用文本块以及在编写源代码时重新包装行注释块成为可能。
.TP 
\fBset rawsequences\fP
直接解释转义序列，而不是让 \fBncurses\fP 翻译它们。 (如果您需要此选项才能使某些密钥正常工作，则意味着所使用的 terminfo
终端描述与终端的实际行为不完全匹配。例如，当您通过 ssh 进入 BSD 机器时，可能会发生这种情况。) 使用此选项禁用 \fBnano\fP's 鼠标支持。
.TP 
\fBset rebinddelete\fP
以不同方式解释 Delete 和 Backspace 键，以便 Backspace 和 Delete 都能正常工作。 只有当您的系统上
Backspace 的作用类似于 Delete 或 Delete 的作用类似于 Backspace 时，您才应使用此选项。
.TP 
\fBset regexp\fP
默认情况下进行正则表达式搜索。 \fBnano\fP 中的正则表达式属于扩展类型 (ERE)。
.TP 
\fBset saveonexit\fP
退出 (\fB^X\fP) 时自动保存更改的缓冲区; 不要提示。
.TP 
\fBset scrollercolor \fP\fIfgcolor\fP\fB,\fP\fIbgcolor\fP
将此颜色组合用于指标别名 "scrollbar"。 (在链接到早于 0.55 版本的 libvte 的最终模拟器上，在此处使用背景颜色无法正常工作。)
有关更多详细信息，请参见 \fBset titlecolor\fP。
.TP 
\fBset selectedcolor \fP[\fBbold,\fP][\fBitalic,\fP]\fIfgcolor\fP\fB,\fP\fIbgcolor\fP
将此颜色组合用于所选文本。 有关详细信息，请参见 \fBset titlecolor\fP。
.TP 
\fBset showcursor\fP
将游标放在文件浏览器中突出显示的项目上，并在帮助查看器中显示游标，以帮助盲文用户和视力不佳的人。
.TP 
\fBset smarthome\fP
让 Home 键更智能。 当 Home 在一行中非空白字符的开头以外的任何地方按下时，游标将跳到该开头 (向前或向后)。
如果游标已经在该位置，它将跳转到该行的真正开头。
.TP 
\fBset softwrap\fP
在多个屏幕行上显示超过屏幕宽度的行。 (您可以通过同时使用 \fBset atblanks\fP.) 使这种软包装发生在空白处，而不是粗鲁地出现在屏幕的
edge 处
.TP 
\fBset speller "\fP\fIprogram\fP [\fIargument \fP...]\fB"\fP
使用给定的 \fIprogram\fP 进行拼写检查和更正，而不是使用调用 \fBhunspell\fP(1) 或 \fBspell\fP(1) 的内置校正器。
.TP 
\fBset spotlightcolor \fP[\fBbold,\fP][\fBitalic,\fP]\fIfgcolor\fP\fB,\fP\fIbgcolor\fP
使用此颜色组合突出显示搜索匹配项。 默认值为 \fBblack,lightyellow\fP。 有关有效的颜色名称，请参见 \fBset titlecolor\fP。
.TP 
\fBset stateflags\fP
使用屏幕的右上角显示一些状态标志: 自动缩进时为 \fBI\fP，标记打开时为 \fBM\fP，硬换行时为 \fBL\fP (打断长行)，录制宏时为 \fBR\fP，软缩进时为
\fBS\fP 包装。 修改缓冲区时，标题栏中央的文件名后会显示一个星号 (\fB*\fP)。
.TP 
\fBset statuscolor \fP[\fBbold,\fP][\fBitalic,\fP]\fIfgcolor\fP\fB,\fP\fIbgcolor\fP
将此颜色组合用于状态栏。 有关详细信息，请参见 \fBset titlecolor\fP。
.TP 
\fBset stripecolor \fP[\fBbold,\fP][\fBitalic,\fP]\fIfgcolor\fP\fB,\fP\fIbgcolor\fP
将此颜色组合用于垂直引导条纹。 有关详细信息，请参见 \fBset titlecolor\fP。
.TP 
\fBset tabsize \fP\fInumber\fP
使用 \fInumber\fP 列的制表符大小。 \fInumber\fP 的值必须大于 0。 默认值为 \fB8\fP。
.TP 
\fBset tabstospaces\fP
将每个键入的制表符转换为空格 \-\- 转换为该位置的制表符将占用的空格数。
.TP 
\fBset titlecolor \fP[\fBbold,\fP][\fBitalic,\fP]\fIfgcolor\fP\fB,\fP\fIbgcolor\fP
将此颜色组合用于标题栏。 前景色和背景色的有效名称是:
\fBred\fP、\fBgreen\fP、\fBblue\fP、\fBmagenta\fP、\fByellow\fP、\fBcyan\fP、\fBwhite\fP 和 \fBblack\fP。
这八个名称中的每一个都可以以单词 \fBlight\fP 为前缀，以获得该颜色的更亮版本。 \fBgrey\fP 或 \fBgray\fP 可用作
\fBlightblack\fP 的同义词。 在可以做至少 256 种颜色的最终模拟器上，其他有效 (但不可前缀) 颜色名称是:
\fBpink\fP、\fBpurple\fP、\fBmauve\fP、\fBlagoon\fP、\fBmint\fP、\fBlime\fP、\fBpeach\fP、\fBorange\fP、\fBlatte\fP、\fBrosy\fP、\fBbeet\fP、\fBplum\fP、\fBsea\fP、\fBsky\fP、\fBslate\fP,
\fBteal\fP, \fBsage\fP, \fBbrown\fP, \fBocher\fP, \fBsand\fP, \fBtawny\fP, \fBbrick\fP,
\fBcrimson\fP, and \fBnormal\fP\-\- 其中 \fBnormal\fP 表示默认的前景色或背景色。 在此类仿真器上，颜色也可以指定为前缀为
\fB#\fP 的三位十六进制数，这些数字分别代表红色、绿色和蓝色的数量。 这告诉 \fBnano\fP 从可用调色板中选择接近给定值的颜色。

"\fIfgcolor\fP" 或 "\fB,\fP\fIbgcolor\fP" 中的任何一个都可以省略，并且可以在这对之前加上 \fBbold\fP 或者 \fBitalic\fP
(用逗号分隔) 以获得粗体或者倾斜字体，如果您的终端可以做到这些。
.TP 
\fBset trimblanks\fP
当发生自动硬换行或文本对齐时，从换行中删除尾随空格。
.TP 
\fBset unix\fP
默认以 Unix 格式保存文件。 这会覆盖 nano 以其具有的格式保存文件的默认行为。 (当您还使用 \fBset noconvert\fP.)
时，此选项无效
.TP 
\fBset whitespace "\fP\fIcharacters\fP\fB"\fP
设置用于指示制表符和空格存在的两个字符。 它们必须是单列字符。 UTF\-8 语言环境的默认对是 "\fB\[Fc]\[md]\fP"，其他语言环境的默认对是
"\fB>.\fP"。
.TP 
\fBset wordbounds\fP
通过将标点符号视为单词的一部分来以不同方式检测单词边界。
.TP 
\fBset wordchars "\fP\fIcharacters\fP\fB"\fP
指定哪些其他字符 (除了正常的字母数字字符) 应被视为单词的一部分。 使用此选项时，您可能想要取消设置 \fBwordbounds\fP。
.TP 
\fBset zap\fP
让未修改的 Backspace 或 Delete 擦除标记区域 (而不是单个字符，并且不影响 cutbuffer)。
.TP 
\fBset zero\fP
隐藏界面的所有元素 (标题栏、状态栏和帮助行) 并使用终端的所有行来显示缓冲区的内容。 状态栏仅在有重要消息时出现，并在 1.5
秒后或下一次击键时消失。 使用 \fBM\-Z\fP 可以切换标题栏和状态栏。 带有 \fBM\-X\fP 的帮助行。

.SH NOTES
选项 \fBset suspendable\fP 已被删除。 默认情况下启用暂停，可通过 \fB^T^Z\fP 访问。 (如果您想要一个普通的 \fB^Z\fP 来暂停
nano，请将 \fBbind ^Z suspend main\fP 添加到您的 nanorc。)

.SH "SYNTAX HIGHLIGHTING"
为文件的不同语法元素着色是通过正则表达式完成的 (请参见下面的 \fBcolor\fP 命令)。
这本质上是不完美的，因为正则表达式不够强大，无法完全解析文件。 尽管如此，正则表达式可以做很多事情，而且制作起来也很容易，所以非常适合像 \fBnano\fP
这样的小编辑器。
.sp
\fBnano\fP 中的所有正则表达式都是 POSIX 扩展正则表达式。 这意味着 \fB.\fP、\fB?\fP、\fB*\fP、\fB+\fP、\fB^\fP、\fB$\fP
和其他几个字符是特殊字符。 句点 \fB.\fP 匹配任意单个字符，\fB?\fP 表示前面的项是可选的，\fB*\fP 表示前面的项可以匹配零次或多次，\fB+\fP
表示前面的项必须匹配一次或多次，\fB^\fP 匹配一行的开头，\fB$\fP 匹配词尾，\fB\e<\fP 匹配词首，\fB\e>\fP 词尾，\fB\es\fP
匹配空格。 这也意味着向前看和向后看是不可能的。 完整的解释可以在 GNU grep: \fBman grep\fP 的手册页中找到。
.sp
\fBnanorc\fP 文件中的每个正则表达式都应该用双引号 (\fB""\fP) 括起来。 多个正则表达式可以通过用空格分隔在一行中彼此跟随。
这意味着正则表达式不能包含后跟空格的双引号。 当您在正则表达式中需要此组合时，双引号或空格应放在方括号 (\fB[]\fP) 之间。
.sp
对于每种文件，可以通过以下命令定义单独的语法:
.TP 
\fBsyntax\fP\fI name \fP[\fB"\fP\fIfileregex\fP\fB" \fP...]
使用此 \fIname\fP 开始语法定义。 所有后续 \fBcolor\fP 和其他此类命令都将添加到此语法中，直到遇到新的 \fBsyntax\fP 命令。
.sp
运行 \fBnano\fP 时，如果当前文件名与扩展正则表达式 \fIfileregex\fP 匹配，则此语法将自动激活。 或者可以使用 \fB\-Y\fP 或
\fB\-\-syntax\fP 命令行选项后跟 \fIname\fP 显式激活语法。
.sp
语法 \fBdefault\fP 很特殊: 它不需要 \fIfileregex\fP，并且适用于不匹配任何语法正则表达式的文件。 保留语法 \fBnone\fP;
在命令行上指定它与根本没有语法相同。
.TP 
\fBheader "\fP\fIregex\fP\fB" \fP...
如果从所有定义的语法中没有 \fIfileregex\fP 匹配，则将此 \fIregex\fP (或正则表达式)
与当前文件的第一行进行比较，以确定是否应将此语法用于它。
.TP 
\fBmagic "\fP\fIregex\fP\fB" \fP...
如果没有 \fIfileregex\fP 匹配，也没有 \fBheader\fP regex 匹配，则将此 \fIregex\fP (或正则表达式) 与查询
\fBmagic\fP 数据库中有关当前文件的结果进行比较，以确定是否应该对其使用此语法。 (此功能仅在系统上安装了 \fBlibmagic\fP
时有效，否则将被忽略。)
.TP 
\fBformatter\fP\fI program \fP[\fIargument \fP...]
对当前缓冲区的全部内容运行给定的 \fIprogram\fP。
.TP 
\fBlinter\fP\fI program \fP[\fIargument \fP...]
使用给定的 \fIprogram\fP 对当前缓冲区运行语法检查。
.TP 
\fBcomment "\fP\fIstring\fP\fB"\fP
使用给定的 \fIstring\fP 来注释和取消注释行。 如果字符串包含竖，字符串，或竖，字符串，字符 (\fB|\fP)，则指定括号式注释;
例如，"\fB/*|*/\fP" 用于 CSS 文件。 竖线之前的字符添加到行的前面，竖线之后的字符追加到行的末尾。
如果不存在管道字符，则在前面加上完整的字符串; 例如，"\fB#\fP" 代表 Python 文件。 如果指定了空双引号，则禁用
comment/uncomment 函数; 例如，"" 表示 JSON。 默认值为 "\fB#\fP"。
.TP 
\fBtabgives "\fP\fIstring\fP\fB"\fP
使 <Tab> 密钥产生给定的 \fIstring\fP。 对于像 Python 这样只想看到缩进空格的语言很有用。 这会覆盖
\fBtabstospaces\fP 选项的设置。
.TP 
\fBcolor \fP[\fBbold,\fP][\fBitalic,\fP]\fIfgcolor\fP\fB,\fP\fIbgcolor\fP\fB "\fP\fIregex\fP\fB" \fP...
使用给定的前景色和背景色绘制与扩展正则表达式 \fIregex\fP 匹配的所有文本片段，必须至少指定其中一种。 有效的颜色名称是:
\fBred\fP、\fBgreen\fP、\fBblue\fP、\fBmagenta\fP、\fByellow\fP、\fBcyan\fP、\fBwhite\fP 和 \fBblack\fP。
这八个名称中的每一个都可以以单词 \fBlight\fP 为前缀，以获得该颜色的更亮版本。 \fBgrey\fP 或 \fBgray\fP 可用作
\fBlightblack\fP 的同义词。 在可以做至少 256 种颜色的最终模拟器上，其他有效 (但不可前缀) 颜色名称是:
\fBpink\fP、\fBpurple\fP、\fBmauve\fP、\fBlagoon\fP、\fBmint\fP、\fBlime\fP、\fBpeach\fP、\fBorange\fP、\fBlatte\fP、\fBrosy\fP、\fBbeet\fP、\fBplum\fP、\fBsea\fP、\fBsky\fP、\fBslate\fP,
\fBteal\fP, \fBsage\fP, \fBbrown\fP, \fBocher\fP, \fBsand\fP, \fBtawny\fP, \fBbrick\fP,
\fBcrimson\fP, and \fBnormal\fP\-\- 其中 \fBnormal\fP 表示默认的前景色或背景色。 在此类仿真器上，颜色也可以指定为前缀为
\fB#\fP 的三位十六进制数，这些数字分别代表红色、绿色和蓝色的数量。 这告诉 \fBnano\fP 从可用调色板中选择接近给定值的颜色。

颜色对可以在 \fBbold\fP 或者 \fBitalic\fP 之前 (用逗号分隔) 以获得粗体或者倾斜字体，如果您的终端可以做到这些。
.sp
所有着色命令都按照指定的顺序应用，这意味着后面的命令可以重新着色之前着色的内容。
.TP 
\fBicolor \fP[\fBbold,\fP][\fBitalic,\fP]\fIfgcolor\fP\fB,\fP\fIbgcolor\fP\fB "\fP\fIregex\fP\fB" \fP...
同上，只是匹配不区分大小写。
.TP 
\fBcolor \fP[\fBbold,\fP][\fBitalic,\fP]\fIfgcolor\fP\fB,\fP\fIbgcolor\fP\fB start="\fP\fIfromrx\fP\fB" end="\fP\fItorx\fP\fB"\fP
使用给定的前景色和背景色绘制所有开头与扩展正则表达式 \fIfromrx\fP 匹配且结尾与扩展正则表达式 \fItorx\fP
匹配的文本片段，必须至少指定其中一种。 这意味着，在 \fIfromrx\fP 的初始实例之后，直到 \fItorx\fP 的第一个实例的所有文本都将被着色。
这允许语法突出显示跨越多行。
.TP 
\fBicolor \fP[\fBbold,\fP][\fBitalic,\fP]\fIfgcolor\fP\fB,\fP\fIbgcolor\fP\fB start="\fP\fIfromrx\fP\fB" end="\fP\fItorx\fP\fB"\fP
同上，只是匹配不区分大小写。
.TP 
\fBinclude "\fP\fIsyntaxfile\fP\fB"\fP
从 \fIsyntaxfile\fP 中读入独立的颜色语法。 请注意，\fIsyntaxfile\fP 可能只包含上述命令，从 \fBsyntax\fP 到
\fBicolor\fP。
.TP 
\fBextendsyntax\fP\fI name command argument \fP...
使用另一个 \fIcommand\fP 扩展先前定义为 \fIname\fP 的语法。 这允许将新的
\fBcolor\fP、\fBicolor\fP、\fBheader\fP、\fBmagic\fP、\fBformatter\fP、\fBlinter\fP、\fBcomment\fP 或
\fBtabgives\fP 命令添加到一个已经定义的语法中 \-\- 当您想稍微改进一个系统安装文件 (通常是不可写)。

.SH "REBINDING KEYS"
可以通过以下三个命令更改键绑定:
.RS 3
.TP 
\fBbind\fP\fI key function menu\fP
将给定的 \fIkey\fP 重新绑定到给定的 \fImenu\fP 中的给定的 \fIfunction\fP (或者在使用 \fBall\fP 时存在函数的所有菜单中)。
.TP 
\fBbind\fP\fI key \fP\fB"\fP\fIstring\fP\fB"\fP\fI menu\fP
使给定的 \fIkey\fP 在给定的 \fImenu\fP 中产生给定的 \fIstring\fP (或在使用 \fBall\fP 时在该键存在的所有菜单中)。
除了字面量文本或者控制代码，\fIstring\fP 可能在大括号之间包含函数名称。 当键入键时将调用这些函数。 要包含字面量开口大括号，请使用
\fB{{}\fP。
.TP 
\fBunbind\fP\fI key menu\fP
将给定的 \fIkey\fP 与给定的 \fImenu\fP (或使用 \fBall\fP 时存在该键的所有菜单) 解除绑定。
.RE
.sp
请注意，\fBbind \fP\fIkey\fP \fB"{\fP\fIfunction\fP\fB}"\fP \fImenu\fP 等同于 \fBbind \fP\fIkey\fP
\fIfunction\fP \fImenu\fP，除了对于后一种形式，\fBnano\fP 将在启动时检查给定 \fImenu\fP 中 \fIfunction\fP 的可用性
(如果不存在则报告错误)，而对于第一个表单 \fBnano\fP 将在执行时检查 \fIfunction\fP 是否存在，但不会检查它在当前菜单中是否有意义。
用户必须注意花括号 (或它们的任何序列) 之间的函数名称是合适的。 如果不是，可能会导致奇怪的行为。

.TP 
The format of \fIkey\fP should be one of:
.RS 3
.TP  7
\fB^\fP\fIX\fP
其中 \fIX\fP 是拉丁字母，或几个 ASCII 字符 (@、]、\e、^、_) 之一，或单词 "Space"。 示例: ^C。
.TP 
\fBM\-\fP\fIX\fP
其中 \fIX\fP 是除 [之外的任何 ASCII 字符，或单词 "Space"。 示例: M\-8。
.TP 
\fBSh\-M\-\fP\fIX\fP
其中 \fIX\fP 是一个拉丁字母。 示例: Sh\-MU。 默认情况下，每个 Meta + 字母击键与相应的 Shift+Meta + 字母相同。
但是，当进行任何 Shift+Meta 绑定时，对于所有字母，情况将不再如此。
.TP 
\fBF\fP\fIN\fP
其中 \fIN\fP 是 1 到 24 之间的数值。 示例: F10。 (通常，\fBF13\fP 到 \fBF24\fP 可以通过 Shift 键入为 \fBF1\fP 到
\fBF12\fP。)
.TP 
\fBIns\fP or \fBDel\fP.
.RE
.sp
重新绑定 \fB^M\fP (Enter) 或 \fB^I\fP (Tab) 可能不是一个好主意。 重新绑定 \fB^[\fP (Esc)
是不可能的，因为它的键码是元击键和转义序列的起始字节。 无法重新绑定任何专用的游标移动键 (箭头、Home、End、PageUp 和
PageDown)。 在某些终端上，不可能重新绑定 \fB^H\fP (除非使用 \fB\-\-raw\fP)，因为它的键码与 Backspace 键的键码相同。

.TP 
Valid \fIfunction\fP names to be bound are:
.RS 3
.TP  2
\fBhelp\fP
调用帮助查看器。
.TP 
\fBcancel\fP
取消当前命令。
.TP 
\fBexit\fP
从程序中退出 (或从帮助查看器或文件浏览器中退出)。
.TP 
\fBwriteout\fP
将当前缓冲区写入磁盘，询问名称。
.TP 
\fBsavefile\fP
在不提示的情况下将当前文件写入磁盘。
.TP 
\fBinsert\fP
将文件插入当前缓冲区 (在当前游标位置)，或在设置选项 \fBmultibuffer\fP 时插入新缓冲区。
.TP 
\fBwhereis\fP
开始向前搜索当前缓冲区中的文本 \-\- 或者在文件浏览器中搜索与当前列表中的字符串匹配的文件名。
.TP 
\fBwherewas\fP
开始向后搜索当前缓冲区中的文本 \-\- 或者在文件浏览器中搜索与当前列表中的字符串匹配的文件名。
.TP 
\fBfindprevious\fP
向后搜索下一个匹配项。
.TP 
\fBfindnext\fP
向前搜索下一个匹配项。
.TP 
\fBreplace\fP
以交互方式替换当前缓冲区中的文本。
.TP 
\fBcut\fP
剪切并存储当前行 (或标记区域)。
.TP 
\fBcopy\fP
复制当前行 (或标记区域) 而不删除它。
.TP 
\fBpaste\fP
将当前存储的文本粘贴到当前游标位置的当前缓冲区中。
.TP 
\fBzap\fP
丢弃当前行 (或标记区域)。 (此函数默认绑定 <Meta+Delete>.)
.TP 
\fBchopwordleft\fP
从游标位置删除到前一个单词的开头。 (这个函数默认绑定到 <Shift+Ctrl+Delete>，如果您的最终端为
<Ctrl+Backspace> 生成 \fB^H\fP，您可以通过重新绑定 \fB^H\fP 到这个函数来让
<Ctrl+Backspace> 删除游标左边的单词。)
.TP 
\fBchopwordright\fP
从游标位置删除到下一个单词的开头。 (此函数默认绑定 <Ctrl+Delete>.)
.TP 
\fBcutrestoffile\fP
剪切从游标位置到缓冲区末尾的所有文本。
.TP 
\fBmark\fP
在当前位置设置标记，开始选择文本。 或者，当它被设置时，取消设置标记。
.TP 
\fBlocation\fP
报告游标在缓冲区中的当前位置: 行、列和字符位置。
.TP 
\fBwordcount\fP
计算并在状态栏上报告当前缓冲区 (或标记区域) 中的行数、单词数和字符数。
.TP 
\fBexecute\fP
提示执行程序。 程序的输出将被插入到当前缓冲区 (或在切换 \fBM\-F\fP 时插入到新缓冲区)。
.TP 
\fBspeller\fP
调用拼写检查程序，可以是默认的 \fBhunspell\fP(1) 或 GNU \fBspell\fP(1)，也可以是 \fB\-\-speller\fP 或 \fBset speller\fP 定义的程序。
.TP 
\fBformatter\fP
调用全缓冲区处理程序 (如果活动语法定义了一个)。 (当前缓冲区被写入临时文件，程序在其上运行，然后临时文件被读回，替换缓冲区的内容。)
.TP 
\fBlinter\fP
调用语法检查程序 (如果活动语法定义了一个)。 如果此程序生成 "filename:linenum:charnum: some message"
形式的行，则游标将放在上述文件中的指示位置，同时在状态栏上显示 "some message"。 您可以使用 <PgUp> 和
<PgDn> 在消息之间移动，并使用 \fB^C\fP 或 <Enter> 离开 linting 模式。
.TP 
\fBjustify\fP
对齐当前段落 (或标记区域)。 一个段落是一组连续的行，除了可能的第一行之外，所有行都具有相同的缩进。
段落的开头由这个具有不同缩进的单独行或由前面的空行检测。
.TP 
\fBfulljustify\fP
对齐整个当前缓冲区 (或标记区域)。
.TP 
\fBindent\fP
缩进 (向右移动) 当前行或标记的行。
.TP 
\fBunindent\fP
取消缩进 (向左移动) 当前行或标记的行。
.TP 
\fBcomment\fP
使用活动语法中指定的注释样式注释或取消注释当前行或标记的行。
.TP 
\fBcomplete\fP
将游标前的片段 (如果可能) 完成为在当前缓冲区中其他地方找到的完整单词。
.TP 
\fBleft\fP
向左移动一个位置 (在编辑器或浏览器中)。
.TP 
\fBright\fP
向右移动一个位置 (在编辑器或浏览器中)。
.TP 
\fBup\fP
排成一行 (在编辑器或浏览器中)。
.TP 
\fBdown\fP
向下一行 (在编辑器或浏览器中)。
.TP 
\fBscrollup\fP
如果可能，将视口向上滚动一行 (意味着文本向下滑动)，同时将游标保持在相同的文本位置。 (此函数默认绑定到 <Alt+Up>。如果
<Alt+Up> 在您的 Linux 控制台上什么都不做，请参见常见问题解答:
.UR https://nano\-editor.org/dist/latest/faq.html#4.1
.UE .)
.TP 
\fBscrolldown\fP
如果可能，将视口向下滚动一行 (意味着文本向上滑动)，同时将游标保持在相同的文本位置。 (此函数默认绑定 <Alt+Down>.)
.TP 
\fBcenter\fP
将游标所在的行滚动到屏幕中间。
.TP 
\fBprevword\fP
将游标移动到前一个单词的开头。
.TP 
\fBnextword\fP
将游标移动到下一个单词的开头。
.TP 
\fBhome\fP
将游标移动到当前行的开头。
.TP 
\fBend\fP
将游标移动到当前行的末尾。
.TP 
\fBbeginpara\fP
将游标移动到当前段落的开头。
.TP 
\fBendpara\fP
将游标移动到当前段落的末尾。
.TP 
\fBprevblock\fP
将游标移动到当前或前一个文本块的开头。 (块由一个或多个空行分隔。)
.TP 
\fBnextblock\fP
将游标移动到下一个文本块的开头。
.TP 
\fBpageup\fP
上升一屏。
.TP 
\fBpagedown\fP
向下一屏。
.TP 
\fBfirstline\fP
转到文件的第一行。
.TP 
\fBlastline\fP
转到文件的最后一行。
.TP 
\fBgotoline\fP
转到特定行 (如果指定，则转到列)。 Negative 数字从文件末尾 (和行尾) 开始计数。
.TP 
\fBfindbracket\fP
将游标移动到与游标下的 (pairs) 匹配的方括号 (或大括号或圆括号等)。 请参见 \fBset matchbrackets\fP。
.TP 
\fBanchor\fP
在当前行放置一个锚点，或者在已经存在时将其移除。 (当行号被激活时，锚是可见的。)
.TP 
\fBprevanchor\fP
转到当前行之前的第一个锚点。
.TP 
\fBnextanchor\fP
转到当前行之后的第一个锚点。
.TP 
\fBprevbuf\fP
当多个缓冲区打开时，切换到前一个缓冲区的 editing/viewing。
.TP 
\fBnextbuf\fP
当多个缓冲区打开时，切换到下一个缓冲区 editing/viewing。
.TP 
\fBverbatim\fP
将下一个击键逐字插入文件，或在键入十六进制数字时开始 Unicode 输入。
.TP 
\fBtab\fP
在当前游标位置插入一个制表符。
.TP 
\fBenter\fP
在当前行下方插入一个新行。
.TP 
\fBdelete\fP
删除游标下的字符。
.TP 
\fBbackspace\fP
删除游标前的字符。
.TP 
\fBrecordmacro\fP
开始记录击键 \- 击键存储为宏。 已经录制时，录制停止。
.TP 
\fBrunmacro\fP
重播上次录制宏的击键。
.TP 
\fBundo\fP
撤消上次执行的文本操作 (添加文本、删除文本等)。
.TP 
\fBredo\fP
重做上次撤消的操作 (即撤消撤消操作)。
.TP 
\fBrefresh\fP
刷新屏幕。
.TP 
\fBsuspend\fP
暂停编辑器并将控制返回给 shell (直到您告诉进程使用 \fBfg\fP) 恢复执行。
.TP 
\fBcasesens\fP
切换 searching/replacing 是忽略还是尊重给定字符的大小写。
.TP 
\fBregexp\fP
切换 searching/replacing 是使用字面量字符串还是正则表达式。
.TP 
\fBbackwards\fP
切换 searching/replacing 是向前还是向后。
.TP 
\fBolder\fP
在出现提示时检索先前的 (earlier) 条目。
.TP 
\fBnewer\fP
在出现提示时检索下一个 (later) 条目。
.TP 
\fBflipreplace\fP
在搜索内容和替换内容之间切换。
.TP 
\fBflipgoto\fP
在搜索文本和定位行号之间切换。
.TP 
\fBflipexecute\fP
在插入文件和执行命令之间切换。
.TP 
\fBflippipe\fP
执行命令时，切换当前缓冲区 (或标记区域) 是否通过管道传输到命令。
.TP 
\fBflipnewbuffer\fP
在插入当前缓冲区和插入新的空缓冲区之间切换。
.TP 
\fBflipconvert\fP
读取文件时，在转换和不转换 DOS/Mac 格式之间切换。 转换是默认的。
.TP 
\fBdosformat\fP
写入文件时，切换到写入 DOS 格式 (CR/LF)。
.TP 
\fBmacformat\fP
写入文件时，切换为写入 Mac 格式。
.TP 
\fBappend\fP
写入文件时，追加到末尾而不是覆盖。
.TP 
\fBprepend\fP
写入文件时，'prepends' (在开头写入) 而不是覆盖。
.TP 
\fBbackup\fP
写入文件时，创建当前文件的备份。
.TP 
\fBdiscardbuffer\fP
当要写入文件时，丢弃当前缓冲区而不保存。 (此函数仅在选项 \fB\-\-saveonexit\fP 生效时默认绑定。)
.TP 
\fBbrowser\fP
启动文件浏览器 (在读取文件和写出菜单中)，允许从列表中选择文件。
.TP 
\fBgotodir\fP
转到要指定的目录，允许浏览文件系统中的任何位置。
.TP 
\fBfirstfile\fP
使用文件浏览器时转到列表中的第一个文件。
.TP 
\fBlastfile\fP
使用文件浏览器时转到列表中的最后一个文件。
.TP 
\fBnohelp\fP
切换屏幕底部两行键绑定列表的存在。 (这个开关很特别: 它在除帮助查看器和 linter 之外的所有菜单中都可用。所有其他开关仅在主菜单中可用。)
.TP 
\fBzero\fP
切换标题栏和状态栏的存在。
.TP 
\fBconstantshow\fP
切换当前行、列和字符位置的常量显示。
.TP 
\fBsoftwrap\fP
在多个屏幕行上切换超长行的显示。
.TP 
\fBlinenumbers\fP
切换文本前面行号的显示。
.TP 
\fBwhitespacedisplay\fP
切换空白的显示。
.TP 
\fBnosyntax\fP
切换语法突出显示。
.TP 
\fBsmarthome\fP
切换 Home 键的智能程度。
.TP 
\fBautoindent\fP
切换新创建的行是否包含与前一行相同数量的前导空格 \-\- 或者如果前一行是段落的开头，则是否包含与下一行相同的前导空格。
.TP 
\fBcutfromcursor\fP
切换剪切文本是剪切整行还是仅从当前游标位置剪切到行尾。
.TP 
\fBbreaklonglines\fP
切换是否将长行硬包装到下一行。 (此函数的旧名称 'nowrap' 已弃用。)
.TP 
\fBtabstospaces\fP
切换是否将键入的制表符转换为空格。
.TP 
\fBmouse\fP
切换鼠标支持。
.RE

.TP 
Valid \fImenu\fP sections are:
.RS 3
.TP  2
\fBmain\fP
输入和编辑文本的主编辑器窗口。
.TP 
\fBhelp\fP
帮助查看器菜单。
.TP 
\fBsearch\fP
搜索菜单 (AKA whereis)。
.TP 
\fBreplace\fP
`搜索替换` 菜单。
.TP 
\fBreplacewith\fP
`替换为` 菜单，出现在 `搜索以替换` 之后。
.TP 
\fByesno\fP
\&'yesno' 菜单，其中询问 Yes/No/All/Cancel 问题。
.TP 
\fBgotoline\fP
`转到行 (和列) ` 菜单。
.TP 
\fBwriteout\fP
`写入文件` 菜单。
.TP 
\fBinsert\fP
`插入文件` 菜单。
.TP 
\fBbrowser\fP
`文件浏览器` 菜单，用于选择要打开或插入或写入的文件。
.TP 
\fBwhereisfile\fP
文件浏览器中的 `搜索文件` 菜单。
.TP 
\fBgotodir\fP
文件浏览器中的 `转到目录` 菜单。
.TP 
\fBexecute\fP
用于插入来自外部命令的输出，或用于通过外部命令过滤缓冲区 (或标记区域)，或用于执行多个工具之一的菜单。
.TP 
\fBspell\fP
集成拼写检查器的菜单，用户可以在其中编辑拼写错误的单词。
.TP 
\fBlinter\fP
linter 菜单，允许跳转 linting 消息。
.TP 
\fBall\fP
包含所有菜单的特殊名称。 对于 \fBbind\fP，表示指定 \fIfunction\fP 存在的所有菜单; 对于 \fBunbind\fP，它表示存在指定
\fIkey\fP 的所有菜单。
.RE

.SH FILES
.TP 
\fI/etc/nanorc\fP
系统范围的配置文件。
.TP 
\fI~/.nanorc\fP or \fI$XDG_CONFIG_HOME/nano/nanorc\fP or \fI~/.config/nano/nanorc\fP
每个用户的配置文件。
.TP 
\fI/usr/share/nano/*\fP
常见文件类型 (以及 \fIextra/\fP 子目录中不太常见的文件类型) 的语法着色的语法定义。

.SH "SEE ALSO"
\fBnano\fP(1)
.TP 
\fIhttps://nano\-editor.org/cheatsheet.html\fP
默认键绑定的概述。
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
