.\" -*- coding: UTF-8 -*-
.\" Copyright (c) 1999, 2000 SuSE GmbH Nuernberg, Germany
.\" Author: Thorsten Kukuk <kukuk@suse.de>
.\" Updates: Greg Banks <gbanks@linkedin.com> Copyright (c) 2021 Microsoft Corp.
.\"
.\" SPDX-License-Identifier: GPL-2.0-or-later
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH nscd.conf 5 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
nscd.conf \- 名称服务缓存守护进程配置文件
.SH DESCRIPTION
启动时从 \fBnscd\fP(8) 读取文件 \fI/etc/nscd.conf\fP。 每行指定一个属性和一个值，或者一个属性、服务和一个值。 字段由
SPACE 或 TAB 字符分隔。 \[aq]#\[aq] (数字符号) 表示注释的开始; nscd 不解释后面的字符，直到行尾。
.PP
有效服务为 \fIpasswd\fP、\fIgroup\fP、\fIhosts\fP、\fIservices\fP 或 \fInetgroup\fP。
.PP
\fBlogfile\fP \fIdebug\-file\-name\fP
.RS
指定应写入调试信息的文件的名称。
.RE
.PP
\fBdebug\-level\fP \fIvalue\fP
.RS
设置所需的调试级别。 0 隐藏调试信息。 1 显示一般调试信息。 2 还显示缓存转储中的数据。 3 (及以上) 显示所有调试信息。 默认是 0.
.RE
.PP
\fBthreads\fP \fInumber\fP
.RS
这是开始等待请求的线程的初始数量。 始终至少会创建五个线程。 线程数可能会根据客户端的需求动态增加到 \fBmax\-threads\fP，但绝不会减少。
.RE
.PP
\fBmax\-threads\fP \fInumber\fP
.RS
指定最大线程数。 默认值为 32。
.RE
.PP
\fBserver\-user\fP \fIuser\fP
.RS
如果设置了这个选项，nscd 将作为这个用户而不是 root 运行。 如果为每个用户使用单独的缓存 (\-S 参数)，则忽略此选项。
.RE
.PP
\fBstat\-user\fP \fIuser\fP
.RS
指定允许请求统计信息的用户。
.RE
.PP
\fBreload\-count\fP 无限 | \fInumber\fP
.RS
设置缓存条目在被删除之前重新加载但未被使用的次数限制。 限制可以取 0 到 254 之间的值; 值 255 或更高的行为与 \fBunlimited\fP
相同。 可以用十进制或带 "0x" 前缀的十六进制指定限制值。 特殊值 \fBunlimited\fP 不区分大小写。 默认限制为 5。 限制为 0
将关闭重新加载，特性。 有关重新加载的进一步讨论，请参见下面的注释。
.RE
.PP
\fBparanoia\fP \fI<yes|no>\fP
.RS
启用偏执模式会导致 nscd 定期重新启动。 默认为否。
.RE
.PP
\fBrestart\-interval\fP \fItime\fP
.RS
如果通过启用 \fBparanoia\fP 模式启用定期重启，则将重启间隔设置为 \fItime\fP 秒。 默认值为 3600。
.RE
.PP
\fBenable\-cache\fP \fIservice\fP \fI<yes|no>\fP
.RS
启用或禁用指定的 \fIservice\fP 缓存。 默认为否。
.RE
.PP
\fBpositive\-time\-to\-live\fP \fIservice\fP \fIvalue\fP
.RS
为 \fIservice\fP 的指定缓存中的肯定条目 (成功查询) 设置 TTL (time\-to\-live)。 \fIValue\fP 以秒为单位。
较大的值会增加缓存命中率并减少平均响应时间，但会增加缓存一致性问题。 请注意，对于某些名称服务 (特别包括 DNS)，会使用从名称服务返回的
TTL，而忽略此属性。
.RE
.PP
\fBnegative\-time\-to\-live\fP \fIservice\fP \fIvalue\fP
.RS
为 \fIservice\fP 的指定缓存中的 negative 条目 (不成功的查询) 设置 TTL (time\-to\-live)。 \fIValue\fP
以秒为单位。 如果 UID (用户 ID) 拥有多个不在系统数据库中的文件 (例如以 root 身份解压 Linux 内核源代码)，则可以显着提高性能;
应该保持较小以减少缓存一致性问题。
.RE
.PP
\fBsuggested\-size\fP \fIservice\fP \fIvalue\fP
.RS
这是内部哈希表大小，\fIvalue\fP 应保持为最佳效率的质数。 默认值为 211。
.RE
.PP
\fBcheck\-files\fP \fIservice\fP \fI<yes|no>\fP
.RS
启用或禁用检查属于指定 \fIservice\fP 的文件是否有更改。 这些文件是
\fI/etc/passwd\fP、\fI/etc/group\fP、\fI/etc/hosts\fP、\fI/etc/resolv.conf\fP、\fI/etc/services\fP
和 \fI/etc/netgroup\fP。 默认为是。
.RE
.PP
\fBpersistent\fP \fIservice\fP \fI<yes|no>\fP
.RS
在服务器重启后保留 \fIservice\fP 的缓存内容; 当设置 \fBparanoia\fP 模式时有用。 默认为否。
.RE
.PP
\fBshared\fP \fIservice\fP \fI<yes|no>\fP
.RS
\fIservice\fP 的 nscd 数据库的内存映射与客户端共享，以便他们可以直接在其中进行搜索，而不必在每次执行查找时通过套接字询问守护程序。
默认为否。 请注意，缓存未命中仍会导致通过套接字询问守护程序。
.RE
.PP
\fBmax\-db\-size\fP \fIservice\fP \fIbytes\fP
.RS
\fIservice\fP 的数据库文件的最大允许大小 (以字节为单位)。 默认值为 33554432。
.RE
.PP
\fBauto\-propagate\fP \fIservice\fP \fI<yes|no>\fP
.RS
当为 \fIpasswd\fP 或 \fIgroup\fP 服务设置为 \fIno\fP 时，\fI.byname\fP 请求不会添加到 \fIpasswd.byuid\fP 或
\fIgroup.bygid\fP 缓存中。 这有助于处理包含同一 ID 的多条记录的表。默认为是。 此选项仅对服务 \fIpasswd\fP 和 \fIgroup\fP
有效。
.RE
.SH NOTES
本手册页中所述的默认值源自 \fBnscd\fP(8) 的源代码，如果未在配置文件中覆盖，则会使用这些默认值。 您的发行版配置文件中使用的默认值可能不同。
.SS Reloading
\fBnscd\fP(8) 有一个称为重新加载的特性其行为可能令人惊讶。
.PP
当 \fBreload\-count\fP 属性具有非零值时启用重新加载。 源代码中的默认值允许重新加载，尽管您的发行版可能有所不同。
.PP
启用重新加载后，正缓存条目 (成功查询的结果) 不会在其 TTL 启动时简单地过期。 相反，在到期时，\fBnscd\fP 将
"reload"，即向名称服务重新发出创建缓存条目的相同查询，以获取要缓存的新值。 根据 \fI/etc/nsswitch.conf\fP，这可能意味着发出
DNS、LDAP 或 NIS 请求。 如果新查询成功，重新加载将在新值到期时重复，直到条目发生 \fBreload\-count\fP
次重新加载，然后才真正从缓存中删除。 来自命中条目的客户端的请求将重置条目上的重新加载计数器。 使用 \fInscd\~\-i\fP
清除缓存会覆盖重新加载逻辑并删除该条目。
.PP
重新加载具有在不影响缓存一致性的情况下扩展缓存条目 TTL 的效果，但代价是支持名称服务上的额外负载。
这在您的系统上是否是个好主意取决于应用程序行为的详细信息、您的名称服务以及缓存条目的有效 TTL 值。 请注意，对于某些名称服务 (例如 DNS)，有效
TTL 是名称服务返回的值，\fInot\fP 是 \fBpositive\-time\-to\-live\fP 属性的值。
.PP
请仔细考虑以下建议:
.IP \[bu] 3
如果您的应用程序将在超过 1 个 TTL 但在 \fBreload\-count\fP TTL
之前再次请求同名，并且对缓存未命中的延迟敏感，那么重新加载对您来说可能是个好主意。
.IP \[bu]
如果您的名称服务配置为返回非常短的
TTL，并且您的应用程序在正常情况下很少发出请求，那么重新加载可能会导致您的后备名称服务产生额外负载，而对应用程序没有任何好处，这对您来说可能不是一个好主意。
.IP \[bu]
如果您的名称服务容量有限，重新加载可能会对您的名称服务产生增加而不是减少负载的惊人效果，这对您来说可能不是一个好主意。
.IP \[bu]
将 \fBreload\-count\fP 设置为 \fBunlimited\fP
几乎不是一个好主意，因为它会导致缓存条目永不过期，并给后备名称服务带来永无休止的额外负载。
.PP
一些发行版有一个 \fBnscd\fP(8) 的初始化脚本，其中包含一个 \fIreload\fP 命令，该命令使用 \fInscd\~\-i\fP 来清除缓存。
"reload" 一词的使用与此处描述的 "reloading" 完全不同。
.SH "SEE ALSO"
\fBnscd\fP(8)
.\" .SH AUTHOR
.\" .B nscd
.\" was written by Thorsten Kukuk and Ulrich Drepper.
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
