.\" -*- coding: UTF-8 -*-
'\" t
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH LOADER\&.CONF 5 "" "systemd 253" loader.conf
.ie  \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH NAME
loader.conf\-systemd\-boot 的配置文件
.SH SYNOPSIS
.PP
\fIESP\fP/loader/loader\&.conf, \fIESP\fP/loader/entries/*\&.conf
\fIXBOOTLDR\fP/loader/entries/*\&.conf
.SH DESCRIPTION
.PP
\fBsystemd\-boot\fP(7) 将读取 \fIESP\fP/loader/loader\&.conf，以及 EFI 系统分区 (ESP) 上的
\fIESP\fP/loader/entries/ 下的任何扩展名为 "\&.conf" 的文件，以及 \m[blue]\fBBoot Loader Specification\fP\m[]\&\s-2\u[1]\d\s+2\& 定义的扩展引导加载程序分区 (XBOOTLDR) 上的
\fIXBOOTLDR\fP/loader/entries/。
.PP
这些配置文件中的每一个都必须由一系列换行符 (i\&.e\&. ASCII 代码 10) 分隔的行组成，每行包含一个选项名称，后跟空格和选项值 \&。
"#" 可用于开始注释行 \&。空行和注释行被忽略 \&。这些文件使用 UTF\-8 编码 \&。
.PP
布尔参数可以写成 "yes"/"y"/"true"/"t"/"on"/"1" 或 "no"/"n"/"false"/"f"/"off"/"0"\&。
.SH OPTIONS
.PP
\fIESP\fP/loader/entries/*\&.conf 和 \fIXBOOTLDR\fP/loader/entries/*\&.conf
文件支持的配置选项被定义为 \m[blue]\fBBoot Loader Specification\fP\m[]\&\s-2\u[1]\d\s+2\&
的一部分。
.PP
loader\&.conf 配置文件支持以下配置:
.PP
default
.RS 4
用于选择默认条目 \& 的 glob 模式。默认条目可能会在引导菜单本身中更改，在这种情况下，所选条目的名称将存储为 EFI 变量，覆盖此选项 \&。
.sp
如果设置为 "@saved"，所选条目将在每次引导时保存为 EFI 变量，并在下次引导加载程序启动时自动选择 \&。
.sp
.it 1 an-trap
.nr an-no-space-flag 1
.nr an-break-flag 1
.br
\fBTable\ \&1.\ \&Automatically detected entries will use the following names:\fP
.TS
allbox tab(:);
lB lB.
T{
Name
T}:T{
Description
T}
.T&
l l
l l
l l
l l
l l.
T{
auto\-efi\-default
T}:T{
EFI Default Loader
T}
T{
auto\-efi\-shell
T}:T{
EFI Shell
T}
T{
auto\-osx
T}:T{
macOS
T}
T{
auto\-reboot\-to\-firmware\-setup
T}:T{
Reboot Into Firmware Interface
T}
T{
auto\-windows
T}:T{
Windows Boot Manager
T}
.TE
.sp 1
支持的 glob 通配符模式是 "?"、"*" 和 "[\&...]" (包括范围) \&。请注意，这些模式使用与 \fBglob\fP(7)
相同的语法，但不支持所有，特性 \&。特别是，不支持集合否定和命名字符类 \&。匹配在条目 ID 上不区分大小写 (如 \fBbootctl list\fP)\& 所示)。
.RE
.PP
timeout
.RS 4
在启动默认条目之前启动菜单应显示多长时间，以秒为单位 \&。这可能会在引导菜单本身中更改，并且在这种情况下将存储为 EFI 变量，覆盖此选项 \&。
.sp
如果设置为 "menu\-hidden" 或 "0" (默认)，则不显示任何菜单，默认条目将立即启动 \&。在启动 systemd\-boot
之前按住一个键可以显示菜单 \&。将此设置为 "menu\-force" 会禁用超时，同时始终显示菜单 \&。
.RE
.PP
console\-mode
.RS 4
此选项配置控制台的分辨率 \&。采用数字或下面列出的特殊值之一 \&。可以使用以下值:
.PP
0
.RS 4
标准 UEFI 80x25 模式
.RE
.PP
1
.RS 4
80x50 模式，并非所有设备都支持
.RE
.PP
2
.RS 4
设备固件提供的第一个非标准模式，如果有的话
.RE
.PP
auto
.RS 4
使用启发式自动选择合适的模式
.RE
.PP
max
.RS 4
选择编号最高的可用模式
.RE
.PP
keep
.RS 4
保持固件选择的模式 (默认)
.RE
.RE
.PP
editor
.RS 4
采用布尔型参数 \&。启用 (默认) 或禁用编辑器 \&。如果未经授权的人可以访问机器，则应禁用编辑器 \&。
.RE
.PP
auto\-entries
.RS 4
采用布尔型参数 \&。启用 (默认) 或禁用在引导分区上找到的其他引导条目的条目。特别是，当创建加载程序条目以显示这些条目的替换描述时，这可能很有用
\&。
.RE
.PP
auto\-firmware
.RS 4
控制 "Reboot into firmware" 条目是否存在的布尔值 (默认启用) \&。如果禁用此功能，仍可使用 f 键 \& 访问固件界面。
.RE
.PP
beep
.RS 4
采用布尔型参数 \&。如果启用超时，则每秒发出一次蜂鸣声，否则在选择启动菜单中的第 n 个条目时发出 n 次蜂鸣声 (默认禁用) \&。目前只支持
x86，使用 PC 喇叭 \&。
.RE
.PP
secure\-boot\-enroll
.RS 4
危险: 如果使用不当，此特性可能会软化您的设备 \&。
.sp
如果系统处于设置模式，则控制在 ESP 上找到的安全启动密钥的注册:
.PP
\fBoff\fP
.RS 4
不采取任何行动 \&。
.RE
.PP
\fBmanual\fP
.RS 4
为找到的安全启动密钥创建启动条目，允许手动注册 \&。
.RE
.PP
\fBif\-safe\fP
.RS 4
与 \fBmanual\fP 相同的行为，但如果认为它是安全的 \&，将尝试自动注册密钥 "auto"。目前，只有当系统在虚拟机内运行时才会出现这种情况。
.RE
.PP
\fBforce\fP
.RS 4
如果找到 \&，请始终注册 "auto" 密钥。请注意，如果不知道此操作是否安全 \&，仍会显示带有超时的警告消息。
.RE
.sp
可以在 /loader/keys/\fINAME\fP 下设置不同的变量集，其中 \fINAME\fP 是将用作条目名称 \&
的名称。这允许一个人运送多套安全启动变量并选择在运行时注册哪一个 \&。
.sp
支持的 Secure Boot 变量是一个授权镜像数据库，一个密钥交换密钥 (KEK) 和一个平台密钥
(PK)\&。有关详细信息，请参见安全启动和驱动程序签名 \& 下的 \m[blue]\fBUEFI specification\fP\m[]\&\s-2\u[2]\d\s+2。另一个描述不同变量相互作用的资源是 \m[blue]\fBEDK2 documentation\fP\m[]\&\s-2\u[3]\d\s+2\&。
.sp
一套完整的 UEFI 变量包括 db\&.auth、KEK\&.auth 和 PK\&.auth\&。注意，这些文件需要经过 UEFI 变量 \&
认证。有关如何从常规 X\&.509 密钥 \& 生成它们的示例，请参见下文。
.sp
.if  n \{\
.RS 4
.\}
.nf
uuid=$(systemd\-id128 new \-\-uuid)
对于 PK KEK db 中的密钥; do
  openssl 请求 \-new \-x509 \-subj "/CN=${key}/" \-keyout "${key}\&.key" \-out "${key}\&.crt"
  openssl x509 \-outform DER \-in "${key}\&.crt" \-out "${key}\&.der"
  sbsiglist \-\-owner "${uuid}" \-\-type x509 \-\-output "${key}\&.esl" "${key}\&.der"
done

对于 MicWinProPCA2011_2011\-10\-19\&.crt MicCorUEFCA2011_2011\-06\-27\&.crt MicCorKEKCA2011_2011\-06\-24\&.crt; do
  curl "https://www\&.microsoft\&.com/pkiops/certs/${key}" \-\-output "${key}"
  sbsiglist \-\-owner 77fa9abd\-0359\-4d32\-bd60\-28f4e78f784b \-\-type x509 \-\-output "${key%crt}esl" "${key}"
done

# 可选择添加 Microsoft Windows Production CA 2011 (需要引导至 Windows) \&。
cat MicWinProPCA2011_2011\-10\-19\&.esl >>db\&.esl

# 可选地为固件驱动程序 / 选项 ROM 添加 Microsoft Corporation UEFI CA 2011
# 和第三方引导加载程序 (包括垫片) \&。强烈推荐这个真实
# 硬件，因为不包括这个可能会使您的设备软化 (见下一段) \&。
cat MicCorUEFCA2011_2011\-06\-27\&.esl >>db\&.esl

# 可选择添加 Microsoft Corporation KEK CA 2011\&。建议如果
# Microsoft keys 用作官方 UEFI 吊销数据库签名
# 钥匙 \&。吊销数据库可以用 \fBfwupdmgr\fP(1)\& 更新。
cat MicCorKEKCA2011_2011\-06\-24\&.esl >>KEK\&.esl

attr=NON_VOLATILE,RUNTIME_ACCESS,BOOTSERVICE_ACCESS,TIME_BASED_AUTHENTICATED_WRITE_ACCESS
sbvarsign \-\-attr ${attr} \-\-key PK\&.key \-\-cert PK\&.crt \-\-output PK\&.auth PK PK\&.esl
sbvarsign \-\-attr ${attr} \-\-key PK\&.key \-\-cert PK\&.crt \-\-output KEK\&.auth KEK KEK\&.esl
sbvarsign \-\-attr ${attr} \-\-key KEK\&.key \-\-cert KEK\&.crt \-\-output db\&.auth db db\&.esl
        
.fi
.if  n \{\
.RE
.\}
.sp
此特性被认为是危险的，因为即使所有必需的文件都使用正在加载的密钥进行签名，系统正确赋数所需的一些文件仍然会 \*(Aqt be\&. 对于 Option
ROM (e\&.g\&. 用于存储控制器或图形卡) \&。有关详细信息，请参见 \m[blue]\fBSecure Boot and Option ROMs\fP\m[]\&\s-2\u[4]\d\s+2\&。
.RE
.PP
reboot\-for\-bitlocker
.RS 4
警告: 此特性是实验性的，可能会在 future 版本的 systemd\& 中更改 (或以当前形式删除)。
.sp
解决在更新引导加载程序时需要恢复密钥的 BitLocker (默认情况下禁用) \&。
.sp
尝试检测 BitLocker 加密驱动器以及活动的 TPM\&。如果两者都找到并且在启动菜单中选择了 Windows Boot Manager，则设置
"BootNext" EFI 变量并重新启动系统 \&。然后固件将直接启动 Windows 引导管理器，使 TPM PCR 保持预期状态，以便
Windows 可以解封加密密钥 \&。这允许更新 \fBsystemd\-boot\fP(7)，而无需为 BitLocker 驱动器解锁提供恢复密钥。
.sp
请注意，Windows 使用的 PCR 可以使用 `计算机 Configuration\eAdministrative
Templates\eWindows Components\eBitLocker 驱动器加密`\& 下的 "Configure TPM platform
validation profile for native UEFI firmware configurations"
组策略进行配置。启用安全启动后，将其更改为 PCRs "0,2,7,11" 应该是安全的 \&。需要删除 TPM
密钥保护程序，然后将其添加回来，以便已加密驱动器上的 PCR 更改 \&。如果未测量 PCR 4，则可以禁用此设置以加速启动到 Windows\&。
.RE
.SH EXAMPLE
.sp
.if  n \{\
.RS 4
.\}
.nf
# /boot/efi/loader/loader\&.conf
超时 0
默认 01234567890abcdef1234567890abdf0\-*
编者号
    
.fi
.if  n \{\
.RE
.\}
.PP
默认不显示菜单 (开机时按住某个键仍然可以显示菜单) \&。默认情况下，将选择名称以
"01234567890abcdef1234567890abdf0\-" 开头的文件的条目之一。如果有多个条目匹配，则选择优先级最高的条目
(一般是版本号最高的条目) \&。编辑器将被禁用，因此无法更改内核命令行 \&。
.SH "SEE ALSO"
.PP
\fBsystemd\-boot\fP(7), \fBbootctl\fP(1)
.SH NOTES
.IP " 1." 4
引导装载程序规范
.RS 4
\%https://uapi\-group.org/specifications/specs/boot_loader_specification
.RE
.IP " 2." 4
UEFI 规范
.RS 4
\%https://uefi.org/specifications
.RE
.IP " 3." 4
EDK2 文档
.RS 4
\%https://edk2\-docs.gitbook.io/understanding\-the\-uefi\-secure\-boot\-chain/secure_boot_chain_in_uefi/uefi_secure_boot
.RE
.IP " 4." 4
安全启动和选项 ROM
.RS 4
\%https://github.com/Foxboron/sbctl/wiki/FAQ#option\-rom
.RE
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
