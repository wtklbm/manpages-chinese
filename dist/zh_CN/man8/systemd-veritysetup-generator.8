.\" -*- coding: UTF-8 -*-
'\" t
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH SYSTEMD\-VERITYSETUP\-GENERATOR 8 "" "systemd 253" systemd\-veritysetup\-generator
.ie  \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH NAME
systemd\-veritysetup\-generator \- 用于受 verity 保护的块设备的元生成器
.SH SYNOPSIS
.PP
/usr/lib/systemd/system\-generators/systemd\-veritysetup\-generator
.SH DESCRIPTION
.PP
\fBsystemd\-veritysetup\-generator\fP 是一个生成器，它在引导早期和重新加载系统管理器的配置时将配置 verity
保护块设备的内核命令行选项转换为原生 systemd 单元。这将根据需要创建 \fBsystemd\-veritysetup@.service\fP(8) 单元
\&。
.PP
目前，只有两个 verity 设备可以用这个生成器设置，支持 OS\& 的根和 /usr 文件系统。
.PP
\fBsystemd\-veritysetup\-generator\fP 实现 \fBsystemd.generator\fP(7)\&。
.SH "KERNEL COMMAND LINE"
.PP
\fBsystemd\-veritysetup\-generator\fP 理解以下内核命令行参数:
.PP
\fIsystemd\&.verity=\fP, \fIrd\&.systemd\&.verity=\fP
.RS 4
采用布尔型参数 \&。默认为 `是`\&。如果为 "no"，则完全禁用生成器 \&。 \fIrd\&.systemd\&.verity=\fP 仅由
initrd 接受，而 \fIsystemd\&.verity=\fP 由主机系统和 initrd\& 接受。
.RE
.PP
\fIroothash=\fP
.RS 4
获取根文件系统的根哈希值 \&。期望以适当长度的十六进制字符格式化的哈希值 (i\&.e\&。很可能是 256 bit/64 字符，或更长)
\&。如果未通过 \fIsystemd\&.verity_root_data=\fP 和 \fIsystemd\&.verity_root_hash=\fP
指定，则要使用的散列和数据设备自动从指定的散列值派生 \&。具体来说，数据分区设备是在 root hash 的前 128bit 导出的 GPT 分区
UUID 下寻找的，hash 分区设备是在 root hash 的后 128bit 导出的 GPT 分区 UUID 下寻找的。因此，通常指定根散列以从
verity 保护的根文件系统启动就足够了，因为设备路径是根据它自动确定的 \(em 只要正确设置了分区表 \&。
.RE
.PP
\fIsystemd\&.verity_root_data=\fP, \fIsystemd\&.verity_root_hash=\fP
.RS 4
这两个设置以块设备路径为参数，可用于显式配置数据分区和散列分区，用于为根文件系统设置真实性保护 \&。如果未指定，这些路径自动派生自
\fIroothash=\fP 参数 (见上文) \&。
.RE
.PP
\fIsystemd\&.verity_root_options=\fP
.RS 4
采用逗号分隔的 dm\-verity 选项列表 \&。需要以下选项
\fBignore\-corruption\fP、\fBrestart\-on\-corruption\fP、\fBignore\-zero\-blocks\fP、\fBcheck\-at\-most\-once\fP、\fBpanic\-on\-corruption\fP
和 \fBroot\-hash\-signature=\fP\fIPATH\fP\fB|base64:\fP\fIHEX\fP\&。有关更多详细信息，请参见
\fBveritysetup\fP(8)\&。
.RE
.PP
\fIusrhash=\fP, \fIsystemd\&.verity_usr_data=\fP, \fIsystemd\&.verity_usr_hash=\fP,
\fIsystemd\&.verity_usr_options=\fP
.RS 4
相当于上面描述的根文件系统的对应物，但适用于 /usr / 文件系统而不是 \&。
.RE
.SH "SEE ALSO"
.PP
\fBsystemd\fP(1), \fBsystemd\-veritysetup@.service\fP(8), \fBveritysetup\fP(8),
\fBsystemd\-fstab\-generator\fP(8)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
