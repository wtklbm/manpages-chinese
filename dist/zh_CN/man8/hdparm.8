.\" -*- coding: UTF-8 -*-
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH HDPARM 8 "Sep 2022" "Version 9.65" 

.SH NAME
hdparm\-get/set SATA/IDE 设备参数
.SH SYNOPSIS
\fBhdparm\fP [options] [device ...]
.SH DESCRIPTION
\fBhdparm\fP 为 Linux SATA/PATA/SAS "libata" 子系统和较旧的集成开发环境驱动子系统支持的各种内核接口提供命令行接口。
许多较新的 (2008 年及以后) USB 驱动器外壳现在也支持 "SAT" (SCSI\-ATA 命令转换)，因此也可以与 hdparm 一起使用。
例如最近的 WD "Passport" 型号和最近的 NexStar\-3 机箱。 某些选项可能仅适用于最新的内核。
.SH OPTIONS
如果未给出任何选项，则假定为 \fB\-acdgkmur\fP。 对于 "Get/set" 选项，不带可选参数 (如 \-d) 的查询将查询 (get)
的设备状态，带参数 (如 \-d0) 的查询将设置设备状态。
.TP 
\fI\-a\fP
文件系统 (software) 预读的 Get/set 扇区计数。 这用于提高大文件顺序读取的性能，方法是预取额外的块以预期正在运行的任务需要它们。
许多集成开发环境驱动器也有一个单独的内置预读函数，它增强了这个文件系统 (software) 预读函数。
.TP 
\fI\-A\fP
Get/set 集成开发环境驱动器的先读，特性 (默认情况下通常为 ON)。 用法: \fB\-A0\fP (disable) 或 \fB\-A1\fP
(enable)。
.TP 
\fI\-b\fP
Get/set 总线状态。
.TP 
\fI\-B\fP
Get/set 高级电源管理特性如果驱动器支持的话。低值意味着积极的电源管理，高值意味着更好的性能。 可能的设置范围从值 1 到 127 (允许降速)
和值 128 到 254 (不允许降速)。 设置为 1 时可获得最高级别的电源管理，设置为 254 时可获得最高的 I/O 性能。 值 255 告诉
hdparm 在驱动器上完全禁用高级电源管理 (并非所有驱动器都支持禁用它，但大多数支持)。
.TP 
\fI\-c\fP
Get/set (E) 集成开发环境 32 位 I/O 支持。 数字参数可用于 enable/disable 32 位 I/O 支持。
当前支持的值包括用于禁用 32 位 I/O 支持的 \fB0\fP、用于启用 32 位数据传输的 \fB1\fP 和用于启用 32 位数据传输的
\fB3\fP，以及许多芯片组所需的特殊 \fBsync\fP 序列。 值 \fB3\fP 适用于几乎所有 32 位集成开发环境芯片组，但会产生稍微多一些的开销。
请注意，"32\-bit" 仅指通过 PCI 或 VLB 总线到接口卡的数据传输; 所有 (E) 集成开发环境驱动器仍然只有一个 16
位连接，通过带状电缆从接口卡连接。
.TP 
\fI\-C\fP
查看当前集成开发环境功耗模式状态，始终为 \fBunknown\fP (驱动器不支持此命令)、\fBactive/idle\fP (正常运行)、\fBstandby\fP
(低功耗模式，驱动器已停转) 或 \fBsleeping\fP (最低功耗模式) 之一，驱动器完全关闭)。 \fB\-S, \-y, \-Y,\fP 和 \fB\-Z\fP
选项可用于控制集成开发环境电源模式。
.TP 
\fI\-d\fP
Get/set 此驱动器的 "using_dma" 标志。 此选项现在适用于支持 DMA 并且内核集成开发环境驱动程序已知的驱动器和 PCI
接口的大多数组合。 将适当的 \fB\-X\fP 选项与 \fB\-d1\fP 结合使用也是一个好主意，以确保驱动器本身针对正确的 DMA 模式进行编程，尽管大多数
BIOS 应该在引导时为您完成此操作。 使用 DMA 几乎总能提供最佳性能，具有快速的 I/O 吞吐量和低 CPU 使用率。
但是至少有一些芯片组和驱动器的配置对于 DMA 没有太大的影响，甚至可能会减慢速度 (在真正搞砸的硬件上! )。 您的旅费可能会改变。
.TP 
\fI\-\-dco\-freeze\fP
DCO 代表设备配置覆盖，供应商有选择地禁用驱动器的某些特性的一种方式。 \fB\-\-dco\-freeze\fP 选项将 freeze/lock
当前驱动器配置，从而防止软件 (或恶意软件) 在下一次上电重置之前更改任何 DCO 设置。
.TP 
\fI\-\-dco\-identify\fP
查询和转储有关可由供应商或 OEM 安装程序禁用的驱动器配置设置的信息。 这些设置显示驱动器的功能，供应商可能会为 "enhanced
compatibility" 禁用这些功能。 禁用时，它们会以其他方式隐藏并且不会显示在 \fB\-I\fP 标识输出中。
例如，系统供应商有时会禁用大型驱动器上的 48 位寻址，以实现与特定 BIOS 的兼容性 (和容量损失)。
在这种情况下，\fB\-\-dco\-identify\fP 将显示驱动器支持 48 位，但 \fB\-I\fP 不会显示，驱动器也不会接受 48 位命令。
.TP 
\fI\-\-dco\-restore\fP
将所有驱动器设置、特性和可访问容量重置为出厂默认设置和全部，特性。 如果 DCO 是 frozen/locked，或者如果还设置了 \fB\-Np\fP
最大大小限制，则此命令将失败。 这是 \fBEXTREMELY DANGEROUS\fP，很可能会导致大量数据丢失。 这是 \fBEXTREMELY DANGEROUS\fP，很可能会导致大量数据丢失。
.TP 
\fI\-\-direct\fP
在执行 \fB\-t\fP 时序测试时使用内核的 "O_DIRECT" 标志。 这会绕过页面缓存，导致读取直接从驱动器进入 hdparm 的缓冲区，使用所谓的
"raw" I/O。 在许多情况下，这可以产生比通常的页面缓存方法快得多的结果，从而更好地指示原始设备和驱动程序的性能。
.TP 
\fI\-\-drq\-hsm\-error\fP
\fBVERY DANGEROUS, DON'T EVEN THINK ABOUT USING IT.\fP 此选项导致 hdparm 向内核发出
IDENTIFY 命令，但错误地标记为 "non\-data" 命令。 这导致驱动器的 DataReQust(DRQ) 线 "stuck" 保持高电平。
这会混淆内核驱动程序，并可能导致系统立即崩溃并丢失大量数据。 该选项的存在是为了帮助测试和强化内核以防止类似的现实世界驱动器故障。
该选项的存在是为了帮助测试和强化内核以防止类似的现实世界驱动器故障。
.TP 
\fI\-D\fP
Enable/disable 驱动器上的缺陷管理特性驱动器固件尝试通过将缺陷扇区重新定位到工厂为此保留的 "spare" 扇区来自动管理缺陷扇区。 自
ATA\-4 以来，大多数现代驱动器都不支持通过 \fB\-D\fP 选项控制此，特性; 因此这个命令可能会失败。
.TP 
\fI\-E\fP
设置 cd/dvd 驱动速度。 这对于常规操作来说不是必需的，因为驱动器会自行自动切换速度。 但是如果您想玩它，只需在选项后提供一个速度数字，通常是 2
或 4 之类的数字。 不过，这在某些情况下很有用，可以平滑 DVD 视频播放。
.TP 
\fI\-f\fP
在退出时同步并刷新设备的缓冲区缓存。 此操作也作为 \fB\-t\fP 和 \fB\-T\fP 时序和其他选项的一部分在内部执行。
.TP 
\fI\-\-fallocate\fP
此选项目前仅适用于 ext4 和 xfs 文件系统类型。 使用时，这必须是唯一给出的选项。 它需要两个参数: 以千字节为单位的所需文件大小 (字节数除以
1024)，后跟新文件的路径名。 它将创建一个指定大小的新文件，但实际上不必向该文件写入任何数据。 这通常会很快完成，并且不会破坏存储设备。
.IP
例如创建一个 10KByte 的文件: \fBhdparm \-\-fallocate 10 temp_file\fP
.TP 
\fI\-\-fibmap\fP
使用时，这必须是唯一给出的选项。 它需要一个文件路径作为参数，并将打印出该文件在磁盘上占用的块范围 (扇区范围) 的列表。 扇区号作为绝对 LBA
号给出，从物理设备的扇区 0 引用，而不是从分区或文件系统引用。
然后，此信息可用于多种目的，例如检查较大文件的碎片化程度，或确定适当的扇区以在故障注入测试过程中故意损坏。
.IP
此选项在可用时使用新的 FIEMAP (文件范围 map) ioctl()，否则回退到旧的 FIIBMAP (文件块 map) ioctl()。
请注意，FIIBMAP 受到 32 位块号接口的影响，因此不能超过 8TB 或 16TB。 FIBMAP 也非常慢，并且不能很好地处理 ext4/xfs
文件系统中预分配的未提交范围，除非在使用此选项之前完成 sync()。
.TP 
\fI\-\-fwdownload\fP
使用时，这应该是唯一给出的选项。 它需要紧接在选项之后的文件路径，指示应从何处读取新的驱动器固件。 该文件的内容将使用 (S) ATA
\fBDOWNLOAD MICROCODE\fP 命令发送到驱动器，使用传输协议 7 (一次整个文件)，或者如果驱动器支持，则使用传输协议 3 (分段下载)。
此命令是 \fBEXTREMELY DANGEROUS\fP，可以销毁驱动器及其上的所有数据。 \fBDO NOT USE THIS COMMAND.\fP 基本
\fB\-\-fwdownload\fP 的 \fB\-\-fwdownload\-mode3\fP、\fB\-\-fwdownload\-mode3\-max\fP 和
\fB\-\-fwdownload\-mode7\fP 变体允许覆盖自动协议检测，以支持强制 hdparm 使用特定的传输协议，仅用于测试目的。
.TP 
\fI\-F\fP
刷新驱动器上的写缓存缓冲区 (旧驱动器可能无法实现此功能)。
.TP 
\fI\-g\fP
显示驱动器的几何结构 (柱面、磁头、扇区)、设备的大小 (以扇区为单位) 以及设备从驱动器开始处的起始偏移量 (以扇区为单位)。
.TP 
\fI\-h\fP
显示简洁的使用信息 (help)。
.TP 
\fI\-H\fP
从一些 (主要是日立) 驱动器读取温度。 还报告温度是否在工作条件范围内 (这可能不可靠)。如果空闲，不会导致驱动器增加。
.TP 
\fI\-i\fP
显示内核驱动程序 (IDE、libata) 从 boot/configuration 时间开始存储的标识信息。 这可能不同于使用 \fB\-I\fP
选项直接从驱动器本身获得的当前信息。 返回的数据可能是也可能不是最新的，这取决于自引导系统以来的活动。 有关标识信息的更详细解释，请参见 \fIAT Attachment Interface for Disk Drives,\fP ANSI ASC X3T9.2 工作草案，修订版 4a，April
19/93 和更高版本。
.TP 
\fI\-\-idle\-immediate\fP
发出 ATA IDLE_IMMEDIATE 命令，将驱动器置于低功耗状态。 通常设备保持旋转。
.TP 
\fI\-\-idle\-unload\fP
发出 ATA IDLE_IMMEDIATE_WITH_UNLOAD 命令，以卸载或 park 磁头并将驱动器置于低功耗状态。 通常设备保持旋转。
.TP 
\fI\-I\fP
直接从驱动器请求识别信息，该信息以新的扩展格式显示，比旧的 \fB\-i\fP 选项更详细。
.TP 
\fI\-\-Iraw <pathname>\fP
此选项将原始二进制文件中的驱动器标识数据转储到指定文件。
.TP 
\fI\-\-Istdin\fP
这是 \fB\-I\fP 选项的特殊变体，它接受驱动器标识块作为标准输入，而不是使用 /dev/hd* 参数。 此块的格式必须是 \fBexactly\fP，与在
/proc/ide/*/hd*/identify "files" 中找到的格式相同，或者由下面描述的 \fB\-\-Istdout\fP 选项生成的格式。
此变体旨在与收集的 "libraries" 驱动器标识信息一起使用，也可用于 ATAPI 驱动器，这可能会导致标准机制出现媒体错误。 当使用
\fB\-\-Istdin\fP 时，它必须是给定的*唯一*参数。 请注意，某些信息将不完整，因为使用 \fB\-\-Istdin\fP 时驱动器日志页面不可用。
.TP 
\fI\-\-Istdout\fP
此选项将驱动器的十六进制标识数据转储到 stdout，格式类似于 /proc/ide/*/identify，适合以后与 \fB\-\-Istdin\fP
选项一起使用。
.TP 
\fI\-J\fP
Get/set 西数 (WD) 绿盘的 "idle3" 超时值。 此超时控制驱动器停止磁头并进入低功耗状态的频率。 出厂默认值为八个 (8)
秒，这对于与 Linux 一起使用是一个非常糟糕的选择。 将其保留为默认值将导致在很短的时间内出现数十万个 head load/unload 循环。
驱动机制的额定循环次数仅为 300,000 到 1,000,000 次，因此将其保留为默认值可能会导致过早失效，更不用说在执行例行 I/O
之前经常需要唤醒驱动器的性能影响了。
.IP
WD 提供了一个 WDIDLE3.EXE DOS 实用程序来调整此设置，您应该尽可能使用该程序而不是 hdparm。 hdparm
中的逆向工程实现并不像原始官方程序那样完整，尽管它似乎至少可以在几个驱动器上工作。
无论使用哪个程序进行调整，设置中的任何更改都需要一个完整的电源循环才能生效。
.IP
建议 Linux 使用时设置为 30 秒。 允许的值为 8 到 12 秒，以及 30 到 300 秒，增量为 30 秒。 指定零值 (0) 以完全禁用
WD idle3 计时器 (不推荐! )。
.TP 
\fI\-k\fP
Get/set 驱动器的 "keep_settings_over_reset" 标志。 设置此标志后，驱动器将通过软重置保留 \fB\-dmu\fP 设置
(如在错误恢复序列期间所做的那样)。 此选项默认为关闭，以防止可能由 \fB\-dmu\fP 设置组合引起的驱动器复位循环。 因此，\fB\-k\fP
选项应仅在用户确信使用一组选定的配置设置正确运行系统后才能设置。 实际上，测试配置 (在使用 \-k 之前) 通常需要做的就是验证驱动器是否可以是
read/written，并且在此过程中没有生成错误日志 (内核消息) (在大多数系统上查看 /var/log/messages) .
.TP 
\fI\-K\fP
设置驱动器的 "keep_features_over_reset" 标志。 设置此项可使驱动器在软复位后保留 \fB\-APSWXZ\fP 的设置
(如在错误恢复序列期间所做的那样)。 并非所有驱动器都支持此，特性。
.TP 
\fI\-L\fP
设置驱动器的门锁标志。 将此设置为 \fB1\fP 将锁定某些移动硬盘驱动器的门机制 (例如 Syquest、ZIP、Jazz..)，将其设置为 \fB0\fP
将解锁门机制。 通常，Linux 会根据驱动器使用情况自动维护门锁机制 (只要安装文件系统就会锁定)。
但是在系统关闭时，如果根分区位于可移动磁盘上，这可能会很麻烦，因为根分区在关闭后仍挂载在 (read\-only) 上。 因此，通过使用此命令解锁
\fBafter\fP 门，根文件系统将以只读方式重新挂载，然后可以在关机后从驱动器中取出磁带。
.TP 
\fI\-m\fP
驱动器上多个扇区 I/O 的 Get/set 扇区计数。 \fB0\fP 的设置禁用此，特性。 多扇区模式 (又名集成开发环境块模式)
是大多数现代集成开发环境硬盘驱动器的一个特性它允许每个 I/O 中断传输多个扇区，而不是通常的每个中断一个扇区。 启用此特性后，它通常会将磁盘 I/O
的操作系统开销减少 30\-50%。 在许多系统上，它还可以将数据吞吐量提高 5% 到 50%。 但是，某些驱动器 (最著名的是 WD Caviar
系列) 在启用多模式时似乎运行速度较慢。 您的旅费可能会改变。 大多数驱动器支持 2、4、8 或 16 (sectors) 的最小设置。
根据驱动器的不同，也可以进行更大的设置。 在许多系统上，16 或 32 的设置似乎是最佳的。 Western Digital
建议在他们的许多驱动器上使用 4 到 8 的较低设置，因为 (32kB) 驱动器缓冲区很小且缓冲算法未优化。 \fB\-i\fP
选项可用于查找已安装驱动器支持的最大设置 (在输出中查找 MaxMultSect)。 一些驱动器声称支持多模式，但在某些设置下会丢失数据。
在极少数情况下，此类故障会导致 \fBmassive filesystem corruption.\fP
.TP 
\fI\-\-make\-bad\-sector\fP
故意在磁盘上创建坏扇区 (又名 "media error")。 \fBEXCEPTIONALLY DANGEROUS. DO NOT USE THIS OPTION!!\fP 这对于 device/RAID 错误恢复机制的测试很有用。 扇区号在选项后作为 (base10) 参数给出。
根据设备的不同，hdparm 将选择两个可能的 ATA 命令之一来破坏扇区。 WRITE_LONG 适用于大多数驱动器，但最多只能达到 28
位扇区边界。 一些最新的驱动器 (2008) 可能支持新的 WRITE_UNCORRECTABLE_EXT 命令，该命令适用于任何 LBA48 扇区。
如果可用，hdparm 将优先使用它而不是 WRITE_LONG。 WRITE_UNCORRECTABLE_EXT 命令本身可以选择新坏扇区的行为方式。
默认情况下，它看起来像任何其他坏扇区，并且驱动器可能需要一些时间来重试并在对该扇区的后续读取中失败。 但是，如果一个字母 \fBf\fP
紧接在扇区号参数的第一个数字前面，则 hdparm 将发出 "flagged"
WRITE_UNCORRECTABLE_EXT，这会导致驱动器仅将该扇区标记为坏扇区 (而不是真正损坏它)，并且随后对该扇区的读取将立即失败
(而不是在多次重试之后)。 另请注意，\fB\-\-repair\-sector\fP 选项可用于在不再需要时恢复 (any) 坏扇区，包括真正坏的扇区
(驱动器可能会将它们重新映射到介质上的新区域)。
.TP 
\fI\-M\fP
Get/set 自动声学管理 (AAM) 设置。大多数现代硬盘驱动器都能够降低磁头运动速度以减少噪音输出。 可能的值介于 0 和 254 之间。128
是最安静 (因此也是最慢) 的设置，而 254 是最快 (也是最响亮) 的设置。一些驱动器只有两个级别 (安静 / 快速)，而其他驱动器可能有 128
到 254 之间的不同级别。 目前，大多数驱动器只支持 3 个选项，关闭、安静和快速。 目前已分别为它们分配了值 0、128 和
254，但如果发生这种变化，则已为 future 扩展合并了整数空间。
.TP 
\fI\-n\fP
在驱动程序中获取或设置 "ignore_write_errors" 标志。 不要在没有先了解驱动程序源代码的情况下玩这个。
.TP 
\fI\-N\fP
Get/set 最大可见扇区数，也称为 \fBHost Protected Area\fP 设置。 如果没有参数，\fB\-N\fP 显示当前设置，报告为两个值:
第一个给出当前最大扇区设置，第二个显示磁盘的原生 (real) 硬件限制。 这两个值之间的差异表示当前有多少磁盘扇区对操作系统隐藏，形式为 \fBHost Protected Area (HPA).\fP 此区域通常被计算机制造商用来保存诊断软件，或者最初提供的操作系统的副本用于恢复目的的系统。
另一种可能的用途是对 BIOS/system 隐藏一个非常大的磁盘的真实容量，BIOS/system 通常无法处理该大小的驱动器 (例如，大多数当前的
{2010} BIOS 无法处理大于 2TB 的驱动器，因此 HPA 可用于导致 3TB 驱动器将自身报告为 2TB 驱动器)。 要更改当前最大值
(非常危险，极有可能丢失数据)，应在 \fB\-N\fP 选项后立即提供一个新值 (在 base10 中)。 此值指定为扇区计数，而不是驱动器的 "max
sector address"。 驱动器具有在下一次硬件重置时丢失的临时 (volatile) 设置的概念，以及在重置和电源循环后仍然存在的更永久的
(non\-volatile) 值。 默认情况下，\fB\-N\fP 仅影响临时 (volatile) 设置。 要更改永久 (non\-volatile)
值，请在该值的第一位数字前添加一个前导 \fBp\fP 字符。 驱动器应该只允许每个会话进行一次永久更改。 在另一个永久性 \fB\-N\fP
操作成功之前，需要硬件重置 (或电源循环)。 请注意，如果其他软件同时访问磁盘，则任何设置此值的尝试都可能失败。
这是因为设置该值需要一对背靠背的驱动命令，但是没有办法阻止内核在它们之间插入一些其他命令。 因此，如果最初失败，请重试。
对于许多内核版本中的许多适配器类型，\fB\-N\fP 的内核支持是 buggy，因为有时会报告不正确 (太小) 的最大大小值。 从 2.6.27
内核开始，这似乎终于可以在大多数硬件上运行了。
.TP 
\fI\-\-offset\fP
在执行设备读取的 \fB\-t\fP 时序时偏移给定数量的 GiB (1024*1024*1024)。 许多机械驱动器的速度变化 (大约两倍)。
通常最大值出现在开头，但并非总是如此。 无论偏移如何，固态驱动器 (SSDs) 都应显示相似的时序。
.TP 
\fI\-p\fP
尝试为指定的 PIO 模式重新编程集成开发环境接口芯片组，或尝试自动调整驱动器支持的 "best" PIO 模式。 只有少数 "known"
芯片组的内核支持此特性即便如此，这种支持充其量也是不确定的。 某些集成开发环境芯片组无法更改单个驱动器的 PIO
模式，在这种情况下，此选项可能会导致设置 \fIboth\fP 驱动器的 PIO 模式。 许多集成开发环境芯片组支持比标准的六种 (0 到 5) PIO
模式更少或更多的模式，因此实际实现的确切速度设置将因 chipset/driver 的复杂性而异。 \fIUse with extreme caution!\fP 此特性包括对粗心者的零保护，不成功的结果可能会导致 \fIsevere filesystem corruption!\fP
.TP 
\fI\-P\fP
为驱动器的内部预取机制设置最大扇区数。 并非所有驱动器都支持此特性从 ATA\-4 开始，它已从官方规范中弃用。
.TP 
\fI\-\-prefer\-ata12\fP
使用 SAT (SCSI ATA 转换) 协议时，hdparm 通常更喜欢尽可能使用 16 字节的命令格式。 但是某些 USB 驱动器外壳无法正确处理
16 字节命令。 此选项可用于强制对此类驱动器使用较小的 12 字节命令格式。 hdparm 仍将恢复为 16 字节命令，以处理 12
字节格式无法完成的操作 (例如，超过 28 位的扇区访问)。
.TP 
\fI\-q\fP
安静地处理下一个选项，抑制正常输出 (但不是错误消息)。 这对于减少从系统启动脚本运行时的屏幕混乱很有用。 不适用于 \fB\-i\fP 或 \fB\-v\fP 或
\fB\-t\fP 或 \fB\-T\fP 选项。
.TP 
\fI\-Q\fP
获取或设置设备的命令 queue_depth (如果硬件支持)。 这仅适用于 2.6.xx (或更高版本) 内核，并且仅适用于支持更改
queue_depth 的设备和驱动程序组合。 对于 SATA 磁盘，这是 Native Command Queuing (NCQ) 队列深度。
.TP 
\fI\-r\fP
Get/set 设备的只读标志。 设置时，Linux 不允许对设备进行写操作。
.TP 
\fI\-R\fP
Get/set 写 \- 读 \- 验证特性如果驱动器支持的话。 用法: \fB\-R0\fP (disable) 或 \fB\-R1\fP (enable)。
此特性旨在让驱动器固件自动回读软件写入的任何数据，以验证数据是否已成功写入。 这通常是矫枉过正，并且可以将磁盘写入速度减慢两倍 (或更多)。
.TP 
\fI\-\-read\-sector\fP
从指定的扇区号读取，并将十六进制的内容转储到标准输出。 扇区号必须在此选项后给出 (base10)。 hdparm 将为指定扇区发出底层读取
(完全绕过通常的块层 read/write 机制)。 这可用于明确检查给定扇区是否损坏 (介质错误) (通过通常的机制这样做有时会产生误报)。
.TP 
\fI\-\-repair\-sector\fP
这是 \fB\-\-write\-sector\fP 选项的别名。 非常危险。
.TP 
\fI\-s\fP
Enable/disable 开机待机特性如果驱动器支持的话。 \fBVERY DANGEROUS.\fP 不要使用，除非您完全确定系统 BIOS (或固件)
和操作系统内核 (Linux >= 2.6.22) 支持探测使用此特性的驱动器。 启用后，驱动器将在 \fBstandby\fP
模式下上电，以允许控制器对设备的旋转进行排序，从而减少多个驱动器共享电源时的瞬时电流消耗负担。 主要用于大型 RAID 设置。
此特性通常被禁用，驱动器在 \fBactive\fP 模式下上电 (参见上面的 \-C)。 请注意，驱动器也可能允许通过跳线启用此，特性。 某些 SATA
驱动器支持通过 SATA 电源连接器的引脚 11 控制此，特性。在这些情况下，此命令可能不受支持或可能无效。
.TP 
\fI\-S\fP
将驱动器置于空闲 (low\-power) 模式，同时为驱动器设置待机 (spindown) 超时。
驱动器使用此超时值来确定在关闭主轴电机以节省电量之前要等待多长时间 (没有磁盘活动)。 在这种情况下，驱动器可能需要长达 30
秒的时间来响应后续的磁盘访问，尽管大多数驱动器要快得多。 超时值的编码有些特殊。 零值表示 "timeouts are disabled":
设备不会自动进入待机模式。 从 1 到 240 的值指定 5 秒的倍数，产生 5 秒到 20 分钟的超时。 从 241 到 251 的值指定从 1 到
11 个单位的 30 分钟，产生从 30 分钟到 5.5 小时的超时。 值 252 表示超时 21 分钟。值 253 将供应商定义的超时期限设置为 8
到 12 小时，而值 254 是保留值。 255 被解释为 21 分钟加 15 秒。 请注意，一些较旧的驱动器可能对这些值有非常不同的解释。
.TP 
\fI\-\-set\-sector\-size\fP
对于支持重新配置逻辑扇区大小的驱动器，此标志可用于以字节为单位指定新的所需扇区大小。 \fBVERY DANGEROUS. This most likely will scramble all data on the drive.\fP 指定的大小必须是 512、520、528、4096、4160
或 4224 之一。 很少有驱动器支持 512 和 4096 以外的值。 例如。\fBhdparm \-\-set\-sector\-size 4096 /dev/sdb\fP
.TP 
\fI\-t\fP
执行设备读取时序以进行基准测试和比较。 为了获得有意义的结果，应该在至少有几兆空闲内存的非活动系统 (没有其他活动进程) 上重复此操作 2\-3 次。
这显示了在没有任何事先缓存数据的情况下通过缓冲区缓存读取到磁盘的速度。 此测量值表明驱动器在 Linux
下可以维持顺序数据读取的速度有多快，而没有任何文件系统开销。 为确保准确测量，在使用 BLKFLSBUF ioctl 处理 \fI\-t\fP
期间刷新缓冲区缓存。
.TP 
\fI\-T\fP
执行缓存读取计时以进行基准测试和比较。 为了获得有意义的结果，应该在至少有几兆空闲内存的非活动系统 (没有其他活动进程) 上重复此操作 2\-3 次。
这显示了在没有磁盘访问的情况下直接从 Linux 缓冲区高速缓存读取的速度。 这种测量本质上是对被测系统的处理器、高速缓存和内存的吞吐量的指示。
.TP 
\fI\-\-trim\-sector\-ranges\fP
对于固态驱动器 (SSDs)。 此选项需要一个或多个扇区范围对紧接在选项之后: 一个 LBA 起始地址、一个冒号和一个扇区计数 (最大
65535)，中间没有空格。告诉驱动器固件丢弃不需要的数据扇区，销毁其中可能存在的任何数据。 这使得这些扇区可供固件的垃圾集合机制使用
immediate，以改进闪存介质磨损均衡的调度。 此选项需要一个或多个扇区范围对紧接在选项之后: 一个 LBA 起始地址、一个冒号和一个扇区计数
(最大 65535)，中间没有空格。 \fBEXCEPTIONALLY DANGEROUS. DO NOT USE THIS OPTION!!\fP
.IP
例如 \fBhdparm \-\-trim\-sector\-ranges 1000:4 7894:16 /dev/sdz\fP
.TP 
\fI\-\-trim\-sector\-ranges\-stdin\fP
与上面的 \fB\-\-trim\-sector\-ranges\fP 相同，除了 lba:count 对列表是从 stdin 读取的，而不是在命令行上指定的。
这可用于避免命令行过长的问题。 它还允许将更多扇区范围批处理为驱动器的单个命令，直到当前配置的传输限制 (max_sectors_kb)。
.TP 
\fI\-u\fP
Get/set 驱动器的中断取消屏蔽标志。 \fB1\fP 的设置允许驱动程序在处理磁盘中断期间取消屏蔽其他中断，这大大提高了 Linux 的响应能力并消除了
"serial port overrun" 错误。 \fBUse this feature with caution:\fP 一些
drive/controller 组合不能容忍启用此特性时可能增加的 I/O 延迟，导致 \fBmassive filesystem corruption.\fP 特别是，\fBCMD\-640B\fP 和 \fBRZ1000\fP (E) 集成开发环境接口可以是 \fBunreliable\fP
(由于硬件缺陷) 当此选项与 2.0.13 之前的内核版本。 禁用这些接口的 \fBIDE prefetch\fP 特性 (通常是 BIOS/CMOS 设置)
可以安全地解决问题，以便与早期内核一起使用。
.TP 
\fI\-v\fP
显示一些基本设置，类似于 \-acdgkmur 为集成开发环境。 这也是未指定选项时的默认行为。
.TP 
\fI\-V\fP
显示程序版本并立即退出。
.TP 
\fI\-\-verbose\fP
显示来自某些命令的额外诊断。
.TP 
\fI\-w\fP
执行设备重置 \fB(DANGEROUS).\fP 不要使用此选项。 它存在于不太可能的情况下，否则可能需要重新启动才能使混乱的驱动器恢复到可用状态。
.TP 
\fI\-\-write\-sector\fP
将零写入指定的扇区号。 非常危险。 扇区号必须在此选项后给出 (base10)。 hdparm 将向指定扇区发出底层写入 (完全绕过通常的块层
read/write 机制)。 这可用于强制驱动器修复坏扇区 (介质错误)。
.TP 
\fI\-W\fP
Get/set IDE/SATA 驱动器的写入缓存，特性。
.TP 
\fI\-X\fP
为 (E) IDE/ATA 驱动器设置集成开发环境传输模式。 当在支持的接口芯片组上启用 DMA to/from 驱动器时，这通常与 \fB\-d1\fP
结合使用，其中 \fB\-X mdma2\fP 用于选择多字 DMA mode2 传输，\fB\-X sdma1\fP 用于选择简单模式 1 DMA 传输。 对于支持
UltraDMA 突发时序的系统，\fB\-X udma2\fP 用于选择 UltraDMA mode2 传输 (您需要预先为 UltraDMA 准备芯片组)。
除此之外，此选项的使用是 \fBseldom necessary\fP，因为 most/all 现代集成开发环境驱动器在开机时默认为其最快的 PIO
传输模式。 摆弄这个既不必要又冒险。 在支持备用传输模式的驱动器上，\fB\-X\fP 可用于切换驱动器的模式或者数据损坏。 \fIUse this with extreme caution!\fP 对于 Linux 使用的 PIO (编程 Input/Output) 传输模式，该值只是所需的 PIO 模式编号加
8。 因此，值 09 设置 PIO mode1，10 启用 PIO mode2，11 选择 PIO mode3。 设置 00 恢复驱动器的
"default" PIO 模式，01 禁用 IORDY。 对于多字 DMA，使用的值是所需的 DMA 模式编号加上 32。 对于
UltraDMA，该值是所需的 UltraDMA 模式编号加上 64。
.TP 
\fI\-y\fP
强制集成开发环境驱动器立即进入低功耗 \fBstandby\fP 模式，通常会导致其降速。 可以使用 \fB\-C\fP 选项检查当前功耗模式状态。
.TP 
\fI\-Y\fP
强制集成开发环境驱动器立即进入最低功耗 \fBsleep\fP 模式，导致其完全关闭。 在可以再次访问驱动器之前需要进行硬或软复位 (Linux
集成开发环境驱动程序将自动处理发出需要的复位 if/when)。 可以使用 \fB\-C\fP 选项检查当前功耗模式状态。
.TP 
\fI\-z\fP
强制内核重新读取指定 device(s) 的分区表。
.TP 
\fI\-Z\fP
禁用某些 Seagate 硬盘 (ST3xxx 型号? ) 的自动节电功能，以防止它们在不方便的时候 idling/spinning\-down。
.TP 
.SH "ATA Security Feature Set"
.PP
这些开关是用于试验的 \fBDANGEROUS\fP，可能不适用于某些内核。 这些开关是用于试验的 \fBDANGEROUS\fP，可能不适用于某些内核。
.TP 
\fI\-\-security\-help\fP
显示所有 \-\-security\-* 选项的简洁使用信息。
.TP 
\fI\-\-security\-freeze\fP
冻结驱动器的安全设置。 在下次上电复位之前，驱动器不接受任何安全命令。 将此号码与 \-\-security\-unlock
结合使用，以保护驱动器免受任何设置新密码的尝试。也可以单独使用。 命令行上不允许使用此选项的其他选项。
.TP 
\fI\-\-security\-prompt\-for\-password\fP
提示输入 \-\-security PWD 而不是从命令行获取参数。 这避免了密码在执行期间出现在 shell 历史记录或
/proc/self/cmdline 中。
.TP 
\fI\-\-security\-unlock PWD\fP
使用密码 PWD 解锁驱动器。 密码以 ASCII 字符串形式给出，并用 NUL 填充以达到 32 字节。 使用 \-\-user\-master
开关选择适用的驱动器密码 (默认为 "user" 密码)。 命令行上不允许使用此选项的其他选项。
.TP 
\fI\-\-security\-set\-pass PWD\fP
锁定驱动器，使用密码 PWD (设置密码) \fB(DANGEROUS).\fP 密码以 ASCII 字符串形式给出，并用 NUL 填充以达到 32 字节。
使用特殊密码 \fBNULL\fP 设置空密码。 使用 \-\-user\-master 开关 (默认为 "user" 密码) 选择适用的驱动器密码，使用
\-\-security\-mode 开关选择适用的安全模式。 命令行上不允许使用此选项的其他选项。
.TP 
\fI\-\-security\-disable PWD\fP
使用密码 PWD 禁用驱动器锁定。 密码以 ASCII 字符串形式给出，并用 NUL 填充以达到 32 字节。 使用 \-\-user\-master
开关选择适用的驱动器密码 (默认为 "user" 密码)。 命令行上不允许使用此选项的其他选项。
.TP 
\fI\-\-security\-erase PWD\fP
擦除 (locked) 驱动器，使用密码 PWD \fB(DANGEROUS).\fP 密码以 ASCII 字符串形式给出，并用 NUL 填充以达到 32
字节。 使用特殊密码 \fBNULL\fP 表示空密码。 使用 \-\-user\-master 开关选择适用的驱动器密码 (默认为 "user" 密码)。
命令行上不允许使用此选项的其他选项。
.TP 
\fI\-\-security\-erase\-enhanced PWD\fP
增强擦除 (locked) 驱动器，使用密码 PWD \fB(DANGEROUS).\fP 密码以 ASCII 字符串形式给出，并用 NUL 填充以达到 32
字节。 使用 \-\-user\-master 开关选择适用的驱动器密码 (默认为 "user" 密码)。 命令行上不允许使用此选项的其他选项。
.TP 
\fI\-\-user\-master USER\fP
指定要选择的密码 (user/master)。
指定要选择的密码 (user/master)。
仅与 \-\-security\-unlock、\-\-security\-set\-pass 结合使用时有用，
\-\-security\-disable、\-\-security\-erase 或 \-\-security\-erase\-enhanced。
        您的用户密码
        m 主密码

.TP 
\fI\-\-security\-mode MODE\fP
指定要设置的安全模式 (high/maximum)。
指定要设置的安全模式 (high/maximum)。
仅与 \-\-security\-set\-pass 结合使用。
        h 高安全性
        m 最大安全性

\fBTHIS FEATURE IS EXPERIMENTAL AND NOT WELL TESTED. USE AT YOUR OWN RISK.\fP
.SH FILES
/etc/hdparm.conf
.SH BUGS
如上所述，首先应谨慎使用 \fB\-m sectcount\fP 和 \fB\-u 1\fP 选项，最好在只读文件系统上使用。 大多数驱动器都适用于这些特性但一些
drive/controller 组合并非 100% 兼容。 可能会导致文件系统损坏。 在实验之前备份所有内容!
.PP
某些选项 (例如 SCSI 的 \-r) 可能不适用于旧内核，因为不支持必要的 ioctl ()。
.PP
尽管此实用程序主要用于 SATA/IDE 硬盘设备，但其中的几个选项对于 SCSI 硬盘设备和具有 XT 接口的 MFM/RLL 硬盘也有效 (并允许)
使用。
.PP
直到 2.6.12 (可能更晚) 的 Linux 内核不会优雅地处理安全解锁和禁用命令，并且会出现段错误，在某些情况下甚至会出现
panic。然而，安全命令可能确实已由驱动器执行。这种糟糕的内核行为使得 PIO 数据安全命令目前相当无用。
.PP
请注意，"security erase" 和 "security disable" 命令已作为两个连续的 PIO
数据命令实现，并且在锁定的驱动器上不会成功，因为第二个命令不会在段错误后发出。
请参见代码以获取有关如何修补它以解决此问题的提示。尽管存在段错误，但通常仍然可以连续运行两个 hdparm 实例并以这种方式发出两个必要的命令。
.SH AUTHOR
\fBhdparm\fP 由 Mark Lord <mlord@pobox.com> 编写，他是 Linux 的 (E)
集成开发环境驱动程序的原始主要开发者和维护者，以及 libata 子系统的当前贡献者，以及许多 netfolk 的建议和补丁。
.PP
禁用希捷自动节电代码由 Tomi Leppikangas(tomilepp@paju.oulu.fi) 提供。
.PP
Benjamin Benz 的安全冻结命令，2005 年。
.PP
PIO 数据输出安全命令，Leonard den Ottolander，2005 年。 Benjamin Benz 和其他人的一些其他部分。
.SH "SEE ALSO"
\fBhttp://www.t13.org/\fP 技术委员会 T13 AT 附件 (ATA/ATAPI) 接口。
.PP
\fBhttp://www.serialata.org/\fP 串行 ATA 国际组织。
.PP
\fBhttp://www.compactflash.org/\fP CompactFlash 协会。
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
