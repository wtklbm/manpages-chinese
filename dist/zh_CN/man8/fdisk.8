.\" -*- coding: UTF-8 -*-
'\" t
.\"     Title: fdisk
.\"    Author: [see the "AUTHOR(S)" section]
.\" Generator: Asciidoctor 2.0.15
.\"      Date: 2022-05-11
.\"    Manual: System Administration
.\"    Source: util-linux 2.38.1
.\"  Language: English
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH FDISK 8 2022\-05\-11 "util\-linux 2.38.1" "System Administration"
.ie  \n(.g .ds Aq \(aq
.el       .ds Aq '
.ss \n[.ss] 0
.nh
.ad l
.de  URL
\fI\\$2\fP <\\$1>\\$3
..
.als MTO URL
.if  \n[.g] \{\
.  mso www.tmac
.  am URL
.    ad l
.  .
.  am MTO
.    ad l
.  .
.  LINKSTYLE blue R < >
.\}
.SH NAME
fdisk \- 操作磁盘分区表
.SH SYNOPSIS
.sp
\fBfdisk\fP [options] \fIdevice\fP
.sp
\fBfdisk\fP \fB\-l\fP [\fIdevice\fP...]
.SH DESCRIPTION
.sp
\fBfdisk\fP 是一个用于创建和操作分区表的对话框驱动程序。它理解 GPT、MBR、Sun、SGI 和 BSD 分区表。
.sp
块设备可以划分为一个或多个逻辑磁盘，称为 \fIpartitions\fP。此分区记录在 \fIpartition table\fP 中，通常位于磁盘的 0
扇区。(在 BSD 世界中，人们谈论 `disk slices\(aq 和`disklabel\(aq.)
.sp
默认情况下，所有分区均由设备 I/O 限制 (拓扑) 驱动。\fBfdisk\fP 能够针对 4K 扇区大小优化磁盘布局，并在现代设备上为 MBR 和 GPT
使用对齐偏移。遵循 \fBfdisk\fP\(aqs 默认值始终是一个好主意，因为默认值 (例如，第一个和最后一个分区扇区) 和
+/\-<size>{M,G,...} 符号指定的分区大小始终根据设备属性对齐。
.sp
CHS (Cylinder\-Head\-Sector) 寻址已弃用，默认情况下不使用。请不要遵循旧文章和建议以及针对 SSD 或 4K 扇区设备的
\fBfdisk \-S <n> \-H <n>\fP 建议。
.sp
请注意，\fBpartx\fP(8) 为打印磁盘布局的脚本提供了丰富的接口，\fBfdisk\fP 主要是为人类设计的。不保证 \fBfdisk\fP
输出的向后兼容性。输入 (命令) 应该始终向后兼容。
.SH OPTIONS
.sp
\fB\-b\fP, \fB\-\-sector\-size\fP \fIsectorsize\fP
.RS 4
指定磁盘的扇区大小。有效值为 512、1024、2048 和 4096。(最近的内核知道扇区大小。仅在旧内核上使用此选项或覆盖内核 \ (cqs
想法。) 自 util\-linux\-2.17 以来，\fBfdisk\fP 区分逻辑和物理扇区大小。此选项将两个扇区大小更改为 \fIsectorsize\fP。
.RE
.sp
\fB\-B\fP, \fB\-\-protect\-boot\fP
.RS 4
创建新磁盘标签时，不要 \(cqt 擦除第一个磁盘扇区的开头。GPT 和 MBR 支持此，特性。
.RE
.sp
\fB\-c\fP, \fB\-\-compatibility\fP[=\fImode\fP]
.RS 4
指定兼容模式，\(aqdos\(aq 或 \(aqnondos\(aq. 默认为非 DOS 模式。为了向后兼容，可以使用不带 \fImode\fP 参数
\(em 的选项，然后使用默认值。请注意，可选的 \fImode\fP 参数不能与 \fB\-c\fP 选项用空格分隔，正确的形式是例如 \fB\-c\fP=\fIdos\fP。
.RE
.sp
\fB\-h\fP, \fB\-\-help\fP
.RS 4
显示帮助文本并退出。
.RE
.sp
\fB\-V\fP, \fB\-\-version\fP
.RS 4
打印版本并退出。
.RE
.sp
\fB\-L\fP, \fB\-\-color\fP[=\fIwhen\fP]
.RS 4
对输出进行着色。可选参数 \fIwhen\fP 可以是 \fBauto\fP、\fBnever\fP 或 \fBalways\fP。如果省略 \fIwhen\fP 参数，则默认为
\fBauto\fP。可以禁用颜色; 对于当前的内置默认值，请参见 \fB\-\-help\fP 输出。另请参见 \fBCOLORS\fP 部分。
.RE
.sp
\fB\-l\fP, \fB\-\-list\fP
.RS 4
列出指定设备的分区表，然后退出。
.sp
如果没有给出设备，则使用 \fI/proc/partitions\fP 中提到的设备 (如果此文件存在)。设备始终按照它们在命令行中指定的顺序列出，或者按照
\fI/proc/partitions\fP 中列出的内核顺序列出。
.RE
.sp
\fB\-x\fP, \fB\-\-list\-details\fP
.RS 4
与 \fB\-\-list\fP 类似，但提供了更多详细信息。
.RE
.sp
\fB\-\-lock\fP[=\fImode\fP]
.RS 4
对其操作的设备或文件使用独占 BSD 锁。可选参数 \fImode\fP 可以是 \fByes\fP、\fBno\fP (或 1 和 0) 或
\fBnonblock\fP。如果省略 \fImode\fP 参数，则默认为 \fByes\fP。此选项会覆盖环境变量
\fB$LOCK_BLOCK_DEVICE\fP。默认情况下根本不使用任何锁，但建议使用它 \(cqs 以避免与 \fBsystemd\-udevd\fP(8)
或其他工具发生冲突。
.RE
.sp
\fB\-n\fP, \fB\-\-noauto\-pt\fP
.RS 4
Don\(cqt 自动在空设备上创建默认分区表。分区表必须由用户显式创建 (通过像 \(aqo\(aq,\(aqg\(aq, etc.) 这样的命令。
.RE
.sp
\fB\-o\fP, \fB\-\-output\fP \fIlist\fP
.RS 4
指定要打印的输出列。使用 \fB\-\-help\fP 获取所有受支持列的列表。
.sp
如果 \fIlist\fP 以 \fI+list\fP 格式指定 (例如，\fB\-o +UUID\fP).
.RE
.sp
\fB\-s\fP, \fB\-\-getsz\fP
.RS 4
打印每个给定块设备的 512 字节扇区的大小。此选项已弃用，取而代之的是 \fBblockdev\fP(8)。
.RE
.sp
\fB\-t\fP, \fB\-\-type\fP \fItype\fP
.RS 4
仅启用对指定 \fItype\fP 的磁盘标签的支持，并禁用对所有其他类型的支持。
.RE
.sp
\fB\-u\fP, \fB\-\-units\fP[=\fIunit\fP]
.RS 4
列出分区表时，在 \(aqsectors\(aq 或 \(aqcylinders\(aq. 默认是按扇区显示大小。为了向后兼容，可以使用不带
\fIunit\fP 参数 \(em 的选项，然后使用默认值。请注意，可选的 \fIunit\fP 参数不能与 \fB\-u\fP 选项用空格分隔，正确的形式是例如
\(aq\fB\-u=\fP\fIcylinders\fP\(aq。
.RE
.sp
\fB\-C\fP, \fB\-\-cylinders\fP \fInumber\fP
.RS 4
指定磁盘柱面的 \fInumber\fP。我不知道为什么有人会想要这样做。
.RE
.sp
\fB\-H\fP, \fB\-\-heads\fP \fInumber\fP
.RS 4
指定磁盘的磁头数。(当然不是物理数字，而是用于分区表的数字。) 合理的值是 255 和 16。
.RE
.sp
\fB\-S\fP, \fB\-\-sectors\fP \fInumber\fP
.RS 4
指定磁盘每个磁道的扇区数。(当然不是物理数字，而是用于分区表的数字。) 一个合理的值是 63。
.RE
.sp
\fB\-w\fP, \fB\-\-wipe\fP \fIwhen\fP
.RS 4
从设备中擦除文件系统、RAID 和分区表签名，以避免可能的冲突。参数 \fIwhen\fP 可以是 \fBauto\fP、\fBnever\fP 或
\fBalways\fP。如果未给出此选项，则默认为
\fBauto\fP，在这种情况下，只有在交互模式下才会擦除签名。在所有情况下，检测到的签名都会在创建新分区表之前通过警告消息进行报告。另请参见
\fBwipefs\fP(8) 命令。
.RE
.sp
\fB\-W\fP, \fB\-\-wipe\-partitions\fP \fIwhen\fP
.RS 4
从新创建的分区中擦除文件系统、RAID 和分区表签名，以避免可能的冲突。参数 \fIwhen\fP 可以是 \fBauto\fP、\fBnever\fP 或
\fBalways\fP。当没有给出这个选项时，默认是
\fBauto\fP，在这种情况下，只有在交互模式下并且在用户确认后才会擦除签名。在所有情况下，检测到的签名都会在创建新分区之前通过警告消息进行报告。另请参见
\fBwipefs\fP(8) 命令。
.RE
.sp
\fB\-V\fP, \fB\-\-version\fP
.RS 4
显示版本信息并退出。
.RE
.SH DEVICES
.sp
\fIdevice\fP 通常是 \fI/dev/sda\fP、\fI/dev/sdb\fP 左右。设备名称是指整个磁盘。没有 libata (Linux
内核中使用的库，用于支持 ATA 主机控制器和设备) 的旧系统使集成开发环境和 SCSI 磁盘有所不同。在这种情况下，设备名称将是
\fI/dev/hd*\fP (IDE) 或 \fI/dev/sd*\fP (SCSI)。
.sp
\fIpartition\fP 是设备名称后跟分区号。例如，\fI/dev/sda1\fP 是系统中第一个硬盘上的第一个分区。另请参见 Linux 内核文档
(\fIDocumentation/admin\-guide/devices.txt\fP 文件)。
.SH SIZES
.sp
"last sector" 对话框接受由扇区数或 +/\-<size>{K,B,M,G,...} 符号指定的分区大小。
.sp
如果大小以 \(aq+\(aq 为前缀，则它被解释为相对于分区第一个扇区。如果大小以 \(aq\-\(aq 为前缀，则它被解释为相对于上限
(分区的最后可用扇区)。
.sp
在以字节为单位指定大小的情况下，对于 GiB、TiB、PiB、EiB、ZiB 和 YiB，数字后可以跟乘法后缀
KiB=1024、MiB=1024*1024 等等。"iB" 是可选的，例如 "K" 与 "KiB" 含义相同。
.sp
相对大小始终根据设备 I/O 限制对齐。建议使用 +/\-<size>{K,B,M,G,...} 表示法。
.sp
为了向后兼容，\fBfdisk\fP 还接受 GB、TB、PB、EB、ZB 和 YB 的后缀 KB=1000、MB=1000*1000 等。这些 10^N
后缀已弃用。
.SH "SCRIPT FILES"
.sp
\fBfdisk\fP 允许读取 (通过 \(aqI\(aq 命令) \fBsfdisk\fP(8)
兼容的脚本文件。该脚本应用于内存分区表，然后可以在将其写入设备之前修改分区表。
.sp
反之亦然，可以通过命令 \(aqO\(aq.
.sp
脚本文件在 \fBcfdisk\fP(8)、\fBsfdisk\fP(8)、\fBfdisk\fP 和其他 libfdisk 应用程序之间兼容。有关详细信息，请参见
\fBsfdisk\fP(8)。
.SH "DISK LABELS"
.sp
\fBGPT (GUID Partition Table)\fP
.RS 4
GPT 是分区表布局的现代标准。GPT 使用 64 位逻辑块地址、校验和、UUID 和分区名称，并且分区数量不受限制
(尽管在许多分区工具中，分区数量通常限制为 128 个)。
.sp
请注意，第一个扇区在 GPT 规范中仍保留给 \fBprotective MBR\fP。它可以防止 MBR\-only 分区工具错误识别和覆盖 GPT 磁盘。
.sp
GPT 始终是比 MBR 更好的选择，尤其是在具有 UEFI 引导加载程序的现代硬件上。
.RE
.sp
\fBDOS\-type (MBR)\fP
.RS 4
DOS 类型的分区表可以描述无限数量的分区。在扇区 0 中有 4 个分区的描述空间 (称为 `primary\(aq)。其中之一可能是扩展分区;
这是一个包含逻辑分区的 box，其描述符位于扇区链表中，每个扇区位于相应的逻辑分区之前。四个主分区，无论是否存在，都获得编号 1\-4。逻辑分区编号从
5.
.sp
在 DOS 类型的分区表中，每个分区的起始偏移量和大小以两种方式存储: 绝对扇区数 (以 32 位给出) 和
\fBCylinders/Heads/Sectors\fP 三元组 (以 10+8+6 位给出) . 前者没问题 \(em 有 512 字节的扇区，这将工作到
2 TB。后者有两个问题。首先，只有当每个磁道的磁头数和扇区数已知时，才能填充这些 C/S 字段。其次，即使我们知道这些数字应该是什么，可用的 24
位也不够。DOS 只使用 C/S，Windows 两者都用，Linux 从不使用 C/S。\fBC/H/S addressing is deprecated\fP 和某些较新的 \fBfdisk\fP 版本可能不受支持。
.sp
\fBPlease, read the DOS\-mode section if you want DOS\-compatible partitions.\fP
\fBfdisk\fP 默认不关心柱面边界。
.RE
.sp
\fBBSD/Sun\-type\fP
.RS 4
一个 BSD/Sun 磁盘标签可以描述 8 个分区，其中第三个分区应该是一个 `整个磁盘`\(aq 分区。不要在柱面 0 启动实际使用其第一个扇区的分区
(如交换分区)，因为这将销毁磁盘标签。请注意，\fBBSD label\fP 通常嵌套在 DOS 分区中。
.RE
.sp
\fBIRIX/SGI\-type\fP
.RS 4
一个 IRIX/SGI 磁盘标签可以描述 16 个分区，其中第 11 个应该是一个完整的 `volume\(aq 分区，而第 9
个应该被标记为`volume
header\(aq.
卷标头还将覆盖分区表，即它从块零开始，默认情况下扩展到五个柱面。卷标头中的剩余空间可由标头目录条目使用。任何分区都不能与卷标头重叠。也不要改变它的类型或在它上面创建一些文件系统，因为您会丢失分区表。只有在
IRIX/SGI 机器上使用 Linux 或在 Linux 下使用 IRIX/SGI 磁盘时才使用这种类型的标签。
.sp
当分区表已更新时，在退出之前执行 \fBsync\fP(2) 和 ioctl(BLKRRPART) (从磁盘重新读取分区表)。
.RE
.SH "DOS MODE AND DOS 6.X WARNING"
.sp
\fBNote that all this is deprecated. You don\(cqt have to care about things like\fP \fBgeometry and cylinders on modern operating systems. If you really want\fP \fBDOS\-compatible partitioning then you have to enable DOS mode and cylinder\fP \fBunits by using the \(aq\-c=dos \-u=cylinders\(aq fdisk command\-line options.\fP
.sp
DOS 6.x FORMAT 命令在分区数据区的第一个扇区寻找一些信息，并认为这些信息比分区表中的信息更可靠。DOS FORMAT 期望 DOS
FDISK 在大小发生变化时清除分区数据区的前 512 个字节。即使给出 /U 标志，DOS FORMAT 也会查看这些额外信息 \(em 我们认为这是
DOS FORMAT 和 DOS FDISK 中的错误。
.sp
底线是，如果您使用 \fBfdisk\fP 或 \fBcfdisk\fP(8) 更改 DOS 分区表条目的大小，那么在使用 DOS FORMAT
格式化分区之前，您还必须使用该分区的 \fBdd\fP(1) 到 \fBzero the first 512 bytes\fP。例如，如果您使用 \fBfdisk\fP
为 \fI/dev/sda1\fP 创建 DOS 分区表条目，那么 (在退出 \fBfdisk\fP 并重新启动 Linux 以便分区表信息有效之后) 您将使用命令
\fBdd if=/dev/zero of=/dev/sda1 bs=512 count=1\fP 将分区的前 512 个字节归零.
.sp
\fBfdisk\fP 通常会自动获取磁盘几何信息。这不一定是物理磁盘几何 (事实上，现代磁盘并没有真正的物理几何，当然不是可以用简单的
Cylinders/Heads/Sectors 形式描述的东西)，但它是 MS\-DOS 使用的磁盘几何分区表。
.sp
通常默认情况下一切顺利，如果 Linux 是磁盘上的唯一系统，则没有问题。但是，如果磁盘必须与其他操作系统共享，通常最好让来自另一个操作系统的
\fBfdisk\fP 至少创建一个分区。当 Linux 启动时，它会查看分区表，并尝试推断 (fake) 与其他系统良好协作所需的几何结构。
.sp
每当在 DOS 模式下打印出分区表时，都会对分区表条目执行一致性检查。此检查验证物理和逻辑起点和终点是否相同，以及每个分区是否在柱面边界上开始和结束
(第一个分区除外)。
.sp
某些版本的 MS\-DOS 创建的第一个分区不是从柱面边界开始，而是从第一个柱面的扇区 2 开始。从柱面 1
开始的分区不能从柱面边界开始，但这不太可能造成困难，除非您的机器上有 OS/2。
.sp
为获得最佳结果，您应该始终使用特定于操作系统的分区表程序。例如，您应该使用 DOS FDISK 程序创建 DOS 分区，使用 Linux
\fBfdisk\fP 或 Linux \fBcfdisk\fP(8) 程序创建 Linux 分区。
.SH COLORS
.sp
输出着色由 \fBterminal\-colors.d\fP(5) 功能实现。 空文件可以禁用隐式着色
.RS 3
.ll -.6i
.sp
\fI/etc/terminal\-colors.d/fdisk.disable\fP
.br
.RE
.ll
.sp
对于 \fBfdisk\fP 命令或对于所有工具
.RS 3
.ll -.6i
.sp
\fI/etc/terminal\-colors.d/disable\fP
.br
.RE
.ll
.sp
用户特定的 \fI$XDG_CONFIG_HOME/terminal\-colors.d\fP 或
\fI$HOME/.config/terminal\-colors.d\fP 覆盖全局设置。
.sp
请注意，输出着色可能默认启用，在这种情况下，\fIterminal\-colors.d\fP 目录还不必存在。
.sp
\fBfdisk\fP 支持的逻辑颜色名称是:
.sp
\fBheader\fP
.RS 4
输出表的标题。
.RE
.sp
\fBhelp\-title\fP
.RS 4
帮助部分标题。
.RE
.sp
\fBwarn\fP
.RS 4
警告信息。
.RE
.sp
\fBwelcome\fP
.RS 4
欢迎消息。
.RE
.SH ENVIRONMENT
.sp
\fBFDISK_DEBUG\fP=all
.RS 4
启用 fdisk 调试输出。
.RE
.sp
\fBLIBFDISK_DEBUG\fP=all
.RS 4
启用 libfdisk 调试输出。
.RE
.sp
\fBLIBBLKID_DEBUG\fP=all
.RS 4
启用 libblkid 调试输出。
.RE
.sp
\fBLIBSMARTCOLS_DEBUG\fP=all
.RS 4
启用 libsmartcols 调试输出。
.RE
.sp
\fBLIBSMARTCOLS_DEBUG_PADDING\fP=on
.RS 4
使用可见的填充字符。
.RE
.sp
\fBLOCK_BLOCK_DEVICE\fP=<mode>
.RS 4
使用独占 BSD 锁。模式为 "1" 或 "0"。有关详细信息，请参见 \fB\-\-lock\fP。
.RE
.SH AUTHORS
.sp
.MTO kzak\(atredhat.com "Karel Zak" ,
.MTO dave\(atgnu.org "Davidlohr Bueso" ""
.sp
原始版本由 Andries E. 布劳威尔，A. V. Le Blanc 等人。
.SH "SEE ALSO"
.sp
\fBcfdisk\fP(8), \fBmkfs\fP(8), \fBpartx\fP(8), \fBsfdisk\fP(8)
.SH "REPORTING BUGS"
.sp
对于错误报告，请使用问题跟踪器
.URL https://github.com/util\-linux/util\-linux/issues "" .
.SH AVAILABILITY
.sp
\fBfdisk\fP 命令是 util\-linux 包的一部分，可以从
.URL https://www.kernel.org/pub/linux/utils/util\-linux/ "Linux Kernel Archive" .
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
