.\" -*- coding: UTF-8 -*-
'\" t
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH SYSTEMD\-JOURNAL\-UPLOAD\&.SERVICE 8 "" "systemd 253" systemd\-journal\-upload.service
.ie  \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH NAME
systemd\-journal\-upload.service, systemd\-journal\-upload \- 通过网络发送日志消息
.SH SYNOPSIS
.PP
systemd\-journal\-upload\&.service
.HP \w'\fB/usr/lib/systemd/systemd\-journal\-upload\fR\ 'u
\fB/usr/lib/systemd/systemd\-journal\-upload\fP [OPTIONS...] [\-u/\-\-url=\fIURL\fP]
[SOURCES...]
.SH DESCRIPTION
.PP
\fBsystemd\-journal\-upload\fP 会将日记条目上传到用 \fB\-\-url=\fP\& 指定的
URL。该程序从一个或多个日志文件中读取日志条目，类似于
\fBjournalctl\fP(1)\&。除非受到下面指定的选项之一的限制，否则将上传程序正在运行的用户可访问的所有日志条目，然后程序将等待并在新条目可用时发送
\&。
.PP
\fBsystemd\-journal\-upload\fP 传输日志文件的原始内容并使用 HTTP 作为传输协议 \&。
.PP
systemd\-journal\-upload\&.service 是一个系统服务，它使用 \fBsystemd\-journal\-upload\fP
将日志条目上传到服务器 \&。它使用 \fBjournal\-upload.conf\fP(5)\& 中的配置。至少必须指定 \fIURL=\fP 选项 \&。
.SH OPTIONS
.PP
\fB\-u\fP, \fB\-\-url=\fP\fB[https://]\fP\fIURL\fP\fB[:\fP\fIPORT\fP\fB]\fP,
\fB\-\-url=\fP\fB[http://]\fP\fIURL\fP\fB[:\fP\fIPORT\fP\fB]\fP
.RS 4
上传到指定地址 \&。 \fIURL\fP 可以只指定主机名，也可以同时指定协议和主机名 \&。 \fBhttps\fP 是默认的 \&。端口号可以在冒号
(":") 后指定，否则默认使用 \fB19532\fP\&。
.RE
.PP
\fB\-\-system\fP, \fB\-\-user\fP
.RS 4
将上传条目限制为来自系统服务和内核的条目，或来自当前用户服务的条目 \&。这与 \fBjournalctl\fP(1)\& 的 \fB\-\-system\fP 和
\fB\-\-user\fP 选项具有相同的含义。如果两者均未指定，则上传所有可访问的条目 \&。
.RE
.PP
\fB\-m\fP, \fB\-\-merge\fP
.RS 4
上传从所有可用日志中交错的条目，包括其他机器 \&。这与 \fBjournalctl\fP(1)\& 的 \fB\-\-merge\fP 选项具有相同的含义。
.RE
.PP
\fB\-D\fP, \fB\-\-directory=\fP\fIDIR\fP
.RS 4
取目录路径为参数 \&。从指定的日志目录 \fIDIR\fP 而不是默认的运行时和系统日志路径上传条目 \&。这与 \fBjournalctl\fP(1)\& 的
\fB\-\-directory=\fP 选项具有相同的含义。
.RE
.PP
\fB\-\-file=\fP\fIGLOB\fP
.RS 4
将文件 glob 作为参数 \&。从匹配 \fIGLOB\fP 的指定日志文件上传条目，而不是默认的运行时和系统日志路径
\&。可以指定多次，在这种情况下文件将适当地交错 \&。这与 \fBjournalctl\fP(1)\& 的 \fB\-\-file=\fP 选项具有相同的含义。
.RE
.PP
\fB\-\-cursor=\fP
.RS 4
从传递的游标指定的日志位置上传条目 \&。这与 \fBjournalctl\fP(1)\& 的 \fB\-\-cursor=\fP 选项具有相同的含义。
.RE
.PP
\fB\-\-after\-cursor=\fP
.RS 4
从日志中的位置上传条目 \fIafter\fP 此游标指定的位置 \&。这与 \fBjournalctl\fP(1)\& 的 \fB\-\-after\-cursor=\fP
选项具有相同的含义。
.RE
.PP
\fB\-\-save\-state\fP[=\fIPATH\fP]
.RS 4
从日志中的位置上传条目 \fIafter\fP 游标指定的位置保存在文件中 \fIPATH\fP (默认为
/var/lib/systemd/journal\-upload/state) \&。成功上传条目后，使用该条目的游标更新此文件 \&。
.RE
.PP
\fB\-\-follow\fP[=\fIBOOL\fP]
.RS 4
如果设置为 yes，则 \fBsystemd\-journal\-upload\fP 等待输入 \&。
.RE
.PP
\fB\-\-key=\fP
.RS 4
采用 PEM 格式或 \fB\-\fP\& 的 SSL 密钥文件的路径。如果设置了 \fB\-\fP，则客户端证书身份验证检查将被禁用 \&。默认为
/etc/journal\-upload\&.pem\&。
.RE
.PP
\fB\-\-cert=\fP
.RS 4
采用 PEM 格式或 \fB\-\fP\& 的 SSL 证书文件的路径。如果设置了 \fB\-\fP，则客户端证书身份验证检查将被禁用 \&。默认为
/etc/journal\-upload\&.pem\&。
.RE
.PP
\fB\-\-trust=\fP
.RS 4
采用 PEM 格式或 \fB\-\fP/\fBall\fP\& 的 SSL CA 证书文件的路径。如果设置了 \fB\-\fP/\fBall\fP，则证书检查将被禁用 \&。默认为
/etc/trusted\&.pem\&。
.RE
.PP
\fB\-h\fP, \fB\-\-help\fP
.RS 4
打印一个简短的帮助文本并退出 \&。
.RE
.PP
\fB\-\-version\fP
.RS 4
打印一个短版本字符串并退出 \&。
.RE
.SH "EXIT STATUS"
.PP
成功返回 0; 否则，返回一个非零故障代码 \&。
.SH EXAMPLES
.PP
\fBExample\ \&1.\ \&Setting up certificates for authentication\fP
.PP
由可信机构签署的证书用于验证上传消息的服务器是否合法，反之亦然，客户端是否可信 \&。
.PP
可以使用 \fBopenssl\fP\& 生成一组合适的证书。请注意，出于安全原因，建议至少使用 2048 位密钥长度:
.sp
.if  n \{\
.RS 4
.\}
.nf
openssl req \-newkey rsa:2048 \-days 3650 \-x509 \-nodes \e
      \-out ca\&.pem \-keyout ca\&.key \-subj \*(Aq/CN=Certificate authority/\*(Aq

cat >ca\&.conf <<EOF
[ ca ]
default_ca = this

[ this ]
new_certs_dir = \&.
certificate = ca\&.pem
database = \&./index
private_key = ca\&.key
serial = \&./serial
default_days = 3650
default_md = default
policy = policy_anything

[ policy_anything ]
countryName             = optional
stateOrProvinceName     = optional
localityName            = optional
organizationName        = optional
organizationalUnitName  = optional
commonName              = supplied
emailAddress            = optional
EOF

touch index
echo 0001 >serial

SERVER=server
CLIENT=client

openssl req \-newkey rsa:2048 \-nodes \-out $SERVER\&.csr \-keyout $SERVER\&.key \-subj "/CN=$SERVER/"
openssl ca \-batch \-config ca\&.conf \-notext \-in $SERVER\&.csr \-out $SERVER\&.pem

openssl req \-newkey rsa:2048 \-nodes \-out $CLIENT\&.csr \-keyout $CLIENT\&.key \-subj "/CN=$CLIENT/"
openssl ca \-batch \-config ca\&.conf \-notext \-in $CLIENT\&.csr \-out $CLIENT\&.pem
.fi
.if  n \{\
.RE
.\}
.PP
生成的文件 ca\&.pem、server\&.pem、server\&.key
安装在服务器端，ca\&.pem、client\&.pem、client\&.key 安装在客户端 \&。这些文件的位置可以分别使用
/etc/systemd/journal\-remote\&.conf 和 /etc/systemd/journal\-upload\&.conf 中的
\fITrustedCertificateFile=\fP、\fIServerCertificateFile=\fP 和 \fIServerKeyFile=\fP 指定
\&。可以使用 \fBsystemd\-journal\-remote \-\-help\fP 和 \fBsystemd\-journal\-upload \-\-help\fP\& 查询默认位置。
.SH "SEE ALSO"
.PP
\fBjournal\-upload.conf\fP(5), \fBsystemd\-journal\-remote.service\fP(8),
\fBjournalctl\fP(1), \fBsystemd\-journald.service\fP(8),
\fBsystemd\-journal\-gatewayd.service\fP(8)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
