.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" Modified Sat Jul 24 21:42:42 1993 by Rik Faith <faith@cs.unc.edu>
.\" Modified Tue Oct 22 23:44:11 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" Modified Thu Jun  2 23:44:11 2016 by Nikos Mavrogiannopoulos <nmav@redhat.com>
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH assert 3 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
assert \- 如果断言为假则终止程序
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <assert.h>\fP
.PP
\fBvoid assert(scalar \fP\fIexpression\fP\fB);\fP
.fi
.SH DESCRIPTION
这个宏可以帮助程序员发现他们程序中的错误，或者通过会产生有限调试输出的崩溃来处理异常情况。
.PP
如果 \fIexpression\fP 为假 (即，比较等于零)，\fBassert\fP() 将错误消息打印到标准错误并通过调用 \fBabort\fP(3)
终止程序。 错误消息包括包含 \fBassert\fP() 调用的文件名和函数名、调用的源代码行号以及引用的文本; 就像是:
.PP
.in +4n
.EX
prog: some_file.c:16: some_func: 断言 `val == 0\[aq] 失败。
.EE
.in
.PP
如果在上次包含 \fI<assert.h>\fP 时定义了宏 \fBNDEBUG\fP，则宏 \fBassert\fP()
不会生成任何代码，因此什么也不做。 如果使用 \fBassert\fP() 检测错误条件，则不建议定义 \fBNDEBUG\fP，因为软件的行为可能不确定。
.SH "RETURN VALUE"
没有返回值。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBassert\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
POSIX.1\-2001, POSIX.1\-2008, C99.
.SH BUGS
\fBassert\fP() 被实现为宏; 如果测试的表达式有副作用，程序行为将根据是否定义 \fBNDEBUG\fP 而有所不同。 这可能会产生
Heisenbugs，当调试打开时它会消失。
.SH "SEE ALSO"
\fBabort\fP(3), \fBassert_perror\fP(3), \fBexit\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
