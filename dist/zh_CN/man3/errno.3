.\" -*- coding: UTF-8 -*-
.\" Copyright (c) 1996 Andries Brouwer (aeb@cwi.nl)
.\"
.\" SPDX-License-Identifier: GPL-2.0-or-later
.\"
.\" 5 Oct 2002, Modified by Michael Kerrisk <mtk.manpages@gmail.com>
.\" 	Updated for POSIX.1 2001
.\" 2004-12-17 Martin Schulze <joey@infodrom.org>, mtk
.\"	Removed errno declaration prototype, added notes
.\" 2006-02-09 Kurt Wall, mtk
.\"     Added non-POSIX errors
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH errno 3 2022\-12\-04 "Linux man\-pages 6.03" 
.SH NAME
errno \- 最后一个错误的编号
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
.\".PP
.\".BI "extern int " errno ;
\fB#include <errno.h>\fP
.fi
.SH DESCRIPTION
.\"
\fI<errno.h>\fP 头文件定义了整型变量 \fIerrno\fP，它由系统调用和一些库函数设置，在发生错误时指示出错的地方。
.SS errno
\fIerrno\fP 中的值仅在调用的返回值指示错误时才有意义 (即，来自大多数系统调用的 \-1; 来自大多数库函数的 \-1 或 NULL) ; \fIis\fP
后的一个函数允许改变 \fIerrno\fP。 任何系统调用或库函数都不会将 \fIerrno\fP 的值设置为零。
.PP
对于某些系统调用和库函数 (例如，\fBgetpriority\fP(2))，\-1 是有效的成功返回。 在这种情况下，可以通过在调用之前将 \fIerrno\fP
设置为零来区分成功返回和错误返回，然后，如果调用返回指示可能发生错误的状态，则检查 \fIerrno\fP 是否具有非零值.
.PP
.\"
\fIerrno\fP 由 ISO C 标准定义为 \fIint\fP 类型的可修改左值，不得显式声明; \fIerrno\fP 可能是宏。 \fIerrno\fP
是线程局部的; 在一个线程中设置它不会影响它在任何其他线程中的值。
.SS "Error numbers and names"
有效的错误号都是正数。 \fI<errno.h>\fP 头文件为 \fIerrno\fP 中可能出现的每个可能的错误编号定义了符号名称。
.PP
POSIX.1 指定的所有错误名称必须具有不同的值，但 \fBEAGAIN\fP 和 \fBEWOULDBLOCK\fP 除外，它们可能相同。 在 Linux
上，这两个在所有架构上具有相同的值。
.PP
对应于每个符号名称的错误编号在 UNIX 系统中各不相同，甚至在 Linux 上的不同体系结构中也不相同。 因此，数值不包括在下面的错误名称列表中。
\fBperror\fP(3) 和 \fBstrerror\fP(3) 函数可用于将这些名称转换为相应的文本错误消息。
.PP
在任何特定的 Linux 系统上，可以使用 \fBerrno\fP(1) 命令 (\fImoreutils\fP 包的一部分)
获得所有符号错误名称和相应错误编号的列表:
.PP
.in +4n
.EX
$ \fBerrno \-l\fP
EPERM 1 不允许操作
ENOENT 2 没有那个文件或目录
ESRCH 3 没有这样的过程
EINTR 4 中断的系统调用
EIO 5 Input/output 错误
\&...
.EE
.in
.PP
\fBerrno\fP(1) 命令还可用于查找单个错误编号和名称，并使用错误描述中的字符串搜索错误，如以下示例所示:
.PP
.in +4n
.EX
$ \fBerrno 2\fP
ENOENT 2 没有那个文件或目录
ENOENT 2 没有那个文件或目录
ESRCH 3 没有这样的过程
ESRCH 3 没有这样的过程
EACCES 13 权限被拒绝
.EE
.in
.\".PP
.\" POSIX.1 (2001 edition) lists the following symbolic error names.  Of
.\" these, \fBEDOM\fP and \fBERANGE\fP are in the ISO C standard.  ISO C
.\" Amendment 1 defines the additional error number \fBEILSEQ\fP for
.\" coding errors in multibyte or wide characters.
.\"
.SS "List of error names"
在下面的符号错误名称列表中，各种名称标记如下:
.TP 
\fIPOSIX.1\-2001\fP
该名称由 POSIX.1\-2001 定义，并在以后的 POSIX.1 版本中定义，除非另有说明。
.TP 
\fIPOSIX.1\-2008\fP
该名称在 POSIX.1\-2008 中定义，但在早期的 POSIX.1 标准中不存在。
.TP 
\fIC99\fP
名称由 C99 定义。
.PP
下面是在 Linux 上定义的符号错误名称的列表:
.TP  16
\fBE2BIG\fP
参数列表太长 (POSIX.1\-2001)。
.TP 
\fBEACCES\fP
权限被拒绝 (POSIX.1\-2001)。
.TP 
\fBEADDRINUSE\fP
地址已在使用 (POSIX.1\-2001)。
.TP 
\fBEADDRNOTAVAIL\fP
.\" EADV is only an error on HURD(?)
地址不可用 (POSIX.1\-2001)。
.TP 
\fBEAFNOSUPPORT\fP
地址系列不支持 (POSIX.1\-2001)。
.TP 
\fBEAGAIN\fP
资源暂时不可用 (可能与 \fBEWOULDBLOCK\fP) (POSIX.1\-2001) 的值相同。
.TP 
\fBEALREADY\fP
连接已在进行中 (POSIX.1\-2001)。
.TP 
\fBEBADE\fP
交换无效。
.TP 
\fBEBADF\fP
错误的文件描述符 (POSIX.1\-2001)。
.TP 
\fBEBADFD\fP
有危害状态中的文件描述符。
.TP 
\fBEBADMSG\fP
错误消息 (POSIX.1\-2001)。
.TP 
\fBEBADR\fP
无效的请求描述符。
.TP 
\fBEBADRQC\fP
请求代码无效。
.TP 
\fBEBADSLT\fP
.\" EBFONT is defined but appears not to be used by kernel or glibc.
插槽无效。
.TP 
\fBEBUSY\fP
设备或资源忙 (POSIX.1\-2001)。
.TP 
\fBECANCELED\fP
操作取消 (POSIX.1\-2001)。
.TP 
\fBECHILD\fP
没有子进程 (POSIX.1\-2001)。
.TP 
\fBECHRNG\fP
通道号越界。
.TP 
\fBECOMM\fP
发送时出现通信错误。
.TP 
\fBECONNABORTED\fP
连接中止 (POSIX.1\-2001)。
.TP 
\fBECONNREFUSED\fP
连接被拒绝 (POSIX.1\-2001)。
.TP 
\fBECONNRESET\fP
连接复位 (POSIX.1\-2001)。
.TP 
\fBEDEADLK\fP
资源死锁避免了 (POSIX.1\-2001)。
.TP 
\fBEDEADLOCK\fP
在大多数体系结构中，\fBEDEADLK\fP 的同义词。 在某些架构上 (例如，Linux MIPS、PowerPC、SPARC)，它是一个单独的错误代码
"File locking deadlock error"。
.TP 
\fBEDESTADDRREQ\fP
目标地址需要 (POSIX.1\-2001)。
.TP 
\fBEDOM\fP
.\" EDOTDOT is defined but appears to be unused
数学参数超出函数域 (POSIX.1，C99)。
.TP 
\fBEDQUOT\fP
.\" POSIX just says "Reserved"
磁盘配额超过 (POSIX.1\-2001)。
.TP 
\fBEEXIST\fP
文件存在 (POSIX.1\-2001)。
.TP 
\fBEFAULT\fP
错误地址 (POSIX.1\-2001)。
.TP 
\fBEFBIG\fP
文件太大 (POSIX.1\-2001)。
.TP 
\fBEHOSTDOWN\fP
主机挂了
.TP 
\fBEHOSTUNREACH\fP
主机不可访问 (POSIX.1\-2001)。
.TP 
\fBEHWPOISON\fP
内存页有硬件错误。
.TP 
\fBEIDRM\fP
标识符已删除 (POSIX.1\-2001)。
.TP 
\fBEILSEQ\fP
无效或不完整的多字节或宽字符 (POSIX.1、C99)。
.IP
此处显示的文本是 glibc 错误描述; 在 POSIX.1 中，此错误被描述为 "Illegal byte sequence"。
.TP 
\fBEINPROGRESS\fP
正在进行的操作 (POSIX.1\-2001)。
.TP 
\fBEINTR\fP
中断函数调用 (POSIX.1\-2001); 请参见 \fBsignal\fP(7)。
.TP 
\fBEINVAL\fP
无效的参数 (POSIX.1\-2001)。
.TP 
\fBEIO\fP
Input/output 错误 (POSIX.1\-2001)。
.TP 
\fBEISCONN\fP
套接字连接 (POSIX.1\-2001)。
.TP 
\fBEISDIR\fP
是目录 (POSIX.1\-2001)。
.TP 
\fBEISNAM\fP
是命名类型文件。
.TP 
\fBEKEYEXPIRED\fP
密钥已过期。
.TP 
\fBEKEYREJECTED\fP
密钥被服务拒绝。
.TP 
\fBEKEYREVOKED\fP
密钥已被撤销。
.TP 
\fBEL2HLT\fP
2 级停止。
.TP 
\fBEL2NSYNC\fP
2 级未同步。
.TP 
\fBEL3HLT\fP
3 级停止。
.TP 
\fBEL3RST\fP
3 级重置。
.TP 
\fBELIBACC\fP
无法访问所需的共享库。
.TP 
\fBELIBBAD\fP
访问损坏的共享库。
.TP 
\fBELIBMAX\fP
尝试链接过多的共享库。
.TP 
\fBELIBSCN\fP
a.out 中的 \&.lib 部分已损坏
.TP 
\fBELIBEXEC\fP
无法直接执行共享库。
.TP 
\fBELNRNG\fP
.\" ELNRNG appears to be used by a few drivers
链接号越界。
.TP 
\fBELOOP\fP
(POSIX.1\-2001) 的符号链接级别太多。
.TP 
\fBEMEDIUMTYPE\fP
介质类型错误。
.TP 
\fBEMFILE\fP
打开的文件太多 (POSIX.1\-2001)。 通常由超过 \fBgetrlimit\fP(2) 中描述的 \fBRLIMIT_NOFILE\fP 资源限制引起。
也可能是超出 \fI/proc/sys/fs/nr_open\fP 中指定的限制引起的。
.TP 
\fBEMLINK\fP
链接太多 (POSIX.1\-2001)。
.TP 
\fBEMSGSIZE\fP
消息太长 (POSIX.1\-2001)。
.TP 
\fBEMULTIHOP\fP
.\" POSIX says "Reserved"
多跳尝试 (POSIX.1\-2001)。
.TP 
\fBENAMETOOLONG\fP
.\" ENAVAIL is defined, but appears not to be used
文件名太长 (POSIX.1\-2001)。
.TP 
\fBENETDOWN\fP
网络已关闭 (POSIX.1\-2001)。
.TP 
\fBENETRESET\fP
连接被网络 (POSIX.1\-2001) 中止。
.TP 
\fBENETUNREACH\fP
网络无法访问 (POSIX.1\-2001)。
.TP 
\fBENFILE\fP
系统 (POSIX.1\-2001) 中打开的文件太多。 在 Linux 上，这可能是遇到 \fI/proc/sys/fs/file\-max\fP 限制的结果
(参见 \fBproc\fP(5)).
.TP 
\fBENOANO\fP
.\" ENOANO appears to be used by a few drivers
没有阳极。
.TP 
\fBENOBUFS\fP
.\" ENOCSI is defined but appears to be unused.
没有可用的缓冲区空间 (POSIX.1 (XSI STREAMS 选项) )。
.TP 
\fBENODATA\fP
指定的属性不存在，或者进程无权访问该属性; 请参见 \fBxattr\fP(7)。
.IP
在 POSIX.1\-2001 (XSI STREAMS 选项) 中，此错误被描述为 "No message is available on the
STREAM head read queue"。
.TP 
\fBENODEV\fP
没有这样的设备 (POSIX.1\-2001)。
.TP 
\fBENOENT\fP
没有这样的文件或目录 (POSIX.1\-2001)。
.IP
通常，当指定的路径名不存在，或者路径名的目录前缀中的组件之一不存在，或者指定的路径名是悬垂符号链接时，会导致此错误。
.TP 
\fBENOEXEC\fP
执行格式错误 (POSIX.1\-2001)。
.TP 
\fBENOKEY\fP
所需密钥不可用。
.TP 
\fBENOLCK\fP
没有可用的锁 (POSIX.1\-2001)。
.TP 
\fBENOLINK\fP
.\" POSIX says "Reserved"
链接已被切断 (POSIX.1\-2001)。
.TP 
\fBENOMEDIUM\fP
未找到介质。
.TP 
\fBENOMEM\fP
没有足够的 space/cannot 分配内存 (POSIX.1\-2001)。
.TP 
\fBENOMSG\fP
没有所需类型 (POSIX.1\-2001) 的消息。
.TP 
\fBENONET\fP
机器不在网络上。
.TP 
\fBENOPKG\fP
未安装包。
.TP 
\fBENOPROTOOPT\fP
协议不可用 (POSIX.1\-2001)。
.TP 
\fBENOSPC\fP
设备 (POSIX.1\-2001) 上没有剩余空间。
.TP 
\fBENOSR\fP
没有 STREAM 资源 (POSIX.1 (XSI STREAMS 选项) )。
.TP 
\fBENOSTR\fP
不是 STREAM (POSIX.1 (XSI STREAMS 选项) )。
.TP 
\fBENOSYS\fP
函数未实现 (POSIX.1\-2001)。
.TP 
\fBENOTBLK\fP
需要块设备。
.TP 
\fBENOTCONN\fP
套接字未连接 (POSIX.1\-2001)。
.TP 
\fBENOTDIR\fP
不是目录 (POSIX.1\-2001)。
.TP 
\fBENOTEMPTY\fP
.\" ENOTNAM is defined but appears to be unused.
目录不为空 (POSIX.1\-2001)。
.TP 
\fBENOTRECOVERABLE\fP
状态不可恢复 (POSIX.1\-2008)。
.TP 
\fBENOTSOCK\fP
不是套接字 (POSIX.1\-2001)。
.TP 
\fBENOTSUP\fP
不支持的操作 (POSIX.1\-2001)。
.TP 
\fBENOTTY\fP
I/O 控制操作 (POSIX.1\-2001) 不当。
.TP 
\fBENOTUNIQ\fP
名称在网络上不唯一。
.TP 
\fBENXIO\fP
没有这样的设备或地址 (POSIX.1\-2001)。
.TP 
\fBEOPNOTSUPP\fP
套接字 (POSIX.1\-2001) 上不支持操作。
.IP
(\fBENOTSUP\fP 和 \fBEOPNOTSUPP\fP 在 Linux 上具有相同的值，但根据 POSIX.1，这些错误值应该是不同的。)
.TP 
\fBEOVERFLOW\fP
值太大，无法存储在数据类型 (POSIX.1\-2001) 中。
.TP 
\fBEOWNERDEAD\fP
.\" Used at least by the user-space side of rubost mutexes
所有者死于 (POSIX.1\-2008)。
.TP 
\fBEPERM\fP
不允许操作 (POSIX.1\-2001)。
.TP 
\fBEPFNOSUPPORT\fP
不支持协议系列。
.TP 
\fBEPIPE\fP
破损的管道 (POSIX.1\-2001)。
.TP 
\fBEPROTO\fP
协议错误 (POSIX.1\-2001)。
.TP 
\fBEPROTONOSUPPORT\fP
协议不受支持 (POSIX.1\-2001)。
.TP 
\fBEPROTOTYPE\fP
套接字 (POSIX.1\-2001) 的协议类型错误。
.TP 
\fBERANGE\fP
结果太大 (POSIX.1，C99)。
.TP 
\fBEREMCHG\fP
远程地址已更改。
.TP 
\fBEREMOTE\fP
对象是远程的。
.TP 
\fBEREMOTEIO\fP
远程 I/O 错误。
.TP 
\fBERESTART\fP
中断的系统调用应该重新启动。
.TP 
\fBERFKILL\fP
.\" ERFKILL appears to be used by various drivers
由于 RF\-kill，无法进行操作。
.TP 
\fBEROFS\fP
只读文件系统 (POSIX.1\-2001)。
.TP 
\fBESHUTDOWN\fP
传输端点关闭后无法发送。
.TP 
\fBESPIPE\fP
无效的 seek (POSIX.1\-2001)。
.TP 
\fBESOCKTNOSUPPORT\fP
不支持套接字类型。
.TP 
\fBESRCH\fP
.\" ESRMNT is defined but appears not to be used
没有这样的进程 (POSIX.1\-2001)。
.TP 
\fBESTALE\fP
陈旧的文件句柄 (POSIX.1\-2001)。
.IP
NFS 和其他文件系统可能会出现此错误。
.TP 
\fBESTRPIPE\fP
流管道错误。
.TP 
\fBETIME\fP
定时器超时 (POSIX.1 (XSI STREAMS 选项) )。
.IP
(POSIX.1 表示 `STREAM \fBioctl\fP(2) 超时`。)
.TP 
\fBETIMEDOUT\fP
连接超时 (POSIX.1\-2001)。
.TP 
\fBETOOMANYREFS\fP
.\" ETOOMANYREFS seems to be used in net/unix/af_unix.c
引用太多: 无法拼接。
.TP 
\fBETXTBSY\fP
文本文件忙 (POSIX.1\-2001)。
.TP 
\fBEUCLEAN\fP
结构体需要清洁。
.TP 
\fBEUNATCH\fP
未附加协议驱动程序。
.TP 
\fBEUSERS\fP
用户太多。
.TP 
\fBEWOULDBLOCK\fP
操作会阻塞 (可能与 \fBEAGAIN\fP) (POSIX.1\-2001) 的值相同。
.TP 
\fBEXDEV\fP
无效的跨设备链接 (POSIX.1\-2001)。
.TP 
\fBEXFULL\fP
兑换满。
.SH NOTES
一个常见的错误是做
.PP
.in +4n
.EX
if (somecall() == \-1) {
    printf("somecall() failed\en");
    if (errno == ...) { ... }
}
.EE
.in
.PP
其中 \fIerrno\fP 不再需要具有从 \fIsomecall\fP() 返回时的值 (即，它可能已被 \fBprintf\fP(3)) 更改。 如果
\fIerrno\fP 的值应该在整个库调用中保留，则必须保存它:
.PP
.in +4n
.EX
if (somecall() == \-1) {
    int errsv = errno;
    printf("somecall() failed\en");
    if (errsv == ...) { ... }
}
.EE
.in
.PP
请注意，POSIX 线程 API 执行 \fInot\fP set \fIerrno\fP on error。
取而代之的是，在失败时，它们会返回一个错误编号作为函数结果。 这些错误号与其他 API 在 \fIerrno\fP 中返回的错误号含义相同。
.PP
在一些古老的系统上，\fI<errno.h>\fP 不存在或没有声明 \fIerrno\fP，因此必须手动声明 \fIerrno\fP (即
\fIextern int errno\fP)。 在一些古老的系统上，\fI<errno.h>\fP 不存在或没有声明
\fIerrno\fP，因此必须手动声明 \fIerrno\fP (即 \fIextern int errno\fP)。 它很久以前就不再是必需的了，它会导致现代版本的
C 库出现问题。
.SH "SEE ALSO"
.\" In the moreutils package
\fBerrno\fP(1), \fBerr\fP(3), \fBerror\fP(3), \fBperror\fP(3), \fBstrerror\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
