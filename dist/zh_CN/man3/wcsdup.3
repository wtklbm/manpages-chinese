.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright (c) Bruno Haible <haible@clisp.cons.org>
.\"
.\" SPDX-License-Identifier: GPL-2.0-or-later
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroup's Single UNIX specification http://www.UNIX-systems.org/online.html
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH wcsdup 3 2022\-12\-15 "Linux man\-pages 6.03" 
.SH NAME
wcsdup \- 复制一个宽字符字符串
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <wchar.h>\fP
.PP
\fBwchar_t *wcsdup(const wchar_t *\fP\fIs\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBwcsdup\fP():
.nf
    由于 glibc 2.10:
        _POSIX_C_SOURCE >= 200809L
    在 glibc 2.10 之前:
        _GNU_SOURCE
.fi
.SH DESCRIPTION
\fBwcsdup\fP() 函数是 \fBstrdup\fP(3) 函数的宽字符等价物。 它分配并返回一个新的宽字符串，其初始内容是 \fIs\fP
指向的宽字符串的副本。
.PP
用于新宽字符串的内存是通过 \fBmalloc\fP(3) 获取的，应该通过 \fBfree\fP(3) 释放。
.SH "RETURN VALUE"
成功时，\fBwcsdup\fP() 返回指向新宽字符字符串的指针。 出错时，它返回 NULL，并设置 \fIerrno\fP 以指示错误。
.SH ERRORS
.TP 
\fBENOMEM\fP
可用内存不足，无法分配重复的字符串。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBwcsdup\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
.\" present in libc5 and glibc 2.0 and later
POSIX.1\-2008。此函数未在 POSIX.1\-2001 中指定，并且未在其他系统上广泛使用。
.SH "SEE ALSO"
\fBstrdup\fP(3), \fBwcscpy\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
