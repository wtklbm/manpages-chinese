.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright 2004 Andries Brouwer <aeb@cwi.nl>.
.\" and Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" Inspired by a page by Walter Harms created 2002-08-10
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH ilogb 3 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
ilogb、ilogbf、ilogbl \- 获取浮点值的整数指数
.SH LIBRARY
数学库 (\fIlibm\fP、\fI\-lm\fP)
.SH SYNOPSIS
.nf
\fB#include <math.h>\fP
.PP
\fBint ilogb(double \fP\fIx\fP\fB);\fP
\fBint ilogbf(float \fP\fIx\fP\fB);\fP
\fBint ilogbl(long double \fP\fIx\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBilogb\fP():
.nf
.\"    || _XOPEN_SOURCE && _XOPEN_SOURCE_EXTENDED
    _ISOC99_ 源 ||_POSIX_C_SOURCE >= 200112L
        || _XOPEN_SOURCE >= 500
        || /* Since glibc 2.19: */ _DEFAULT_SOURCE
        || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.fi
.PP
\fBilogbf\fP(), \fBilogbl\fP():
.nf
    _ISOC99_ 源 ||_POSIX_C_SOURCE >= 200112L
        || /* Since glibc 2.19: */ _DEFAULT_SOURCE
        || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.fi
.SH DESCRIPTION
这些函数将其参数的指数部分作为有符号整数返回。 当没有错误发生时，这些函数相当于对应的 \fBlogb\fP(3) 函数，转换为 \fIint\fP。
.SH "RETURN VALUE"
成功时，这些函数返回 \fIx\fP 的指数，作为有符号整数。
.PP
.\" the POSIX.1 spec for logb() says logb() gives pole error for this
.\" case, but for ilogb() it says domain error.
.\" glibc: The numeric value is either `INT_MIN' or `-INT_MAX'.
如果 \fIx\fP 为零，则发生域错误，且函数返回 \fBFP_ILOGB0\fP。
.PP
.\" glibc: The numeric value is either `INT_MIN' or `INT_MAX'.
.\" On i386, FP_ILOGB0 and FP_ILOGBNAN have the same value.
如果 \fIx\fP 是 NaN，则发生域错误，且函数返回 \fBFP_ILOGBNAN\fP。
.PP
.\"
.\" POSIX.1-2001 also says:
.\" If the correct value is greater than {INT_MAX}, {INT_MAX}
.\" shall be returned and a domain error shall occur.
.\"
.\" If the correct value is less than {INT_MIN}, {INT_MIN}
.\" shall be returned and a domain error shall occur.
如果 \fIx\fP 为 negative infinity 或 positive infinity，则发生定义域错误，且函数返回 \fBINT_MAX\fP。
.SH ERRORS
有关如何确定调用这些函数时是否发生错误的信息，请参见 \fBmath_error\fP(7)。
.PP
可能会出现以下错误:
.TP 
Domain error: \fIx\fP is 0 or a NaN
引发无效浮点异常 (\fBFE_INVALID\fP)，并将 \fIerrno\fP 设置为 \fBEDOM\fP (但请参见 BUGS)。
.TP 
Domain error: \fIx\fP is an infinity
引发无效浮点异常 (\fBFE_INVALID\fP)，并将 \fIerrno\fP 设置为 \fBEDOM\fP (但请参见 BUGS)。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBilogb\fP(),
\fBilogbf\fP(),
\fBilogbl\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
C99, POSIX.1\-2001, POSIX.1\-2008.
.SH BUGS
.\" Bug raised: http://sources.redhat.com/bugzilla/show_bug.cgi?id=6794
在 glibc 2.16 之前，这些函数的 glibc 实现中存在以下错误:
.IP \[bu] 3
\fIx\fP 为 0 或 NaN 的域错误情况不会导致设置 \fIerrno\fP 或 (在某些体系结构上) 引发浮点异常。
.IP \[bu]
\fIx\fP 为无穷大的域错误情况不会导致设置 \fIerrno\fP 或引发浮点异常。
.SH "SEE ALSO"
\fBlog\fP(3), \fBlogb\fP(3), \fBsignificand\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
