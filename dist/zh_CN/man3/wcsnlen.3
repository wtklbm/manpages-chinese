.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright (c) Bruno Haible <haible@clisp.cons.org>
.\"
.\" SPDX-License-Identifier: GPL-2.0-or-later
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroup's Single UNIX specification http://www.UNIX-systems.org/online.html
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH wcsnlen 3 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
wcsnlen \- 确定固定大小的宽字符字符串的长度
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <wchar.h>\fP
.PP
\fBsize_t wcsnlen(const wchar_t \fP\fIs\fP\fB[.\fP\fImaxlen\fP\fB], size_t \fP\fImaxlen\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBwcsnlen\fP():
.nf
    由于 glibc 2.10:
        _POSIX_C_SOURCE >= 200809L
    在 glibc 2.10 之前:
        _GNU_SOURCE
.fi
.SH DESCRIPTION
\fBwcsnlen\fP() 函数是 \fBstrnlen\fP(3) 函数的宽字符等价物。 返回 \fIs\fP 指向的字符串中宽字符的个数，不包括终止空宽字符
(L\[aq]\e0\[aq])，最多为 \fImaxlen\fP 宽字符 (注意: 该参数不是字节数)。 在这样做时，\fBwcsnlen\fP() 只查看
\fIs\fP 处的第一个 \fImaxlen\fP 宽字符，绝不会超出 \fIs[maxlen\-1]\fP。
.SH "RETURN VALUE"
如果 \fBwcsnlen\fP() 函数小于 \fImaxlen\fP，则返回 \fIwcslen(s)\fP; 如果 \fIs\fP 指向的第一个 \fImaxlen\fP
宽字符中没有空宽字符，则返回 \fImaxlen\fP。
.SH VERSIONS
\fBwcsnlen\fP() 函数自 glibc 2.1 起提供。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBwcsnlen\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
POSIX.1\-2008.
.SH "SEE ALSO"
\fBstrnlen\fP(3), \fBwcslen\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
