.\" -*- coding: UTF-8 -*-
.\" Copyright (C) 2022 Alejandro Colomar <alx@kernel.org>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH _Generic 3 2023\-02\-12 "Linux man\-pages 6.03" 
.SH NAME
_Generic\-type \- 泛型选择
.SH SYNOPSIS
.nf
\fB_Generic(\fP\fIexpression\fP\fB, type1: \fPe1\fB, \fP... /*\fB, default: \fPe */\fB);\fP
.fi
.SH DESCRIPTION
\fB_Generic\fP() 评估与控制 \fIexpression\fP 的类型兼容的类型选择器下的代码路径，如果没有类型兼容，则为 \fBdefault:\fP。
.PP
不评估 \fIexpression\fP。
.PP
这对于编写 type \- 泛型宏特别有用，它的行为会根据参数的类型而有所不同。
.SH STANDARDS
C11 及更高版本。
.SH EXAMPLES
下面的程序演示了如何编写标准 \fBimaxabs\fP(3) 函数的替代品，作为函数并不能真正提供它 promises 的功能:
无缝升级到最广泛的可用类型。
.IP
.\" SRC BEGIN (_Generic.c)
.EX
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>

#define my_imaxabs  _Generic(INTMAX_C(0),  \e
    long:           labs,                  \e
    long long:      llabs                  \e
 /* long long long: lllabs */              \e
)

int
main(void)
{
    off_t  a;

    a = \-42;
    printf("imaxabs(%jd) == %jd\en", (intmax_t) a, my_imaxabs(a));
    printf("&imaxabs == %p\en", &my_imaxabs);
    printf("&labs    == %p\en", &labs);
    printf("&llabs   == %p\en", &llabs);

    exit(EXIT_SUCCESS);
}
.EE
.\" SRC END
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
