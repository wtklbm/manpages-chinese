.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\" and Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 19:08:17 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2002-08-25, aeb
.\" Modified 2004-11-12 as per suggestion by Fabian Kreutz/AEB
.\" 2008-07-24, mtk, created this page, based on material from j0.3.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH y0 3 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
y0, y0f, y0l, y1, y1f, y1l, yn, ynf, ynl \- 第二类贝塞尔函数
.SH LIBRARY
数学库 (\fIlibm\fP、\fI\-lm\fP)
.SH SYNOPSIS
.nf
\fB#include <math.h>\fP
.PP
\fBdouble y0(double \fP\fIx\fP\fB);\fP
\fBdouble y1(double \fP\fIx\fP\fB);\fP
\fBdouble yn(int \fP\fIn\fP\fB, double \fP\fIx\fP\fB);\fP
.PP
\fBfloat y0f(float \fP\fIx\fP\fB);\fP
\fBfloat y1f(float \fP\fIx\fP\fB);\fP
\fBfloat ynf(int \fP\fIn\fP\fB, float \fP\fIx\fP\fB);\fP
.PP
\fBlong double y0l(long double \fP\fIx\fP\fB);\fP
\fBlong double y1l(long double \fP\fIx\fP\fB);\fP
\fBlong double ynl(int \fP\fIn\fP\fB, long double \fP\fIx\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBy0\fP(), \fBy1\fP(), \fByn\fP():
.nf
    _XOPEN_SOURCE
        || /* Since glibc 2.19: */ _DEFAULT_SOURCE
        || /* glibc <= 2.19: */ _SVID_SOURCE || _BSD_SOURCE
.fi
.PP
\fBy0f\fP(), \fBy0l\fP(), \fBy1f\fP(), \fBy1l\fP(), \fBynf\fP(), \fBynl\fP():
.nf
    _XOPEN_SOURCE >= 600
        || (_ISOC99_SOURCE && _XOPEN_SOURCE)
        || /* Since glibc 2.19: */ _DEFAULT_SOURCE
        || /* glibc <= 2.19: */ _SVID_SOURCE || _BSD_SOURCE
.fi
.SH DESCRIPTION
\fBy0\fP() 和 \fBy1\fP() 函数分别返回第二类 0 和 1 阶 \fIx\fP 的贝塞尔函数。 \fByn\fP() 函数返回第二类 \fIn\fP 的 \fIx\fP
的贝塞尔函数。
.PP
\fIx\fP 的值必须为正数。
.PP
\fBy0f\fP()、\fBy1f\fP() 和 \fBynf\fP() 函数是获取和返回 \fIfloat\fP 值的版本。 \fBy0l\fP()、\fBy1l\fP() 和
\fBynl\fP() 函数是获取和返回 \fIlong double\fP 值的版本。
.SH "RETURN VALUE"
成功时，这些函数会为 \fIx\fP 返回适当的第二类贝塞尔值。
.PP
如果 \fIx\fP 是 NaN，则返回 NaN。
.PP
如果 \fIx\fP 为 negative，则出现定义域错误，函数分别返回 \-\fBHUGE_VAL\fP、\-\fBHUGE_VALF\fP 或
\-\fBHUGE_VALL\fP。 (POSIX.1\-2001 也允许在这种情况下返回 NaN。)
.PP
如果 \fIx\fP 为 0.0，则出现极点错误，函数分别返回 \-\fBHUGE_VAL\fP、\-\fBHUGE_VALF\fP 或 \-\fBHUGE_VALL\fP。
.PP
如果结果下溢，则发生范围错误，函数返回 0.0
.PP
如果结果溢出，则发生范围错误，函数分别返回 \-\fBHUGE_VAL\fP、\-\fBHUGE_VALF\fP 或 \-\fBHUGE_VALL\fP。
(POSIX.1\-2001 也允许在这种情况下返回 0.0。)
.SH ERRORS
有关如何确定调用这些函数时是否发生错误的信息，请参见 \fBmath_error\fP(7)。
.PP
可能会出现以下错误:
.TP 
Domain error: \fIx\fP is negative
\fIerrno\fP 设置为 \fBEDOM\fP。 引发无效浮点异常 (\fBFE_INVALID\fP)。
.TP 
Pole error: \fIx\fP is 0.0
.\" Before POSIX.1-2001 TC2, this was (inconsistently) specified
.\" as a range error.
\fIerrno\fP 设置为 \fBERANGE\fP 并引发 \fBFE_DIVBYZERO\fP 异常 (但请参见 BUGS)。
.TP 
Range error: result underflow
.\" e.g., y0(1e33) on glibc 2.8/x86-32
.\" This is intended behavior
.\" See http://sources.redhat.com/bugzilla/show_bug.cgi?id=6806
\fIerrno\fP 设置为 \fBERANGE\fP。 对于这种情况，\fBfetestexcept\fP(3) 不会返回 \fBFE_UNDERFLOW\fP 异常。
.TP 
Range error: result overflow
.\" e.g., yn(10, 1e-40) on glibc 2.8/x86-32
\fIerrno\fP 设置为 \fBERANGE\fP (但请参见 BUGS)。 引发溢出浮点异常 (\fBFE_OVERFLOW\fP)。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBy0\fP(),
\fBy0f\fP(),
\fBy0l\fP()
T}	Thread safety	MT\-Safe
T{
\fBy1\fP(),
\fBy1f\fP(),
\fBy1l\fP()
T}	Thread safety	MT\-Safe
T{
\fByn\fP(),
\fBynf\fP(),
\fBynl\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
函数返回的 \fIdouble\fP 符合 SVr4、4.3BSD、POSIX.1\-2001、POSIX.1\-2008。 其他的是 BSD
上也存在的非标准函数。
.SH BUGS
.\" http://sourceware.org/bugzilla/show_bug.cgi?id=6807
在 glibc 2.19 之前，这些函数误诊极点错误: \fIerrno\fP 被设置为 \fBEDOM\fP，而不是 \fBERANGE\fP，并且没有引发
\fBFE_DIVBYZERO\fP 异常。
.PP
.\" http://sources.redhat.com/bugzilla/show_bug.cgi?id=6808
在 glibc 2.17 之前，没有为 "range error: result underflow" 设置 \fIerrno\fP。
.PP
.\" Actually, 2.3.2 is the earliest test result I have; so yet
.\" to confirm if this error occurs only in glibc 2.3.2.
在 glibc 2.3.2 及更早版本中，这些函数不会在出现域错误时引发无效浮点异常 (\fBFE_INVALID\fP)。
.SH "SEE ALSO"
\fBj0\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
