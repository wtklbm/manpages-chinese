.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 21:48:06 1993 by Rik Faith (faith@cs.unc.edu)
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH getnetent 3 2022\-12\-15 "Linux man\-pages 6.03" 
.SH NAME
getnetent、getnetbyname、getnetbyaddr、setnetent、endnetent \- 获取网络条目
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <netdb.h>\fP
.PP
\fBstruct netent *getnetent(void);\fP
.PP
\fBstruct netent *getnetbyname(const char *\fP\fIname\fP\fB);\fP
\fBstruct netent *getnetbyaddr(uint32_t \fP\fInet\fP\fB, 整数 \fP\fItype\fP\fB);\fP
.PP
\fBvoid setnetent(int \fP\fIstayopen\fP\fB);\fP
\fBvoid endnetent(void);\fP
.fi
.SH DESCRIPTION
\fBgetnetent\fP() 函数从网络数据库中读取下一个条目，并返回一个 \fInetent\fP 结构体，其中包含条目中断开的字段。
如有必要，将打开与数据库的连接。
.PP
\fBgetnetbyname\fP() 函数为数据库中与网络 \fIname\fP 匹配的条目返回一个 \fInetent\fP 结构体。
.PP
\fBgetnetbyaddr\fP() 函数返回一个 \fInetent\fP 结构体，用于匹配 \fItype\fP 类型的网络号 \fInet\fP 的数据库条目。
\fInet\fP 参数必须是主机字节顺序。
.PP
\fBsetnetent\fP() 函数打开到数据库的连接，并将下一个条目设置为第一个条目。 如果 \fIstayopen\fP 不为零，则在调用
\fBgetnet*\fP() 函数之一之间不会关闭与数据库的连接。
.PP
\fBendnetent\fP() 函数关闭与数据库的连接。
.PP
\fInetent\fP 结构体在 \fI<netdb.h>\fP 中定义如下:
.PP
.in +4n
.EX
struct netent {
    char      *n_name;     /* official network name */
    char     **n_aliases;  /* alias list */
    int        n_addrtype; /* net address type */
    uint32_t   n_net;      /* network number */
}
.EE
.in
.PP
\fInetent\fP 结构体的成员是:
.TP 
\fIn_name\fP
网络的正式名称。
.TP 
\fIn_aliases\fP
以 NULL 结尾的网络备用名称列表。
.TP 
\fIn_addrtype\fP
网络号的类型; 总是 \fBAF_INET\fP。
.TP 
\fIn_net\fP
主机字节顺序的网络号。
.SH "RETURN VALUE"
\fBgetnetent\fP()、\fBgetnetbyname\fP() 和 \fBgetnetbyaddr\fP() 函数返回指向静态分配的 \fInetent\fP
结构体的指针，如果发生错误或到达文件末尾，则返回空指针。
.SH FILES
.TP 
\fI/etc/networks\fP
网络数据库文件
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lb lb lbx
l l l.
Interface	Attribute	Value
T{
\fBgetnetent\fP()
T}	Thread safety	T{
MT\-Unsafe race:netent
race:netentbuf env locale
T}
T{
\fBgetnetbyname\fP()
T}	Thread safety	T{
MT\-Unsafe race:netbyname
env locale
T}
T{
\fBgetnetbyaddr\fP()
T}	Thread safety	T{
MT\-Unsafe race:netbyaddr
locale
T}
T{
\fBsetnetent\fP(),
\fBendnetent\fP()
T}	Thread safety	T{
MT\-Unsafe race:netent env
locale
T}
.TE
.hy
.ad
.sp 1
在上表中，\fIrace:netent\fP 中的 \fInetent\fP 表示如果在一个程序的不同线程中并行使用任数
\fBsetnetent\fP()、\fBgetnetent\fP() 或 \fBendnetent\fP() 中的任何一个，则可能发生数据竞争。
.SH STANDARDS
POSIX.1\-2001, POSIX.1\-2008, 4.3BSD.
.SH NOTES
在 glibc 2.2 之前，\fBgetnetbyaddr\fP() 的 \fInet\fP 参数是 \fIlong\fP 类型。
.SH "SEE ALSO"
.\" .BR networks (5)
\fBgetnetent_r\fP(3), \fBgetprotoent\fP(3), \fBgetservent\fP(3)
.br
RFC\ 1101
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
