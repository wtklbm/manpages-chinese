.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright 2004 Andries Brouwer <aeb@cwi.nl>.
.\" and Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH scalb 3 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
scalb、scalbf、scalbl \- 将浮点数乘以基数 (OBSOLETE) 的整数次方
.SH LIBRARY
数学库 (\fIlibm\fP、\fI\-lm\fP)
.SH SYNOPSIS
.nf
\fB#include <math.h>\fP
.PP
\fB[[deprecated]] double scalb(double \fP\fIx\fP\fB，双 \fP\fIexp\fP\fB);\fP
\fB[[deprecated]] float scalbf(float \fP\fIx\fP\fB，浮动 \fP\fIexp\fP\fB);\fP
\fB[[deprecated]] long double scalbl(long double \fP\fIx\fP\fB，长双 \fP\fIexp\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBscalb\fP():
.nf
.\"    || _XOPEN_SOURCE && _XOPEN_SOURCE_EXTENDED
    _XOPEN_SOURCE >= 500
        || /* Since glibc 2.19: */ _DEFAULT_SOURCE
        || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.fi
.PP
\fBscalbf\fP(), \fBscalbl\fP():
.nf
    _XOPEN_SOURCE >= 600
        || /* Since glibc 2.19: */ _DEFAULT_SOURCE
        || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.fi
.SH DESCRIPTION
这些函数将他们的第一个参数 \fIx\fP 乘以 \fBFLT_RADIX\fP (可能是 2) 的 \fIexp\fP 次方，即:
.PP
.nf
    x * FLT_RADIX ** exp
.fi
.PP
.\" not in /usr/include but in a gcc lib
\fBFLT_RADIX\fP 的定义可以通过包含 \fI<float.h>\fP 得到。
.SH "RETURN VALUE"
成功时，这些函数返回 \fIx\fP * \fBFLT_RADIX\fP ** \fIexp\fP。
.PP
如果 \fIx\fP 或 \fIexp\fP 是 NaN，则返回 NaN。
.PP
如果 \fIx\fP 是正无穷大 (negative 无穷大)，并且 \fIexp\fP 不是 negative 无穷大，则返回正无穷大 (negative
无穷大)。
.PP
如果 \fIx\fP 为 + 0 (\-0)，并且 \fIexp\fP 不是正无穷大，则返回 + 0 (\-0)。
.PP
如果 \fIx\fP 为零，且 \fIexp\fP 为正无穷大，则会发生定义域错误，并返回 NaN。
.PP
如果 \fIx\fP 为无穷大，且 \fIexp\fP 为 negative 无穷大，则出现定义域错误，并返回 NaN。
.PP
如果结果溢出，则发生范围错误，函数分别返回 \fBHUGE_VAL\fP、\fBHUGE_VALF\fP 或 \fBHUGE_VALL\fP，其符号与 \fIx\fP 相同。
.PP
如果结果下溢，则发生范围错误，函数返回零，符号与 \fIx\fP 相同。
.SH ERRORS
有关如何确定调用这些函数时是否发生错误的信息，请参见 \fBmath_error\fP(7)。
.PP
可能会出现以下错误:
.TP 
Domain error: \fIx\fP is 0, and \fIexp\fP is positive infinity, or \fIx\fP is positive infinity and \fIexp\fP is negative infinity and the other argument is not a NaN
\fIerrno\fP 设置为 \fBEDOM\fP。 引发无效浮点异常 (\fBFE_INVALID\fP)。
.TP 
Range error, overflow
\fIerrno\fP 设置为 \fBERANGE\fP。 引发溢出浮点异常 (\fBFE_OVERFLOW\fP)。
.TP 
Range error, underflow
\fIerrno\fP 设置为 \fBERANGE\fP。 引发下溢浮点异常 (\fBFE_UNDERFLOW\fP)。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBscalb\fP(),
\fBscalbf\fP(),
\fBscalbl\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
\fBscalb\fP() 在 POSIX.1\-2001 中指定，但标记为过时。 POSIX.1\-2008 删除了 \fBscalb\fP() 的规范，建议改用
\fBscalbln\fP(3)、\fBscalblnf\fP(3) 或 \fBscalblnl\fP(3)。 \fBscalb\fP() 函数来自 4.3BSD。
.PP
.\" Looking at header files: scalbf() is present on the
.\" BSDs, Tru64, HP-UX 11, Irix 6.5; scalbl() is on HP-UX 11 and Tru64.
\fBscalbf\fP() 和 \fBscalbl\fP() 未标准化; 尽管如此，\fBscalbf\fP() 仍存在于其他几个系统中
.SH BUGS
.\" http://sources.redhat.com/bugzilla/show_bug.cgi?id=6803
.\" http://sources.redhat.com/bugzilla/show_bug.cgi?id=6804
在 glibc 2.20 之前，这些函数并没有为域和范围错误设置 \fIerrno\fP。
.SH "SEE ALSO"
\fBldexp\fP(3), \fBscalbln\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
