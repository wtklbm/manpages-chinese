.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\" and Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified 1993-07-24 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2002-07-27 by Walter Harms
.\" 	(walter.harms@informatik.uni-oldenburg.de)
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH atanh 3 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
atanh, atanhf, atanhl \- 反双曲正切函数
.SH LIBRARY
数学库 (\fIlibm\fP、\fI\-lm\fP)
.SH SYNOPSIS
.nf
\fB#include <math.h>\fP
.PP
\fBdouble atanh(double \fP\fIx\fP\fB);\fP
\fBfloat atanhf(float \fP\fIx\fP\fB);\fP
\fBlong double atanhl(long double \fP\fIx\fP\fB);\fP
.PP
.fi
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBatanh\fP():
.nf
.\"    || _XOPEN_SOURCE && _XOPEN_SOURCE_EXTENDED
    _ISOC99_ 源 ||_POSIX_C_SOURCE >= 200112L
        || _XOPEN_SOURCE >= 500
        || /* Since glibc 2.19: */ _DEFAULT_SOURCE
        || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.fi
.PP
\fBatanhf\fP(), \fBatanhl\fP():
.nf
    _ISOC99_ 源 ||_POSIX_C_SOURCE >= 200112L
        || /* Since glibc 2.19: */ _DEFAULT_SOURCE
        || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.fi
.SH DESCRIPTION
这些函数计算 \fIx\fP 的反双曲正切; 即双曲正切为 \fIx\fP 的值。
.SH "RETURN VALUE"
成功时，这些函数返回 \fIx\fP 的反双曲正切值。
.PP
如果 \fIx\fP 是 NaN，则返回 NaN。
.PP
如果 \fIx\fP 为 + 0 (\-0)，则返回 + 0 (\-0)。
.PP
如果 \fIx\fP 为 + 1 或 \-1，则出现极点错误，且函数分别返回 \fBHUGE_VAL\fP、\fBHUGE_VALF\fP 或
\fBHUGE_VALL\fP，并带有数学上正确的符号。
.PP
.\"
.\" POSIX.1-2001 documents an optional range error for subnormal x;
.\" glibc 2.8 does not do this.
如果 \fIx\fP 的绝对值大于 1，则出现定义域错误，返回 NaN。
.SH ERRORS
有关如何确定调用这些函数时是否发生错误的信息，请参见 \fBmath_error\fP(7)。
.PP
可能会出现以下错误:
.TP 
Domain error: \fIx\fP less than \-1 or greater than +1
\fIerrno\fP 设置为 \fBEDOM\fP。 引发无效浮点异常 (\fBFE_INVALID\fP)。
.TP 
Pole error: \fIx\fP is +1 or \-1
\fIerrno\fP 设置为 \fBERANGE\fP (但请参见 BUGS)。 引发被零除浮点异常 (\fBFE_DIVBYZERO\fP)。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBatanh\fP(),
\fBatanhf\fP(),
\fBatanhl\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
C99, POSIX.1\-2001, POSIX.1\-2008.
.PP
返回 \fIdouble\fP 的变体也符合 SVr4、4.3BSD。
.SH BUGS
.\" Bug: http://sources.redhat.com/bugzilla/show_bug.cgi?id=6759
.\" This can be seen in sysdeps/ieee754/k_standard.c
在 glibc 2.9 和更早版本中，当出现极点错误时，\fIerrno\fP 被设置为 \fBEDOM\fP 而不是 POSIX 规定的 \fBERANGE\fP。 自
glibc 2.10 以来，glibc 做了正确的事情。
.SH "SEE ALSO"
\fBacosh\fP(3), \fBasinh\fP(3), \fBcatanh\fP(3), \fBcosh\fP(3), \fBsinh\fP(3), \fBtanh\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
