.\" -*- coding: UTF-8 -*-
'\" t
.\" and Copyright (C) 2014 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: GPL-2.0-or-later
.\"
.\" References consulted:
.\"   GNU glibc-2 source code and manual
.\"   Dinkumware C library reference http://www.dinkumware.com/
.\"   OpenGroup's Single UNIX specification http://www.UNIX-systems.org/online.html
.\"   ISO/IEC 9899:1999
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH towupper 3 2022\-12\-15 "Linux man\-pages 6.03" 
.SH NAME
towupper, towupper_l \- 将宽字符转换为大写
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <wctype.h>\fP
.PP
\fBwint_t towupper(wint_t \fP\fIwc\fP\fB);\fP
\fBwint_t towupper_l(wint_t \fP\fIwc\fP\fB, locale_t \fP\fIlocale\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBtowupper_l\fP():
.nf
    由于 glibc 2.10:
        _XOPEN_SOURCE >= 700
    在 glibc 2.10 之前:
        _GNU_SOURCE
.fi
.SH DESCRIPTION
\fBtowupper\fP() 函数是 \fBtoupper\fP(3) 函数的宽字符等价物。 如果 \fIwc\fP
是小写宽字符，并且在当前语言环境中存在大写等效字符，则返回 \fIwc\fP 的大写等效字符。 在所有其他情况下，\fIwc\fP 将原封不动地返回。
.PP
\fBtowupper_l\fP() 函数执行相同的任务，但根据 \fIlocale\fP 指定的语言环境中的字符类型信息执行转换。 如果 \fIlocale\fP
是特殊语言环境对象 \fBLC_GLOBAL_LOCALE\fP (请参见 \fBduplocale\fP(3)) 或不是有效的语言环境对象句柄)，则
\fBtowupper_l\fP() 的行为未定义。
.PP
参数 \fIwc\fP 必须可以表示为 \fIwchar_t\fP 并且是区域设置中的有效字符或者是值 \fBWEOF\fP。
.SH "RETURN VALUE"
如果 \fIwc\fP 可转换为大写，则 \fBtowupper\fP() 返回其对应的大写; 否则返回 \fIwc\fP。
.SH VERSIONS
\fBtowupper_l\fP() 函数最早出现在 glibc 2.3 中。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBtowupper\fP()
T}	Thread safety	MT\-Safe locale
T{
\fBtowupper_l\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
\fBtowupper\fP(): C99, POSIX.1\-2001 (XSI); 在 POSIX.1\-2008 中作为 XSI 扩展存在，但标记为过时。
.PP
\fBtowupper_l\fP(): POSIX.1\-2008.
.SH NOTES
这些函数的行为取决于语言环境的 \fBLC_CTYPE\fP 类别。
.PP
这些函数不太适合处理 Unicode 字符，因为 Unicode 知道三种情况: 大写、小写和首字母大写。
.SH "SEE ALSO"
\fBiswupper\fP(3), \fBtowctrans\fP(3), \fBtowlower\fP(3), \fBlocale\fP(7)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
