.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright (c) 2003 Andries Brouwer (aeb@cwi.nl)
.\"
.\" SPDX-License-Identifier: GPL-2.0-or-later
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH ualarm 3 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
ualarm \- 在给定的微秒数后安排信号
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <unistd.h>\fP
.PP
\fBuseconds_t ualarm(useconds_t \fP\fIusecs\fP\fB, useconds_t \fP\fIinterval\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBualarm\fP():
.nf
.\"    || _XOPEN_SOURCE && _XOPEN_SOURCE_EXTENDED
    由于 glibc 2.12:
        (_XOPEN_SOURCE >= 500) && ! (_POSIX_C_SOURCE >= 200809L)
            || /* glibc >= 2.19: */ _DEFAULT_SOURCE
            || /* glibc <= 2.19: */ _BSD_SOURCE
    在 glibc 2.12 之前:
        _BSD_SOURCE || _XOPEN_SOURCE >= 500
.fi
.SH DESCRIPTION
\fBualarm\fP() 函数导致信号 \fBSIGALRM\fP 在 (不少于) \fIusecs\fP 微秒后发送到调用进程。
延迟可能会因任何系统活动或处理调用所花费的时间或系统计时器的粒度而略微延长。
.PP
除非被捕获或忽略，否则 \fBSIGALRM\fP 信号将终止进程。
.PP
如果 \fIinterval\fP 参数不为零，则在第一个之后每隔 \fIinterval\fP 微秒将发送进一步的 \fBSIGALRM\fP 信号。
.SH "RETURN VALUE"
此函数返回先前设置的任何警报的剩余微秒数，如果没有警报未决则返回 0。
.SH ERRORS
.TP 
\fBEINTR\fP
被信号中断; 请参见 \fBsignal\fP(7)。
.TP 
\fBEINVAL\fP
\fIusecs\fP 或 \fIinterval\fP 不小于 1000000。 (在被认为是错误的系统上。)
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBualarm\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
4.3BSD, POSIX.1\-2001。POSIX.1\-2001 将 \fBualarm\fP() 标记为已过时。 POSIX.1\-2008 删除了
\fBualarm\fP() 的规范。 4.3BSD、SUSv2 和 POSIX 没有定义任何错误。
.SH NOTES
.\" This case is not documented in HP-US, Solar, FreeBSD, NetBSD, or OpenBSD!
POSIX.1\-2001 没有指定如果 \fIusecs\fP 参数为 0 会发生什么。 在 Linux (可能还有大多数其他系统)
上，效果是取消任何挂起的警报。
.PP
\fIuseconds_t\fP 类型是一种无符号整数类型，能够保存 [0,1000000] 范围内的整数。 在最初的 BSD 实现中，以及在 glibc
2.1 之前的 glibc 中，\fBualarm\fP() 的参数改为键入 \fIunsigned int\fP。 如果程序从不明确提及
\fIuseconds_t\fP，它们将更易于移植。
.PP
该函数与其他定时器函数如
\fBalarm\fP(2)、\fBsleep\fP(3)、\fBnanosleep\fP(2)、\fBsetitimer\fP(2)、\fBtimer_create\fP(2)、\fBtimer_delete\fP(2)、\fBtimer_getoverrun\fP(2)、\fBtimer_gettime\fP(2)、\fBtimer_settime\fP(2)、\fBusleep\fP(3)
的交互未说明。
.PP
这个函数已经过时了。 请改用 \fBsetitimer\fP(2) 或 POSIX 间隔定时器 ((\fBtimer_create\fP(2) 等)。
.SH "SEE ALSO"
\fBalarm\fP(2), \fBgetitimer\fP(2), \fBnanosleep\fP(2), \fBselect\fP(2),
\fBsetitimer\fP(2), \fBusleep\fP(3), \fBtime\fP(7)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
