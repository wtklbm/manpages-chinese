.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright (c) 2003 Andries Brouwer (aeb@cwi.nl)
.\"
.\" SPDX-License-Identifier: GPL-2.0-or-later
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH cfree 3 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
cfree \- 释放分配的内存
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
.PP
\fB#include <stdlib.h>\fP
.PP
/* In SunOS 4 */
\fBint cfree(void *\fP\fIptr\fP\fB);\fP
.PP
/* In glibc or FreeBSD libcompat */
\fBvoid cfree(void *\fP\fIptr\fP\fB);\fP
.PP
/* In SCO OpenServer */
\fBvoid cfree(char \fP\fIptr\fP\fB[.\fP\fIsize\fP\fB * .\fP\fInum\fP\fB], unsigned int \fP\fInum\fP\fB, unsigned int \fP\fIsize\fP\fB);\fP
.PP
/* In Solaris watchmalloc.so.1 */
\fBvoid cfree(void \fP\fIptr\fP\fB[.\fP\fIelsize\fP\fB * .\fP\fInelem\fP\fB], size_t \fP\fInelem\fP\fB, size_t \fP\fIelsize\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBcfree\fP():
.nf
    由于 glibc 2.19:
        _DEFAULT_SOURCE
    glibc 2.19 及更早版本:
        _BSD_SOURCE || _SVID_SOURCE
.fi
.SH DESCRIPTION
这个函数不应该被使用。 请改用 \fBfree\fP(3)。 从 glibc 2.26 开始，它已从 glibc 中删除。
.SS "1\-arg cfree"
在 glibc 中，函数 \fBcfree\fP() 是 \fBfree\fP(3)、"added for compatibility with SunOS"
的同义词。
.PP
其他系统有其他函数用这个名字。 声明有时在 \fI<stdlib.h>\fP 中，有时在 \fI<malloc.h>\fP 中。
.SS "3\-arg cfree"
一些 SCO 和 Solaris 版本的 malloc 库带有 3 个参数 \fBcfree\fP()，显然是 \fBcalloc\fP(3) 的模拟。
.PP
如果您在移植某些东西时需要它，请添加
.PP
.in +4n
.EX
#define cfree(p, n, s) free((p))
.EE
.in
.PP
到您的文件。
.PP
一个经常被问到的问题是 ` 我可以使用 \fBfree\fP(3) 来释放分配给 \fBcalloc\fP(3) 的内存，还是我需要 \fBcfree\fP()?"
答案: 使用 \fBfree\fP(3)。
.PP
SCO 手册写道: "The cfree routine is provided for compliance to the iBCSe2
standard and simply calls free. The num and size arguments to cfree are not
used."
.SH "RETURN VALUE"
SunOS 版本的 \fBcfree\fP() (\fBfree\fP(3)) 的同义词) 成功返回 1，失败返回 0。 如果出现错误，\fIerrno\fP 将设置为
\fBEINVAL\fP:，\fIptr\fP 的值不是指向先前由 \fBmalloc\fP(3) 系列中的一个例程分配的块的指针。
.SH VERSIONS
.\" commit 025b33ae84bb8f15b2748a1d8605dca453fce112
在 glibc 2.26 中删除了 \fBcfree\fP() 函数。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBcfree\fP()
T}	Thread safety	MT\-Safe /* In glibc */
.TE
.hy
.ad
.sp 1
.SH STANDARDS
SCO 使用的 \fBcfree\fP() 的 3 \- 参数版本符合 iBCSe2 标准: Intel386 Binary Compatibility
Specification, Edition 2.
.SH "SEE ALSO"
\fBmalloc\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
