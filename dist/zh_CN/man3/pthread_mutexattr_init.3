.\" -*- coding: UTF-8 -*-
.\" Copyright (c) 2017, Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH pthread_mutexattr_init 3 2022\-10\-30 "Linux man\-pages 6.03" 
.SH NAME
pthread_mutexattr_init, pthread_mutexattr_destroy \- 初始化并销毁一个互锁属性对象
.SH LIBRARY
POSIX 线程库 (\fIlibpthread\fP, \fI\-lpthread\fP)
.SH SYNOPSIS
.nf
\fB#include <pthread.h>\fP
.PP
\fBint pthread_mutexattr_init(pthread_mutexattr_t *\fP\fIattr\fP\fB);\fP
\fBint pthread_mutexattr_destroy(pthread_mutexattr_t *\fP\fIattr\fP\fB);\fP
.fi
.SH DESCRIPTION
\fBpthread_mutexattr_init\fP() 函数用实现定义的所有属性的默认值初始化 \fIattr\fP 指向的互连锁属性对象。
.PP
初始化一个已经初始化的交互锁属性对象的结果是未定义的。
.PP
\fBpthread_mutexattr_destroy\fP() 函数销毁一个交互锁属性对象 (使其未初始化)。 一旦互连锁属性对象被销毁，它就可以用
\fBpthread_mutexattr_init\fP() 重新初始化。
.PP
销毁未初始化的交互锁属性对象的结果是未定义的。
.SH "RETURN VALUE"
成功时，这些函数返回 0。 出错时，它们返回一个正的错误号。
.SH STANDARDS
POSIX.1\-2001, POSIX.1\-2008.
.SH NOTES
对互连锁属性对象的后续更改不会影响已经使用该对象初始化的互连锁。
.SH "SEE ALSO"
.ad l
.nh
\fBpthread_mutex_init\fP(3), \fBpthread_mutexattr_getpshared\fP(3),
\fBpthread_mutexattr_getrobust\fP(3), \fBpthreads\fP(7)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
