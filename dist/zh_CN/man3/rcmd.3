.\" -*- coding: UTF-8 -*-
'\" t
.\"	$NetBSD: rcmd.3,v 1.9 1996/05/28 02:07:39 mrg Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" SPDX-License-Identifier: BSD-4-Clause-UC
.\"
.\"     @(#)rcmd.3	8.1 (Berkeley) 6/4/93
.\"
.\" Contributed as Linux man page by David A. Holland, 970908
.\" I have not checked whether the Linux situation is exactly the same.
.\"
.\" 2007-12-08, mtk, Converted from mdoc to man macros
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH rcmd 3 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
rcmd, rresvport, iruserok, ruserok, rcmd_af, rresvport_af, iruserok_af,
ruserok_af \- routines for returning a stream to a remote command
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <netdb.h>    \fP/* Or <unistd.h> on some systems */
.PP
\fBint rcmd(char **restrict \fP\fIahost\fP\fB, unsigned short \fP\fIinport\fP\fB,\fP
\fB            const char *restrict \fP\fIlocuser\fP\fB,\fP
\fB            const char *restrict \fP\fIremuser\fP\fB,\fP
\fB            const char *restrict \fP\fIcmd\fP\fB, int *restrict \fP\fIfd2p\fP\fB);\fP
.PP
\fBint rresvport(int *\fP\fIport\fP\fB);\fP
.PP
\fBint iruserok(uint32_t \fP\fIraddr\fP\fB, int \fP\fIsuperuser\fP\fB,\fP
\fB            const char *\fP\fIruser\fP\fB, const char *\fP\fIluser\fP\fB);\fP 
\fBint ruserok(const char *\fP\fIrhost\fP\fB, int \fP\fIsuperuser\fP\fB,\fP
\fB            const char *\fP\fIruser\fP\fB, const char *\fP\fIluser\fP\fB);\fP
.PP
\fBint rcmd_af(char **restrict \fP\fIahost\fP\fB, unsigned short \fP\fIinport\fP\fB,\fP
\fB            const char *restrict \fP\fIlocuser\fP\fB,\fP
\fB            const char *restrict \fP\fIremuser\fP\fB,\fP
\fB            const char *restrict \fP\fIcmd\fP\fB, int *restrict \fP\fIfd2p\fP\fB,\fP
\fB            sa_family_t \fP\fIaf\fP\fB);\fP
.PP
\fBint rresvport_af(int *\fP\fIport\fP\fB, sa_family_t \fP\fIaf\fP\fB);\fP
.PP
\fBint iruserok_af(const void *restrict \fP\fIraddr\fP\fB, int \fP\fIsuperuser\fP\fB,\fP
\fB            const char *restrict \fP\fIruser\fP\fB, const char *restrict \fP\fIluser\fP\fB,\fP
\fB            sa_family_t \fP\fIaf\fP\fB);\fP
\fBint ruserok_af(const char *\fP\fIrhost\fP\fB, int \fP\fIsuperuser\fP\fB,\fP
\fB            const char *\fP\fIruser\fP\fB, const char *\fP\fIluser\fP\fB,\fP
\fB            sa_family_t \fP\fIaf\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.ad l
.PP
\fBrcmd\fP(), \fBrcmd_af\fP(), \fBrresvport\fP(), \fBrresvport_af\fP(), \fBiruserok\fP(),
\fBiruserok_af\fP(), \fBruserok\fP(), \fBruserok_af\fP():
.nf
    由于 glibc 2.19:
        _DEFAULT_SOURCE
    glibc 2.19 及更早版本:
        _BSD_SOURCE
.fi
.ad
.SH DESCRIPTION
超级用户使用 \fBrcmd\fP() 函数使用基于特权端口号的身份验证方案在远程计算机上执行命令。 \fBrresvport\fP()
函数返回一个文件描述符给一个地址在特权端口空间中的套接字。 服务器使用 \fBiruserok\fP() 和 \fBruserok\fP() 号码来验证使用
\fBrcmd\fP() 请求服务的客户端。 \fBrshd\fP(8) 服务器 (以及其他) 使用所有四个函数。
.SS rcmd()
\fBrcmd\fP() 函数使用 \fBgethostbyname\fP(3) 查找主机 \fI*ahost\fP，如果主机不存在则返回 \-1。
否则，\fI*ahost\fP 被设置为主机的标准名称，并与位于众所周知的 Internet 端口 \fIinport\fP 的服务器建立连接。
.PP
如果连接成功，则将 Internet 域中类型为 \fBSOCK_STREAM\fP 的套接字返回给调用者，并作为 \fIstdin\fP 和 \fIstdout\fP
提供给远程命令。 如果 \fIfd2p\fP 不为零，那么将设置一个控制进程的辅助通道，并将其文件描述符放置在 \fI*fd2p\fP 中。
控制进程将返回此通道上命令 (元 2) 的诊断输出，并且还将此通道上的字节作为 UNIX 信号编号接受，以转发到命令的进程组。 如果 \fIfd2p\fP 为
0，则 \fIstderr\fP (远程命令的元 2) 将与 \fIstdout\fP 相同，并且没有规定向远程进程发送任意信号，尽管您可以通过使用 out
来引起它的注意带内数据。
.PP
该协议在 \fBrshd\fP(8) 中有详细描述。
.SS rresvport()
.\"
\fBrresvport\fP() 函数用于获取绑定了特权端口的套接字。 此套接字适合 \fBrcmd\fP() 等几款函数使用。 特权端口是 0 到 1023
范围内的端口。 只有特权进程 (在 Linux 上，在管理其网络命名空间的用户命名空间中具有 \fBCAP_NET_BIND_SERVICE\fP
能力的进程) 被允许绑定到特权端口。 在 glibc 实现中，这个函数将其搜索限制在从 512 到 1023 的端口。 \fIport\fP 参数是
value\-result: 它提供给调用的值作为端口范围循环搜索的起点; 在 (successful) 返回时，它包含绑定到的端口号。
.SS "iruserok() and ruserok()"
\fBiruserok\fP() 和 \fBruserok\fP() 函数分别采用远程主机的 IP
地址或名称、两个用户名和一个标志，指示本地用户的名称是否是超级用户的名称。 然后，如果用户是超级用户 \fInot\fP，它会检查
\fI/etc/hosts.equiv\fP 文件。 如果该查找未完成或不成功，则检查本地用户主目录中的 \fI.rhosts\fP 以查看是否允许服务请求。
.PP
如果此文件不存在、不是常规文件、由用户或超级用户以外的任何人拥有、可由所有者以外的任何人写入或在任何地方硬链接，则检查自动失败。 如果在
\fIhosts.equiv\fP 文件中列出机器名称，或者在 \fI.rhosts\fP 文件中找到主机和远程用户名，则返回零; 否则 \fBiruserok\fP()
和 \fBruserok\fP() 返回 \-1。 如果本地域 (从 \fBgethostname\fP(2)) 获得) 与远程域相同，则只需要指定机器名。
.PP
如果远程主机的 IP 地址已知，则应优先使用 \fBiruserok\fP() 而不是 \fBruserok\fP()，因为它不需要信任远程主机域的 DNS
服务器。
.SS "*_af() variants"
上述所有函数均适用于 IPv4 (\fBAF_INET\fP) 套接字。 "_af" 变体采用额外的参数，允许指定套接字地址族。 对于这些函数，\fIaf\fP
参数可以指定为 \fBAF_INET\fP 或 \fBAF_INET6\fP。 此外，\fBrcmd_af\fP() 支持使用 \fBAF_UNSPEC\fP。
.SH "RETURN VALUE"
\fBrcmd\fP() 函数在成功时返回一个有效的套接字描述符。 它在错误时返回 \-1 并在标准错误时打印诊断消息。
.PP
\fBrresvport\fP() 函数在成功时返回一个有效的、绑定的套接字描述符。 失败时，它返回 \-1 并设置 \fIerrno\fP 以指示错误。 错误代码
\fBEAGAIN\fP 重载为: "All network ports in use"。
.PP
有关从 \fBruserok\fP() 和 \fBiruserok\fP() 返回的信息，请参见上文。
.SH VERSIONS
自 glibc 2.2 以来提供了函数 \fBiruserok_af\fP()、\fBrcmd_af\fP()、\fBrresvport_af\fP() 和
\fBruserok_af\fP() 函数。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBrcmd\fP(),
\fBrcmd_af\fP()
T}	Thread safety	MT\-Unsafe
T{
\fBrresvport\fP(),
\fBrresvport_af\fP()
T}	Thread safety	MT\-Safe
T{
\fBiruserok\fP(),
\fBruserok\fP(),
\fBiruserok_af\fP(),
\fBruserok_af\fP()
T}	Thread safety	MT\-Safe locale
.TE
.hy
.ad
.sp 1
.SH STANDARDS
不在 POSIX.1 中。 出现在 BSD、Solaris 和许多其他系统上。 这些函数出现在 4.2BSD。 "_af"
变体是最近添加的，并没有出现在广泛的系统中。
.SH BUGS
.\" Bug filed 25 Nov 2007:
.\" http://sources.redhat.com/bugzilla/show_bug.cgi?id=5399
\fBiruserok\fP()  and \fBiruserok_af\fP()  are declared in glibc headers only
since glibc 2.12.
.SH "SEE ALSO"
\fBrlogin\fP(1), \fBrsh\fP(1), \fBrexec\fP(3), \fBrexecd\fP(8), \fBrlogind\fP(8),
\fBrshd\fP(8)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
