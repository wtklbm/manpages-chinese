.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright (c) 2008 Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH pthread_attr_setsigmask_np 3 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
pthread_attr_setsigmask_np、pthread_attr_getsigmask_np \- 线程属性对象中的 set/get
信号掩码属性
.SH LIBRARY
POSIX 线程库 (\fIlibpthread\fP, \fI\-lpthread\fP)
.SH SYNOPSIS
.nf
\fB#define _GNU_SOURCE\fP             /* See feature_test_macros(7) */
\fB#include <pthread.h>\fP
.PP
\fBint pthread_attr_setsigmask_np(pthread_attr_t *\fP\fIattr\fP\fB,\fP
\fB                               const sigset_t *\fP\fIsigmask\fP\fB);\fP
\fBint pthread_attr_getsigmask_np(const pthread_attr_t *\fP\fIattr\fP\fB,\fP
\fB                               sigset_t *\fP\fIsigmask\fP\fB);\fP
.fi
.SH DESCRIPTION
\fBpthread_attr_setsigmask_np\fP() 函数将 \fIattr\fP 引用的线程属性对象的信号掩码属性设置为 \fI*sigmask\fP
中指定的值。 如果将 \fIsigmask\fP 指定为 NULL，则取消设置 \fIattr\fP 中的任何现有信号掩码属性。
.PP
\fBpthread_attr_getsigmask_np\fP() 函数返回 \fIsigmask\fP 指向的缓冲区中 \fIattr\fP
所指的线程属性对象的信号掩码属性。 如果当前未设置信号掩码属性，则此函数将返回特殊值 \fBPTHREAD_ATTR_NO_SIGMASK_NP\fP
作为它的结果。
.SH "RETURN VALUE"
\fBpthread_attr_setsigmask_np\fP() 函数成功时返回 0，失败时返回非零错误号。
.PP
\fBpthread_attr_getsigmask_np\fP() 函数返回 0 或 \fBPTHREAD_ATTR_NO_SIGMASK_NP\fP。 当返回
0 时，通过 \fIsigmask\fP 返回信号掩码属性。 返回值 \fBPTHREAD_ATTR_NO_SIGMASK_NP\fP 表示 \fIattr\fP
中未设置信号掩码属性。
.PP
出错时，这些函数返回一个正的错误数。
.SH ERRORS
.TP 
\fBENOMEM\fP
(\fBpthread_attr_setsigmask_np\fP()) 无法分配内存。
.SH VERSIONS
这些函数是从 glibc 2.32 开始提供的。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBpthread_attr_setsigmask_np\fP(),
\fBpthread_attr_getsigmask_np\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
这些函数是非标准的 GNU 扩展; 因此名称中有后缀 "_np" (nonportable)。
.SH NOTES
信号掩码属性确定将分配给使用线程属性对象 \fIattr\fP 创建的线程的信号掩码。 如果未设置此属性，则使用 \fIattr\fP
创建的线程将继承创建线程的信号掩码的副本。
.PP
有关信号掩码的更多详细信息，请参见 \fBsigprocmask\fP(2)。 有关可用于操作和检查信号集的一组宏的描述，请参见
\fBsigsetops\fP(3)。
.PP
在没有 \fBpthread_attr_setsigmask_np\fP() 的情况下，可以创建一个具有所需信号掩码的线程，如下所示:
.IP \[bu] 3
创建线程使用 \fBpthread_sigmask\fP(3) 来保存其当前信号掩码并将其掩码设置为阻止所有信号。
.IP \[bu]
然后使用 \fBpthread_create\fP() 创建新线程; 新线程将继承创建线程的信号掩码。
.IP \[bu]
新线程使用 \fBpthread_sigmask\fP(3) 将其信号掩码设置为所需的值。
.IP \[bu]
创建线程将其信号掩码恢复为原始值。
.PP
按照上述步骤，新线程在将其信号掩码调整为所需值之前不可能接收到信号。
.SH "SEE ALSO"
\fBsigprocmask\fP(2), \fBpthread_attr_init\fP(3), \fBpthread_sigmask\fP(3),
\fBpthreads\fP(7), \fBsignal\fP(7)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
