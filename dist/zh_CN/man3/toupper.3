.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\" and Copyright 2014 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" Modified Sat Jul 24 17:45:39 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2000-02-13 by Nicolás Lichtmaier <nick@debian.org>
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH toupper 3 2022\-12\-29 "Linux man\-pages 6.03" 
.SH NAME
toupper, tolower, toupper_l, tolower_l \- 转换大写或小写
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <ctype.h>\fP
.PP
\fBint toupper(int \fP\fIc\fP\fB);\fP
\fBint tolower(int \fP\fIc\fP\fB);\fP
.PP
\fBint toupper_l(int \fP\fIc\fP\fB, locale_t \fP\fIlocale\fP\fB);\fP
\fBint tolower_l(int \fP\fIc\fP\fB, locale_t \fP\fIlocale\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBtoupper_l\fP(), \fBtolower_l\fP():
.nf
    由于 glibc 2.10:
        _XOPEN_SOURCE >= 700
    在 glibc 2.10 之前:
        _GNU_SOURCE
.fi
.SH DESCRIPTION
这些函数将小写字母转换为大写字母，反之亦然。
.PP
如果 \fIc\fP 是小写字母，如果当前语言环境中存在大写表示形式，\fBtoupper\fP() 将返回其对应的大写字母。 否则，它返回 \fIc\fP。
\fBtoupper_l\fP() 函数执行相同的任务，但使用区域设置句柄 \fIlocale\fP 引用的区域设置。
.PP
如果 \fIc\fP 是大写字母，如果当前语言环境中存在小写表示形式，则 \fBtolower\fP() 返回其等效的小写字母。 否则，它返回 \fIc\fP。
\fBtolower_l\fP() 函数执行相同的任务，但使用区域设置句柄 \fIlocale\fP 引用的区域设置。
.PP
如果 \fIc\fP 既不是 \fIunsigned char\fP 值也不是 \fBEOF\fP，则这些函数的行为未定义。
.PP
如果 \fIlocale\fP 是特殊的语言环境对象 \fBLC_GLOBAL_LOCALE\fP (请参见 \fBduplocale\fP(3))
或不是有效的语言环境对象句柄)，则 \fBtoupper_l\fP() 和 \fBtolower_l\fP() 的行为未定义。
.SH "RETURN VALUE"
返回值是转换后的字母的值，如果无法进行转换，则返回 \fIc\fP。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBtoupper\fP(),
\fBtolower\fP(),
\fBtoupper_l\fP(),
\fBtolower_l\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
\fBtoupper\fP(), \fBtolower\fP(): C99, 4.3BSD, POSIX.1\-2001, POSIX.1\-2008.
.PP
\fBtoupper_l\fP(), \fBtolower_l\fP(): POSIX.1\-2008.
.SH NOTES
标准要求这些函数的参数 \fIc\fP 是 \fBEOF\fP 或在类型 \fIunsigned char\fP 中可表示的值。 如果参数 \fIc\fP 的类型为
\fIchar\fP，则必须将其强制转换为 \fIunsigned char\fP，如下例所示:
.PP
.in +4n
.EX
char c;
\&...
res = toupper((unsigned char) c);
.EE
.in
.PP
这是必要的，因为 \fIchar\fP 可能等同于 \fIsigned char\fP，在这种情况下，设置最高位的字节在转换为 \fIint\fP
时将进行符号扩展，从而产生超出 \fIunsigned char\fP 范围的值。
.PP
构成大写字母或小写字母的详细信息取决于语言环境。 例如，默认的 \fB"C"\fP 语言环境不知道元音变音，因此不会为它们进行任何转换。
.PP
.\" FIXME One day the statement about "sharp s" needs to be reworked,
.\" since there is nowadays a capital "sharp s" that has a codepoint
.\" in Unicode 5.0; see https://en.wikipedia.org/wiki/Capital_%E1%BA%9E
在某些非英语语言环境中，小写字母没有对应的大写字母; 德国的 sharp s 就是一个例子。
.SH "SEE ALSO"
\fBisalpha\fP(3), \fBnewlocale\fP(3), \fBsetlocale\fP(3), \fBtowlower\fP(3),
\fBtowupper\fP(3), \fBuselocale\fP(3), \fBlocale\fP(7)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
