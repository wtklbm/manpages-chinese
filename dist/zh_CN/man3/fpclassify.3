.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright 2002 Walter Harms (walter.harms@informatik.uni-oldenburg.de)
.\"
.\" SPDX-License-Identifier: GPL-1.0-or-later
.\"
.\" This was done with the help of the glibc manual.
.\"
.\" 2004-10-31, aeb, corrected
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH fpclassify 3 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
fpclassify、isfinite、isnormal、isnan、isinf \- 浮点分类宏
.SH LIBRARY
数学库 (\fIlibm\fP、\fI\-lm\fP)
.SH SYNOPSIS
.nf
\fB#include <math.h>\fP
.PP
\fBint fpclassify(\fP\fIx\fP\fB);\fP
\fBint isfinite(\fP\fIx\fP\fB);\fP
\fBint isnormal(\fP\fIx\fP\fB);\fP
\fBint isnan(\fP\fIx\fP\fB);\fP
\fBint isinf(\fP\fIx\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
.\" I haven't fully grokked the source to determine the FTM requirements;
.\" in part, the following has been tested by experiment.
\fBfpclassify\fP(), \fBisfinite\fP(), \fBisnormal\fP():
.nf
    _ISOC99_ 源 ||_POSIX_C_SOURCE >= 200112L
.fi
.PP
\fBisnan\fP():
.nf
    _ISOC99_ 源 ||_POSIX_C_SOURCE >= 200112L
        || _XOPEN_SOURCE
        || /* Since glibc 2.19: */ _DEFAULT_SOURCE
        || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.fi
.PP
\fBisinf\fP():
.nf
    _ISOC99_ 源 ||_POSIX_C_SOURCE >= 200112L
        || /* Since glibc 2.19: */ _DEFAULT_SOURCE
        || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.fi
.SH DESCRIPTION
浮点数可以有特殊值，例如无穷大或 NaN。 有了宏 \fBfpclassify(\fP\fIx\fP\fB)\fP 您就可以知道 \fIx\fP 是什么型号了。
宏将任何浮点表达式作为参数。 结果是以下值之一:
.TP  14
\fBFP_NAN\fP
\fIx\fP 是 "Not a Number"。
.TP 
\fBFP_INFINITE\fP
\fIx\fP 为正无穷大或 negative 无穷大。
.TP 
\fBFP_ZERO\fP
\fIx\fP 为零。
.TP 
\fBFP_SUBNORMAL\fP
\fIx\fP 太小，无法以规范化格式表示。
.TP 
\fBFP_NORMAL\fP
如果以上都不正确，那么它一定是一个普通的浮点数。
.PP
其他宏提供了一些标准问题的简短答案。
.TP  14
\fBisfinite(\fP\fIx\fP\fB)\fP
返回一个非零值如果
.br
(fpclassify(x) != FP_NAN && fpclassify(x) != FP_INFINITE)
.TP 
\fBisnormal(\fP\fIx\fP\fB)\fP
如果 (fpclassify(x) == FP_NORMAL，则返回非零值)
.TP 
\fBisnan(\fP\fIx\fP\fB)\fP
如果 (fpclassify(x) == FP_NAN，则返回非零值)
.TP 
\fBisinf(\fP\fIx\fP\fB)\fP
如果 \fIx\fP 为正无穷大，则返回 1，如果 \fIx\fP 为 negative 无穷大，则返回 \-1。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBfpclassify\fP(),
\fBisfinite\fP(),
\fBisnormal\fP(),
\fBisnan\fP(),
\fBisinf\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
POSIX.1\-2001, POSIX.1\-2008, C99.
.PP
对于 \fBisinf\fP()，标准仅说明当且仅当参数具有无限值时返回值不为零。
.SH NOTES
在 glibc 2.01 及更早版本中，如果 \fIx\fP 为正无穷大或 negative 无穷大，则 \fBisinf\fP() 返回非零值 (实际上: 1)。
(这就是 C99 所需要的。)
.SH "SEE ALSO"
\fBfinite\fP(3), \fBINFINITY\fP(3), \fBisgreater\fP(3), \fBsignbit\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
