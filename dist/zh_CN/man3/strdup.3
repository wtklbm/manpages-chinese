.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sun Jul 25 10:41:34 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Wed Oct 17 01:12:26 2001 by John Levon <moz@compsoc.man.ac.uk>
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH strdup 3 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
strdup, strndup, strdupa, strndupa \- 复制一个字符串
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <string.h>\fP
.PP
\fBchar *strdup(const char *\fP\fIs\fP\fB);\fP
.PP
\fBchar *strndup(const char \fP\fIs\fP\fB[.\fP\fIn\fP\fB], size_t \fP\fIn\fP\fB);\fP
\fBchar *strdupa(const char *\fP\fIs\fP\fB);\fP
\fBchar *strndupa(const char \fP\fIs\fP\fB[.\fP\fIn\fP\fB], size_t \fP\fIn\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBstrdup\fP():
.nf
.\"    || _XOPEN_SOURCE && _XOPEN_SOURCE_EXTENDED
    _XOPEN_SOURCE >= 500
        || /* Since glibc 2.12: */ _POSIX_C_SOURCE >= 200809L
        || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.fi
.PP
\fBstrndup\fP():
.nf
    由于 glibc 2.10:
        _POSIX_C_SOURCE >= 200809L
    在 glibc 2.10 之前:
        _GNU_SOURCE
.fi
.PP
\fBstrdupa\fP(), \fBstrndupa\fP():
.nf
    _GNU_SOURCE
.fi
.SH DESCRIPTION
\fBstrdup\fP() 函数返回一个指向新字符串的指针，该字符串是字符串 \fIs\fP 的副本。 新字符串的内存是通过 \fBmalloc\fP(3)
获取的，可以通过 \fBfree\fP(3) 释放。
.PP
\fBstrndup\fP() 函数类似，但最多复制 \fIn\fP 个字节。 如果 \fIs\fP 比 \fIn\fP 长，则只复制 \fIn\fP 字节，并添加终止空字节
(\[aq]\e0\[aq])。
.PP
\fBstrdupa\fP() 和 \fBstrndupa\fP() 类似，但使用 \fBalloca\fP(3) 来分配缓冲区。
.SH "RETURN VALUE"
成功时，\fBstrdup\fP() 函数返回指向重复字符串的指针。 如果可用内存不足，则返回 NULL，并设置 \fIerrno\fP 以指示错误。
.SH ERRORS
.TP 
\fBENOMEM\fP
可用内存不足，无法分配重复的字符串。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBstrdup\fP(),
\fBstrndup\fP(),
\fBstrdupa\fP(),
\fBstrndupa\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
.\" 4.3BSD-Reno, not (first) 4.3BSD.
\fBstrdup\fP() 符合 SVr4、4.3BSD、POSIX.1\-2001。 \fBstrndup\fP() 符合 POSIX.1\-2008。
\fBstrdupa\fP() 和 \fBstrndupa\fP() 是 GNU 扩展。
.SH "SEE ALSO"
\fBalloca\fP(3), \fBcalloc\fP(3), \fBfree\fP(3), \fBmalloc\fP(3), \fBrealloc\fP(3),
\fBstring\fP(3), \fBwcsdup\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
