.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright (c) 2008 Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH pthread_attr_setinheritsched 3 2022\-12\-15 "Linux man\-pages 6.03" 
.SH NAME
pthread_attr_setinheritsched、pthread_attr_getinheritsched \- 线程属性对象中的 set/get
继承调度程序属性
.SH LIBRARY
POSIX 线程库 (\fIlibpthread\fP, \fI\-lpthread\fP)
.SH SYNOPSIS
.nf
\fB#include <pthread.h>\fP
.PP
\fBint pthread_attr_setinheritsched(pthread_attr_t *\fP\fIattr\fP\fB,\fP
\fB                                 int \fP\fIinheritsched\fP\fB);\fP
\fBint pthread_attr_getinheritsched(const pthread_attr_t *restrict \fP\fIattr\fP\fB,\fP
\fB                                 int *restrict \fP\fIinheritsched\fP\fB);\fP
.fi
.SH DESCRIPTION
\fBpthread_attr_setinheritsched\fP() 函数将 \fIattr\fP 引用的线程属性对象的 inherit\-scheduler
属性设置为 \fIinheritsched\fP 中指定的值。 inherit\-scheduler 属性确定使用线程属性对象 \fIattr\fP
创建的线程是从调用线程继承其调度属性，还是从 \fIattr\fP 获取它们。
.PP
以下调度属性受 inherit\-scheduler 属性影响: 调度策略
(\fBpthread_attr_setschedpolicy\fP(3))，调度优先级
(\fBpthread_attr_setschedparam\fP(3))，竞争作用域 (\fBpthread_attr_setscope\fP(3))。
.PP
可以在 \fIinheritsched\fP: 中指定以下值
.TP 
\fBPTHREAD_INHERIT_SCHED\fP
使用 \fIattr\fP 创建的线程从创建线程继承调度属性; \fIattr\fP 中的调度属性将被忽略。
.TP 
\fBPTHREAD_EXPLICIT_SCHED\fP
.\" FIXME Document the defaults for scheduler settings
使用 \fIattr\fP 创建的线程从属性对象指定的值中获取它们的调度属性。
.PP
新初始化的线程属性对象中 inherit\-scheduler 属性的默认设置是 \fBPTHREAD_INHERIT_SCHED\fP。
.PP
\fBpthread_attr_getinheritsched\fP() 返回 \fIinheritsched\fP 指向的缓冲区中线程属性对象 \fIattr\fP 的
inherit\-scheduler 属性。
.SH "RETURN VALUE"
成功时，这些函数返回 0; 出错时，它们返回一个非零错误号。
.SH ERRORS
\fBpthread_attr_setinheritsched\fP() 可能会因以下错误而失败:
.TP 
\fBEINVAL\fP
\fIinheritsched\fP 中的值无效。
.PP
.\" .SH VERSIONS
.\" Available since glibc 2.0.
POSIX.1 还记录了 \fBpthread_attr_setinheritsched\fP() 的可选 \fBENOTSUP\fP 错误
(`尝试将属性设置为不受支持的值`)。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBpthread_attr_setinheritsched\fP(),
\fBpthread_attr_getinheritsched\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
POSIX.1\-2001, POSIX.1\-2008.
.SH BUGS
.\" FIXME . Track status of the following bug:
.\" http://sourceware.org/bugzilla/show_bug.cgi?id=7007
与 glibc 2.8 一样，如果使用 \fBpthread_attr_init\fP(3) 初始化线程属性对象，则属性对象的调度策略设置为
\fBSCHED_OTHER\fP，调度优先级设置为 0。 但是，如果将 inherit\-scheduler 属性设置为
\fBPTHREAD_EXPLICIT_SCHED\fP，则使用该属性对象创建的线程会错误地从创建线程继承其调度属性。 如果在调用
\fBpthread_create\fP(3) 之前在线程属性对象中显式设置调度策略或调度优先级属性，则不会发生此错误。
.SH EXAMPLES
请参见 \fBpthread_setschedparam\fP(3)。
.SH "SEE ALSO"
.ad l
.nh
\fBpthread_attr_init\fP(3), \fBpthread_attr_setschedparam\fP(3),
\fBpthread_attr_setschedpolicy\fP(3), \fBpthread_attr_setscope\fP(3),
\fBpthread_create\fP(3), \fBpthread_setschedparam\fP(3),
\fBpthread_setschedprio\fP(3), \fBpthreads\fP(7), \fBsched\fP(7)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
