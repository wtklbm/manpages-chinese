.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright 2001 Andries Brouwer <aeb@cwi.nl>.
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH fseeko 3 2022\-12\-15 "Linux man\-pages 6.03" 
.SH NAME
fseeko, ftello\-seek 到或报告文件位置
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <stdio.h>\fP
.PP
\fBint fseeko(FILE *\fP\fIstream\fP\fB, off_t \fP\fIoffset\fP\fB, int \fP\fIwhence\fP\fB);\fP
\fBoff_t ftello(FILE *\fP\fIstream\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBfseeko\fP(), \fBftello\fP():
.nf
    _FILE_OFFSET_BITS == 64 || _POSIX_C_SOURCE >= 200112L
.fi
.SH DESCRIPTION
\fBfseeko\fP() 和 \fBftello\fP() 函数与 \fBfseek\fP(3) 和 \fBftell\fP(3) 相同 (分别参见
\fBfseek\fP(3))，除了 \fBfseeko\fP() 的 \fIoffset\fP 参数和 \fBftello\fP() 的返回值是 \fIoff_t\fP 类型而不是
\fIlong\fP 类型。
.PP
在某些体系结构上，\fIoff_t\fP 和 \fIlong\fP 都是 32 位类型，但是将 \fB_FILE_OFFSET_BITS\fP 定义为值 64 (在包含
\fIany\fP 头文件之前) 会将 \fIoff_t\fP 转换为 64 位类型。
.SH "RETURN VALUE"
成功完成后，\fBfseeko\fP() 返回 0，而 \fBftello\fP() 返回当前偏移量。 否则，返回 \-1 并设置 \fIerrno\fP 以指示错误。
.SH ERRORS
请参见 \fBfseek\fP(3) 中的错误。
.SH VERSIONS
这些函数从 glibc 2.1 开始可用。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBfseeko\fP(),
\fBftello\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
POSIX.1\-2001, POSIX.1\-2008, SUSv2.
.SH NOTES
这些函数的声明也可以通过定义过时的 \fB_LARGEFILE_SOURCE\fP 特性测试宏来获得。
.SH "SEE ALSO"
\fBfseek\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
