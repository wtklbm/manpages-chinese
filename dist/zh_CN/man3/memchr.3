.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\" and Copyright (c) 2008 Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" Modified Mon Apr 12 12:49:57 1993, David Metcalfe
.\" Modified Sat Jul 24 18:56:22 1993, Rik Faith (faith@cs.unc.edu)
.\" Modified Wed Feb 20 21:09:36 2002, Ian Redfern (redferni@logica.com)
.\" 2008-07-09, mtk, add rawmemchr()
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH memchr 3 2023\-01\-05 "Linux man\-pages 6.03" 
.SH NAME
memchr、memrchr、rawmemchr \- 扫描内存中的字符
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <string.h>\fP
.PP
\fBvoid *memchr(const void \fP\fIs\fP\fB[.\fP\fIn\fP\fB], int \fP\fIc\fP\fB, size_t \fP\fIn\fP\fB);\fP
\fBvoid *memrchr(const void \fP\fIs\fP\fB[.\fP\fIn\fP\fB], int \fP\fIc\fP\fB, size_t \fP\fIn\fP\fB);\fP
.PP
\fB[[deprecated]] void *rawmemchr(const void \fP\fIs\fP\fB[.\fP\fIn\fP\fB], 整数 \fP\fIc\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBmemrchr\fP(), \fBrawmemchr\fP():
.nf
    _GNU_SOURCE
.fi
.SH DESCRIPTION
\fBmemchr\fP() 函数扫描 \fIs\fP 指向的内存区域的初始 \fIn\fP 字节，以查找 \fIc\fP 的第一个实例。 \fIc\fP 和 \fIs\fP
指向的内存区域的字节都被解释为 \fIunsigned char\fP。
.PP
\fBmemrchr\fP() 函数类似于 \fBmemchr\fP() 函数，不同之处在于它从 \fIs\fP 指向的 \fIn\fP
字节的末尾向后搜索，而不是从头向前搜索。
.PP
\fBrawmemchr\fP() 函数与 \fBmemchr\fP() 类似，但它假设 (即，程序员肯定知道) \fIc\fP 的实例位于内存区域中的某处，该内存区域从
\fIs\fP 指向的位置开始。 如果未找到 \fIc\fP 的实例，则行为未定义。 请改用 \fBstrlen\fP(3) 或 \fBmemchr\fP(3)。
.SH "RETURN VALUE"
\fBmemchr\fP() 和 \fBmemrchr\fP() 函数返回一个指向匹配字节的指针，如果字符没有出现在给定的内存区域中，则返回 NULL。
.PP
\fBrawmemchr\fP() 函数返回指向匹配字节的指针。
.SH VERSIONS
\fBrawmemchr\fP() 最早出现在 glibc 2.1 中。
.PP
\fBmemrchr\fP() 最早出现在 glibc 2.2 中。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBmemchr\fP(),
\fBmemrchr\fP(),
\fBrawmemchr\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
\fBmemchr\fP(): POSIX.1\-2001, POSIX.1\-2008, C99, SVr4, 4.3BSD.
.PP
\fBmemrchr\fP() 函数是一个 GNU 扩展，从 glibc 2.1.91 开始可用。
.PP
\fBrawmemchr\fP() 函数是一个 GNU 扩展，从 glibc 2.1 开始可用。
.SH "SEE ALSO"
\fBbstring\fP(3), \fBffs\fP(3), \fBmemmem\fP(3), \fBstrchr\fP(3), \fBstrpbrk\fP(3),
\fBstrrchr\fP(3), \fBstrsep\fP(3), \fBstrspn\fP(3), \fBstrstr\fP(3), \fBwmemchr\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
