.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright (c) 2001 Markus Kuhn <mkuhn@acm.org>
.\" and Copyright (c) 2015 Sam Varshavchik <mrsam@courier-mta.com>
.\" and Copyright (c) 2015 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: GPL-2.0-or-later
.\"
.\" References consulted:
.\"   GNU glibc-2 manual
.\"   OpenGroup's Single UNIX specification http://www.UNIX-systems.org/online.html
.\"
.\" Corrected prototype, 2002-10-18, aeb
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH nl_langinfo 3 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
nl_langinfo, nl_langinfo_l \- 查询语言和地区信息
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <langinfo.h>\fP
.PP
\fBchar *nl_langinfo(nl_item \fP\fIitem\fP\fB);\fP
\fBchar *nl_langinfo_l(nl_item \fP\fIitem\fP\fB, locale_t \fP\fIlocale\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBnl_langinfo_l\fP():
.nf
    由于 glibc 2.24:
        _POSIX_C_SOURCE >= 200809L
    glibc 2.23 及更早版本:
        _POSIX_C_SOURCE >= 200112L
.fi
.SH DESCRIPTION
\fBnl_langinfo\fP() 和 \fBnl_langinfo_l\fP() 函数以比 \fBlocaleconv\fP(3)
更灵活的方式提供对语言环境信息的访问。 \fBnl_langinfo\fP() 返回一个字符串，它是程序当前全局语言环境中 \fIitem\fP 对应的值。
\fBnl_langinfo_l\fP() 返回一个字符串，它是对应于区域设置对象 \fIlocale\fP 所标识的区域设置的 \fIitem\fP 的值，该对象先前由
\fBnewlocale\fP(3) 创建。 可以查询语言环境类别的单个和附加元素。
.PP
可以使用 \fI<langinfo.h>\fP 中定义的常量在 \fIitem\fP 中指定的语言环境元素的示例是:
.TP 
\fBCODESET\fP\ (LC_CTYPE)
返回一个字符串，其中包含所选语言环境中使用的字符编码的名称，例如 "UTF\-8"、"ISO\-8859\-1" 或 "ANSI_X3.4\-1968"
(更广为人知的名称是 US\-ASCII)。 这与您使用 "locale charmap" 获得的字符串相同。 有关字符编码名称的列表，请尝试
"locale \-m" (请参见 \fBlocale\fP(1)).
.TP 
\fBD_T_FMT\fP\ (LC_TIME)
返回一个字符串，该字符串可用作 \fBstrftime\fP(3) 的格式字符串，以特定于语言环境的方式 ((\fB%c\fP 转换规范) 表示时间和日期。
.TP 
\fBD_FMT\fP\ (LC_TIME)
返回一个字符串，该字符串可用作 \fBstrftime\fP(3) 的格式字符串，以特定于语言环境的方式 ((\fB%x\fP 转换规范) 表示日期。
.TP 
\fBT_FMT\fP\ (LC_TIME)
返回一个字符串，该字符串可用作 \fBstrftime\fP(3) 的格式字符串，以特定于语言环境的方式 ((\fB%X\fP 转换规范) 表示时间。
.TP 
\fBAM_STR\fP\ (LC_TIME)
返回表示午前 (中午之前，"AM") 时间词缀的字符串。 (用于 \fB%p\fP \fBstrftime\fP(3) 转换规格。)
.TP 
\fBPM_STR\fP\ (LC_TIME)
返回表示午夜后 (午夜之前，"PM") 时间词缀的字符串。 (用于 \fB%p\fP \fBstrftime\fP(3) 转换规格。)
.TP 
\fBT_FMT_AMPM\fP\ (LC_TIME)
返回一个字符串，该字符串可用作 \fBstrftime\fP(3) 的格式字符串，以特定于语言环境的方式 ((\fB%r\fP 转换规范) 以 am 或 pm
表示法表示时间。
.TP 
\fBERA\fP\ (LC_TIME)
返回纪元描述，其中包含有关区域设置中每个纪元的年份计算和显示方式的信息。 每个时代描述段应具有以下格式:
.RS
.IP
\fIdirection\fP:\fIoffset\fP:\fIstart_date\fP:\fIend_date\fP:\fIera_name\fP:\fIera_format\fP
.RE
.IP
根据以下定义:
.RS
.TP  12
\fIdirection\fP
\[dq]\fB+\fP\[dq] 或 \[dq]\fB\-\fP\[dq] 字符。 \[dq]\fB+\fP\[dq] 表示年份从 \fIstart_date\fP 向
\fIend_date\fP 递增，\[dq]\fB\-\fP\[dq] 表示相反。
.TP 
\fIoffset\fP
\fIstart_date\fP 的纪元年。
.TP 
\fIstart_date\fP
\fIyyyy\fP/\fImm\fP/\fIdd\fP 格式的日期，其中 \fIyyyy\fP、\fImm\fP 和 \fIdd\fP 分别是纪元开始的年、月和日数。
.TP 
\fIend_date\fP
纪元的结束日期，格式与 \fIstart_date\fP 相同，或两个特殊值 \[dq]\fB\-*\fP\[dq] (负无穷大) 或 \[dq]\fB+*\fP\[dq]
(正无穷大) 之一。
.TP 
\fIera_name\fP
纪元名称，对应 \fB%EC\fP \fBstrftime\fP(3) 转换规范。
.TP 
\fIera_format\fP
时代年份格式，对应 \fB%EY\fP \fBstrftime\fP(3) 转换规范。
.RE
.IP
时代描述段以分号分隔。 大多数语言环境不定义此值。 确实定义此值的语言环境示例是日语和泰语语言环境。
.TP 
\fBERA_D_T_FMT\fP\ (LC_TIME)
返回一个字符串，该字符串可用作 \fBstrftime\fP(3) 的格式字符串，用于以特定于语言环境的方式 ((\fB%Ec\fP 转换规范)
替代时间和日期的表示。
.TP 
\fBERA_D_FMT\fP\ (LC_TIME)
返回一个字符串，该字符串可用作 \fBstrftime\fP(3) 的格式字符串，用于以特定于区域设置的方式 ((\fB%Ex\fP 转换规范) 替代日期表示。
.TP 
\fBERA_T_FMT\fP\ (LC_TIME)
返回一个字符串，该字符串可用作 \fBstrftime\fP(3) 的格式字符串，用于以特定于语言环境的方式 ((\fB%EX\fP 转换规范) 替代时间的表示。
.TP 
\fBDAY_\fP{1\[en]7} (LC_TIME)
返回一周中 \fIn\fP\-th 日的名称。 [Warning: this follows the US convention DAY_1 = Sunday,
not the international convention (ISO 8601) that Monday is the first day of
the week.] (用于 \fB%A\fP \fBstrftime\fP(3) 转换规格。)
.TP 
\fBABDAY_\fP{1\[en]7} (LC_TIME)
返回一周中第 \fIn\fP\-th 天的缩写名称。 (用于 \fB%a\fP \fBstrftime\fP(3) 转换规格。)
.TP 
\fBMON_\fP{1\[en]12} (LC_TIME)
返回 \fIn\fP\-th 月份的名称。 (用于 \fB%B\fP \fBstrftime\fP(3) 转换规格。)
.TP 
\fBABMON_\fP{1\[en]12} (LC_TIME)
返回 \fIn\fP\-th 月份的缩写名称。 (用于 \fB%b\fP \fBstrftime\fP(3) 转换规格。)
.TP 
\fBRADIXCHAR\fP\ (LC_NUMERIC)
返回基数字符 (小数点、小数逗号等)。
.TP 
\fBTHOUSEP\fP\ (LC_NUMERIC)
返回千位分隔符 (三位数字组)。
.TP 
\fBYESEXPR\fP\ (LC_MESSAGES)
返回可与 \fBregex\fP(3) 函数一起使用的正则表达式，以识别对 yes/no 问题的肯定回答。
.TP 
\fBNOEXPR\fP\ (LC_MESSAGES)
返回可与 \fBregex\fP(3) 函数一起使用的正则表达式，以识别对 yes/no 问题的 negative 响应。
.TP 
\fBCRNCYSTR\fP\ (LC_MONETARY)
返回货币符号，如果符号应出现在值之前，则返回 "\-"，如果符号应出现在值之后，则返回 "+"，如果符号应替换基数字符，则返回 "."。
.PP
上面的列表仅包含可以请求的项目的一些示例。 有关更详细的列表，请参见 \fIThe GNU C Library Reference Manual\fP。
.SH "RETURN VALUE"
成功时，这些函数返回一个指向字符串的指针，该字符串是与指定语言环境中的 \fIitem\fP 对应的值。
.PP
如果 \fBsetlocale\fP(3) 没有为适当的类别选择语言环境，则 \fBnl_langinfo\fP() 返回指向 "C" 语言环境中相应字符串的指针。
如果 \fIlocale\fP 指定了未定义 \fIlanginfo\fP 数据的语言环境，则 \fBnl_langinfo_l\fP() 也是如此。
.PP
如果 \fIitem\fP 无效，则返回指向空字符串的指针。
.PP
这些函数返回的指针可能指向可能被覆盖的静态数据，或者指针本身可能被后续调用 \fBnl_langinfo\fP()、\fBnl_langinfo_l\fP() 或
\fBsetlocale\fP(3) 无效。 如果 \fIlocale\fP 引用的语言环境对象被 \fBfreelocale\fP(3) 或
\fBnewlocale\fP(3) 释放或修改，则相同的语句适用于 \fBnl_langinfo_l\fP()。
.PP
POSIX 指定应用程序不得修改这些函数返回的字符串。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBnl_langinfo\fP()
T}	Thread safety	MT\-Safe locale
.TE
.hy
.ad
.sp 1
.SH STANDARDS
POSIX.1\-2001, POSIX.1\-2008, SUSv2.
.SH NOTES
如果 \fIlocale\fP 是特殊的语言环境对象 \fBLC_GLOBAL_LOCALE\fP 或者不是有效的语言环境对象句柄，则
\fBnl_langinfo_l\fP() 的行为是未定义的。
.SH EXAMPLES
以下程序根据环境设置字符类型和数字语言环境，并查询终端字符集和基数字符。
.PP
.\" SRC BEGIN (nl_langinfo.c)
.EX
#include <langinfo.h>
#include <locale.h>
#include <stdio.h>
#include <stdlib.h>

int
main(void)
{
    setlocale(LC_CTYPE, "");
    setlocale(LC_NUMERIC, "");

    printf("%s\en", nl_langinfo(CODESET));
    printf("%s\en", nl_langinfo(RADIXCHAR));

    exit(EXIT_SUCCESS);
}
.EE
.\" SRC END
.SH "SEE ALSO"
\fBlocale\fP(1), \fBlocaleconv\fP(3), \fBsetlocale\fP(3), \fBcharsets\fP(7),
\fBlocale\fP(7)
.PP
GNU C 库引用手册
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
