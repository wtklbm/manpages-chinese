.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" SPDX-License-Identifier: BSD-3-Clause
.\"
.\"     @(#)getloadavg.3	8.1 (Berkeley) 6/4/93
.\"
.\" 2007-12-08, mtk, Converted from mdoc to man macros
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH getloadavg 3 2022\-12\-15 "Linux man\-pages 6.03" 
.SH NAME
getloadavg \- 获取系统平均负载
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <stdlib.h>\fP
.PP
\fBint getloadavg(double \fP\fIloadavg[]\fP\fB, int \fP\fInelem\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBgetloadavg\fP():
.nf
    由于 glibc 2.19:
        _DEFAULT_SOURCE
    在 x00X 及之前的 glibc 中:
        _BSD_SOURCE
.fi
.SH DESCRIPTION
\fBgetloadavg\fP() 函数返回系统运行队列中在不同时间段内平均的进程数。 最多检索 \fInelem\fP 个样本并将其分配给
\fIloadavg[]\fP 的连续元素。 系统最多施加 3 个样本，分别代表过去 1、5 和 15 分钟的平均值。
.SH "RETURN VALUE"
.\" .SH HISTORY
.\" The
.\" BR getloadavg ()
.\" function appeared in
.\" 4.3BSD Reno .
如果无法获得平均负载，则返回 \-1; 否则，返回实际检索到的样本数。
.SH VERSIONS
这个函数从 glibc 2.2 开始可用。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBgetloadavg\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
.\" mdoc seems to have a bug - there must be no newline here
不在 POSIX.1 中。 出现在 BSD 和 Solaris 上。
.SH "SEE ALSO"
\fBuptime\fP(1), \fBproc\fP(5)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
