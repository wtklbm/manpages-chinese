.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright (c) 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" SPDX-License-Identifier: BSD-4-Clause-UC
.\"
.\"	From: @(#)err.3	8.1 (Berkeley) 6/9/93
.\" $FreeBSD: src/lib/libc/gen/err.3,v 1.11.2.5 2001/08/17 15:42:32 ru Exp $
.\"
.\" 2011-09-10, mtk, Converted from mdoc to man macros
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH err 3 2022\-12\-15 "Linux man\-pages 6.03" 
.SH NAME
err, verr, errx, verrx, warn, vwarn, warnx, vwarnx \- 格式化的错误信息
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <err.h>\fP
.PP
\fB[[noreturn]] void err(int \fP\fIeval\fP\fB, const char *\fP\fIfmt\fP\fB, ...);\fP
\fB[[noreturn]] void errx(int \fP\fIeval\fP\fB, const char *\fP\fIfmt\fP\fB, ...);\fP
.PP
\fBvoid warn(const char *\fP\fIfmt\fP\fB, ...);\fP
\fBvoid warnx(const char *\fP\fIfmt\fP\fB, ...);\fP
.PP
\fB#include <stdarg.h>\fP
.PP
\fB[[noreturn]] void verr(int \fP\fIeval\fP\fB, const char *\fP\fIfmt\fP\fB, va_list \fP\fIargs\fP\fB);\fP
\fB[[noreturn]] void verrx(int \fP\fIeval\fP\fB, const char *\fP\fIfmt\fP\fB, va_list \fP\fIargs\fP\fB);\fP
.PP
\fBvoid vwarn(const char *\fP\fIfmt\fP\fB, va_list \fP\fIargs\fP\fB);\fP
\fBvoid vwarnx(const char *\fP\fIfmt\fP\fB, va_list \fP\fIargs\fP\fB);\fP
.fi
.SH DESCRIPTION
函数的 \fBerr\fP() 和 \fBwarn\fP() 系列在标准错误输出上显示格式化的错误消息。
在所有情况下，程序名称的最后一个组成部分、一个冒号字符和一个空格都会被输出。 如果 \fIfmt\fP 参数不为 NULL，则输出
\fBprintf\fP(3)\-like 格式的错误信息。 输出以换行符终止。
.PP
\fBerr\fP()、\fBverr\fP()、\fBwarn\fP() 和 \fBvwarn\fP() 函数，追加，从基于全局变量 \fIerrno\fP 的
\fBstrerror\fP(3) 获得的错误消息，前面有另一个冒号和空格，除非 \fIfmt\fP 参数为 NULL。
.PP
\fBerrx\fP() 和 \fBwarnx\fP() 函数不，追加，错误信息。
.PP
\fBerr\fP()、\fBverr\fP()、\fBerrx\fP()、\fBverrx\fP() 的函数不返回，而是以参数 \fIeval\fP 的值退出。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBerr\fP(),
\fBerrx\fP(),
\fBwarn\fP(),
\fBwarnx\fP(),
\fBverr\fP(),
\fBverrx\fP(),
\fBvwarn\fP(),
\fBvwarnx\fP()
T}	Thread safety	MT\-Safe locale
.TE
.hy
.ad
.sp 1
.SH STANDARDS
.\" .SH HISTORY
.\" The
.\" .BR err ()
.\" and
.\" .BR warn ()
.\" functions first appeared in
.\" 4.4BSD.
这些函数是非标准的 BSD 扩展。
.SH EXAMPLES
显示当前 \fIerrno\fP 信息串并退出:
.PP
.in +4n
.EX
p = malloc(size);
if (p == NULL)
    err(EXIT_FAILURE, NULL);
fd = open(file_name, O_RDONLY, 0);
if (fd == \-1)
    err(EXIT_FAILURE, "%s", file_name);
.EE
.in
.PP
显示错误信息并退出:
.PP
.in +4n
.EX
if (tm.tm_hour < START_TIME)
    errx(EXIT_FAILURE, "too early, wait until %s",
            start_time_string);
.EE
.in
.PP
错误警告:
.PP
.in +4n
.EX
fd = open(raw_device, O_RDONLY, 0);
if (fd == \-1) 
    warnx ("%s: %s: 正在尝试块设备",
            原始设备，strerror(errno));
fd = open(block_device, O_RDONLY, 0);
if (fd == \-1)
    err(EXIT_FAILURE, "%s", block_device);
.EE
.in
.SH "SEE ALSO"
\fBerror\fP(3), \fBexit\fP(3), \fBperror\fP(3), \fBprintf\fP(3), \fBstrerror\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
