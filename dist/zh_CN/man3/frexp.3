.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified 1993-07-24 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2002-07-27 by Walter Harms
.\" 	(walter.harms@informatik.uni-oldenburg.de)
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH frexp 3 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
frexp, frexpf, frexpl \- 将浮点数转换为小数和整数部分
.SH LIBRARY
数学库 (\fIlibm\fP、\fI\-lm\fP)
.SH SYNOPSIS
.nf
\fB#include <math.h>\fP
.PP
\fBdouble frexp(double \fP\fIx\fP\fB, int *\fP\fIexp\fP\fB);\fP
\fBfloat frexpf(float \fP\fIx\fP\fB, int *\fP\fIexp\fP\fB);\fP
\fBlong double frexpl(long double \fP\fIx\fP\fB, int *\fP\fIexp\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBfrexpf\fP(), \fBfrexpl\fP():
.nf
    _ISOC99_ 源 ||_POSIX_C_SOURCE >= 200112L
        || /* Since glibc 2.19: */ _DEFAULT_SOURCE
        || /* glibc <= 2.19: */ _BSD_SOURCE || _SVID_SOURCE
.fi
.SH DESCRIPTION
这些函数用于将数字 \fIx\fP 拆分为归一化分数和存储在 \fIexp\fP 中的指数。
.SH "RETURN VALUE"
这些函数返回归一化分数。 如果参数 \fIx\fP 不为零，则归一化分数为 \fIx\fP 乘以 2 的幂，其绝对值始终在 1/2 (inclusive) 至 1
(exclusive) 范围内，即 [0.5,1)。
.PP
如果 \fIx\fP 为零，则归一化分数为零，零存储在 \fIexp\fP 中。
.PP
如果 \fIx\fP 为 NaN，则返回 NaN，\fI*exp\fP 的值未指定。
.PP
如果 \fIx\fP 为正无穷大 (negative infinity)，则返回正无穷大 (negative infinity)，\fI*exp\fP 的值未指定。
.SH ERRORS
没有错误发生。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBfrexp\fP(),
\fBfrexpf\fP(),
\fBfrexpl\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
C99, POSIX.1\-2001, POSIX.1\-2008.
.PP
返回 \fIdouble\fP 的变体也符合 SVr4、4.3BSD。
.SH EXAMPLES
下面的程序产生如下结果:
.PP
.in +4n
.EX
$\fB ./a.out 2560\fP
frexp(2560, &e) = 0.625: 0.625 * 2\[ha]12 = 2560
$\fB ./a.out \-4\fP
frexp(\-4, &e) = \-0.5: \-0.5 * 2\[ha]3 = \-4
.EE
.in
.SS "Program source"
.\" SRC BEGIN (frexp.c)
\&
.EX
#include <float.h>
#include <math.h>
#include <stdio.h>
#include <stdlib.h>

int
main(int argc, char *argv[])
{
    double x, r;
    int exp;

    x = strtod(argv[1], NULL);
    r = frexp(x, &exp);

    printf("frexp(%g, &e) = %g: %g * %d\[ha]%d = %g\en",
           x, r, r, FLT_RADIX, exp, x);
    exit(EXIT_SUCCESS);
}
.EE
.\" SRC END
.SH "SEE ALSO"
\fBldexp\fP(3), \fBmodf\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
