.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright (c) 1990, 1991 Regents of the University of California.
.\" All rights reserved.
.\"
.\" SPDX-License-Identifier: BSD-4-Clause-UC
.\"
.\"     @(#)stdio.3	6.5 (Berkeley) 5/6/91
.\"
.\" Converted for Linux, Mon Nov 29 16:07:22 1993, faith@cs.unc.edu
.\" Modified, 2001-12-26, aeb
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH stdio 3 2022\-12\-29 "Linux man\-pages 6.03" 
.SH NAME
标准输入输出 \- 标准 input/output 库函数
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <stdio.h>\fP
.PP
\fBFILE *\fP\fIstdin\fP\fB;\fP
\fBFILE *\fP\fIstdout\fP\fB;\fP
\fBFILE *\fP\fIstderr\fP\fB;\fP
.fi
.SH DESCRIPTION
标准 I/O 库提供了一个简单高效的缓冲流 I/O 接口。 输入和输出被映射到逻辑数据流，物理 I/O 特征被隐藏。 下面列出了函数和宏;
更多信息可从各个手册页获得。
.PP
流通过 \fIopening\fP 文件与外部文件 (可能是物理设备) 相关联，这可能涉及创建新文件。 创建现有文件会导致其以前的内容被丢弃。
如果文件可以支持定位请求 (例如磁盘文件，而不是最终端)，则与流关联的 \fIfile position indicator\fP 将定位在文件的开头
(字节零)，除非文件以追加模式打开。 如果使用，追加，模式，则未指定位置指示符是放置在文件的开头还是结尾。 位置指示符由后续的读取、写入和定位请求维护。
所有输入的发生就好像字符是通过连续调用 \fBfgetc\fP(3) 函数读取的; 所有输出的发生就好像所有字符都是通过连续调用 \fBfputc\fP(3)
函数写入的。
.PP
\fIclosing\fP 文件将文件与流解除关联。 在流与文件解除关联之前，输出流被刷新 (任何未写入的缓冲区内容都被传输到主机环境)。 文件关闭
(garbage) 后，指向 \fIFILE\fP 对象的指针的值是不确定的。
.PP
一个文件可能随后被同一个或另一个程序执行重新打开，并且它的内容被回收或修改 (如果它可以在开始时重新定位)。 如果 main
函数，返回到它的原始调用者，或者 \fBexit\fP(3) 函数被调用，所有打开的文件都将在程序终止之前关闭 (因此所有输出流都被刷新)。 其他程序终止方法
(例如 \fBabort\fP(3)) 不会为正确关闭文件而烦恼。
.PP
在程序启动时，三个文本流是预定义的，不需要显式打开: \fIstandard input\fP (用于读取常规输入)、\fIstandard output\fP
(用于写入常规输出) 和 \fIstandard error\fP (用于写入诊断输出)。 这些流缩写为 \fIstdin\fP、\fIstdout\fP 和
\fIstderr\fP。 打开时，标准错误流没有完全缓冲; 当且仅当流不引用交互设备时，标准输入和输出流才被完全缓冲。
.PP
默认情况下，引用终端设备的输出流始终是行缓冲的; 每当读取指向终端设备的输入流时，将自动写入此类流的未决输出。
如果在输出终端上打印部分行后进行大量计算，则必须在开始计算之前 \fBfflush\fP(3) 标准输出，以便显示输出。
.PP
\fIstdio\fP 库是 \fBlibc\fP 库的一部分，\fBcc\fP(1) 会根据需要自动加载例程。 以下手册页的 SYNOPSIS
部分指出要使用哪些包含文件、函数的编译器声明是什么样的以及感兴趣的外部变量。
.PP
.\" Not on Linux: .BR fropen ,
.\" Not on Linux: .BR fwopen ,
以下定义为宏; 如果不首先删除 \fB#undef\fP:
\fBBUFSIZ\fP、\fBEOF\fP、\fBFILENAME_MAX\fP、\fBFOPEN_MAX\fP、\fBL_cuserid\fP、\fBL_ctermid\fP、\fBL_tmpnam\fP、\fBNULL\fP、\fBSEEK_END\fP、\fBSEEK_SET\fP、\fBSEEK_CUR\fP、\fBTMP_MAX\fP、\fBclearerr\fP、\fBfeof\fP、\fBferror\fP、\fBfileno\fP、\fBgetc\fP、\fBgetchar\fP、\fBputc\fP、\fBputchar\fP、\fBstderr\fP、\fBstdin\fP、\fBstdout\fP。
宏数 \fBfeof\fP、\fBferror\fP、\fBclearerr\fP、\fBfileno\fP、\fBgetc\fP、\fBgetchar\fP、\fBputc\fP 和
\fBputchar\fP 的版本存在，如果明确删除宏定义，将使用这些版本。
.SS "List of functions"
.nh
.ad l
.TS
;
lb lbx
l l.
Function	Description
_
\fBclearerr\fP(3)	T{
check and reset stream status
T}
\fBfclose\fP(3)	T{
close a stream
T}
\fBfdopen\fP(3)	T{
stream open functions
T}
\fBfeof\fP(3)	T{
check and reset stream status
T}
\fBferror\fP(3)	T{
check and reset stream status
T}
\fBfflush\fP(3)	T{
flush a stream
T}
\fBfgetc\fP(3)	T{
get next character or word from input stream
T}
\fBfgetpos\fP(3)	T{
reposition a stream
T}
\fBfgets\fP(3)	T{
get a line from a stream
T}
\fBfileno\fP(3)	T{
return the integer descriptor of the argument stream
T}
\fBfopen\fP(3)	T{
stream open functions
T}
\fBfprintf\fP(3)	T{
formatted output conversion
T}
\fBfpurge\fP(3)	T{
flush a stream
T}
\fBfputc\fP(3)	T{
output a character or word to a stream
T}
\fBfputs\fP(3)	T{
output a line to a stream
T}
\fBfread\fP(3)	T{
binary stream input/output
T}
\fBfreopen\fP(3)	T{
stream open functions
T}
\fBfscanf\fP(3)	T{
input format conversion
T}
\fBfseek\fP(3)	T{
reposition a stream
T}
\fBfsetpos\fP(3)	T{
reposition a stream
T}
\fBftell\fP(3)	T{
reposition a stream
T}
\fBfwrite\fP(3)	T{
binary stream input/output
T}
\fBgetc\fP(3)	T{
get next character or word from input stream
T}
\fBgetchar\fP(3)	T{
get next character or word from input stream
T}
\fBgets\fP(3)	T{
get a line from a stream
T}
\fBgetw\fP(3)	T{
get next character or word from input stream
T}
\fBmktemp\fP(3)	T{
make temporary filename (unique)
T}
\fBperror\fP(3)	T{
system error messages
T}
\fBprintf\fP(3)	T{
formatted output conversion
T}
\fBputc\fP(3)	T{
output a character or word to a stream
T}
\fBputchar\fP(3)	T{
output a character or word to a stream
T}
\fBputs\fP(3)	T{
output a line to a stream
T}
\fBputw\fP(3)	T{
output a character or word to a stream
T}
\fBremove\fP(3)	T{
remove directory entry
T}
\fBrewind\fP(3)	T{
reposition a stream
T}
\fBscanf\fP(3)	T{
input format conversion
T}
\fBsetbuf\fP(3)	T{
stream buffering operations
T}
\fBsetbuffer\fP(3)	T{
stream buffering operations
T}
\fBsetlinebuf\fP(3)	T{
stream buffering operations
T}
\fBsetvbuf\fP(3)	T{
stream buffering operations
T}
\fBsprintf\fP(3)	T{
formatted output conversion
T}
\fBsscanf\fP(3)	T{
input format conversion
T}
\fBstrerror\fP(3)	T{
system error messages
T}
\fBsys_errlist\fP(3)	T{
system error messages
T}
\fBsys_nerr\fP(3)	T{
system error messages
T}
\fBtempnam\fP(3)	T{
temporary file routines
T}
\fBtmpfile\fP(3)	T{
temporary file routines
T}
\fBtmpnam\fP(3)	T{
temporary file routines
T}
\fBungetc\fP(3)	T{
un\-get character from input stream
T}
\fBvfprintf\fP(3)	T{
formatted output conversion
T}
\fBvfscanf\fP(3)	T{
input format conversion
T}
\fBvprintf\fP(3)	T{
formatted output conversion
T}
\fBvscanf\fP(3)	T{
input format conversion
T}
\fBvsprintf\fP(3)	T{
formatted output conversion
T}
\fBvsscanf\fP(3)	T{
input format conversion
T}
.TE
.ad
.hy
.SH STANDARDS
\fIstdio\fP 库符合 C99。
.SH "SEE ALSO"
\fBclose\fP(2), \fBopen\fP(2), \fBread\fP(2), \fBwrite\fP(2), \fBstdout\fP(3),
\fBunlocked_stdio\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
