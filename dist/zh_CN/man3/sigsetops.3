.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright (c) 1994 Mike Battersby
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" Modified by aeb, 960721
.\" 2005-11-21, mtk, added descriptions of sigisemptyset(), sigandset(),
.\"                  and sigorset()
.\" 2007-10-26 mdw   added wording that a sigset_t must be initialized
.\"                  prior to use
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH SIGSETOPS 3 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
sigemptyset、sigfillset、sigaddset、sigdelset、sigismember\-POSIX 信号集操作
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <signal.h>\fP
.PP
\fBint sigemptyset(sigset_t *\fP\fIset\fP\fB);\fP
\fBint sigfillset(sigset_t *\fP\fIset\fP\fB);\fP
.PP
\fBint sigaddset(sigset_t *\fP\fIset\fP\fB, int \fP\fIsignum\fP\fB);\fP
\fBint sigdelset(sigset_t *\fP\fIset\fP\fB, int \fP\fIsignum\fP\fB);\fP
.PP
\fBint sigismember(const sigset_t *\fP\fIset\fP\fB, int \fP\fIsignum\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBsigemptyset\fP(), \fBsigfillset\fP(), \fBsigaddset\fP(), \fBsigdelset\fP(),
\fBsigismember\fP():
.nf
    _POSIX_C_SOURCE
.fi
.SH DESCRIPTION
这些函数允许操作 POSIX 信号集。
.PP
\fBsigemptyset\fP() 将 \fIset\fP 给出的信号集初始化为空，所有信号都从该集中排除。
.PP
\fBsigfillset\fP() 将 \fIset\fP 初始化为全，包括所有信号。
.PP
\fBsigaddset\fP() 和 \fBsigdelset\fP() 分别从 \fIset\fP 添加和删除信号 \fIsignum\fP。
.PP
\fBsigismember\fP() 测试 \fIsignum\fP 是否是 \fIset\fP 的成员。
.PP
\fIsigset_t\fP 类型的对象在被传递给函数 \fBsigaddset\fP()、\fBsigdelset\fP() 和 \fBsigismember\fP()
或下面描述的附加 glibc 函数 (\fBsigisemptyset\fP()、\fBsigandset\fP() 和 \fBsigorset\fP())
之前，必须由调用初始化为 \fBsigemptyset\fP() 或 \fBsigfillset\fP()。 如果不这样做，结果是不确定的。
.SH "RETURN VALUE"
\fBsigemptyset\fP()、\fBsigfillset\fP()、\fBsigaddset\fP() 和 \fBsigdelset\fP() 成功时返回
0，错误时返回 \-1。
.PP
如果 \fIsignum\fP 是 \fIset\fP 的成员，\fBsigismember\fP() 返回 1，如果 \fIsignum\fP 不是成员，则返回
0，出错时返回 \-1。
.PP
出错时，这些函数设置 \fIerrno\fP 来指示错误。
.SH ERRORS
.TP 
\fBEINVAL\fP
\fIsignum\fP 不是有效信号。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBsigemptyset\fP(),
\fBsigfillset\fP(),
\fBsigaddset\fP(),
\fBsigdelset\fP(),
\fBsigismember\fP(),
\fBsigisemptyset\fP(),
\fBsigorset\fP(),
\fBsigandset\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
POSIX.1\-2001, POSIX.1\-2008.
.SH NOTES
.\"
创建填充信号集时，glibc \fBsigfillset\fP() 函数不包括 NPTL 线程实现内部使用的两个实时信号。 有关详细信息，请参见
\fBnptl\fP(7)。
.SS "glibc extensions"
如果定义了 \fB_GNU_SOURCE\fP 特性测试宏，那么 \fI<signal.h>\fP 会公开另外三个用于操纵信号集的函数:
.PP
.nf
\fBint sigisemptyset(const sigset_t *\fP\fIset\fP\fB);\fP
\fBint sigorset(sigset_t *\fP\fIdest\fP\fB, const sigset_t *\fP\fIleft\fP\fB,\fP
\fB              const sigset_t *\fP\fIright\fP\fB);\fP
\fBint sigandset(sigset_t *\fP\fIdest\fP\fB, const sigset_t *\fP\fIleft\fP\fB,\fP
\fB              const sigset_t *\fP\fIright\fP\fB);\fP
.fi
.PP
如果 \fIset\fP 不包含信号，则 \fBsigisemptyset\fP() 返回 1，否则返回 0。
.PP
\fBsigorset\fP() 将集合 \fIleft\fP 和 \fIright\fP 的 union 放在 \fIdest\fP 中。 \fBsigandset\fP()
将集合 \fIleft\fP 和 \fIright\fP 的交集放在 \fIdest\fP 中。 函数成功时返回 0，失败时返回 \-1。
.PP
这些函数是非标准的 (一些其他系统提供类似的函数)，应避免在便携式应用程序中使用它们。
.SH "SEE ALSO"
\fBsigaction\fP(2), \fBsigpending\fP(2), \fBsigprocmask\fP(2), \fBsigsuspend\fP(2)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
