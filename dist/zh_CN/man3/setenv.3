.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\" and Copyright (C) 2004, 2007 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 18:20:58 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Fri Feb 14 21:47:50 1997 by Andries Brouwer (aeb@cwi.nl)
.\" Modified 9 Jun 2004, Michael Kerrisk <mtk.manpages@gmail.com>
.\"     Changed unsetenv() prototype; added EINVAL error
.\"     Noted nonstandard behavior of setenv() if name contains '='
.\" 2005-08-12, mtk, glibc 2.3.4 fixed the "name contains '='" bug
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH setenv 3 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
setenv \- 更改或添加环境变量
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <stdlib.h>\fP
.PP
\fBint setenv(const char *\fP\fIname\fP\fB, const char *\fP\fIvalue\fP\fB, int \fP\fIoverwrite\fP\fB);\fP
\fBint unsetenv(const char *\fP\fIname\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBsetenv\fP(), \fBunsetenv\fP():
.nf
    _POSIX_C_SOURCE >= 200112L
        || /* glibc <= 2.19: */ _BSD_SOURCE
.fi
.SH DESCRIPTION
如果 \fIname\fP 尚不存在，则 \fBsetenv\fP() 函数将变量 \fIname\fP 添加到值为 \fIvalue\fP 的环境中。 如果环境中确实存在
\fIname\fP，则如果 \fIoverwrite\fP 不为零，则将其值更改为 \fIvalue\fP; 如果 \fIoverwrite\fP 为零，则 \fIname\fP
的值不变 (并且 \fBsetenv\fP() 返回成功状态)。 这个函数复制 \fIname\fP 和 \fIvalue\fP 指向的字符串 (与
\fBputenv\fP(3)).
.PP
\fBunsetenv\fP() 函数从环境中删除变量 \fIname\fP。 如果环境中不存在 \fIname\fP，则函数成功，环境不变。
.SH "RETURN VALUE"
\fBsetenv\fP() 和 \fBunsetenv\fP() 函数在成功时返回零，或在错误时返回 \-1，并设置 \fIerrno\fP 以指示错误。
.SH ERRORS
.TP 
\fBEINVAL\fP
\fIname\fP 为 NULL，指向长度为 0 的字符串，或包含一个 \[aq]=\[aq] 字符。
.TP 
\fBENOMEM\fP
内存不足，无法向环境添加新变量。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBsetenv\fP(),
\fBunsetenv\fP()
T}	Thread safety	MT\-Unsafe const:env
.TE
.hy
.ad
.sp 1
.SH STANDARDS
POSIX.1\-2001, POSIX.1\-2008, 4.3BSD.
.SH NOTES
POSIX.1 不要求 \fBsetenv\fP() 或 \fBunsetenv\fP() 是可重入的。
.PP
在 glibc 2.2.2 之前，\fBunsetenv\fP() 被原型化为返回 \fIvoid\fP; 更新的 glibc 版本遵循 SYNOPSIS 中显示的
POSIX.1 兼容原型。
.SH BUGS
POSIX.1 指定如果 \fIname\fP 包含 \[aq]=\[aq] 字符，则 \fBsetenv\fP() 应该失败并返回错误 \fBEINVAL\fP;
但是，glibc 2.3.4 之前的 glibc 版本允许在 \fIname\fP 中使用 \[aq]=\[aq] 符号。
.SH "SEE ALSO"
\fBclearenv\fP(3), \fBgetenv\fP(3), \fBputenv\fP(3), \fBenviron\fP(7)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
