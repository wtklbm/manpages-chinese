.\" -*- coding: UTF-8 -*-
.\" Copyright (C) 2016 Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH bswap 3 2023\-01\-07 "Linux man\-pages 6.03" 
.SH NAME
bswap_16、bswap_32、bswap_64 \- 字节的倒序
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <byteswap.h>\fP
.PP
\fBuint16_t bswap_16(uint16_t \fP\fIx\fP\fB);\fP
\fBuint32_t bswap_32(uint32_t \fP\fIx\fP\fB);\fP
\fBuint64_t bswap_64(uint64_t \fP\fIx\fP\fB);\fP
.fi
.SH DESCRIPTION
这些函数返回一个值，其中 2、4 或 8 字节参数中的字节顺序是相反的。
.SH "RETURN VALUE"
这些函数返回其参数的值，字节反转。
.SH ERRORS
这些函数总是成功的。
.SH STANDARDS
这些函数是 GNU 的扩展名。
.SH EXAMPLES
下面的程序交换作为它的命令行参数提供的 8 字节整数的字节。 下面的 shell 会话演示了该程序的使用:
.PP
.in +4n
.EX
$ \fB./a.out 0x0123456789abcdef\fP
0x123456789abcdef ==> 0xefcdab8967452301
.EE
.in
.SS "Program source"
.\" SRC BEGIN (bswap.c)
\&
.EX
#include <byteswap.h>
#include <inttypes.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>

int
main(int argc, char *argv[])
{
    uint64_t x;

    if (argc != 2) {
        fprintf(stderr, "Usage: %s <num>\en", argv[0]);
        exit(EXIT_FAILURE);
    }

    x = strtoull(argv[1], NULL, 0);
    printf("%#" PRIx64 " ==> %#" PRIx64 "\en", x, bswap_64(x));

    exit(EXIT_SUCCESS);
}
.EE
.\" SRC END
.SH "SEE ALSO"
\fBbyteorder\fP(3), \fBendian\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
