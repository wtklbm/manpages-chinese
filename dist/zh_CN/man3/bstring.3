.\" -*- coding: UTF-8 -*-
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified 1993-04-12, David Metcalfe
.\" Modified 1993-07-24, Rik Faith (faith@cs.unc.edu)
.\" Modified 2002-01-20, Walter Harms
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH bstring 3 2023\-01\-07 "Linux man\-pages 6.03" 
.SH NAME
bcmp、bcopy、bzero、memccpy、memchr、memcmp、memcpy、memfrob、memmem、memmove、memset
\- 字节字符串，操作
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <string.h>\fP
.PP
\fBint bcmp(const void \fP\fIs1\fP\fB[.\fP\fIn\fP\fB], const void \fP\fIs2\fP\fB[.\fP\fIn\fP\fB], size_t \fP\fIn\fP\fB);\fP
.PP
\fBvoid bcopy(const void \fP\fIsrc\fP\fB[.\fP\fIn\fP\fB], void \fP\fIdest\fP\fB[.\fP\fIn\fP\fB], size_t \fP\fIn\fP\fB);\fP
.PP
\fBvoid bzero(void \fP\fIs\fP\fB[.\fP\fIn\fP\fB], size_t \fP\fIn\fP\fB);\fP
.PP
\fBvoid *memccpy(void \fP\fIdest\fP\fB[.\fP\fIn\fP\fB], const void \fP\fIsrc\fP\fB[.\fP\fIn\fP\fB], int \fP\fIc\fP\fB, size_t \fP\fIn\fP\fB);\fP
.PP
\fBvoid *memchr(const void \fP\fIs\fP\fB[.\fP\fIn\fP\fB], int \fP\fIc\fP\fB, size_t \fP\fIn\fP\fB);\fP
.PP
\fBint memcmp(const void \fP\fIs1\fP\fB[.\fP\fIn\fP\fB], const void \fP\fIs2\fP\fB[.\fP\fIn\fP\fB], size_t \fP\fIn\fP\fB);\fP
.PP
\fBvoid *memcpy(void \fP\fIdest\fP\fB[.\fP\fIn\fP\fB], const void \fP\fIsrc\fP\fB[.\fP\fIn\fP\fB], size_t \fP\fIn\fP\fB);\fP
.PP
\fBvoid *memfrob(void \fP\fIs\fP\fB[.\fP\fIn\fP\fB], size_t \fP\fIn\fP\fB);\fP
.PP
\fBvoid *memmem(const void \fP\fIhaystack\fP\fB[.\fP\fIhaystacklen\fP\fB], size_t \fP\fIhaystacklen\fP\fB,\fP
\fB             const void \fP\fIneedle\fP\fB[.\fP\fIneedlelen\fP\fB], size_t \fP\fIneedlelen\fP\fB);\fP
.PP
\fBvoid *memmove(void \fP\fIdest\fP\fB[.\fP\fIn\fP\fB], const void \fP\fIsrc\fP\fB[.\fP\fIn\fP\fB], size_t \fP\fIn\fP\fB);\fP
.PP
\fBvoid *memset(void \fP\fIs\fP\fB[.\fP\fIn\fP\fB], int \fP\fIc\fP\fB, size_t \fP\fIn\fP\fB);\fP
.fi
.SH DESCRIPTION
字节字符串函数对不一定以 null 结尾的字符串 (字节数组) 执行操作。 有关每个函数的说明，请参见单独的手册页。
.SH NOTES
.\" The old functions are not even available on some non-GNU/Linux systems.
函数 \fBbcmp\fP() 和 \fBbcopy\fP() 已过时。 请改用 \fBmemcmp\fP() 和 \fBmemmove\fP()。
.SH "SEE ALSO"
\fBbcmp\fP(3), \fBbcopy\fP(3), \fBbzero\fP(3), \fBmemccpy\fP(3), \fBmemchr\fP(3),
\fBmemcmp\fP(3), \fBmemcpy\fP(3), \fBmemfrob\fP(3), \fBmemmem\fP(3), \fBmemmove\fP(3),
\fBmemset\fP(3), \fBstring\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
