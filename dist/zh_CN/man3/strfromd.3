.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright (c) 2016, IBM Corporation.
.\" Written by Wainer dos Santos Moschetta <wainersm@linux.vnet.ibm.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" References consulted:
.\"   glibc 2.25 source code and manual.
.\"   C99 standard document.
.\"   ISO/IEC TS 18661-1 technical specification.
.\"   snprintf and other man.3 pages.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH strfromd 3 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
strfromd、strfromf、strfroml \- 将浮点值转换为字符串
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <stdlib.h>\fP
.PP
\fBint strfromd(char \fP\fIstr\fP\fB[restrict .\fP\fIn\fP\fB], size_t \fP\fIn\fP\fB,\fP
\fB             const char *restrict \fP\fIformat\fP\fB, double \fP\fIfp\fP\fB);\fP
\fBint strfromf(char \fP\fIstr\fP\fB[restrict .\fP\fIn\fP\fB], size_t \fP\fIn\fP\fB,\fP
\fB             const char *restrict \fP\fIformat\fP\fB, float \fP\fIfp\fP\fB);\fP
\fBint strfroml(char \fP\fIstr\fP\fB[restrict .\fP\fIn\fP\fB], size_t \fP\fIn\fP\fB,\fP
\fB             const char *restrict \fP\fIformat\fP\fB, long double \fP\fIfp\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBstrfromd\fP(), \fBstrfromf\fP(), \fBstrfroml\fP():
.nf
    __STDC_WANT_IEC_60559_BFP_EXT__
.fi
.SH DESCRIPTION
这些函数将浮点值 \fIfp\fP 转换为字符串 \fIstr\fP，并带有可配置的 \fIformat\fP 字符串。 \fIstr\fP 最多存储 \fIn\fP 个字符。
.PP
当且仅当 \fIn\fP 足够大时才写入终止空字节 ('\e0')，否则写入的字符串将在 \fIn\fP 字符处被截断。
.PP
\fBstrfromd\fP(), \fBstrfromf\fP(), \fBstrfroml\fP() 函数相当于
.PP
.in +4n
.EX
snprintf(str, n, format, fp);
.EE
.in
.PP
除了 \fIformat\fP 字符串。
.SS "Format of the format string"
\fIformat\fP 字符串必须以字符 \[aq]%\[aq] 开头。 后面跟着一个可选的精度，它以句点字符 (.) 开头，后跟一个可选的十进制整数。
如果在句点字符后没有指定整数，则使用零精度。 最后，格式字符串应具有转换说明符 \fBa\fP、\fBA\fP、\fBe\fP、\fBE\fP、\fBf\fP、\fBF\fP、\fBg\fP 或
\fBG\fP 之一。
.PP
转换说明符是根据函数后缀指示的浮点类型应用的。 因此，与 \fBsnprintf\fP() 不同，格式字符串没有长度修饰符。
有关这些转换说明符的详细说明，请参见 \fBsnprintf\fP(3)。
.PP
该实现符合 C99 标准关于 NaN 和无穷大值的转换:
.PP
.RS
如果 \fIfp\fP 是 NaN、+NaN 或 \-NaN，并且 \fBf\fP (或 \fBa\fP、\fBe\fP、\fBg\fP) 是转换说明符，则转换分别为
"nan"、"nan" 或 "\-nan"。 如果 \fBF\fP (或 \fBA\fP、\fBE\fP、\fBG\fP)) 是转换说明符，则转换为 "NAN" 或
"\-NAN"。
.PP
同样，如果 \fIfp\fP 为无穷大，则将其转换为 [\-]inf 或 [\-]INF。
.RE
.PP
格式错误的 \fIformat\fP 字符串会导致未定义的行为。
.SH "RETURN VALUE"
如果 \fIn\fP 有足够的空间，\fBstrfromd\fP()、\fBstrfromf\fP() 和 \fBstrfroml\fP() 函数返回将写入 \fIstr\fP
的字符数，不包括终止空字节。 因此，\fIn\fP 或更大的返回值意味着输出被截断了。
.SH VERSIONS
\fBstrfromd\fP()、\fBstrfromf\fP() 和 \fBstrfroml\fP() 函数从 glibc 2.25 开始可用。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 GNU C 库手册中的 \fBattributes\fP(7) 和 \fBPOSIX Safety Concepts\fP
部分。
.PP
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBstrfromd\fP(),
\fBstrfromf\fP(),
\fBstrfroml\fP()
T}	Thread safety	MT\-Safe locale
\^	Async\-signal safety	AS\-Unsafe heap
\^	Async\-cancel safety	AC\-Unsafe mem
.TE
.hy
.ad
.sp 1
Note: 这些属性是初步的。
.SH STANDARDS
C99, ISO/IEC TS 18661\-1.
.SH NOTES
\fBstrfromd\fP()、\fBstrfromf\fP() 和 \fBstrfroml\fP() 函数考虑了当前语言环境的 \fBLC_NUMERIC\fP 类别。
.SH EXAMPLES
要使用十进制表示法将值 12.1 作为 float 类型转换为字符串，从而生成 "12.100000":
.PP
.in +4n
.EX
#define __STDC_WANT_IEC_60559_BFP_EXT__
#include <stdlib.h>
int ssize = 10;
char s[ssize];
strfromf(s, ssize, "%f", 12.1);
.EE
.in
.PP
要使用具有两位精度的十进制记数法将值 12.3456 作为浮点类型转换为字符串，结果为 "12.35":
.PP
.in +4n
.EX
#define __STDC_WANT_IEC_60559_BFP_EXT__
#include <stdlib.h>
int ssize = 10;
char s[ssize];
strfromf(s, ssize, "%.2f", 12.3456);
.EE
.in
.PP
要使用精度为零位的科学记数法将值 12.345e19 作为双精度类型转换为字符串，从而生成 "1E+20":
.PP
.in +4n
.EX
#define __STDC_WANT_IEC_60559_BFP_EXT__
#include <stdlib.h>
int ssize = 10;
char s[ssize];
strfromd(s, ssize, "%.E", 12.345e19);
.EE
.in
.SH "SEE ALSO"
\fBatof\fP(3), \fBsnprintf\fP(3), \fBstrtod\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
