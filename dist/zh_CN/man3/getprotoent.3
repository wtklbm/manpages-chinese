.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 19:26:03 1993 by Rik Faith (faith@cs.unc.edu)
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH getprotoent 3 2022\-12\-15 "Linux man\-pages 6.03" 
.SH NAME
getprotoent, getprotobyname, getprotobynumber, setprotoent, endprotoent \-
获取协议条目
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <netdb.h>\fP
.PP
\fBstruct protoent *getprotoent(void);\fP
.PP
\fBstruct protoent *getprotobyname(const char *\fP\fIname\fP\fB);\fP
\fBstruct protoent *getprotobynumber(int \fP\fIproto\fP\fB);\fP
.PP
\fBvoid setprotoent(int \fP\fIstayopen\fP\fB);\fP
\fBvoid endprotoent(void);\fP
.fi
.SH DESCRIPTION
\fBgetprotoent\fP() 函数从协议数据库中读取下一个条目 (参见 \fBprotocols\fP(5)) 并返回一个 \fIprotoent\fP
结构体，其中包含条目中的断开字段。 如有必要，将打开与数据库的连接。
.PP
\fBgetprotobyname\fP() 函数为数据库中与协议名称 \fIname\fP 匹配的条目返回一个 \fIprotoent\fP 结构体。
如有必要，将打开与数据库的连接。
.PP
\fBgetprotobynumber\fP() 函数为数据库中与协议号 \fInumber\fP 相匹配的条目返回一个 \fIprotoent\fP 结构体。
如有必要，将打开与数据库的连接。
.PP
\fBsetprotoent\fP() 函数打开到数据库的连接，并将下一个条目设置为第一个条目。 如果 \fIstayopen\fP 不为零，则在调用
\fBgetproto*\fP() 函数之一之间不会关闭与数据库的连接。
.PP
\fBendprotoent\fP() 函数关闭与数据库的连接。
.PP
\fIprotoent\fP 结构体在 \fI<netdb.h>\fP 中定义如下:
.PP
.in +4n
.EX
struct protoent {
    char  *p_name;       /* official protocol name */
    char **p_aliases;    /* alias list */
    int    p_proto;      /* protocol number */
}
.EE
.in
.PP
\fIprotoent\fP 结构体的成员是:
.TP 
\fIp_name\fP
协议的正式名称。
.TP 
\fIp_aliases\fP
协议的备选名称的 NULL 终止列表。
.TP 
\fIp_proto\fP
协议号。
.SH "RETURN VALUE"
\fBgetprotoent\fP()、\fBgetprotobyname\fP() 和 \fBgetprotobynumber\fP() 函数返回指向静态分配的
\fIprotoent\fP 结构体的指针，如果发生错误或到达文件末尾，则返回空指针。
.SH FILES
.PD 0
.TP 
\fI/etc/protocols\fP
协议数据库文件
.PD
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lb lb lbx
l l l.
Interface	Attribute	Value
T{
\fBgetprotoent\fP()
T}	Thread safety	T{
MT\-Unsafe race:protoent
race:protoentbuf locale
T}
T{
\fBgetprotobyname\fP()
T}	Thread safety	T{
MT\-Unsafe race:protobyname
locale
T}
T{
\fBgetprotobynumber\fP()
T}	Thread safety	T{
MT\-Unsafe race:protobynumber
locale
T}
T{
\fBsetprotoent\fP(),
\fBendprotoent\fP()
T}	Thread safety	T{
MT\-Unsafe race:protoent
locale
T}
.TE
.hy
.ad
.sp 1
在上表中，\fIrace:protoent\fP 中的 \fIprotoent\fP 表示如果在一个程序的不同线程中并行使用任数
\fBsetprotoent\fP()、\fBgetprotoent\fP() 或 \fBendprotoent\fP() 中的任何一个，则可能发生数据竞争。
.SH STANDARDS
POSIX.1\-2001, POSIX.1\-2008, 4.3BSD.
.SH "SEE ALSO"
\fBgetnetent\fP(3), \fBgetprotoent_r\fP(3), \fBgetservent\fP(3), \fBprotocols\fP(5)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
