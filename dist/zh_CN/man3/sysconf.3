.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" Modified Sat Jul 24 17:51:42 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Tue Aug 17 11:42:20 1999 by Ariel Scolnicov (ariels@compugen.co.il)
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH sysconf 3 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
sysconf \- 在运行时获取配置信息
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <unistd.h>\fP
.PP
\fBlong sysconf(int \fP\fIname\fP\fB);\fP
.fi
.SH DESCRIPTION
POSIX 允许应用程序在编译或运行时测试某些选项是否受支持，或者某些可配置常量或限制的值是多少。
.PP
在编译时，这是通过包含 \fI<unistd.h>\fP 或者 \fI<limits.h>\fP 以及测试某些宏的值来完成的。
.PP
在运行时，可以使用现在的函数 \fBsysconf\fP() 请求数值。 可以使用 \fBfpathconf\fP(3) 和 \fBpathconf\fP(3)
询问可能取决于文件所在文件系统的数值。 可以使用 \fBconfstr\fP(3) 请求字符串值。
.PP
.\" except that sysconf(_SC_OPEN_MAX) may change answer after a call
.\" to setrlimit( ) which changes the RLIMIT_NOFILE soft limit
从这些函数中得到的值是系统配置常量。 它们在进程的生命周期间不会改变。
.PP
.\" and 999 to indicate support for options no longer present in the latest
.\" standard. (?)
对于选项，通常有一个常量 \fB_POSIX_FOO\fP，可以在 \fI<unistd.h>\fP 中定义。 如果未定义，应该在运行时询问。
如果定义为 \-1，则不支持该选项。 如果定义为 0，则相关函数和标头存在，但必须在运行时询问可用的支持程度。 如果它定义为 \-1 或 0
以外的值，则支持该选项。 通常该值 (例如 200112L) 表示描述该选项的 POSIX 修订版的年份和月份。 只要 POSIX
修订版尚未发布，glibc 使用值 1 表示支持。 \fBsysconf\fP() 参数将是 \fB_SC_FOO\fP。 有关选项列表，请参见
\fBposixoptions\fP(7)。
.PP
对于变量或限制，通常有一个常量 \fB_FOO\fP，可能定义在 \fI<limits.h>\fP 中，或者 \fB_POSIX_FOO\fP，可能定义在
\fI<unistd.h>\fP 中。 如果未指定限制，则不会定义常量。 如果定义了常量，它给出了一个保证值，实际上可能支持更大的值。
如果应用程序想要利用可能在系统之间发生变化的值，可以调用 \fBsysconf\fP()。 \fBsysconf\fP() 参数将是 \fB_SC_FOO\fP。
.SS "POSIX.1 variables"
我们给出变量的名称、用于查询其值的 \fBsysconf\fP() 参数的名称，以及简短的描述。
.PP
.\" [for the moment: only the things that are unconditionally present]
.\" .TP
.\" .BR AIO_LISTIO_MAX " - " _SC_AIO_LISTIO_MAX
.\" (if _POSIX_ASYNCHRONOUS_IO)
.\" Maximum number of I/O operations in a single list I/O call.
.\" Must not be less than _POSIX_AIO_LISTIO_MAX.
.\" .TP
.\" .BR AIO_MAX " - " _SC_AIO_MAX
.\" (if _POSIX_ASYNCHRONOUS_IO)
.\" Maximum number of outstanding asynchronous I/O operations.
.\" Must not be less than _POSIX_AIO_MAX.
.\" .TP
.\" .BR AIO_PRIO_DELTA_MAX " - " _SC_AIO_PRIO_DELTA_MAX
.\" (if _POSIX_ASYNCHRONOUS_IO)
.\" The maximum amount by which a process can decrease its
.\" asynchronous I/O priority level from its own scheduling priority.
.\" Must be nonnegative.
首先，POSIX.1 兼容值。
.TP 
\fBARG_MAX\fP \- \fB_SC_ARG_MAX\fP
参数到函数 \fBexec\fP(3) 族的最大长度。 不得小于 \fB_POSIX_ARG_MAX\fP (4096)。
.TP 
\fBCHILD_MAX\fP \- \fB_SC_CHILD_MAX\fP
每个用户 ID 的最大并发进程数。不得小于 \fB_POSIX_CHILD_MAX\fP (25)。
.TP 
\fBHOST_NAME_MAX\fP \- \fB_SC_HOST_NAME_MAX\fP
\fBgethostname\fP(2) 返回的主机名的最大长度，不包括终止空字节。 不得小于 \fB_POSIX_HOST_NAME_MAX\fP (255)。
.TP 
\fBLOGIN_NAME_MAX\fP \- \fB_SC_LOGIN_NAME_MAX\fP
登录名的最大长度，包括终止空字节。 不得小于 \fB_POSIX_LOGIN_NAME_MAX\fP (9)。
.TP 
\fBNGROUPS_MAX\fP \- \fB_SC_NGROUPS_MAX\fP
补充组 ID 的最大数量。
.TP 
clock ticks \- \fB_SC_CLK_TCK\fP
每秒的时钟滴答数。 相应的变量已过时。 它当然被称为 \fBCLK_TCK\fP。 (注意: 宏 \fBCLOCKS_PER_SEC\fP 没有给出信息:
它必须等于 1000000。)
.TP 
\fBOPEN_MAX\fP \- \fB_SC_OPEN_MAX\fP
一个进程在任何时候可以打开的最大文件数。 不得小于 \fB_POSIX_OPEN_MAX\fP (20)。
.TP 
\fBPAGESIZE\fP \- \fB_SC_PAGESIZE\fP
页的大小 (以字节为单位)。 不得小于 1.
.TP 
\fBPAGE_SIZE\fP \- \fB_SC_PAGE_SIZE\fP
\fBPAGESIZE\fP/\fB_SC_PAGESIZE\fP 的同义词。 (\fBPAGESIZE\fP 和 \fBPAGE_SIZE\fP 均在 POSIX 中指定。)
.TP 
\fBRE_DUP_MAX\fP \- \fB_SC_RE_DUP_MAX\fP
\fBregexec\fP(3) 和 \fBregcomp\fP(3) 允许的 BRE 重复出现的次数。 不得小于 \fB_POSIX2_RE_DUP_MAX\fP
(255)。
.TP 
\fBSTREAM_MAX\fP \- \fB_SC_STREAM_MAX\fP
进程可以随时打开的最大流数。 如果定义，它与标准 C 宏 \fBFOPEN_MAX\fP 具有相同的值。 不得小于 \fB_POSIX_STREAM_MAX\fP
(8)。
.TP 
\fBSYMLOOP_MAX\fP \- \fB_SC_SYMLOOP_MAX\fP
在解析返回 \fBELOOP\fP 之前在路径名中看到的最大符号链接数。 不得小于 \fB_POSIX_SYMLOOP_MAX\fP (8)。
.TP 
\fBTTY_NAME_MAX\fP \- \fB_SC_TTY_NAME_MAX\fP
终端设备名称的最大长度，包括终止空字节。 不得小于 \fB_POSIX_TTY_NAME_MAX\fP (9)。
.TP 
\fBTZNAME_MAX\fP \- \fB_SC_TZNAME_MAX\fP
时区名称中的最大字节数。 不得小于 \fB_POSIX_TZNAME_MAX\fP (6)。
.TP 
\fB_POSIX_VERSION\fP \- \fB_SC_VERSION\fP
表示 POSIX.1 标准批准的年份和月份，格式为 \fBYYYYMML\fP; 值 \fB199009L\fP 表示 Sept. 1990 年修订。
.SS "POSIX.2 variables"
接下来，POSIX.2 值，给出实用工具的限制。
.TP 
\fBBC_BASE_MAX\fP \- \fB_SC_BC_BASE_MAX\fP
指示 \fBbc\fP(1) 实用程序接受的最大 \fIobase\fP 值。
.TP 
\fBBC_DIM_MAX\fP \- \fB_SC_BC_DIM_MAX\fP
指示 \fBbc\fP(1) 允许的数组元素的最大值。
.TP 
\fBBC_SCALE_MAX\fP \- \fB_SC_BC_SCALE_MAX\fP
表示 \fBbc\fP(1) 允许的最大 \fIscale\fP 值。
.TP 
\fBBC_STRING_MAX\fP \- \fB_SC_BC_STRING_MAX\fP
指示 \fBbc\fP(1) 接受的字符串的最大长度。
.TP 
\fBCOLL_WEIGHTS_MAX\fP \- \fB_SC_COLL_WEIGHTS_MAX\fP
指示可以分配给区域设置定义文件中 \fBLC_COLLATE order\fP 关键字条目的最大权重数。
.TP 
\fBEXPR_NEST_MAX\fP \- \fB_SC_EXPR_NEST_MAX\fP
是 \fBexpr\fP(1) 可以嵌套在括号内的表达式的最大数量。
.TP 
\fBLINE_MAX\fP \- \fB_SC_LINE_MAX\fP
来自标准输入或文件的实用程序输入行的最大长度。 这包括尾随换行符的空间。
.TP 
\fBRE_DUP_MAX\fP \- \fB_SC_RE_DUP_MAX\fP
使用区间符号 \fB\e{m,n\e}\fP 时正则表达式重复出现的最大次数。
.TP 
\fBPOSIX2_VERSION\fP \- \fB_SC_2_VERSION\fP
表示 POSIX.2 标准的版本，格式为 YYYYMML。
.TP 
\fBPOSIX2_C_DEV\fP \- \fB_SC_2_C_DEV\fP
指示是否支持 POSIX.2 C 语言开发工具。
.TP 
\fBPOSIX2_FORT_DEV\fP \- \fB_SC_2_FORT_DEV\fP
表示是否支持 POSIX.2 FORTRAN 开发实用工具。
.TP 
\fBPOSIX2_FORT_RUN\fP \- \fB_SC_2_FORT_RUN\fP
指示是否支持 POSIX.2 FORTRAN 运行时实用工具。
.TP 
\fB_POSIX2_LOCALEDEF\fP \- \fB_SC_2_LOCALEDEF\fP
表示是否支持通过 \fBlocaledef\fP(1) 创建 locale 的 POSIX.2。
.TP 
\fBPOSIX2_SW_DEV\fP \- \fB_SC_2_SW_DEV\fP
表示是否支持 POSIX.2 软件开发实用工具选项。
.PP
这些值也存在，但可能不是标准的。
.TP 
 \- \fB_SC_PHYS_PAGES\fP
物理内存的页数。 请注意，此值与 \fB_SC_PAGESIZE\fP 的值的乘积可能会溢出。
.TP 
 \- \fB_SC_AVPHYS_PAGES\fP
当前可用的物理内存页数。
.TP 
 \- \fB_SC_NPROCESSORS_CONF\fP
配置的处理器数量。 另请详见 \fBget_nprocs_conf\fP(3)。
.TP 
 \- \fB_SC_NPROCESSORS_ONLN\fP
当前联机的处理器数量 (available)。 另请详见 \fBget_nprocs_conf\fP(3)。
.SH "RETURN VALUE"
\fBsysconf\fP() 的返回值为以下之一:
.IP \[bu] 3
出错时返回 \-1，并设置 \fIerrno\fP 表示错误 (如 \fBEINVAL\fP，表示 \fIname\fP 无效)。
.IP \[bu]
如果 \fIname\fP 对应于最大或最小限制，并且该限制不确定，则返回 \-1 而 \fIerrno\fP 不变。 (为了区分不确定的限制和错误，在调用之前将
\fIerrno\fP 设置为零，然后在返回 \-1 时检查 \fIerrno\fP 是否非零。)
.IP \[bu]
如果 \fIname\fP 对应一个选项，支持该选项则返回正值，不支持则返回 \-1。
.IP \[bu]
否则，返回选项或限制的当前值。 该值不会比编译应用程序时在 \fI<unistd.h>\fP 或 \fI<limits.h>\fP
中向应用程序描述的相应值更严格。
.SH ERRORS
.TP 
\fBEINVAL\fP
\fIname\fP 无效。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBsysconf\fP()
T}	Thread safety	MT\-Safe env
.TE
.hy
.ad
.sp 1
.SH STANDARDS
POSIX.1\-2001, POSIX.1\-2008.
.SH BUGS
很难使用 \fBARG_MAX\fP，因为它没有指定 \fBexec\fP(3) 的参数空间有多少被用户环境消耗了。
.PP
一些返回值可能很大; 它们不适合分配内存。
.SH "SEE ALSO"
\fBbc\fP(1), \fBexpr\fP(1), \fBgetconf\fP(1), \fBlocale\fP(1), \fBconfstr\fP(3),
\fBfpathconf\fP(3), \fBpathconf\fP(3), \fBposixoptions\fP(7)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
