.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright (c) 2009 Michael Kerrisk, <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH pthread_yield 3 2022\-12\-15 "Linux man\-pages 6.03" 
.SH NAME
pthread_yield \- 产生处理器
.SH LIBRARY
POSIX 线程库 (\fIlibpthread\fP, \fI\-lpthread\fP)
.SH SYNOPSIS
.nf
\fB#define _GNU_SOURCE\fP             /* See feature_test_macros(7) */
\fB#include <pthread.h>\fP
.PP
\fB[[deprecated]] int pthread_yield(void);\fP
.fi
.SH DESCRIPTION
\fBNote\fP: 此函数已弃用; 见下文。
.PP
\fBpthread_yield\fP() 导致调用线程放弃 CPU。 该线程因其静态优先级而被放置在运行队列的末尾，并安排另一个线程运行。
有关详细信息，请参见 \fBsched_yield\fP(2)
.SH "RETURN VALUE"
成功时，\fBpthread_yield\fP() 返回 0; 出错时，它返回一个错误号。
.SH ERRORS
在 Linux 上，此调用总是成功 (但可移植和 future 证明应用程序仍应处理可能的错误返回)。
.SH VERSIONS
从 glibc 2.34 开始，这个函数被标记为弃用。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBpthread_yield\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
.\" e.g., the BSDs, Tru64, AIX, and Irix.
这个调用是非标准的，但出现在其他几个系统上。 请改用标准化的 \fBsched_yield\fP(2)。
.SH NOTES
在 Linux 上，这个函数被实现为对 \fBsched_yield\fP(2) 的调用。
.PP
\fBpthread_yield\fP() 旨在用于实时调度策略 (即 \fBSCHED_FIFO\fP 或 \fBSCHED_RR\fP)。 将
\fBpthread_yield\fP() 与不确定的调度策略 (例如 \fBSCHED_OTHER\fP)
一起使用是未指定的，很可能意味着您的应用程序设计已损坏。
.SH "SEE ALSO"
.\" FIXME . .BR pthread_cond_wait (3),
\fBsched_yield\fP(2), \fBpthreads\fP(7), \fBsched\fP(7)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
