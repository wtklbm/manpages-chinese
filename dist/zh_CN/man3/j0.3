.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\" and Copyright 2008, Linux Foundation, written by Michael Kerrisk
.\"     <mtk.manpages@gmail.com>
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified Sat Jul 24 19:08:17 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified 2002-08-25, aeb
.\" Modified 2004-11-12 as per suggestion by Fabian Kreutz/AEB
.\" 2008-07-24, mtk, moved yxx() material into separate y0.3 page
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH j0 3 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
j0, j0f, j0l, j1, j1f, j1l, jn, jnf, jnl \- 第一类贝塞尔函数
.SH LIBRARY
数学库 (\fIlibm\fP、\fI\-lm\fP)
.SH SYNOPSIS
.nf
\fB#include <math.h>\fP
.PP
\fBdouble j0(double \fP\fIx\fP\fB);\fP
\fBdouble j1(double \fP\fIx\fP\fB);\fP
\fBdouble jn(int \fP\fIn\fP\fB, double \fP\fIx\fP\fB);\fP
.PP
\fBfloat j0f(float \fP\fIx\fP\fB);\fP
\fBfloat j1f(float \fP\fIx\fP\fB);\fP
\fBfloat jnf(int \fP\fIn\fP\fB, float \fP\fIx\fP\fB);\fP
.PP
\fBlong double j0l(long double \fP\fIx\fP\fB);\fP
\fBlong double j1l(long double \fP\fIx\fP\fB);\fP
\fBlong double jnl(int \fP\fIn\fP\fB, long double \fP\fIx\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBj0\fP(), \fBj1\fP(), \fBjn\fP():
.nf
    _XOPEN_SOURCE
        || /* Since glibc 2.19: */ _DEFAULT_SOURCE
        || /* glibc <= 2.19: */ _SVID_SOURCE || _BSD_SOURCE
.fi
.PP
\fBj0f\fP(), \fBj0l\fP(), \fBj1f\fP(), \fBj1l\fP(), \fBjnf\fP(), \fBjnl\fP():
.nf
    _XOPEN_SOURCE >= 600
        || (_ISOC99_SOURCE && _XOPEN_SOURCE)
        || /* Since glibc 2.19: */ _DEFAULT_SOURCE
        || /* glibc <= 2.19: */ _SVID_SOURCE || _BSD_SOURCE
.fi
.SH DESCRIPTION
\fBj0\fP() 和 \fBj1\fP() 函数分别返回第一种阶数 0 和 1 的 \fIx\fP 的贝塞尔函数。 \fBjn\fP() 函数返回第一种阶数 \fIn\fP 的
\fIx\fP 的贝塞尔函数。
.PP
\fBj0f\fP()、\fBj1f\fP() 和 \fBjnf\fP()、函数是获取和返回 \fIfloat\fP 值的版本。 \fBj0l\fP()、\fBj1l\fP() 和
\fBjnl\fP() 函数是获取和返回 \fIlong double\fP 值的版本。
.SH "RETURN VALUE"
成功时，这些函数会为 \fIx\fP 返回适当的第一类贝塞尔值。
.PP
如果 \fIx\fP 是 NaN，则返回 NaN。
.PP
如果 \fIx\fP 量级过大，或结果下溢，则发生范围错误，返回值为 0.
.SH ERRORS
有关如何确定调用这些函数时是否发生错误的信息，请参见 \fBmath_error\fP(7)。
.PP
可能会出现以下错误:
.TP 
Range error: result underflow, or \fIx\fP is too large in magnitude
\fIerrno\fP 设置为 \fBERANGE\fP。
.PP
.\" e.g., j0(1.5e16)
.\" This is intentional.
.\" See http://sources.redhat.com/bugzilla/show_bug.cgi?id=6805
这些函数不会引发 \fBfetestexcept\fP(3) 的异常。
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lbx lb lb
l l l.
Interface	Attribute	Value
T{
\fBj0\fP(),
\fBj0f\fP(),
\fBj0l\fP()
T}	Thread safety	MT\-Safe
T{
\fBj1\fP(),
\fBj1f\fP(),
\fBj1l\fP()
T}	Thread safety	MT\-Safe
T{
\fBjn\fP(),
\fBjnf\fP(),
\fBjnl\fP()
T}	Thread safety	MT\-Safe
.TE
.hy
.ad
.sp 1
.SH STANDARDS
函数返回 \fIdouble\fP 符合 SVr4、4.3BSD、POSIX.1\-2001 和 POSIX.1\-2008。 其他的是 BSD
上也存在的非标准函数。
.SH BUGS
\-8 和 \-8 之间的 \fIx\fP 的值，\fBj0\fP()、\fBj1\fP()、\fBjn\fP() 返回的值最多有 2e\-16 的误差 8.
.SH "SEE ALSO"
\fBy0\fP(3)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
