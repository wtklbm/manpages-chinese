.\" -*- coding: UTF-8 -*-
'\" t
.\" Copyright 1993 David Metcalfe (david@prism.demon.co.uk)
.\"
.\" SPDX-License-Identifier: Linux-man-pages-copyleft
.\"
.\" References consulted:
.\"     Linux libc source code
.\"     Lewine's _POSIX Programmer's Guide_ (O'Reilly & Associates, 1991)
.\"     386BSD man pages
.\" Modified 1993-05-22, David Metcalfe
.\" Modified 1993-07-25, Rik Faith (faith@cs.unc.edu)
.\" Modified 1997-02-16, Andries Brouwer (aeb@cwi.nl)
.\" Modified 1998-12-21, Andries Brouwer (aeb@cwi.nl)
.\" Modified 2000-08-12, Andries Brouwer (aeb@cwi.nl)
.\" Modified 2001-05-19, Andries Brouwer (aeb@cwi.nl)
.\" Modified 2002-08-05, Michael Kerrisk
.\" Modified 2004-10-31, Andries Brouwer
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH gethostbyname 3 2023\-02\-05 "Linux man\-pages 6.03" 
.SH NAME
gethostbyname, gethostbyaddr, sethostent, gethostent, endhostent, h_errno,
herror, hstrerror, gethostbyaddr_r, gethostbyname2, gethostbyname2_r,
gethostbyname_r, gethostent_r \- 获取网络主机条目
.SH LIBRARY
标准 C 库 (\fIlibc\fP、\fI\-lc\fP)
.SH SYNOPSIS
.nf
\fB#include <netdb.h>\fP
.PP
\fBvoid sethostent(int \fP\fIstayopen\fP\fB);\fP
\fBvoid endhostent(void);\fP
.PP
\fB[[deprecated]] extern int h_errno;\fP
.PP
\fB[[deprecated]] struct hostent *gethostbyname(const char *\fP\fIname\fP\fB);\fP
\fB[[deprecated]] struct hostent *gethostbyaddr(const void \fP\fIaddr\fP\fB[.\fP\fIlen\fP\fB],\fP
\fB                                             socklen_t \fP\fIlen\fP\fB, int \fP\fItype\fP\fB);\fP
.PP
\fB[[deprecated]] void herror(const char *\fP\fIs\fP\fB);\fP
\fB[[deprecated]] const char *hstrerror(int \fP\fIerr\fP\fB);\fP
.PP
/* System V/POSIX extension */
\fBstruct hostent *gethostent(void);\fP
.PP
/* GNU extensions */
\fB[[deprecated]]\fP
\fBstruct hostent *gethostbyname2(const char *\fP\fIname\fP\fB, int \fP\fIaf\fP\fB);\fP
.PP
\fBint gethostent_r(struct hostent *restrict \fP\fIret\fP\fB,\fP
\fB                 char \fP\fIbuf\fP\fB[restrict .\fP\fIbuflen\fP\fB], size_t \fP\fIbuflen\fP\fB,\fP
\fB                 struct hostent **restrict \fP\fIresult\fP\fB,\fP
\fB                 int *restrict \fP\fIh_errnop\fP\fB);\fP
.PP
\fB[[deprecated]]\fP  
\fBint gethostbyaddr_r(const void \fP\fIaddr\fP\fB[restrict .\fP\fIlen\fP\fB], socklen_t \fP\fIlen\fP\fB,\fP
\fB                 int \fP\fItype\fP\fB,\fP
\fB                 struct hostent *restrict \fP\fIret\fP\fB,\fP
\fB                 char \fP\fIbuf\fP\fB[restrict .\fP\fIbuflen\fP\fB], size_t \fP\fIbuflen\fP\fB,\fP  
\fB                 struct hostent **restrict \fP\fIresult\fP\fB,\fP
\fB                 int *restrict \fP\fIh_errnop\fP\fB);\fP
\fB[[deprecated]]\fP
\fBint gethostbyname_r(const char *restrict \fP\fIname\fP\fB,\fP
\fB                 struct hostent *restrict \fP\fIret\fP\fB,\fP
\fB                 char \fP\fIbuf\fP\fB[restrict .\fP\fIbuflen\fP\fB], size_t \fP\fIbuflen\fP\fB,\fP
\fB                 struct hostent **restrict \fP\fIresult\fP\fB,\fP
\fB                 int *restrict \fP\fIh_errnop\fP\fB);\fP
\fB[[deprecated]]\fP
\fBint gethostbyname2_r(const char *restrict \fP\fIname\fP\fB, int \fP\fIaf,\fP
\fB                 struct hostent *restrict \fP\fIret\fP\fB,\fP
\fB                 char \fP\fIbuf\fP\fB[restrict .\fP\fIbuflen\fP\fB], size_t \fP\fIbuflen\fP\fB,\fP
\fB                 struct hostent **restrict \fP\fIresult\fP\fB,\fP
\fB                 int *restrict \fP\fIh_errnop\fP\fB);\fP
.fi
.PP
.RS -4
特性测试宏 glibc 的要求 (参见 \fBfeature_test_macros\fP(7)):
.RE
.PP
\fBgethostbyname2\fP(), \fBgethostent_r\fP(), \fBgethostbyaddr_r\fP(),
\fBgethostbyname_r\fP(), \fBgethostbyname2_r\fP():
.nf
    由于 glibc 2.19:
        _DEFAULT_SOURCE
    glibc 直到并包括 2.19:
        _BSD_SOURCE || _SVID_SOURCE
.fi
.PP
\fBherror\fP(), \fBhstrerror\fP():
.nf
    由于 glibc 2.19:
        _DEFAULT_SOURCE
    glibc 2.8 到 glibc 2.19:
        _BSD_SOURCE || _SVID_SOURCE
    在 glibc 2.8 之前:
        none
.fi
.PP
\fBh_errno\fP:
.nf
    自 glibc 2.19
        _DEFAULT_SOURCE || _POSIX_C_SOURCE < 200809L
    glibc 2.12 到 glibc 2.19:
        _BSD_SOURCE || _SVID_SOURCE || _POSIX_C_SOURCE < 200809L
    在 glibc 2.12 之前:
        none
.fi
.SH DESCRIPTION
\fBgethostbyname*\fP()、\fBgethostbyaddr*\fP()、\fBherror\fP() 和 \fBhstrerror\fP() 函数已过时。
应用程序应该改用 \fBgetaddrinfo\fP(3)、\fBgetnameinfo\fP(3) 和 \fBgai_strerror\fP(3)。
.PP
\fBsethostent\fP() 函数指定，如果 \fIstayopen\fP 为真 (1)，则连接的 TCP
套接字应用于名称服务器查询，并且连接应在连续查询期间保持打开状态。 否则，名称服务器查询将使用 UDP 数据报。
.PP
\fBendhostent\fP() 函数结束了使用 TCP 连接进行名称服务器查询。
.PP
\fBgethostbyname\fP() 函数返回给定主机 \fIname\fP 的 \fIhostent\fP 类型的结构体。 这里 \fIname\fP
是主机名或标准点表示法中的 IPv4 地址 (对于 \fBinet_addr\fP(3)).  如果 \fIname\fP 是 IPv4
地址，则不执行查找，\fBgethostbyname\fP() 只是将 \fIname\fP 复制到 \fIh_name\fP 字段中，并将其 \fIstruct in_addr\fP 等价物复制到返回的 \fIhostent\fP 结构体的 \fIh_addr_list[0]\fP 字段中。 如果 \fIname\fP
不以点结尾且设置了环境变量 \fBHOSTALIASES\fP，则首先在 \fBHOSTALIASES\fP 指向的别名文件中查找 \fIname\fP (文件格式见
\fBhostname\fP(7))。 搜索当前域及其父域，除非 \fIname\fP 以点结尾。
.PP
\fBgethostbyaddr\fP() 函数返回一个 \fIhostent\fP 类型的结构体，用于给定主机地址 \fIaddr\fP，长度为
\fIlen\fP，地址类型为 \fItype\fP。 有效的地址类型是 \fBAF_INET\fP 和 \fBAF_INET6\fP (在
\fI<sys/socket.h>\fP).h 中定义)。 主机地址参数是指向结构体的指针，该结构体的类型取决于地址类型，例如
\fIstruct in_addr *\fP (对于地址类型 \fBAF_INET\fP 可能通过调用 \fBinet_addr\fP(3)) 获得。
.PP
(obsolete) \fBherror\fP() 函数在 \fIstderr\fP 上打印与 \fIh_errno\fP 的当前值关联的错误消息。
.PP
(obsolete) \fBhstrerror\fP() 函数取一个错误号 (通常是 \fIh_errno\fP) 并返回相应的消息字符串。
.PP
.\"
\fBgethostbyname\fP() 和 \fBgethostbyaddr\fP() 执行的域名查询依赖于名称服务交换机
(\fBnsswitch.conf\fP(5)) 配置的来源或本地名称服务器 (\fBnamed\fP(8))。 默认操作是查询名称服务交换机
(\fBnsswitch.conf\fP(5)) 配置的来源，如果失败，则查询本地名称服务器 (\fBnamed\fP(8))。
.SS Historical
\fBnsswitch.conf\fP(5) 文件是控制主机查找顺序的现代方法。
.PP
在 glibc 2.4 及更早版本中，\fIorder\fP 关键字用于控制 \fI/etc/host.conf\fP (\fBhost.conf\fP(5))
中定义的主机查找顺序。
.PP
\fIhostent\fP 结构体在 \fI<netdb.h>\fP 中定义如下:
.PP
.in +4n
.EX
struct hostent {
    char  *h_name;            /* official name of host */
    char **h_aliases;         /* alias list */
    int    h_addrtype;        /* host address type */
    int    h_length;          /* length of address */
    char **h_addr_list;       /* list of addresses */
}
#define h_addr h_addr_list[0] /* for backward compatibility */
.EE
.in
.PP
\fIhostent\fP 结构体的成员是:
.TP 
\fIh_name\fP
主机的正式名称。
.TP 
\fIh_aliases\fP
主机的替代名称数组，由空指针终止。
.TP 
\fIh_addrtype\fP
地址类型; 目前总是 \fBAF_INET\fP 或 \fBAF_INET6\fP。
.TP 
\fIh_length\fP
地址的长度 (以字节为单位)。
.TP 
\fIh_addr_list\fP
指向主机网络地址的指针数组 (按网络字节顺序)，由空指针终止。
.TP 
\fIh_addr\fP
\fIh_addr_list\fP 中的第一个地址用于向后兼容。
.SH "RETURN VALUE"
如果发生错误，\fBgethostbyname\fP() 和 \fBgethostbyaddr\fP() 函数返回 \fIhostent\fP 结构体或空指针。
出错时，\fIh_errno\fP 变量保存一个错误号。 当非 NULL 时，返回值可能指向静态数据，请参见下面的注释。
.SH ERRORS
变量 \fIh_errno\fP 可以具有以下值:
.TP 
\fBHOST_NOT_FOUND\fP
指定的主机未知。
.TP 
\fBNO_DATA\fP
请求的名称有效但没有 IP 地址。 对该域的名称服务器的另一种请求可能会返回一个答案。 常量 \fBNO_ADDRESS\fP 是 \fBNO_DATA\fP
的同义词。
.TP 
\fBNO_RECOVERY\fP
发生不可恢复的名称服务器错误。
.TP 
\fBTRY_AGAIN\fP
权威名称服务器上发生临时错误。 稍后再试。
.SH FILES
.TP 
\fI/etc/host.conf\fP
解析器配置文件
.TP 
\fI/etc/hosts\fP
主机数据库文件
.TP 
\fI/etc/nsswitch.conf\fP
名称服务开关配置
.SH ATTRIBUTES
有关本节中使用的术语的解释，请参见 \fBattributes\fP(7)。
.ad l
.nh
.TS
allbox;
lb lb lbx
l l l.
Interface	Attribute	Value
T{
\fBgethostbyname\fP()
T}	Thread safety	T{
MT\-Unsafe race:hostbyname env
locale
T}
T{
\fBgethostbyaddr\fP()
T}	Thread safety	T{
MT\-Unsafe race:hostbyaddr env
locale
T}
T{
\fBsethostent\fP(),
\fBendhostent\fP(),
\fBgethostent_r\fP()
T}	Thread safety	T{
MT\-Unsafe race:hostent env
locale
T}
T{
\fBherror\fP(),
\fBhstrerror\fP()
T}	Thread safety	MT\-Safe
T{
\fBgethostent\fP()
T}	Thread safety	T{
MT\-Unsafe race:hostent
race:hostentbuf env locale
T}
T{
\fBgethostbyname2\fP()
T}	Thread safety	T{
MT\-Unsafe race:hostbyname2
env locale
T}
T{
\fBgethostbyaddr_r\fP(),
\fBgethostbyname_r\fP(),
\fBgethostbyname2_r\fP()
T}	Thread safety	MT\-Safe env locale
.TE
.hy
.ad
.sp 1
在上表中，\fIrace:hostent\fP 中的 \fIhostent\fP 表示如果在一个程序的不同线程中并行使用任数
\fBsethostent\fP()、\fBgethostent\fP()、\fBgethostent_r\fP() 或 \fBendhostent\fP()
中的任何一个，则可能发生数据竞争。
.SH STANDARDS
POSIX.1\-2001 指定
\fBgethostbyname\fP()、\fBgethostbyaddr\fP()、\fBsethostent\fP()、\fBendhostent\fP()、\fBgethostent\fP()
和 \fIh_errno\fP; \fBgethostbyname\fP()、\fBgethostbyaddr\fP() 和 \fIh_errno\fP
在该标准中被标记为过时。 POSIX.1\-2008 删除了 \fBgethostbyname\fP()、\fBgethostbyaddr\fP() 和
\fIh_errno\fP 的规范，建议改用 \fBgetaddrinfo\fP(3) 和 \fBgetnameinfo\fP(3)。
.SH NOTES
函数 \fBgethostbyname\fP() 和 \fBgethostbyaddr\fP() 可能会返回指向静态数据的指针，这些数据可能会被以后的调用覆盖。
复制 \fIstruct hostent\fP 是不够的，因为它包含指针; 一个深贝是必需的。
.PP
在最初的 BSD 实现中，\fBgethostbyname\fP() 的 \fIlen\fP 参数是 \fIint\fP。 SUSv2 标准是 buggy 并声明
\fBgethostbyaddr\fP() 的 \fIlen\fP 参数为 \fIsize_t\fP 类型。 (这是错误的，因为它必须是 \fIint\fP，而
\fIsize_t\fP 不是。POSIX.1\-2001 使其成为 \fIsocklen_t\fP，这没问题。) 另请参见 \fBaccept\fP(2)。
.PP
\fBgethostbyaddr\fP() 的 BSD 原型使用 \fIconst char\ *\fP 作为第一个参数。
.SS "System V/POSIX extension"
.\" e.g., Linux, FreeBSD, UnixWare, HP-UX
.\" e.g., FreeBSD, AIX
POSIX 需要 \fBgethostent\fP() 调用，它应该返回主机数据库中的下一个条目。 当使用 DNS/BIND
时，这没有多大意义，但如果主机数据库是一个可以逐行读取的文件，这可能是合理的。 在许多系统上，这个名称的例程从文件 \fI/etc/hosts\fP 中读取。
只有在没有 DNS 支持的情况下构建库时，它才可用。 glibc 版本将忽略 ipv6 条目。 这个函数是不可重入的，glibc 增加了一个可重入的版本
\fBgethostent_r\fP()。
.SS "GNU extensions"
glibc2 也有一个像 \fBgethostbyname\fP() 一样工作的 \fBgethostbyname2\fP()，但允许指定地址必须属于的地址族。
.PP
glibc2 还有可重入版本 \fBgethostent_r\fP()、\fBgethostbyaddr_r\fP()、\fBgethostbyname_r\fP() 和
\fBgethostbyname2_r\fP()。 调用者提供一个 \fIhostent\fP 结构体 \fIret\fP，它将在成功时被填充，以及一个大小为
\fIbuflen\fP 的临时工作缓冲区 \fIbuf\fP。 调用后，\fIresult\fP 会指向成功的结果。 如果出现错误或未找到任何条目，\fIresult\fP
将为 NULL。 函数成功时返回 0，失败时返回非零错误数。 除了这些函数的非重入版本返回的错误外，如果 \fIbuf\fP 太小，函数将返回
\fBERANGE\fP，并且应该使用更大的缓冲区重试调整。 全局变量 \fIh_errno\fP 没有被修改，但是在 \fIh_errnop\fP
中传入了一个存放错误号的变量地址。
.SH BUGS
.\" http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=482973
\fBgethostbyname\fP() 无法识别以十六进制表示的点分 IPv4 地址字符串的组成部分。
.SH "SEE ALSO"
.\" .BR getipnodebyaddr (3),
.\" .BR getipnodebyname (3),
\fBgetaddrinfo\fP(3), \fBgetnameinfo\fP(3), \fBinet\fP(3), \fBinet_ntop\fP(3),
\fBinet_pton\fP(3), \fBresolver\fP(3), \fBhosts\fP(5), \fBnsswitch.conf\fP(5),
\fBhostname\fP(7), \fBnamed\fP(8)
.\" .BR resolv+ (8)
.PP
.SH [手册页中文版]
.PP
本翻译为免费文档；阅读
.UR https://www.gnu.org/licenses/gpl-3.0.html
GNU 通用公共许可证第 3 版
.UE
或稍后的版权条款。因使用该翻译而造成的任何问题和损失完全由您承担。
.PP
该中文翻译由 wtklbm
.B <wtklbm@gmail.com>
根据个人学习需要制作。
.PP
项目地址:
.UR \fBhttps://github.com/wtklbm/manpages-chinese\fR
.ME 。
